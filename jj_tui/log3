Commit ID: [38;5;4m59f5552f7dc335e8759aa17041daa9ad94e4f7fb[39m
Change ID: [38;5;5mkszkuqqsvpknsnosxyxmnunnqvrzmpvq[39m
Author: Eli Dowling <[38;5;3meli.jambu@gmail.com[39m> ([38;5;6m2024-05-08 01:20:28[39m)
Committer: Eli Dowling <[38;5;3meli.jambu@gmail.com[39m> ([38;5;6m2024-05-09 00:05:33[39m)

    coloured output is working

[38;5;3mAdded regular file ../.ocamlformat:[39m
     [38;5;2m   1[39m: [38;5;2mversion=0.24.1[39m
     [38;5;2m   2[39m: [38;5;2mprofile=conventional[39m
[38;5;3mRemoved regular file ../bin/dune:[39m
[38;5;1m   1[39m     : [38;5;1m(executable[39m
[38;5;1m   2[39m     : [38;5;1m (public_name jj_tui)[39m
[38;5;1m   3[39m     : [38;5;1m (name main)[39m
[38;5;1m   4[39m     : [38;5;1m (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
[38;5;1m   5[39m     : [38;5;1m )[39m
[38;5;3mRemoved regular file ../bin/main.ml:[39m
[38;5;1m   1[39m     : [38;5;1mopen Nottui;;[39m
[38;5;1m   2[39m     : [38;5;1mopen Feather;;[39m
[38;5;1m   3[39m     : [38;5;1mopen Lwd_infix;;[39m
[38;5;1m   4[39m     : [38;5;1mmodule W = Nottui_widgets;;[39m
[38;5;1m   5[39m     : [38;5;1m[39m
[38;5;1m   6[39m     : [38;5;1m[39m
[38;5;1m   7[39m     : [38;5;1m(* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
[38;5;1m   8[39m     : [38;5;1m[39m
[38;5;1m   9[39m     : [38;5;1mlet cmdArgs cmd args=[39m
[38;5;1m  10[39m     : [38;5;1m  let (stdout,stderr)=Feather.process cmd args|>Feather.collect stdout_and_stderr in[39m
[38;5;1m  11[39m     : [38;5;1m  stdout^stderr[39m
[38;5;1m  12[39m     : [38;5;1m;;[39m
[38;5;1m  13[39m     : [38;5;1mlet cmd cmd =[39m
[38;5;1m  14[39m     : [38;5;1m  let (stdout,stderr)=Feather.process cmd []|>Feather.collect stdout_and_stderr in[39m
[38;5;1m  15[39m     : [38;5;1m  stdout^stderr[39m
[38;5;1m  16[39m     : [38;5;1m[39m
[38;5;1m  17[39m     : [38;5;1m;;[39m
[38;5;1m  18[39m     : [38;5;1m[39m
[38;5;1m  19[39m     : [38;5;1m[39m
[38;5;1m  20[39m     : [38;5;1mlet vcount = Lwd.var "";;[39m
[38;5;1m  21[39m     : [38;5;1m[39m
[38;5;1m  22[39m     : [38;5;1mlet button = [39m
[38;5;1m  23[39m     : [38;5;1m  W.button (Printf.sprintf "run jj" )[39m
[38;5;1m  24[39m     : [38;5;1m           (fun () ->  vcount $= (cmd"jj"))[39m
[38;5;1m  25[39m     : [38;5;1m  |>Lwd.pure[39m
[38;5;1m  26[39m     : [38;5;1m         ;;[39m
[38;5;1m  27[39m     : [38;5;1mlet vQuit=Lwd.var false;;[39m
[38;5;1m  28[39m     : [38;5;1m[39m
[38;5;1m  29[39m     : [38;5;1mlet quitButton  = [39m
[38;5;1m  30[39m     : [38;5;1m  W.button (Printf.sprintf "quit " )[39m
[38;5;1m  31[39m     : [38;5;1m           (fun () ->  vQuit $= true)[39m
[38;5;1m  32[39m     : [38;5;1m  |>Lwd.pure[39m
[38;5;1m  33[39m     : [38;5;1m         ;;[39m
[38;5;1m  34[39m     : [38;5;1m[39m
[38;5;1m  35[39m     : [38;5;1m[39m
[38;5;1m  36[39m     : [38;5;1mlet (<-$) f v=Lwd.map ~f (Lwd.get v);; [39m
[38;5;1m  37[39m     : [38;5;1mlet vShowStatus= Lwd.var "";;[39m
[38;5;1m  38[39m     : [38;5;1mlet inputs ui=[39m
[38;5;1m  39[39m     : [38;5;1m  Ui.event_filter (fun event->[39m
[38;5;1m  40[39m     : [38;5;1m    match event with[39m
[38;5;1m  41[39m     : [38;5;1m    |`Key (`ASCII 'l',_)-> [39m
[38;5;1m  42[39m     : [38;5;1m        let res=cmd "jj"in[39m
[38;5;1m  43[39m     : [38;5;1m        vcount$=res;[39m
[38;5;1m  44[39m     : [38;5;1m[39m
[38;5;1m  45[39m     : [38;5;1m        `Handled[39m
[38;5;1m  46[39m     : [38;5;1m    |`Key (`ASCII 's',_)-> [39m
[38;5;1m  47[39m     : [38;5;1m        let res=cmdArgs "jj" ["show"]in[39m
[38;5;1m  48[39m     : [38;5;1m        vShowStatus$=res;[39m
[38;5;1m  49[39m     : [38;5;1m[39m
[38;5;1m  50[39m     : [38;5;1m        `Handled[39m
[38;5;1m  51[39m     : [38;5;1m    |`Key (`ASCII 'p',_)-> [39m
[38;5;1m  52[39m     : [38;5;1m        let _=cmdArgs "jj"["prev"]in[39m
[38;5;1m  53[39m     : [38;5;1m[39m
[38;5;1m  54[39m     : [38;5;1m        `Handled[39m
[38;5;1m  55[39m     : [38;5;1m    |`Key (`ASCII 'n',_)-> [39m
[38;5;1m  56[39m     : [38;5;1m        let _=cmdArgs "jj"["next"]in[39m
[38;5;1m  57[39m     : [38;5;1m[39m
[38;5;1m  58[39m     : [38;5;1m        `Handled[39m
[38;5;1m  59[39m     : [38;5;1m    |_->`Unhandled[39m
[38;5;1m  60[39m     : [38;5;1m      ) ui[39m
[38;5;1m  61[39m     : [38;5;1m  ;;[39m
[38;5;1m  62[39m     : [38;5;1mlet mainUi= [39m
[38;5;1m  63[39m     : [38;5;1m  Lwd.map ~f:inputs @@[39m
[38;5;1m  64[39m     : [38;5;1m  W.h_pane[39m
[38;5;1m  65[39m     : [38;5;1m  (Nottui_widgets.vbox [[39m
[38;5;1m  66[39m     : [38;5;1m    button;[39m
[38;5;1m  67[39m     : [38;5;1m    W.string <-$ vcount;[39m
[38;5;1m  68[39m     : [38;5;1m    quitButton])[39m
[38;5;1m  69[39m     : [38;5;1m  (W.string <-$ vShowStatus)[39m
[38;5;1m  70[39m     : [38;5;1m;;[39m
[38;5;1m  71[39m     : [38;5;1m      [39m
[38;5;1m  72[39m     : [38;5;1m[39m
[38;5;1m  73[39m     : [38;5;1mUi_loop.run ~quit:vQuit (mainUi);;[39m
[38;5;1m  74[39m     : [38;5;1m[39m
[38;5;1m  75[39m     : [38;5;1m(*[39m
[38;5;1m  76[39m     : [38;5;1mtype tree = Tree of string * (unit -> tree list)[39m
[38;5;1m  77[39m     : [38;5;1m[39m
[38;5;1m  78[39m     : [38;5;1mlet rec tree_ui (Tree (label, child)) =[39m
[38;5;1m  79[39m     : [38;5;1m  let opened = Lwd.var false in[39m
[38;5;1m  80[39m     : [38;5;1m  let render is_opened =[39m
[38;5;1m  81[39m     : [38;5;1m    let btn_text = if is_opened then "[-] " else "[+] " in[39m
[38;5;1m  82[39m     : [38;5;1m    let btn_action () = Lwd.set opened (not is_opened) in[39m
[38;5;1m  83[39m     : [38;5;1m    let btn = W.button (btn_text ^ label) btn_action in[39m
[38;5;1m  84[39m     : [38;5;1m    let layout node forest =[39m
[38;5;1m  85[39m     : [38;5;1m      Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
[38;5;1m  86[39m     : [38;5;1m    in[39m
[38;5;1m  87[39m     : [38;5;1m    if is_opened [39m
[38;5;1m  88[39m     : [38;5;1m    then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
[38;5;1m  89[39m     : [38;5;1m    else Lwd.pure btn[39m
[38;5;1m  90[39m     : [38;5;1m  in[39m
[38;5;1m  91[39m     : [38;5;1m  Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
[38;5;1m  92[39m     : [38;5;1m  [39m
[38;5;1m  93[39m     : [38;5;1mand forest_ui nodes = [39m
[38;5;1m  94[39m     : [38;5;1m  Lwd_utils.pack Ui.pack_y [39m
[38;5;1m  95[39m     : [38;5;1m    (List.map tree_ui nodes)[39m
[38;5;1m  96[39m     : [38;5;1m;;[39m
[38;5;1m  97[39m     : [38;5;1m[39m
[38;5;1m  98[39m     : [38;5;1mlet rec fake_fs () = [[39m
[38;5;1m  99[39m     : [38;5;1m  Tree ("bin", fake_fs);[39m
[38;5;1m 100[39m     : [38;5;1m  Tree ("home", fake_fs);[39m
[38;5;1m 101[39m     : [38;5;1m  Tree ("usr", fake_fs);[39m
[38;5;1m 102[39m     : [38;5;1m] in[39m
[38;5;1m 103[39m     : [38;5;1m[39m
[38;5;1m 104[39m     : [38;5;1mUi_loop.run (forest_ui (fake_fs ()));;[39m
[38;5;1m 105[39m     : [38;5;1m*)[39m
[38;5;3mRemoved regular file ../dune-project:[39m
[38;5;1m   1[39m     : [38;5;1m(lang dune 3.9)[39m
[38;5;1m   2[39m     : [38;5;1m[39m
[38;5;1m   3[39m     : [38;5;1m(name jj_tui)[39m
[38;5;1m   4[39m     : [38;5;1m[39m
[38;5;1m   5[39m     : [38;5;1m(generate_opam_files true)[39m
[38;5;1m   6[39m     : [38;5;1m[39m
[38;5;1m   7[39m     : [38;5;1m(source[39m
[38;5;1m   8[39m     : [38;5;1m (github username/reponame))[39m
[38;5;1m   9[39m     : [38;5;1m[39m
[38;5;1m  10[39m     : [38;5;1m(authors "Author Name")[39m
[38;5;1m  11[39m     : [38;5;1m[39m
[38;5;1m  12[39m     : [38;5;1m(maintainers "Maintainer Name")[39m
[38;5;1m  13[39m     : [38;5;1m[39m
[38;5;1m  14[39m     : [38;5;1m(license LICENSE)[39m
[38;5;1m  15[39m     : [38;5;1m[39m
[38;5;1m  16[39m     : [38;5;1m(documentation https://url/to/documentation)[39m
[38;5;1m  17[39m     : [38;5;1m[39m
[38;5;1m  18[39m     : [38;5;1m(package[39m
[38;5;1m  19[39m     : [38;5;1m (name jj_tui)[39m
[38;5;1m  20[39m     : [38;5;1m (synopsis "A short synopsis")[39m
[38;5;1m  21[39m     : [38;5;1m (description "A longer description")[39m
[38;5;1m  22[39m     : [38;5;1m (depends ocaml dune)[39m
[38;5;1m  23[39m     : [38;5;1m (tags[39m
[38;5;1m  24[39m     : [38;5;1m  (topics "to describe" your project)))[39m
[38;5;1m  25[39m     : [38;5;1m[39m
[38;5;1m  26[39m     : [38;5;1m; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
[38;5;3mRemoved regular file ../flake.lock:[39m
[38;5;1m   1[39m     : [38;5;1m{[39m
[38;5;1m   2[39m     : [38;5;1m  "nodes": {[39m
[38;5;1m   3[39m     : [38;5;1m    "nixpkgs": {[39m
[38;5;1m   4[39m     : [38;5;1m      "locked": {[39m
[38;5;1m   5[39m     : [38;5;1m        "lastModified": 1713344939,[39m
[38;5;1m   6[39m     : [38;5;1m        "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
[38;5;1m   7[39m     : [38;5;1m        "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
[38;5;1m   8[39m     : [38;5;1m        "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
[38;5;1m   9[39m     : [38;5;1m        "type": "path"[39m
[38;5;1m  10[39m     : [38;5;1m      },[39m
[38;5;1m  11[39m     : [38;5;1m      "original": {[39m
[38;5;1m  12[39m     : [38;5;1m        "id": "nixpkgs",[39m
[38;5;1m  13[39m     : [38;5;1m        "type": "indirect"[39m
[38;5;1m  14[39m     : [38;5;1m      }[39m
[38;5;1m  15[39m     : [38;5;1m    },[39m
[38;5;1m  16[39m     : [38;5;1m    "root": {[39m
[38;5;1m  17[39m     : [38;5;1m      "inputs": {[39m
[38;5;1m  18[39m     : [38;5;1m        "nixpkgs": "nixpkgs"[39m
[38;5;1m  19[39m     : [38;5;1m      }[39m
[38;5;1m  20[39m     : [38;5;1m    }[39m
[38;5;1m  21[39m     : [38;5;1m  },[39m
[38;5;1m  22[39m     : [38;5;1m  "root": "root",[39m
[38;5;1m  23[39m     : [38;5;1m  "version": 7[39m
[38;5;1m  24[39m     : [38;5;1m}[39m
[38;5;3mRemoved regular file ../flake.nix:[39m
[38;5;1m   1[39m     : [38;5;1m{[39m
[38;5;1m   2[39m     : [38;5;1m  description = "Example JavaScript development environment for Zero to Nix";[39m
[38;5;1m   3[39m     : [38;5;1m[39m
[38;5;1m   4[39m     : [38;5;1m  # Flake inputs[39m
[38;5;1m   5[39m     : [38;5;1m  inputs = {[39m
[38;5;1m   6[39m     : [38;5;1m[39m
[38;5;1m   7[39m     : [38;5;1m    # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
[38;5;1m   8[39m     : [38;5;1m    nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
[38;5;1m   9[39m     : [38;5;1m[39m
[38;5;1m  10[39m     : [38;5;1m    # roc={[39m
[38;5;1m  11[39m     : [38;5;1m    #   url="github:roc-lang/roc";[39m
[38;5;1m  12[39m     : [38;5;1m    # inputs.nixpkgs.follows="nixpkgs";[39m
[38;5;1m  13[39m     : [38;5;1m[39m
[38;5;1m  14[39m     : [38;5;1m    # };[39m
[38;5;1m  15[39m     : [38;5;1m[39m
[38;5;1m  16[39m     : [38;5;1m  };[39m
[38;5;1m  17[39m     : [38;5;1m  # Flake outputs[39m
[38;5;1m  18[39m     : [38;5;1m  outputs = { self, nixpkgs, ... }@inputs:[39m
[38;5;1m  19[39m     : [38;5;1m    let[39m
[38;5;1m  20[39m     : [38;5;1m      # Systems supported[39m
[38;5;1m  21[39m     : [38;5;1m      allSystems = [[39m
[38;5;1m  22[39m     : [38;5;1m        "x86_64-linux" # 64-bit Intel/AMD Linux[39m
[38;5;1m  23[39m     : [38;5;1m      ];[39m
[38;5;1m  24[39m     : [38;5;1m[39m
[38;5;1m  25[39m     : [38;5;1m      # Helper to provide system-specific attributes[39m
[38;5;1m  26[39m     : [38;5;1m      forAllSystems = f:[39m
[38;5;1m  27[39m     : [38;5;1m        nixpkgs.lib.genAttrs allSystems (system:[39m
[38;5;1m  28[39m     : [38;5;1m          f {[39m
[38;5;1m  29[39m     : [38;5;1m            pkgs = import nixpkgs { inherit system; };[39m
[38;5;1m  30[39m     : [38;5;1m[39m
[38;5;1m  31[39m     : [38;5;1m          });[39m
[38;5;1m  32[39m     : [38;5;1m    in {[39m
[38;5;1m  33[39m     : [38;5;1m      # Development environment output[39m
[38;5;1m  34[39m     : [38;5;1m      devShells = forAllSystems ({ pkgs }: {[39m
[38;5;1m  35[39m     : [38;5;1m        default =[39m
[38;5;1m  36[39m     : [38;5;1m[39m
[38;5;1m  37[39m     : [38;5;1m          pkgs.mkShell {[39m
[38;5;1m  38[39m     : [38;5;1m            packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
[38;5;1m  39[39m     : [38;5;1m            shellHook = let[39m
[38;5;1m  40[39m     : [38;5;1m              libPath =[39m
[38;5;1m  41[39m     : [38;5;1m                pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
[38;5;1m  42[39m     : [38;5;1m            in ''[39m
[38;5;1m  43[39m     : [38;5;1m              # yolo[39m
[38;5;1m  44[39m     : [38;5;1m              export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
[38;5;1m  45[39m     : [38;5;1m              export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
[38;5;1m  46[39m     : [38;5;1m            '';[39m
[38;5;1m  47[39m     : [38;5;1m          };[39m
[38;5;1m  48[39m     : [38;5;1m[39m
[38;5;1m  49[39m     : [38;5;1m      });[39m
[38;5;1m  50[39m     : [38;5;1m[39m
[38;5;1m  51[39m     : [38;5;1m    };[39m
[38;5;1m  52[39m     : [38;5;1m}[39m
[38;5;3mAdded regular file .ocamlformat:[39m
     [38;5;2m   1[39m: [38;5;2m[39m
     [38;5;2m   2[39m: [38;5;2mprofile=conventional[39m
[38;5;3mAdded regular file .ocmalformat:[39m
     [38;5;2m   1[39m: [38;5;2mversion=0.24.1[39m
     [38;5;2m   2[39m: [38;5;2mprofile=conventional[39m
[38;5;3mAdded regular file bin/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(executable[39m
     [38;5;2m   2[39m: [38;5;2m (public_name jj_tui)[39m
     [38;5;2m   3[39m: [38;5;2m (name main)[39m
     [38;5;2m   4[39m: [38;5;2m (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
     [38;5;2m   5[39m: [38;5;2m )[39m
[38;5;3mAdded regular file bin/main.ml:[39m
     [38;5;2m   1[39m: [38;5;2mopen Nottui[39m
     [38;5;2m   2[39m: [38;5;2mopen Feather[39m
     [38;5;2m   3[39m: [38;5;2mopen Lwd_infix[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty[39m
     [38;5;2m   5[39m: [38;5;2mmodule W = Nottui_widgets[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2mlet colored_string = Jj_tui.AnsiReverse.colored_string[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2m(* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
     [38;5;2m  10[39m: [38;5;2mlet cmdArgs cmd args =[39m
     [38;5;2m  11[39m: [38;5;2m  let stdout, stderr =[39m
     [38;5;2m  12[39m: [38;5;2m    Feather.process cmd args |> Feather.collect stdout_and_stderr[39m
     [38;5;2m  13[39m: [38;5;2m  in[39m
     [38;5;2m  14[39m: [38;5;2m  stdout ^ stderr[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mlet jj args = cmdArgs "jj" (List.concat [ args; [ "--color"; "always" ] ])[39m
     [38;5;2m  17[39m: [38;5;2mlet vcount = Lwd.var I.empty[39m
     [38;5;2m  18[39m: [38;5;2m[39m
     [38;5;2m  19[39m: [38;5;2mlet _button =[39m
     [38;5;2m  20[39m: [38;5;2m  W.button (Printf.sprintf "run jj") (fun () ->[39m
     [38;5;2m  21[39m: [38;5;2m      vcount $= (cmdArgs "jj" [ "log"; "--color"; "always" ] |> colored_string))[39m
     [38;5;2m  22[39m: [38;5;2m  |> Lwd.pure[39m
     [38;5;2m  23[39m: [38;5;2m[39m
     [38;5;2m  24[39m: [38;5;2mlet vQuit = Lwd.var false[39m
     [38;5;2m  25[39m: [38;5;2m[39m
     [38;5;2m  26[39m: [38;5;2mlet _quitButton =[39m
     [38;5;2m  27[39m: [38;5;2m  W.button (Printf.sprintf "quit ") (fun () -> vQuit $= true) |> Lwd.pure[39m
     [38;5;2m  28[39m: [38;5;2m[39m
     [38;5;2m  29[39m: [38;5;2mlet ( <-$ ) f v = Lwd.map ~f (Lwd.get v)[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2m(* let ( let<- ) v f = Lwd.map ~f (Lwd.get v) *)[39m
     [38;5;2m  32[39m: [38;5;2mlet vShowStatus = Lwd.var I.empty[39m
     [38;5;2m  33[39m: [38;5;2mlet vother = Lwd.var ""[39m
     [38;5;2m  34[39m: [38;5;2m[39m
     [38;5;2m  35[39m: [38;5;2mlet onChange () =[39m
     [38;5;2m  36[39m: [38;5;2m  let res = jj [ "show" ] |> colored_string in[39m
     [38;5;2m  37[39m: [38;5;2m  vShowStatus $= res;[39m
     [38;5;2m  38[39m: [38;5;2m  let res = jj [] in[39m
     [38;5;2m  39[39m: [38;5;2m  vcount $= colored_string res[39m
     [38;5;2m  40[39m: [38;5;2m[39m
     [38;5;2m  41[39m: [38;5;2mlet changeInputs key =[39m
     [38;5;2m  42[39m: [38;5;2m  let noOut args =[39m
     [38;5;2m  43[39m: [38;5;2m    let _ = jj args in[39m
     [38;5;2m  44[39m: [38;5;2m    `Handled[39m
     [38;5;2m  45[39m: [38;5;2m  in[39m
     [38;5;2m  46[39m: [38;5;2m  match key with[39m
     [38;5;2m  47[39m: [38;5;2m  | 'P' -> noOut [ "prev" ][39m
     [38;5;2m  48[39m: [38;5;2m  | 'p' -> noOut [ "prev"; "--edit" ][39m
     [38;5;2m  49[39m: [38;5;2m  | 'N' -> noOut [ "next" ][39m
     [38;5;2m  50[39m: [38;5;2m  | 'n' -> noOut [ "next"; "--edit" ][39m
     [38;5;2m  51[39m: [38;5;2m  | 'S' -> noOut [ "unsquash"; "-i"; "--tool"; "sublime_merge" ][39m
     [38;5;2m  52[39m: [38;5;2m  | _ -> `Unhandled[39m
     [38;5;2m  53[39m: [38;5;2m[39m
     [38;5;2m  54[39m: [38;5;2mlet inputs ui =[39m
     [38;5;2m  55[39m: [38;5;2m  Ui.event_filter[39m
     [38;5;2m  56[39m: [38;5;2m    (fun event ->[39m
     [38;5;2m  57[39m: [38;5;2m      match event with[39m
     [38;5;2m  58[39m: [38;5;2m      | `Key (`ASCII 's', _) ->[39m
     [38;5;2m  59[39m: [38;5;2m          let res = jj [ "show" ] in[39m
     [38;5;2m  60[39m: [38;5;2m          vShowStatus $= (res |> colored_string);[39m
     [38;5;2m  61[39m: [38;5;2m[39m
     [38;5;2m  62[39m: [38;5;2m          `Handled[39m
     [38;5;2m  63[39m: [38;5;2m      | `Key (`ASCII 'l', _) ->[39m
     [38;5;2m  64[39m: [38;5;2m          let res = jj [] in[39m
     [38;5;2m  65[39m: [38;5;2m          vcount $= colored_string res;[39m
     [38;5;2m  66[39m: [38;5;2m          vother $= res;[39m
     [38;5;2m  67[39m: [38;5;2m[39m
     [38;5;2m  68[39m: [38;5;2m          `Handled[39m
     [38;5;2m  69[39m: [38;5;2m      | `Key (`ASCII 'q', _) ->[39m
     [38;5;2m  70[39m: [38;5;2m          vQuit $= true;[39m
     [38;5;2m  71[39m: [38;5;2m[39m
     [38;5;2m  72[39m: [38;5;2m          `Handled[39m
     [38;5;2m  73[39m: [38;5;2m      | `Key (`ASCII key, _) -> ([39m
     [38;5;2m  74[39m: [38;5;2m          match changeInputs key with[39m
     [38;5;2m  75[39m: [38;5;2m          | `Handled ->[39m
     [38;5;2m  76[39m: [38;5;2m              onChange ();[39m
     [38;5;2m  77[39m: [38;5;2m              `Handled[39m
     [38;5;2m  78[39m: [38;5;2m          | `Unhandled -> `Unhandled)[39m
     [38;5;2m  79[39m: [38;5;2m      | _ -> `Unhandled)[39m
     [38;5;2m  80[39m: [38;5;2m    ui[39m
     [38;5;2m  81[39m: [38;5;2m[39m
     [38;5;2m  82[39m: [38;5;2mlet mainUi =[39m
     [38;5;2m  83[39m: [38;5;2m  let$ pane =[39m
     [38;5;2m  84[39m: [38;5;2m    W.h_pane[39m
     [38;5;2m  85[39m: [38;5;2m      (Nottui_widgets.vbox[39m
     [38;5;2m  86[39m: [38;5;2m         [ (* button;  *) Ui.atom <-$ vcount (* quitButton  *) ])[39m
     [38;5;2m  87[39m: [38;5;2m      (Ui.atom <-$ vShowStatus)[39m
     [38;5;2m  88[39m: [38;5;2m  in[39m
     [38;5;2m  89[39m: [38;5;2m  inputs pane[39m
     [38;5;2m  90[39m: [38;5;2m;;[39m
     [38;5;2m  91[39m: [38;5;2m[39m
     [38;5;2m  92[39m: [38;5;2m(*TODO:For hosting a subprocess i should look into using EIO and Ui_loop.step like some of the other libraries built with nottui*)[39m
     [38;5;2m  93[39m: [38;5;2mUi_loop.run ~quit:vQuit mainUi[39m
     [38;5;2m  94[39m: [38;5;2m(* let my_image=(Notty.I.string Notty.A.empty "\027[32mThis is in green %s\027[0m" ) in *)[39m
     [38;5;2m  95[39m: [38;5;2m(* let my_image =[39m
     [38;5;2m  96[39m: [38;5;2m     Jj_tui.AnsiReverse.Cap.parse_ansi_escape_codes[39m
     [38;5;2m  97[39m: [38;5;2m       "\027[32mThis is in green %s\027[0m "[39m
     [38;5;2m  98[39m: [38;5;2m     |> List.map (fun (x, str) -> Notty.I.string x str)[39m
     [38;5;2m  99[39m: [38;5;2m   ;;[39m
     [38;5;2m 100[39m: [38;5;2m[39m
     [38;5;2m 101[39m: [38;5;2m   Notty_unix.output_image (my_image |> List.hd) *)[39m
     [38;5;2m 102[39m: [38;5;2m[39m
     [38;5;2m 103[39m: [38;5;2m(*[39m
     [38;5;2m 104[39m: [38;5;2mtype tree = Tree of string * (unit -> tree list)[39m
     [38;5;2m 105[39m: [38;5;2m[39m
     [38;5;2m 106[39m: [38;5;2mlet rec tree_ui (Tree (label, child)) =[39m
     [38;5;2m 107[39m: [38;5;2m  let opened = Lwd.var false in[39m
     [38;5;2m 108[39m: [38;5;2m  let render is_opened =[39m
     [38;5;2m 109[39m: [38;5;2m    let btn_text = if is_opened then "[-] " else "[+] " in[39m
     [38;5;2m 110[39m: [38;5;2m    let btn_action () = Lwd.set opened (not is_opened) in[39m
     [38;5;2m 111[39m: [38;5;2m    let btn = W.button (btn_text ^ label) btn_action in[39m
     [38;5;2m 112[39m: [38;5;2m    let layout node forest =[39m
     [38;5;2m 113[39m: [38;5;2m      Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
     [38;5;2m 114[39m: [38;5;2m    in[39m
     [38;5;2m 115[39m: [38;5;2m    if is_opened [39m
     [38;5;2m 116[39m: [38;5;2m    then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
     [38;5;2m 117[39m: [38;5;2m    else Lwd.pure btn[39m
     [38;5;2m 118[39m: [38;5;2m  in[39m
     [38;5;2m 119[39m: [38;5;2m  Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
     [38;5;2m 120[39m: [38;5;2m  [39m
     [38;5;2m 121[39m: [38;5;2mand forest_ui nodes = [39m
     [38;5;2m 122[39m: [38;5;2m  Lwd_utils.pack Ui.pack_y [39m
     [38;5;2m 123[39m: [38;5;2m    (List.map tree_ui nodes)[39m
     [38;5;2m 124[39m: [38;5;2m;;[39m
     [38;5;2m 125[39m: [38;5;2m[39m
     [38;5;2m 126[39m: [38;5;2mlet rec fake_fs () = [[39m
     [38;5;2m 127[39m: [38;5;2m  Tree ("bin", fake_fs);[39m
     [38;5;2m 128[39m: [38;5;2m  Tree ("home", fake_fs);[39m
     [38;5;2m 129[39m: [38;5;2m  Tree ("usr", fake_fs);[39m
     [38;5;2m 130[39m: [38;5;2m] in[39m
     [38;5;2m 131[39m: [38;5;2m[39m
     [38;5;2m 132[39m: [38;5;2mUi_loop.run (forest_ui (fake_fs ()));;[39m
     [38;5;2m 133[39m: [38;5;2m*)[39m
[38;5;3mAdded regular file dune-project:[39m
     [38;5;2m   1[39m: [38;5;2m(lang dune 3.9)[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2m(name jj_tui)[39m
     [38;5;2m   4[39m: [38;5;2m[39m
     [38;5;2m   5[39m: [38;5;2m(generate_opam_files true)[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2m(source[39m
     [38;5;2m   8[39m: [38;5;2m (github username/reponame))[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2m(authors "Author Name")[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2m(maintainers "Maintainer Name")[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2m(license LICENSE)[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2m(documentation https://url/to/documentation)[39m
     [38;5;2m  17[39m: [38;5;2m[39m
     [38;5;2m  18[39m: [38;5;2m(package[39m
     [38;5;2m  19[39m: [38;5;2m (name jj_tui)[39m
     [38;5;2m  20[39m: [38;5;2m (synopsis "A short synopsis")[39m
     [38;5;2m  21[39m: [38;5;2m (description "A longer description")[39m
     [38;5;2m  22[39m: [38;5;2m (depends ocaml dune)[39m
     [38;5;2m  23[39m: [38;5;2m (tags[39m
     [38;5;2m  24[39m: [38;5;2m  (topics "to describe" your project)))[39m
     [38;5;2m  25[39m: [38;5;2m[39m
     [38;5;2m  26[39m: [38;5;2m; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
[38;5;3mAdded regular file flake.lock:[39m
     [38;5;2m   1[39m: [38;5;2m{[39m
     [38;5;2m   2[39m: [38;5;2m  "nodes": {[39m
     [38;5;2m   3[39m: [38;5;2m    "nixpkgs": {[39m
     [38;5;2m   4[39m: [38;5;2m      "locked": {[39m
     [38;5;2m   5[39m: [38;5;2m        "lastModified": 1713344939,[39m
     [38;5;2m   6[39m: [38;5;2m        "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
     [38;5;2m   7[39m: [38;5;2m        "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
     [38;5;2m   8[39m: [38;5;2m        "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
     [38;5;2m   9[39m: [38;5;2m        "type": "path"[39m
     [38;5;2m  10[39m: [38;5;2m      },[39m
     [38;5;2m  11[39m: [38;5;2m      "original": {[39m
     [38;5;2m  12[39m: [38;5;2m        "id": "nixpkgs",[39m
     [38;5;2m  13[39m: [38;5;2m        "type": "indirect"[39m
     [38;5;2m  14[39m: [38;5;2m      }[39m
     [38;5;2m  15[39m: [38;5;2m    },[39m
     [38;5;2m  16[39m: [38;5;2m    "root": {[39m
     [38;5;2m  17[39m: [38;5;2m      "inputs": {[39m
     [38;5;2m  18[39m: [38;5;2m        "nixpkgs": "nixpkgs"[39m
     [38;5;2m  19[39m: [38;5;2m      }[39m
     [38;5;2m  20[39m: [38;5;2m    }[39m
     [38;5;2m  21[39m: [38;5;2m  },[39m
     [38;5;2m  22[39m: [38;5;2m  "root": "root",[39m
     [38;5;2m  23[39m: [38;5;2m  "version": 7[39m
     [38;5;2m  24[39m: [38;5;2m}[39m
[38;5;3mAdded regular file flake.nix:[39m
     [38;5;2m   1[39m: [38;5;2m{[39m
     [38;5;2m   2[39m: [38;5;2m  description = "Example JavaScript development environment for Zero to Nix";[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m  # Flake inputs[39m
     [38;5;2m   5[39m: [38;5;2m  inputs = {[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2m    # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
     [38;5;2m   8[39m: [38;5;2m    nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2m    # roc={[39m
     [38;5;2m  11[39m: [38;5;2m    #   url="github:roc-lang/roc";[39m
     [38;5;2m  12[39m: [38;5;2m    # inputs.nixpkgs.follows="nixpkgs";[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2m    # };[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2m  };[39m
     [38;5;2m  17[39m: [38;5;2m  # Flake outputs[39m
     [38;5;2m  18[39m: [38;5;2m  outputs = { self, nixpkgs, ... }@inputs:[39m
     [38;5;2m  19[39m: [38;5;2m    let[39m
     [38;5;2m  20[39m: [38;5;2m      # Systems supported[39m
     [38;5;2m  21[39m: [38;5;2m      allSystems = [[39m
     [38;5;2m  22[39m: [38;5;2m        "x86_64-linux" # 64-bit Intel/AMD Linux[39m
     [38;5;2m  23[39m: [38;5;2m      ];[39m
     [38;5;2m  24[39m: [38;5;2m[39m
     [38;5;2m  25[39m: [38;5;2m      # Helper to provide system-specific attributes[39m
     [38;5;2m  26[39m: [38;5;2m      forAllSystems = f:[39m
     [38;5;2m  27[39m: [38;5;2m        nixpkgs.lib.genAttrs allSystems (system:[39m
     [38;5;2m  28[39m: [38;5;2m          f {[39m
     [38;5;2m  29[39m: [38;5;2m            pkgs = import nixpkgs { inherit system; };[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2m          });[39m
     [38;5;2m  32[39m: [38;5;2m    in {[39m
     [38;5;2m  33[39m: [38;5;2m      # Development environment output[39m
     [38;5;2m  34[39m: [38;5;2m      devShells = forAllSystems ({ pkgs }: {[39m
     [38;5;2m  35[39m: [38;5;2m        default =[39m
     [38;5;2m  36[39m: [38;5;2m[39m
     [38;5;2m  37[39m: [38;5;2m          pkgs.mkShell {[39m
     [38;5;2m  38[39m: [38;5;2m            packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
     [38;5;2m  39[39m: [38;5;2m            shellHook = let[39m
     [38;5;2m  40[39m: [38;5;2m              libPath =[39m
     [38;5;2m  41[39m: [38;5;2m                pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
     [38;5;2m  42[39m: [38;5;2m            in ''[39m
     [38;5;2m  43[39m: [38;5;2m              # yolo[39m
     [38;5;2m  44[39m: [38;5;2m              export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
     [38;5;2m  45[39m: [38;5;2m              export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
     [38;5;2m  46[39m: [38;5;2m            '';[39m
     [38;5;2m  47[39m: [38;5;2m          };[39m
     [38;5;2m  48[39m: [38;5;2m[39m
     [38;5;2m  49[39m: [38;5;2m      });[39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2m    };[39m
     [38;5;2m  52[39m: [38;5;2m}[39m
[38;5;3mAdded regular file jj_tui.opam:[39m
     [38;5;2m   1[39m: [38;5;2m# This file is generated by dune, edit dune-project instead[39m
     [38;5;2m   2[39m: [38;5;2mopam-version: "2.0"[39m
     [38;5;2m   3[39m: [38;5;2msynopsis: "A short synopsis"[39m
     [38;5;2m   4[39m: [38;5;2mdescription: "A longer description"[39m
     [38;5;2m   5[39m: [38;5;2mmaintainer: ["Maintainer Name"][39m
     [38;5;2m   6[39m: [38;5;2mauthors: ["Author Name"][39m
     [38;5;2m   7[39m: [38;5;2mlicense: "LICENSE"[39m
     [38;5;2m   8[39m: [38;5;2mtags: ["topics" "to describe" "your" "project"][39m
     [38;5;2m   9[39m: [38;5;2mhomepage: "https://github.com/username/reponame"[39m
     [38;5;2m  10[39m: [38;5;2mdoc: "https://url/to/documentation"[39m
     [38;5;2m  11[39m: [38;5;2mbug-reports: "https://github.com/username/reponame/issues"[39m
     [38;5;2m  12[39m: [38;5;2mdepends: [[39m
     [38;5;2m  13[39m: [38;5;2m  "ocaml"[39m
     [38;5;2m  14[39m: [38;5;2m  "dune" {>= "3.9"}[39m
     [38;5;2m  15[39m: [38;5;2m  "odoc" {with-doc}[39m
     [38;5;2m  16[39m: [38;5;2m][39m
     [38;5;2m  17[39m: [38;5;2mbuild: [[39m
     [38;5;2m  18[39m: [38;5;2m  ["dune" "subst"] {dev}[39m
     [38;5;2m  19[39m: [38;5;2m  [[39m
     [38;5;2m  20[39m: [38;5;2m    "dune"[39m
     [38;5;2m  21[39m: [38;5;2m    "build"[39m
     [38;5;2m  22[39m: [38;5;2m    "-p"[39m
     [38;5;2m  23[39m: [38;5;2m    name[39m
     [38;5;2m  24[39m: [38;5;2m    "-j"[39m
     [38;5;2m  25[39m: [38;5;2m    jobs[39m
     [38;5;2m  26[39m: [38;5;2m    "@install"[39m
     [38;5;2m  27[39m: [38;5;2m    "@runtest" {with-test}[39m
     [38;5;2m  28[39m: [38;5;2m    "@doc" {with-doc}[39m
     [38;5;2m  29[39m: [38;5;2m  ][39m
     [38;5;2m  30[39m: [38;5;2m][39m
     [38;5;2m  31[39m: [38;5;2mdev-repo: "git+https://github.com/username/reponame.git"[39m
[38;5;3mAdded regular file lib/ansiReverse.ml:[39m
     [38;5;2m   1[39m: [38;5;2mopen Notty[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2mtype op = Buffer.t -> unit[39m
     [38;5;2m   4[39m: [38;5;2m[39m
     [38;5;2m   5[39m: [38;5;2m(* let ( & ) op1 op2 buf =[39m
     [38;5;2m   6[39m: [38;5;2m     op1 buf;[39m
     [38;5;2m   7[39m: [38;5;2m     op2 buf[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2m   let ( <| ), ( <. ), ( <! ) = Buffer.(add_string, add_char, add_decimal) *)[39m
     [38;5;2m  11[39m: [38;5;2mlet invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2mlet rgb ~r ~g ~b =[39m
     [38;5;2m  14[39m: [38;5;2m  if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m  15[39m: [38;5;2m    invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m  16[39m: [38;5;2m  else 0x01000000 lor ((r * 36) + (g * 6) + b + 16)[39m
     [38;5;2m  17[39m: [38;5;2m[39m
     [38;5;2m  18[39m: [38;5;2mlet gray level =[39m
     [38;5;2m  19[39m: [38;5;2m  if level < 0 || level > 23 then[39m
     [38;5;2m  20[39m: [38;5;2m    invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m  21[39m: [38;5;2m  else 0x01000000 lor (level + 232)[39m
     [38;5;2m  22[39m: [38;5;2m[39m
     [38;5;2m  23[39m: [38;5;2mlet rgb_888 ~r ~g ~b =[39m
     [38;5;2m  24[39m: [38;5;2m  if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m  25[39m: [38;5;2m    invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m  26[39m: [38;5;2m  else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m  27[39m: [38;5;2m[39m
     [38;5;2m  28[39m: [38;5;2mlet sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2mlet attr_of_ints fg bg st =[39m
     [38;5;2m  31[39m: [38;5;2m  A.fg @@ A.unsafe_color_of_int fg[39m
     [38;5;2m  32[39m: [38;5;2m  |> A.( ++ ) (A.bg @@ A.unsafe_color_of_int bg)[39m
     [38;5;2m  33[39m: [38;5;2m  |> A.( ++ ) (A.st @@ A.unsafe_style_of_int st)[39m
     [38;5;2m  34[39m: [38;5;2m[39m
     [38;5;2m  35[39m: [38;5;2mlet fg_int i = A.fg @@ A.unsafe_color_of_int i[39m
     [38;5;2m  36[39m: [38;5;2mlet bg_int i = A.bg @@ A.unsafe_color_of_int i[39m
     [38;5;2m  37[39m: [38;5;2m[39m
     [38;5;2m  38[39m: [38;5;2mlet print_image img =[39m
     [38;5;2m  39[39m: [38;5;2m  print_endline "image:";[39m
     [38;5;2m  40[39m: [38;5;2m  img |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m  41[39m: [38;5;2m  print_endline (Format.flush_str_formatter () |> String.escaped)[39m
     [38;5;2m  42[39m: [38;5;2m[39m
     [38;5;2m  43[39m: [38;5;2mlet parse_ansi_escape_codes (input : string) : (A.t * string) list =[39m
     [38;5;2m  44[39m: [38;5;2m  let len = String.length input in[39m
     [38;5;2m  45[39m: [38;5;2m  let rec parse_codes acc i =[39m
     [38;5;2m  46[39m: [38;5;2m    if i >= len then List.rev acc[39m
     [38;5;2m  47[39m: [38;5;2m    else[39m
     [38;5;2m  48[39m: [38;5;2m      let attr, j =[39m
     [38;5;2m  49[39m: [38;5;2m        if i + 1 < len && input.[i] = '\027' && input.[i + 1] = '[' then ([39m
     [38;5;2m  50[39m: [38;5;2m          let params = ref [] in[39m
     [38;5;2m  51[39m: [38;5;2m          let j = ref (i + 2) in[39m
     [38;5;2m  52[39m: [38;5;2m          while !j < len && input.[!j] <> 'm' do[39m
     [38;5;2m  53[39m: [38;5;2m            let start = !j in[39m
     [38;5;2m  54[39m: [38;5;2m            while !j < len && input.[!j] <> ';' && input.[!j] <> 'm' do[39m
     [38;5;2m  55[39m: [38;5;2m              incr j[39m
     [38;5;2m  56[39m: [38;5;2m            done;[39m
     [38;5;2m  57[39m: [38;5;2m            let param = String.sub input start (!j - start) in[39m
     [38;5;2m  58[39m: [38;5;2m            params := int_of_string param :: !params;[39m
     [38;5;2m  59[39m: [38;5;2m            if !j < len && input.[!j] = ';' then incr j[39m
     [38;5;2m  60[39m: [38;5;2m          done;[39m
     [38;5;2m  61[39m: [38;5;2m          if !j < len && input.[!j] = 'm' then[39m
     [38;5;2m  62[39m: [38;5;2m            let params = List.rev !params in[39m
     [38;5;2m  63[39m: [38;5;2m            let attr =[39m
     [38;5;2m  64[39m: [38;5;2m              match params with[39m
     [38;5;2m  65[39m: [38;5;2m              | [] -> A.empty[39m
     [38;5;2m  66[39m: [38;5;2m              | 0 :: _ -> A.empty[39m
     [38;5;2m  67[39m: [38;5;2m              | 1 :: _ -> A.st A.bold[39m
     [38;5;2m  68[39m: [38;5;2m              | 2 :: _ -> A.st A.italic[39m
     [38;5;2m  69[39m: [38;5;2m              | 4 :: _ -> A.st A.underline[39m
     [38;5;2m  70[39m: [38;5;2m              | 5 :: _ -> A.st A.blink[39m
     [38;5;2m  71[39m: [38;5;2m              | 7 :: _ -> A.st A.reverse[39m
     [38;5;2m  72[39m: [38;5;2m              | 30 :: _ -> A.fg A.black[39m
     [38;5;2m  73[39m: [38;5;2m              | 31 :: _ -> A.fg A.red[39m
     [38;5;2m  74[39m: [38;5;2m              | 32 :: _ -> A.fg A.green[39m
     [38;5;2m  75[39m: [38;5;2m              | 33 :: _ -> A.fg A.yellow[39m
     [38;5;2m  76[39m: [38;5;2m              | 34 :: _ -> A.fg A.blue[39m
     [38;5;2m  77[39m: [38;5;2m              | 35 :: _ -> A.fg A.magenta[39m
     [38;5;2m  78[39m: [38;5;2m              | 36 :: _ -> A.fg A.cyan[39m
     [38;5;2m  79[39m: [38;5;2m              | 37 :: _ -> A.fg A.white[39m
     [38;5;2m  80[39m: [38;5;2m              | 38 :: 5 :: color :: _ ->[39m
     [38;5;2m  81[39m: [38;5;2m                  A.fg (A.unsafe_color_of_int (0x01000000 lor color))[39m
     [38;5;2m  82[39m: [38;5;2m              | 40 :: _ -> A.bg A.black[39m
     [38;5;2m  83[39m: [38;5;2m              | 41 :: _ -> A.bg A.red[39m
     [38;5;2m  84[39m: [38;5;2m              | 42 :: _ -> A.bg A.green[39m
     [38;5;2m  85[39m: [38;5;2m              | 43 :: _ -> A.bg A.yellow[39m
     [38;5;2m  86[39m: [38;5;2m              | 44 :: _ -> A.bg A.blue[39m
     [38;5;2m  87[39m: [38;5;2m              | 45 :: _ -> A.bg A.magenta[39m
     [38;5;2m  88[39m: [38;5;2m              | 46 :: _ -> A.bg A.cyan[39m
     [38;5;2m  89[39m: [38;5;2m              | 47 :: _ -> A.bg A.white[39m
     [38;5;2m  90[39m: [38;5;2m              | 48 :: 5 :: color :: _ ->[39m
     [38;5;2m  91[39m: [38;5;2m                  A.bg (A.unsafe_color_of_int (0x02000000 lor color))[39m
     [38;5;2m  92[39m: [38;5;2m              | _ -> A.empty[39m
     [38;5;2m  93[39m: [38;5;2m            in[39m
     [38;5;2m  94[39m: [38;5;2m            (attr, !j + 1)[39m
     [38;5;2m  95[39m: [38;5;2m          else (A.empty, i))[39m
     [38;5;2m  96[39m: [38;5;2m        else (A.empty, i)[39m
     [38;5;2m  97[39m: [38;5;2m      in[39m
     [38;5;2m  98[39m: [38;5;2m      let k = ref j in[39m
     [38;5;2m  99[39m: [38;5;2m      while !k < len && input.[!k] <> '\027' do[39m
     [38;5;2m 100[39m: [38;5;2m        incr k[39m
     [38;5;2m 101[39m: [38;5;2m      done;[39m
     [38;5;2m 102[39m: [38;5;2m      let substring = String.sub input j (!k - j) in[39m
     [38;5;2m 103[39m: [38;5;2m      parse_codes ((attr, substring) :: acc) !k[39m
     [38;5;2m 104[39m: [38;5;2m  in[39m
     [38;5;2m 105[39m: [38;5;2m  parse_codes [] 0[39m
     [38;5;2m 106[39m: [38;5;2m[39m
     [38;5;2m 107[39m: [38;5;2m(** Like fold left except we run the first element through init to get the state*)[39m
     [38;5;2m 108[39m: [38;5;2mlet fold_left_pre (f : 'acc -> 'a -> 'acc) (init : 'a -> 'acc) (input : 'a list)[39m
     [38;5;2m 109[39m: [38;5;2m    =[39m
     [38;5;2m 110[39m: [38;5;2m  match input with[39m
     [38;5;2m 111[39m: [38;5;2m  | [] -> invalid_arg "empty list"[39m
     [38;5;2m 112[39m: [38;5;2m  | x :: xs ->[39m
     [38;5;2m 113[39m: [38;5;2m      let state = init x in[39m
     [38;5;2m 114[39m: [38;5;2m      xs |> List.fold_left f state[39m
     [38;5;2m 115[39m: [38;5;2m[39m
     [38;5;2m 116[39m: [38;5;2mlet string_to_image str =[39m
     [38;5;2m 117[39m: [38;5;2m  let coded_strs = parse_ansi_escape_codes str in[39m
     [38;5;2m 118[39m: [38;5;2m  let locate_newlines codes =[39m
     [38;5;2m 119[39m: [38;5;2m    codes[39m
     [38;5;2m 120[39m: [38;5;2m    |> List.concat_map (fun (attr, str) ->[39m
     [38;5;2m 121[39m: [38;5;2m           str |> String.split_on_char '\n'[39m
     [38;5;2m 122[39m: [38;5;2m           |> List.map (fun x -> `Image (I.string attr x))[39m
     [38;5;2m 123[39m: [38;5;2m           |> Base.List.intersperse ~sep:`Newline)[39m
     [38;5;2m 124[39m: [38;5;2m  in[39m
     [38;5;2m 125[39m: [38;5;2m  let newline_seperated = locate_newlines coded_strs in[39m
     [38;5;2m 126[39m: [38;5;2m  (* Printf.printf "len:%d" (List.length newline_seperated); *)[39m
     [38;5;2m 127[39m: [38;5;2m  let lines =[39m
     [38;5;2m 128[39m: [38;5;2m    let open I in[39m
     [38;5;2m 129[39m: [38;5;2m    (* newline_seperated[39m
     [38;5;2m 130[39m: [38;5;2m       |> List.iter (fun x -> match x with `Imarge i -> print_image i | _ -> ()); *)[39m
     [38;5;2m 131[39m: [38;5;2m    newline_seperated[39m
     [38;5;2m 132[39m: [38;5;2m    |> Base.List.fold ~init:([], I.empty) ~f:(fun (images, image) x ->[39m
     [38;5;2m 133[39m: [38;5;2m           match x with[39m
     [38;5;2m 134[39m: [38;5;2m           | `Newline -> (image :: images, I.empty)[39m
     [38;5;2m 135[39m: [38;5;2m           | `Image nextImage -> (images, image <|> nextImage))[39m
     [38;5;2m 136[39m: [38;5;2m    |> fst[39m
     [38;5;2m 137[39m: [38;5;2m    (* |> List.map (fun x ->[39m
     [38;5;2m 138[39m: [38;5;2m           x |> print_image;[39m
     [38;5;2m 139[39m: [38;5;2m           x) *)[39m
     [38;5;2m 140[39m: [38;5;2m    |> Base.List.reduce_exn ~f:(fun bottom top -> top <-> bottom)[39m
     [38;5;2m 141[39m: [38;5;2m  in[39m
     [38;5;2m 142[39m: [38;5;2m  let image =[39m
     [38;5;2m 143[39m: [38;5;2m    lines[39m
     [38;5;2m 144[39m: [38;5;2m    (* |> fold_left_pre[39m
     [38;5;2m 145[39m: [38;5;2m         (fun image (attr, str) ->[39m
     [38;5;2m 146[39m: [38;5;2m           let parts = str |> String.split_on_char '\n' in[39m
     [38;5;2m 147[39m: [38;5;2m           let nextImage =[39m
     [38;5;2m 148[39m: [38;5;2m             parts[39m
     [38;5;2m 149[39m: [38;5;2m             |> fold_left_pre[39m
     [38;5;2m 150[39m: [38;5;2m                  (fun image str -> I.( <-> ) image (I.string attr str))[39m
     [38;5;2m 151[39m: [38;5;2m                  (I.string attr)[39m
     [38;5;2m 152[39m: [38;5;2m           in[39m
     [38;5;2m 153[39m: [38;5;2m           I.( <|> ) image nextImage)[39m
     [38;5;2m 154[39m: [38;5;2m         (fun (attr, str) -> I.string attr str) *)[39m
     [38;5;2m 155[39m: [38;5;2m  in[39m
     [38;5;2m 156[39m: [38;5;2m  image[39m
     [38;5;2m 157[39m: [38;5;2m[39m
     [38;5;2m 158[39m: [38;5;2mlet escaped_string ?(attr = A.empty) str =[39m
     [38;5;2m 159[39m: [38;5;2m  let control_character_index str i =[39m
     [38;5;2m 160[39m: [38;5;2m    let len = String.length str in[39m
     [38;5;2m 161[39m: [38;5;2m    let i = ref i in[39m
     [38;5;2m 162[39m: [38;5;2m    while[39m
     [38;5;2m 163[39m: [38;5;2m      let i = !i in[39m
     [38;5;2m 164[39m: [38;5;2m      i < len && str.[i] >= ' '[39m
     [38;5;2m 165[39m: [38;5;2m    do[39m
     [38;5;2m 166[39m: [38;5;2m      incr i[39m
     [38;5;2m 167[39m: [38;5;2m    done;[39m
     [38;5;2m 168[39m: [38;5;2m    if !i = len then raise Not_found;[39m
     [38;5;2m 169[39m: [38;5;2m    !i[39m
     [38;5;2m 170[39m: [38;5;2m  in[39m
     [38;5;2m 171[39m: [38;5;2m  let rec split str i =[39m
     [38;5;2m 172[39m: [38;5;2m    match control_character_index str i with[39m
     [38;5;2m 173[39m: [38;5;2m    | j ->[39m
     [38;5;2m 174[39m: [38;5;2m        let img = I.string attr (String.sub str i (j - i)) in[39m
     [38;5;2m 175[39m: [38;5;2m        img :: split str (j + 1)[39m
     [38;5;2m 176[39m: [38;5;2m    | exception Not_found ->[39m
     [38;5;2m 177[39m: [38;5;2m        [[39m
     [38;5;2m 178[39m: [38;5;2m          I.string attr[39m
     [38;5;2m 179[39m: [38;5;2m            (if i = 0 then str else String.sub str i (String.length str - i));[39m
     [38;5;2m 180[39m: [38;5;2m        ][39m
     [38;5;2m 181[39m: [38;5;2m  in[39m
     [38;5;2m 182[39m: [38;5;2m  I.vcat (split str 0)[39m
     [38;5;2m 183[39m: [38;5;2m[39m
     [38;5;2m 184[39m: [38;5;2m(* let colored_string s =[39m
     [38;5;2m 185[39m: [38;5;2m   s |> parse_ansi_escape_codes[39m
     [38;5;2m 186[39m: [38;5;2m   |> List.map (fun (x, str) -> escaped_string ~attr:x str)[39m
     [38;5;2m 187[39m: [38;5;2m   |> I.vcat *)[39m
     [38;5;2m 188[39m: [38;5;2mlet colored_string s = s |> string_to_image[39m
     [38;5;2m 189[39m: [38;5;2m[39m
     [38;5;2m 190[39m: [38;5;2mlet%expect_test "string_to_image" =[39m
     [38;5;2m 191[39m: [38;5;2m  string_to_image[39m
     [38;5;2m 192[39m: [38;5;2m    "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m 193[39m: [38;5;2m  |> print_image;[39m
     [38;5;2m 194[39m: [38;5;2m  [%expect.unreachable][39m
     [38;5;2m 195[39m: [38;5;2m[@@expect.uncaught_exn[39m
     [38;5;2m 196[39m: [38;5;2m  {|[39m
     [38;5;2m 197[39m: [38;5;2m  (* CR expect_test_collector: This test expectation appears to contain a backtrace.[39m
     [38;5;2m 198[39m: [38;5;2m     This is strongly discouraged as backtraces are fragile.[39m
     [38;5;2m 199[39m: [38;5;2m     Please change this test to not include a backtrace. *)[39m
     [38;5;2m 200[39m: [38;5;2m[39m
     [38;5;2m 201[39m: [38;5;2m  (Invalid_argument List.reduce_exn)[39m
     [38;5;2m 202[39m: [38;5;2m  Raised at Stdlib.invalid_arg in file "stdlib.ml", line 30, characters 20-45[39m
     [38;5;2m 203[39m: [38;5;2m  Called from Jj_tui__AnsiReverse.(fun) in file "lib/ansiReverse.ml", line 197, characters 2-88[39m
     [38;5;2m 204[39m: [38;5;2m  Called from Expect_test_collector.Make.Instance_io.exec in file "collector/expect_test_collector.ml", line 234, characters 12-19[39m
     [38;5;2m 205[39m: [38;5;2m[39m
     [38;5;2m 206[39m: [38;5;2m  Trailing output[39m
     [38;5;2m 207[39m: [38;5;2m  ---------------[39m
     [38;5;2m 208[39m: [38;5;2m  params 32[39m
     [38;5;2m 209[39m: [38;5;2m  params 0[39m
     [38;5;2m 210[39m: [38;5;2m  params 30[39m
     [38;5;2m 211[39m: [38;5;2m  params 0[39m
     [38;5;2m 212[39m: [38;5;2m  len:4 |}][39m
     [38;5;2m 213[39m: [38;5;2m[39m
     [38;5;2m 214[39m: [38;5;2mlet%expect_test "hello" =[39m
     [38;5;2m 215[39m: [38;5;2m  let outBuf = Buffer.create 100 in[39m
     [38;5;2m 216[39m: [38;5;2m  let _fmt = Format.formatter_of_buffer outBuf in[39m
     [38;5;2m 217[39m: [38;5;2m  let res =[39m
     [38;5;2m 218[39m: [38;5;2m    parse_ansi_escape_codes[39m
     [38;5;2m 219[39m: [38;5;2m      "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m 220[39m: [38;5;2m  in[39m
     [38;5;2m 221[39m: [38;5;2m  res[39m
     [38;5;2m 222[39m: [38;5;2m  |> List.iter (fun (x, str) ->[39m
     [38;5;2m 223[39m: [38;5;2m         Notty.I.string x str |> Notty.Render.pp_image @@ Format.str_formatter);[39m
     [38;5;2m 224[39m: [38;5;2m  print_endline (Format.flush_str_formatter () |> String.escaped);[39m
     [38;5;2m 225[39m: [38;5;2m  print_endline (Buffer.contents outBuf);[39m
     [38;5;2m 226[39m: [38;5;2m  [%expect[39m
     [38;5;2m 227[39m: [38;5;2m    {|[39m
     [38;5;2m 228[39m: [38;5;2m      params 32[39m
     [38;5;2m 229[39m: [38;5;2m      params 0[39m
     [38;5;2m 230[39m: [38;5;2m      params 30[39m
     [38;5;2m 231[39m: [38;5;2m      params 0[39m
     [38;5;2m 232[39m: [38;5;2m      \027[0m\027[K\027[0;32mThis is in green %s\027[0m\027[0m\027[K\027[0m \027[0m\027[0m\027[K\027[0;30mThisisnotGreen\027[0m\027[0m\027[K\027[0m|}][39m
     [38;5;2m 233[39m: [38;5;2m[39m
     [38;5;2m 234[39m: [38;5;2mlet jjtest =[39m
     [38;5;2m 235[39m: [38;5;2m  {|[39m
     [38;5;2m 236[39m: [38;5;2m  @  ␛[1m␛[38;5;13mm␛[38;5;8mtxzlotn␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 12:19:37␛[39m ␛[38;5;12mb␛[38;5;8mb87f772␛[39m␛[0m[39m
     [38;5;2m 237[39m: [38;5;2m  │  ␛[1m␛[38;5;3m(no description set)␛[39m␛[0m[39m
     [38;5;2m 238[39m: [38;5;2m|}[39m
     [38;5;2m 239[39m: [38;5;2m[39m
     [38;5;2m 240[39m: [38;5;2mlet%expect_test "jj_test" =[39m
     [38;5;2m 241[39m: [38;5;2m  jjtest |> string_to_image |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m 242[39m: [38;5;2m  let res = Format.flush_str_formatter () in[39m
     [38;5;2m 243[39m: [38;5;2m  print_endline "====== input=====";[39m
     [38;5;2m 244[39m: [38;5;2m  print_endline (jjtest |> String.escaped);[39m
     [38;5;2m 245[39m: [38;5;2m  print_endline "====== output escaped=====";[39m
     [38;5;2m 246[39m: [38;5;2m  print_endline (res |> String.escaped);[39m
     [38;5;2m 247[39m: [38;5;2m  print_endline "=====output====";[39m
     [38;5;2m 248[39m: [38;5;2m  print_endline res;[39m
     [38;5;2m 249[39m: [38;5;2m  [%expect[39m
     [38;5;2m 250[39m: [38;5;2m    {|[39m
     [38;5;2m 251[39m: [38;5;2m      params 1[39m
     [38;5;2m 252[39m: [38;5;2m      params 38;5;13[39m
     [38;5;2m 253[39m: [38;5;2m      nfg ␛[0m<␛[0;95mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 254[39m: [38;5;2m      params 38;5;8[39m
     [38;5;2m 255[39m: [38;5;2m      nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 256[39m: [38;5;2m      params 39[39m
     [38;5;2m 257[39m: [38;5;2m      params 38;5;3[39m
     [38;5;2m 258[39m: [38;5;2m      nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 259[39m: [38;5;2m      params 39[39m
     [38;5;2m 260[39m: [38;5;2m      params 38;5;14[39m
     [38;5;2m 261[39m: [38;5;2m      nfg ␛[0m<␛[0;96mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 262[39m: [38;5;2m      params 39[39m
     [38;5;2m 263[39m: [38;5;2m      params 38;5;12[39m
     [38;5;2m 264[39m: [38;5;2m      nfg ␛[0m<␛[0;94mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 265[39m: [38;5;2m      params 38;5;8[39m
     [38;5;2m 266[39m: [38;5;2m      nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 267[39m: [38;5;2m      params 39[39m
     [38;5;2m 268[39m: [38;5;2m      params 0[39m
     [38;5;2m 269[39m: [38;5;2m      params 1[39m
     [38;5;2m 270[39m: [38;5;2m      params 38;5;3[39m
     [38;5;2m 271[39m: [38;5;2m      nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 272[39m: [38;5;2m      params 39[39m
     [38;5;2m 273[39m: [38;5;2m      params 0[39m
     [38;5;2m 274[39m: [38;5;2m      len:23image:[39m
     [38;5;2m 275[39m: [38;5;2m      \027[0m  \226\148\130  \027[0m\027[K\027[0;33m(no description set)\027[0m[39m
     [38;5;2m 276[39m: [38;5;2m      image:[39m
     [38;5;2m 277[39m: [38;5;2m      \027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m[39m
     [38;5;2m 278[39m: [38;5;2m      image:[39m
     [38;5;2m 279[39m: [38;5;2m      \027[0m\027[K\027[0m[39m
     [38;5;2m 280[39m: [38;5;2m      ====== input=====[39m
     [38;5;2m 281[39m: [38;5;2m      \n  @  \027[1m\027[38;5;13mm\027[38;5;8mtxzlotn\027[39m \027[38;5;3meli.jambu@gmail.com\027[39m \027[38;5;14m2024-05-08 12:19:37\027[39m \027[38;5;12mb\027[38;5;8mb87f772\027[39m\027[0m\n  \226\148\130  \027[1m\027[38;5;3m(no description set)\027[39m\027[0m\n[39m
     [38;5;2m 282[39m: [38;5;2m      ====== output escaped=====[39m
     [38;5;2m 283[39m: [38;5;2m      \027[0m\027[K\027[0m\n\027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m\n\027[0m  \226\148\130  \027[0;33m(no description set)\027[0m\027[K\027[0m                                     \027[0m[39m
     [38;5;2m 284[39m: [38;5;2m      =====output====[39m
     [38;5;2m 285[39m: [38;5;2m      ␛[0m␛[K␛[0m[39m
     [38;5;2m 286[39m: [38;5;2m      ␛[0m  @  ␛[0;95mm␛[0;90mtxzlotn␛[0m ␛[0;33meli.jambu@gmail.com␛[0m ␛[0;96m2024-05-08 12:19:37␛[0m ␛[0;94mb␛[0m␛[K␛[0;90mb87f772␛[0m[39m
     [38;5;2m 287[39m: [38;5;2m      ␛[0m  │  ␛[0;33m(no description set)␛[0m␛[K␛[0m                                     ␛[0m|}][39m
     [38;5;2m 288[39m: [38;5;2m[39m
     [38;5;2m 289[39m: [38;5;2m(* let ansi =[39m
     [38;5;2m 290[39m: [38;5;2m   {[39m
     [38;5;2m 291[39m: [38;5;2m     skip =[39m
     [38;5;2m 292[39m: [38;5;2m       (fun (b : Buffer.t) ->[39m
     [38;5;2m 293[39m: [38;5;2m         let n = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 294[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 295[39m: [38;5;2m         n);[39m
     [38;5;2m 296[39m: [38;5;2m     newline = (fun _ -> ());[39m
     [38;5;2m 297[39m: [38;5;2m     altscr =[39m
     [38;5;2m 298[39m: [38;5;2m       (fun b ->[39m
     [38;5;2m 299[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 300[39m: [38;5;2m         String.equal (Buffer.contents b) "\x1b[?1049h");[39m
     [38;5;2m 301[39m: [38;5;2m     cursat =[39m
     [38;5;2m 302[39m: [38;5;2m       (fun b ->[39m
     [38;5;2m 303[39m: [38;5;2m         let h = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 304[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 305[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 306[39m: [38;5;2m         (* skip ';' *)[39m
     [38;5;2m 307[39m: [38;5;2m         let w = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 308[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 309[39m: [38;5;2m         (w - 1, h - 1));[39m
     [38;5;2m 310[39m: [38;5;2m     cubcuf =[39m
     [38;5;2m 311[39m: [38;5;2m       (fun b ->[39m
     [38;5;2m 312[39m: [38;5;2m         let x = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 313[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 314[39m: [38;5;2m         if Buffer.nth b 0 = 'D' then -x else x);[39m
     [38;5;2m 315[39m: [38;5;2m     cuucud =[39m
     [38;5;2m 316[39m: [38;5;2m       (fun b ->[39m
     [38;5;2m 317[39m: [38;5;2m         let y = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 318[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 319[39m: [38;5;2m         if Buffer.nth b 0 = 'A' then -y else y);[39m
     [38;5;2m 320[39m: [38;5;2m     cr = (fun _ -> ());[39m
     [38;5;2m 321[39m: [38;5;2m     clreol = (fun _ -> ());[39m
     [38;5;2m 322[39m: [38;5;2m     cursvis =[39m
     [38;5;2m 323[39m: [38;5;2m       (fun b ->[39m
     [38;5;2m 324[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 325[39m: [38;5;2m         String.equal (Buffer.contents b) "\x1b[34h\x1b[?25h");[39m
     [38;5;2m 326[39m: [38;5;2m     mouse =[39m
     [38;5;2m 327[39m: [38;5;2m       (fun b ->[39m
     [38;5;2m 328[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 329[39m: [38;5;2m         String.equal (Buffer.contents b) "\x1b[?1000;1002;1005;1015;1006h");[39m
     [38;5;2m 330[39m: [38;5;2m     bpaste =[39m
     [38;5;2m 331[39m: [38;5;2m       (fun b ->[39m
     [38;5;2m 332[39m: [38;5;2m         Buffer.clear b;[39m
     [38;5;2m 333[39m: [38;5;2m         String.equal (Buffer.contents b) "\x1b[?2004h");[39m
     [38;5;2m 334[39m: [38;5;2m     sgr;[39m
     [38;5;2m 335[39m: [38;5;2m   } *)[39m
     [38;5;2m 336[39m: [38;5;2m(*[39m
     [38;5;2m 337[39m: [38;5;2m     let no0 _ = ()[39m
     [38;5;2m 338[39m: [38;5;2m     and no1 _ _ = ()[39m
     [38;5;2m 339[39m: [38;5;2m     and no2 _ _ _ = ()[39m
     [38;5;2m 340[39m: [38;5;2m[39m
     [38;5;2m 341[39m: [38;5;2m     let dumb =[39m
     [38;5;2m 342[39m: [38;5;2m       {[39m
     [38;5;2m 343[39m: [38;5;2m         skip = (fun b -> String.length (Buffer.contents b));[39m
     [38;5;2m 344[39m: [38;5;2m         newline = (fun _ -> ());[39m
     [38;5;2m 345[39m: [38;5;2m         altscr = no1;[39m
     [38;5;2m 346[39m: [38;5;2m         cursat = (fun _ -> (0, 0));[39m
     [38;5;2m 347[39m: [38;5;2m         cubcuf = (fun _ -> 0);[39m
     [38;5;2m 348[39m: [38;5;2m         cuucud = (fun _ -> 0);[39m
     [38;5;2m 349[39m: [38;5;2m         cr = no0;[39m
     [38;5;2m 350[39m: [38;5;2m         clreol = no0;[39m
     [38;5;2m 351[39m: [38;5;2m         cursvis = (fun _ -> false);[39m
     [38;5;2m 352[39m: [38;5;2m         sgr = (fun _ -> A.empty);[39m
     [38;5;2m 353[39m: [38;5;2m         mouse = (fun _ -> false);[39m
     [38;5;2m 354[39m: [38;5;2m         bpaste = (fun _ -> false);[39m
     [38;5;2m 355[39m: [38;5;2m       } *)[39m
     [38;5;2m 356[39m: [38;5;2m(*[39m
     [38;5;2m 357[39m: [38;5;2m     let erase cap buf = Buffer.clear buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m 358[39m: [38;5;2m[39m
     [38;5;2m 359[39m: [38;5;2m     let cursat0 cap b =[39m
     [38;5;2m 360[39m: [38;5;2m       let w, h = cap.cursat b in[39m
     [38;5;2m 361[39m: [38;5;2m       (max 0 (w - 1), max 0 (h - 1)) *)[39m
[38;5;3mAdded regular file lib/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(library[39m
     [38;5;2m   2[39m: [38;5;2m (name jj_tui)[39m
     [38;5;2m   3[39m: [38;5;2m (inline_tests)[39m
     [38;5;2m   4[39m: [38;5;2m (libraries core stdio core_unix.command_unix notty nottui angstrom)[39m
     [38;5;2m   5[39m: [38;5;2m (preprocess[39m
     [38;5;2m   6[39m: [38;5;2m  (pps ppx_expect)))[39m
[38;5;3mAdded regular file lib/process.ml:[39m
     [38;5;2m   1[39m: [38;5;2m[39m
     [38;5;2m   2[39m: [38;5;2mlet mk_home_cmd cmd =[39m
     [38;5;2m   3[39m: [38;5;2m  let home_dir = Unix.getenv "HOME" in[39m
     [38;5;2m   4[39m: [38;5;2m  Printf.sprintf "HOME=%s %s" home_dir cmd[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mlet proc_silent cmd =[39m
     [38;5;2m   7[39m: [38;5;2m  let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
     [38;5;2m   8[39m: [38;5;2m  ()[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet proc cmd =[39m
     [38;5;2m  11[39m: [38;5;2m  Printf.eprintf "🐚  %s\n%!" cmd;[39m
     [38;5;2m  12[39m: [38;5;2m  proc_silent cmd[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2mlet collect_chan (channel : in_channel) : string =[39m
     [38;5;2m  15[39m: [38;5;2m  let rec loop acc =[39m
     [38;5;2m  16[39m: [38;5;2m    match input_line channel with[39m
     [38;5;2m  17[39m: [38;5;2m    | exception End_of_file -> acc[39m
     [38;5;2m  18[39m: [38;5;2m    | line -> loop (acc ^ line ^ "\n")[39m
     [38;5;2m  19[39m: [38;5;2m  in[39m
     [38;5;2m  20[39m: [38;5;2m  loop ""[39m
     [38;5;2m  21[39m: [38;5;2m[39m
     [38;5;2m  22[39m: [38;5;2mlet proc_stdout cmd =[39m
     [38;5;2m  23[39m: [38;5;2m  let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
     [38;5;2m  24[39m: [38;5;2m    Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m  25[39m: [38;5;2m  in[39m
     [38;5;2m  26[39m: [38;5;2m  let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m  27[39m: [38;5;2m  let _ = Unix.close_process_full process in[39m
     [38;5;2m  28[39m: [38;5;2m  String.trim stdout_result[39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2mlet proc_stdOutAndErr cmd =[39m
     [38;5;2m  31[39m: [38;5;2m  let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
     [38;5;2m  32[39m: [38;5;2m    Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m  33[39m: [38;5;2m  in[39m
     [38;5;2m  34[39m: [38;5;2m  let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m  35[39m: [38;5;2m  let stderr_result = collect_chan proc_stderr in[39m
     [38;5;2m  36[39m: [38;5;2m  let _ = Unix.close_process_full process in[39m
     [38;5;2m  37[39m: [38;5;2m  String.trim (stdout_result^stderr_result)[39m
[38;5;3mAdded regular file log:[39m
     [38;5;2m   1[39m: [38;5;2m◉  ␛[1m␛[38;5;5mv␛[0m␛[38;5;8myzuqwnl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m7␛[0m␛[38;5;8maf062fc␛[39m[39m
     [38;5;2m   2[39m: [38;5;2m│  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m   3[39m: [38;5;2m◉  ␛[1m␛[38;5;5mxn␛[0m␛[38;5;8mvoukwm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m9␛[0m␛[38;5;8m50e51d4␛[39m[39m
     [38;5;2m   4[39m: [38;5;2m│  using angstrom parser[39m
     [38;5;2m   5[39m: [38;5;2m◉  ␛[1m␛[38;5;5mu␛[0m␛[38;5;8mwwzzulo␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m4a␛[0m␛[38;5;8md3ac96␛[39m[39m
     [38;5;2m   6[39m: [38;5;2m│  progress on ui, added boxes[39m
     [38;5;2m   7[39m: [38;5;2m@  ␛[1m␛[38;5;13mkszk␛[38;5;8muqqs␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 23:57:08␛[39m ␛[38;5;12mf␛[38;5;8mc74c4ed␛[39m␛[0m[39m
     [38;5;2m   8[39m: [38;5;2m│  ␛[1mcoloured output is working␛[0m[39m
     [38;5;2m   9[39m: [38;5;2m◉  ␛[1m␛[38;5;5my␛[0m␛[38;5;8msrpqsvq␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:18:11␛[39m ␛[38;5;2mHEAD@git␛[39m ␛[1m␛[38;5;4me␛[0m␛[38;5;8mc72cc90␛[39m[39m
     [38;5;2m  10[39m: [38;5;2m│  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m  11[39m: [38;5;2m◉  ␛[1m␛[38;5;5mn␛[0m␛[38;5;8mulnswsm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:17:05␛[39m ␛[1m␛[38;5;4mb␛[0m␛[38;5;8mfaef69b␛[39m[39m
     [38;5;2m  12[39m: [38;5;2m│  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m  13[39m: [38;5;2m◉  ␛[1m␛[38;5;5mxw␛[0m␛[38;5;8msmkxpt␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m2␛[0m␛[38;5;8m12a26e4␛[39m[39m
     [38;5;2m  14[39m: [38;5;2m│  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m  15[39m: [38;5;2m◉  ␛[1m␛[38;5;5mkszy␛[0m␛[38;5;8mtrtu␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m8␛[0m␛[38;5;8m754ef74␛[39m[39m
     [38;5;2m  16[39m: [38;5;2m│  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m  17[39m: [38;5;2m◉  ␛[1m␛[38;5;5mp␛[0m␛[38;5;8msnrvlsv␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:02:28␛[39m ␛[1m␛[38;5;4md␛[0m␛[38;5;8m09f7fd4␛[39m[39m
     [38;5;2m  18[39m: [38;5;2m│  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m  19[39m: [38;5;2m│ ◉  ␛[1m␛[38;5;5mt␛[0m␛[38;5;8mooppyyl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:19:58␛[39m ␛[1m␛[38;5;4m49␛[0m␛[38;5;8m125832␛[39m[39m
     [38;5;2m  20[39m: [38;5;2m├─╯  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m  21[39m: [38;5;2m◉  ␛[1m␛[38;5;5mz␛[0m␛[38;5;8mzzzzzzz␛[39m ␛[38;5;2mroot()␛[39m ␛[1m␛[38;5;4m0␛[0m␛[38;5;8m0000000␛[39m[39m
[38;5;3mAdded regular file log2:[39m
     [38;5;2m   1[39m: [38;5;2mCommit ID: 0dff1f977d48f4537fa8c357b8fe08c1910e4ac4[39m
     [38;5;2m   2[39m: [38;5;2mChange ID: kszkuqqsvpknsnosxyxmnunnqvrzmpvq[39m
     [38;5;2m   3[39m: [38;5;2mAuthor: Eli Dowling <eli.jambu@gmail.com> (2024-05-08 01:20:28)[39m
     [38;5;2m   4[39m: [38;5;2mCommitter: Eli Dowling <eli.jambu@gmail.com> (2024-05-09 00:02:20)[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2m    coloured output is working[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2mAdded regular file ../.ocamlformat:[39m
     [38;5;2m   9[39m: [38;5;2m        1: version=0.24.1[39m
     [38;5;2m  10[39m: [38;5;2m        2: profile=conventional[39m
     [38;5;2m  11[39m: [38;5;2mRemoved regular file ../bin/dune:[39m
     [38;5;2m  12[39m: [38;5;2m   1     : (executable[39m
     [38;5;2m  13[39m: [38;5;2m   2     :  (public_name jj_tui)[39m
     [38;5;2m  14[39m: [38;5;2m   3     :  (name main)[39m
     [38;5;2m  15[39m: [38;5;2m   4     :  (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
     [38;5;2m  16[39m: [38;5;2m   5     :  )[39m
     [38;5;2m  17[39m: [38;5;2mRemoved regular file ../bin/main.ml:[39m
     [38;5;2m  18[39m: [38;5;2m   1     : open Nottui;;[39m
     [38;5;2m  19[39m: [38;5;2m   2     : open Feather;;[39m
     [38;5;2m  20[39m: [38;5;2m   3     : open Lwd_infix;;[39m
     [38;5;2m  21[39m: [38;5;2m   4     : module W = Nottui_widgets;;[39m
     [38;5;2m  22[39m: [38;5;2m   5     : [39m
     [38;5;2m  23[39m: [38;5;2m   6     : [39m
     [38;5;2m  24[39m: [38;5;2m   7     : (* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
     [38;5;2m  25[39m: [38;5;2m   8     : [39m
     [38;5;2m  26[39m: [38;5;2m   9     : let cmdArgs cmd args=[39m
     [38;5;2m  27[39m: [38;5;2m  10     :   let (stdout,stderr)=Feather.process cmd args|>Feather.collect stdout_and_stderr in[39m
     [38;5;2m  28[39m: [38;5;2m  11     :   stdout^stderr[39m
     [38;5;2m  29[39m: [38;5;2m  12     : ;;[39m
     [38;5;2m  30[39m: [38;5;2m  13     : let cmd cmd =[39m
     [38;5;2m  31[39m: [38;5;2m  14     :   let (stdout,stderr)=Feather.process cmd []|>Feather.collect stdout_and_stderr in[39m
     [38;5;2m  32[39m: [38;5;2m  15     :   stdout^stderr[39m
     [38;5;2m  33[39m: [38;5;2m  16     : [39m
     [38;5;2m  34[39m: [38;5;2m  17     : ;;[39m
     [38;5;2m  35[39m: [38;5;2m  18     : [39m
     [38;5;2m  36[39m: [38;5;2m  19     : [39m
     [38;5;2m  37[39m: [38;5;2m  20     : let vcount = Lwd.var "";;[39m
     [38;5;2m  38[39m: [38;5;2m  21     : [39m
     [38;5;2m  39[39m: [38;5;2m  22     : let button = [39m
     [38;5;2m  40[39m: [38;5;2m  23     :   W.button (Printf.sprintf "run jj" )[39m
     [38;5;2m  41[39m: [38;5;2m  24     :            (fun () ->  vcount $= (cmd"jj"))[39m
     [38;5;2m  42[39m: [38;5;2m  25     :   |>Lwd.pure[39m
     [38;5;2m  43[39m: [38;5;2m  26     :          ;;[39m
     [38;5;2m  44[39m: [38;5;2m  27     : let vQuit=Lwd.var false;;[39m
     [38;5;2m  45[39m: [38;5;2m  28     : [39m
     [38;5;2m  46[39m: [38;5;2m  29     : let quitButton  = [39m
     [38;5;2m  47[39m: [38;5;2m  30     :   W.button (Printf.sprintf "quit " )[39m
     [38;5;2m  48[39m: [38;5;2m  31     :            (fun () ->  vQuit $= true)[39m
     [38;5;2m  49[39m: [38;5;2m  32     :   |>Lwd.pure[39m
     [38;5;2m  50[39m: [38;5;2m  33     :          ;;[39m
     [38;5;2m  51[39m: [38;5;2m  34     : [39m
     [38;5;2m  52[39m: [38;5;2m  35     : [39m
     [38;5;2m  53[39m: [38;5;2m  36     : let (<-$) f v=Lwd.map ~f (Lwd.get v);; [39m
     [38;5;2m  54[39m: [38;5;2m  37     : let vShowStatus= Lwd.var "";;[39m
     [38;5;2m  55[39m: [38;5;2m  38     : let inputs ui=[39m
     [38;5;2m  56[39m: [38;5;2m  39     :   Ui.event_filter (fun event->[39m
     [38;5;2m  57[39m: [38;5;2m  40     :     match event with[39m
     [38;5;2m  58[39m: [38;5;2m  41     :     |`Key (`ASCII 'l',_)-> [39m
     [38;5;2m  59[39m: [38;5;2m  42     :         let res=cmd "jj"in[39m
     [38;5;2m  60[39m: [38;5;2m  43     :         vcount$=res;[39m
     [38;5;2m  61[39m: [38;5;2m  44     : [39m
     [38;5;2m  62[39m: [38;5;2m  45     :         `Handled[39m
     [38;5;2m  63[39m: [38;5;2m  46     :     |`Key (`ASCII 's',_)-> [39m
     [38;5;2m  64[39m: [38;5;2m  47     :         let res=cmdArgs "jj" ["show"]in[39m
     [38;5;2m  65[39m: [38;5;2m  48     :         vShowStatus$=res;[39m
     [38;5;2m  66[39m: [38;5;2m  49     : [39m
     [38;5;2m  67[39m: [38;5;2m  50     :         `Handled[39m
     [38;5;2m  68[39m: [38;5;2m  51     :     |`Key (`ASCII 'p',_)-> [39m
     [38;5;2m  69[39m: [38;5;2m  52     :         let _=cmdArgs "jj"["prev"]in[39m
     [38;5;2m  70[39m: [38;5;2m  53     : [39m
     [38;5;2m  71[39m: [38;5;2m  54     :         `Handled[39m
     [38;5;2m  72[39m: [38;5;2m  55     :     |`Key (`ASCII 'n',_)-> [39m
     [38;5;2m  73[39m: [38;5;2m  56     :         let _=cmdArgs "jj"["next"]in[39m
     [38;5;2m  74[39m: [38;5;2m  57     : [39m
     [38;5;2m  75[39m: [38;5;2m  58     :         `Handled[39m
     [38;5;2m  76[39m: [38;5;2m  59     :     |_->`Unhandled[39m
     [38;5;2m  77[39m: [38;5;2m  60     :       ) ui[39m
     [38;5;2m  78[39m: [38;5;2m  61     :   ;;[39m
     [38;5;2m  79[39m: [38;5;2m  62     : let mainUi= [39m
     [38;5;2m  80[39m: [38;5;2m  63     :   Lwd.map ~f:inputs @@[39m
     [38;5;2m  81[39m: [38;5;2m  64     :   W.h_pane[39m
     [38;5;2m  82[39m: [38;5;2m  65     :   (Nottui_widgets.vbox [[39m
     [38;5;2m  83[39m: [38;5;2m  66     :     button;[39m
     [38;5;2m  84[39m: [38;5;2m  67     :     W.string <-$ vcount;[39m
     [38;5;2m  85[39m: [38;5;2m  68     :     quitButton])[39m
     [38;5;2m  86[39m: [38;5;2m  69     :   (W.string <-$ vShowStatus)[39m
     [38;5;2m  87[39m: [38;5;2m  70     : ;;[39m
     [38;5;2m  88[39m: [38;5;2m  71     :       [39m
     [38;5;2m  89[39m: [38;5;2m  72     : [39m
     [38;5;2m  90[39m: [38;5;2m  73     : Ui_loop.run ~quit:vQuit (mainUi);;[39m
     [38;5;2m  91[39m: [38;5;2m  74     : [39m
     [38;5;2m  92[39m: [38;5;2m  75     : (*[39m
     [38;5;2m  93[39m: [38;5;2m  76     : type tree = Tree of string * (unit -> tree list)[39m
     [38;5;2m  94[39m: [38;5;2m  77     : [39m
     [38;5;2m  95[39m: [38;5;2m  78     : let rec tree_ui (Tree (label, child)) =[39m
     [38;5;2m  96[39m: [38;5;2m  79     :   let opened = Lwd.var false in[39m
     [38;5;2m  97[39m: [38;5;2m  80     :   let render is_opened =[39m
     [38;5;2m  98[39m: [38;5;2m  81     :     let btn_text = if is_opened then "[-] " else "[+] " in[39m
     [38;5;2m  99[39m: [38;5;2m  82     :     let btn_action () = Lwd.set opened (not is_opened) in[39m
     [38;5;2m 100[39m: [38;5;2m  83     :     let btn = W.button (btn_text ^ label) btn_action in[39m
     [38;5;2m 101[39m: [38;5;2m  84     :     let layout node forest =[39m
     [38;5;2m 102[39m: [38;5;2m  85     :       Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
     [38;5;2m 103[39m: [38;5;2m  86     :     in[39m
     [38;5;2m 104[39m: [38;5;2m  87     :     if is_opened [39m
     [38;5;2m 105[39m: [38;5;2m  88     :     then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
     [38;5;2m 106[39m: [38;5;2m  89     :     else Lwd.pure btn[39m
     [38;5;2m 107[39m: [38;5;2m  90     :   in[39m
     [38;5;2m 108[39m: [38;5;2m  91     :   Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
     [38;5;2m 109[39m: [38;5;2m  92     :   [39m
     [38;5;2m 110[39m: [38;5;2m  93     : and forest_ui nodes = [39m
     [38;5;2m 111[39m: [38;5;2m  94     :   Lwd_utils.pack Ui.pack_y [39m
     [38;5;2m 112[39m: [38;5;2m  95     :     (List.map tree_ui nodes)[39m
     [38;5;2m 113[39m: [38;5;2m  96     : ;;[39m
     [38;5;2m 114[39m: [38;5;2m  97     : [39m
     [38;5;2m 115[39m: [38;5;2m  98     : let rec fake_fs () = [[39m
     [38;5;2m 116[39m: [38;5;2m  99     :   Tree ("bin", fake_fs);[39m
     [38;5;2m 117[39m: [38;5;2m 100     :   Tree ("home", fake_fs);[39m
     [38;5;2m 118[39m: [38;5;2m 101     :   Tree ("usr", fake_fs);[39m
     [38;5;2m 119[39m: [38;5;2m 102     : ] in[39m
     [38;5;2m 120[39m: [38;5;2m 103     : [39m
     [38;5;2m 121[39m: [38;5;2m 104     : Ui_loop.run (forest_ui (fake_fs ()));;[39m
     [38;5;2m 122[39m: [38;5;2m 105     : *)[39m
     [38;5;2m 123[39m: [38;5;2mRemoved regular file ../dune-project:[39m
     [38;5;2m 124[39m: [38;5;2m   1     : (lang dune 3.9)[39m
     [38;5;2m 125[39m: [38;5;2m   2     : [39m
     [38;5;2m 126[39m: [38;5;2m   3     : (name jj_tui)[39m
     [38;5;2m 127[39m: [38;5;2m   4     : [39m
     [38;5;2m 128[39m: [38;5;2m   5     : (generate_opam_files true)[39m
     [38;5;2m 129[39m: [38;5;2m   6     : [39m
     [38;5;2m 130[39m: [38;5;2m   7     : (source[39m
     [38;5;2m 131[39m: [38;5;2m   8     :  (github username/reponame))[39m
     [38;5;2m 132[39m: [38;5;2m   9     : [39m
     [38;5;2m 133[39m: [38;5;2m  10     : (authors "Author Name")[39m
     [38;5;2m 134[39m: [38;5;2m  11     : [39m
     [38;5;2m 135[39m: [38;5;2m  12     : (maintainers "Maintainer Name")[39m
     [38;5;2m 136[39m: [38;5;2m  13     : [39m
     [38;5;2m 137[39m: [38;5;2m  14     : (license LICENSE)[39m
     [38;5;2m 138[39m: [38;5;2m  15     : [39m
     [38;5;2m 139[39m: [38;5;2m  16     : (documentation https://url/to/documentation)[39m
     [38;5;2m 140[39m: [38;5;2m  17     : [39m
     [38;5;2m 141[39m: [38;5;2m  18     : (package[39m
     [38;5;2m 142[39m: [38;5;2m  19     :  (name jj_tui)[39m
     [38;5;2m 143[39m: [38;5;2m  20     :  (synopsis "A short synopsis")[39m
     [38;5;2m 144[39m: [38;5;2m  21     :  (description "A longer description")[39m
     [38;5;2m 145[39m: [38;5;2m  22     :  (depends ocaml dune)[39m
     [38;5;2m 146[39m: [38;5;2m  23     :  (tags[39m
     [38;5;2m 147[39m: [38;5;2m  24     :   (topics "to describe" your project)))[39m
     [38;5;2m 148[39m: [38;5;2m  25     : [39m
     [38;5;2m 149[39m: [38;5;2m  26     : ; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
     [38;5;2m 150[39m: [38;5;2mRemoved regular file ../flake.lock:[39m
     [38;5;2m 151[39m: [38;5;2m   1     : {[39m
     [38;5;2m 152[39m: [38;5;2m   2     :   "nodes": {[39m
     [38;5;2m 153[39m: [38;5;2m   3     :     "nixpkgs": {[39m
     [38;5;2m 154[39m: [38;5;2m   4     :       "locked": {[39m
     [38;5;2m 155[39m: [38;5;2m   5     :         "lastModified": 1713344939,[39m
     [38;5;2m 156[39m: [38;5;2m   6     :         "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
     [38;5;2m 157[39m: [38;5;2m   7     :         "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
     [38;5;2m 158[39m: [38;5;2m   8     :         "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
     [38;5;2m 159[39m: [38;5;2m   9     :         "type": "path"[39m
     [38;5;2m 160[39m: [38;5;2m  10     :       },[39m
     [38;5;2m 161[39m: [38;5;2m  11     :       "original": {[39m
     [38;5;2m 162[39m: [38;5;2m  12     :         "id": "nixpkgs",[39m
     [38;5;2m 163[39m: [38;5;2m  13     :         "type": "indirect"[39m
     [38;5;2m 164[39m: [38;5;2m  14     :       }[39m
     [38;5;2m 165[39m: [38;5;2m  15     :     },[39m
     [38;5;2m 166[39m: [38;5;2m  16     :     "root": {[39m
     [38;5;2m 167[39m: [38;5;2m  17     :       "inputs": {[39m
     [38;5;2m 168[39m: [38;5;2m  18     :         "nixpkgs": "nixpkgs"[39m
     [38;5;2m 169[39m: [38;5;2m  19     :       }[39m
     [38;5;2m 170[39m: [38;5;2m  20     :     }[39m
     [38;5;2m 171[39m: [38;5;2m  21     :   },[39m
     [38;5;2m 172[39m: [38;5;2m  22     :   "root": "root",[39m
     [38;5;2m 173[39m: [38;5;2m  23     :   "version": 7[39m
     [38;5;2m 174[39m: [38;5;2m  24     : }[39m
     [38;5;2m 175[39m: [38;5;2mRemoved regular file ../flake.nix:[39m
     [38;5;2m 176[39m: [38;5;2m   1     : {[39m
     [38;5;2m 177[39m: [38;5;2m   2     :   description = "Example JavaScript development environment for Zero to Nix";[39m
     [38;5;2m 178[39m: [38;5;2m   3     : [39m
     [38;5;2m 179[39m: [38;5;2m   4     :   # Flake inputs[39m
     [38;5;2m 180[39m: [38;5;2m   5     :   inputs = {[39m
     [38;5;2m 181[39m: [38;5;2m   6     : [39m
     [38;5;2m 182[39m: [38;5;2m   7     :     # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
     [38;5;2m 183[39m: [38;5;2m   8     :     nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
     [38;5;2m 184[39m: [38;5;2m   9     : [39m
     [38;5;2m 185[39m: [38;5;2m  10     :     # roc={[39m
     [38;5;2m 186[39m: [38;5;2m  11     :     #   url="github:roc-lang/roc";[39m
     [38;5;2m 187[39m: [38;5;2m  12     :     # inputs.nixpkgs.follows="nixpkgs";[39m
     [38;5;2m 188[39m: [38;5;2m  13     : [39m
     [38;5;2m 189[39m: [38;5;2m  14     :     # };[39m
     [38;5;2m 190[39m: [38;5;2m  15     : [39m
     [38;5;2m 191[39m: [38;5;2m  16     :   };[39m
     [38;5;2m 192[39m: [38;5;2m  17     :   # Flake outputs[39m
     [38;5;2m 193[39m: [38;5;2m  18     :   outputs = { self, nixpkgs, ... }@inputs:[39m
     [38;5;2m 194[39m: [38;5;2m  19     :     let[39m
     [38;5;2m 195[39m: [38;5;2m  20     :       # Systems supported[39m
     [38;5;2m 196[39m: [38;5;2m  21     :       allSystems = [[39m
     [38;5;2m 197[39m: [38;5;2m  22     :         "x86_64-linux" # 64-bit Intel/AMD Linux[39m
     [38;5;2m 198[39m: [38;5;2m  23     :       ];[39m
     [38;5;2m 199[39m: [38;5;2m  24     : [39m
     [38;5;2m 200[39m: [38;5;2m  25     :       # Helper to provide system-specific attributes[39m
     [38;5;2m 201[39m: [38;5;2m  26     :       forAllSystems = f:[39m
     [38;5;2m 202[39m: [38;5;2m  27     :         nixpkgs.lib.genAttrs allSystems (system:[39m
     [38;5;2m 203[39m: [38;5;2m  28     :           f {[39m
     [38;5;2m 204[39m: [38;5;2m  29     :             pkgs = import nixpkgs { inherit system; };[39m
     [38;5;2m 205[39m: [38;5;2m  30     : [39m
     [38;5;2m 206[39m: [38;5;2m  31     :           });[39m
     [38;5;2m 207[39m: [38;5;2m  32     :     in {[39m
     [38;5;2m 208[39m: [38;5;2m  33     :       # Development environment output[39m
     [38;5;2m 209[39m: [38;5;2m  34     :       devShells = forAllSystems ({ pkgs }: {[39m
     [38;5;2m 210[39m: [38;5;2m  35     :         default =[39m
     [38;5;2m 211[39m: [38;5;2m  36     : [39m
     [38;5;2m 212[39m: [38;5;2m  37     :           pkgs.mkShell {[39m
     [38;5;2m 213[39m: [38;5;2m  38     :             packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
     [38;5;2m 214[39m: [38;5;2m  39     :             shellHook = let[39m
     [38;5;2m 215[39m: [38;5;2m  40     :               libPath =[39m
     [38;5;2m 216[39m: [38;5;2m  41     :                 pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
     [38;5;2m 217[39m: [38;5;2m  42     :             in ''[39m
     [38;5;2m 218[39m: [38;5;2m  43     :               # yolo[39m
     [38;5;2m 219[39m: [38;5;2m  44     :               export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
     [38;5;2m 220[39m: [38;5;2m  45     :               export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
     [38;5;2m 221[39m: [38;5;2m  46     :             '';[39m
     [38;5;2m 222[39m: [38;5;2m  47     :           };[39m
     [38;5;2m 223[39m: [38;5;2m  48     : [39m
     [38;5;2m 224[39m: [38;5;2m  49     :       });[39m
     [38;5;2m 225[39m: [38;5;2m  50     : [39m
     [38;5;2m 226[39m: [38;5;2m  51     :     };[39m
     [38;5;2m 227[39m: [38;5;2m  52     : }[39m
     [38;5;2m 228[39m: [38;5;2mAdded regular file .ocamlformat:[39m
     [38;5;2m 229[39m: [38;5;2m        1: [39m
     [38;5;2m 230[39m: [38;5;2m        2: profile=conventional[39m
     [38;5;2m 231[39m: [38;5;2mAdded regular file .ocmalformat:[39m
     [38;5;2m 232[39m: [38;5;2m        1: version=0.24.1[39m
     [38;5;2m 233[39m: [38;5;2m        2: profile=conventional[39m
     [38;5;2m 234[39m: [38;5;2mAdded regular file bin/dune:[39m
     [38;5;2m 235[39m: [38;5;2m        1: (executable[39m
     [38;5;2m 236[39m: [38;5;2m        2:  (public_name jj_tui)[39m
     [38;5;2m 237[39m: [38;5;2m        3:  (name main)[39m
     [38;5;2m 238[39m: [38;5;2m        4:  (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
     [38;5;2m 239[39m: [38;5;2m        5:  )[39m
     [38;5;2m 240[39m: [38;5;2mAdded regular file bin/main.ml:[39m
     [38;5;2m 241[39m: [38;5;2m        1: open Nottui[39m
     [38;5;2m 242[39m: [38;5;2m        2: open Feather[39m
     [38;5;2m 243[39m: [38;5;2m        3: open Lwd_infix[39m
     [38;5;2m 244[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m 245[39m: [38;5;2m        5: module W = Nottui_widgets[39m
     [38;5;2m 246[39m: [38;5;2m        6: [39m
     [38;5;2m 247[39m: [38;5;2m        7: let colored_string = Jj_tui.AnsiReverse.colored_string[39m
     [38;5;2m 248[39m: [38;5;2m        8: [39m
     [38;5;2m 249[39m: [38;5;2m        9: (* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
     [38;5;2m 250[39m: [38;5;2m       10: let cmdArgs cmd args =[39m
     [38;5;2m 251[39m: [38;5;2m       11:   let stdout, stderr =[39m
     [38;5;2m 252[39m: [38;5;2m       12:     Feather.process cmd args |> Feather.collect stdout_and_stderr[39m
     [38;5;2m 253[39m: [38;5;2m       13:   in[39m
     [38;5;2m 254[39m: [38;5;2m       14:   stdout ^ stderr[39m
     [38;5;2m 255[39m: [38;5;2m       15: [39m
     [38;5;2m 256[39m: [38;5;2m       16: let jj args = cmdArgs "jj" (List.concat [ args; [ "--color"; "always" ] ])[39m
     [38;5;2m 257[39m: [38;5;2m       17: let vcount = Lwd.var I.empty[39m
     [38;5;2m 258[39m: [38;5;2m       18: [39m
     [38;5;2m 259[39m: [38;5;2m       19: let _button =[39m
     [38;5;2m 260[39m: [38;5;2m       20:   W.button (Printf.sprintf "run jj") (fun () ->[39m
     [38;5;2m 261[39m: [38;5;2m       21:       vcount $= (cmdArgs "jj" [ "log"; "--color"; "always" ] |> colored_string))[39m
     [38;5;2m 262[39m: [38;5;2m       22:   |> Lwd.pure[39m
     [38;5;2m 263[39m: [38;5;2m       23: [39m
     [38;5;2m 264[39m: [38;5;2m       24: let vQuit = Lwd.var false[39m
     [38;5;2m 265[39m: [38;5;2m       25: [39m
     [38;5;2m 266[39m: [38;5;2m       26: let _quitButton =[39m
     [38;5;2m 267[39m: [38;5;2m       27:   W.button (Printf.sprintf "quit ") (fun () -> vQuit $= true) |> Lwd.pure[39m
     [38;5;2m 268[39m: [38;5;2m       28: [39m
     [38;5;2m 269[39m: [38;5;2m       29: let ( <-$ ) f v = Lwd.map ~f (Lwd.get v)[39m
     [38;5;2m 270[39m: [38;5;2m       30: [39m
     [38;5;2m 271[39m: [38;5;2m       31: (* let ( let<- ) v f = Lwd.map ~f (Lwd.get v) *)[39m
     [38;5;2m 272[39m: [38;5;2m       32: let vShowStatus = Lwd.var I.empty[39m
     [38;5;2m 273[39m: [38;5;2m       33: let vother = Lwd.var ""[39m
     [38;5;2m 274[39m: [38;5;2m       34: [39m
     [38;5;2m 275[39m: [38;5;2m       35: let onChange () =[39m
     [38;5;2m 276[39m: [38;5;2m       36:   let res = jj [ "show" ] |> colored_string in[39m
     [38;5;2m 277[39m: [38;5;2m       37:   vShowStatus $= res;[39m
     [38;5;2m 278[39m: [38;5;2m       38:   let res = jj [] in[39m
     [38;5;2m 279[39m: [38;5;2m       39:   vcount $= colored_string res[39m
     [38;5;2m 280[39m: [38;5;2m       40: [39m
     [38;5;2m 281[39m: [38;5;2m       41: let changeInputs key =[39m
     [38;5;2m 282[39m: [38;5;2m       42:   let noOut args =[39m
     [38;5;2m 283[39m: [38;5;2m       43:     let _ = jj args in[39m
     [38;5;2m 284[39m: [38;5;2m       44:     `Handled[39m
     [38;5;2m 285[39m: [38;5;2m       45:   in[39m
     [38;5;2m 286[39m: [38;5;2m       46:   match key with[39m
     [38;5;2m 287[39m: [38;5;2m       47:   | 'P' -> noOut [ "prev" ][39m
     [38;5;2m 288[39m: [38;5;2m       48:   | 'p' -> noOut [ "prev"; "--edit" ][39m
     [38;5;2m 289[39m: [38;5;2m       49:   | 'N' -> noOut [ "next" ][39m
     [38;5;2m 290[39m: [38;5;2m       50:   | 'n' -> noOut [ "next"; "--edit" ][39m
     [38;5;2m 291[39m: [38;5;2m       51:   | 'S' -> noOut [ "unsquash"; "-i"; "--tool"; "sublime_merge" ][39m
     [38;5;2m 292[39m: [38;5;2m       52:   | _ -> `Unhandled[39m
     [38;5;2m 293[39m: [38;5;2m       53: [39m
     [38;5;2m 294[39m: [38;5;2m       54: let inputs ui =[39m
     [38;5;2m 295[39m: [38;5;2m       55:   Ui.event_filter[39m
     [38;5;2m 296[39m: [38;5;2m       56:     (fun event ->[39m
     [38;5;2m 297[39m: [38;5;2m       57:       match event with[39m
     [38;5;2m 298[39m: [38;5;2m       58:       | `Key (`ASCII 's', _) ->[39m
     [38;5;2m 299[39m: [38;5;2m       59:           let res = jj [ "show" ] in[39m
     [38;5;2m 300[39m: [38;5;2m       60:           vShowStatus $= (res |> colored_string);[39m
     [38;5;2m 301[39m: [38;5;2m       61: [39m
     [38;5;2m 302[39m: [38;5;2m       62:           `Handled[39m
     [38;5;2m 303[39m: [38;5;2m       63:       | `Key (`ASCII 'l', _) ->[39m
     [38;5;2m 304[39m: [38;5;2m       64:           let res = jj [] in[39m
     [38;5;2m 305[39m: [38;5;2m       65:           vcount $= colored_string res;[39m
     [38;5;2m 306[39m: [38;5;2m       66:           vother $= res;[39m
     [38;5;2m 307[39m: [38;5;2m       67: [39m
     [38;5;2m 308[39m: [38;5;2m       68:           `Handled[39m
     [38;5;2m 309[39m: [38;5;2m       69:       | `Key (`ASCII 'q', _) ->[39m
     [38;5;2m 310[39m: [38;5;2m       70:           vQuit $= true;[39m
     [38;5;2m 311[39m: [38;5;2m       71: [39m
     [38;5;2m 312[39m: [38;5;2m       72:           `Handled[39m
     [38;5;2m 313[39m: [38;5;2m       73:       | `Key (`ASCII key, _) -> ([39m
     [38;5;2m 314[39m: [38;5;2m       74:           match changeInputs key with[39m
     [38;5;2m 315[39m: [38;5;2m       75:           | `Handled ->[39m
     [38;5;2m 316[39m: [38;5;2m       76:               onChange ();[39m
     [38;5;2m 317[39m: [38;5;2m       77:               `Handled[39m
     [38;5;2m 318[39m: [38;5;2m       78:           | `Unhandled -> `Unhandled)[39m
     [38;5;2m 319[39m: [38;5;2m       79:       | _ -> `Unhandled)[39m
     [38;5;2m 320[39m: [38;5;2m       80:     ui[39m
     [38;5;2m 321[39m: [38;5;2m       81: [39m
     [38;5;2m 322[39m: [38;5;2m       82: let mainUi =[39m
     [38;5;2m 323[39m: [38;5;2m       83:   let$ pane =[39m
     [38;5;2m 324[39m: [38;5;2m       84:     W.h_pane[39m
     [38;5;2m 325[39m: [38;5;2m       85:       (Nottui_widgets.vbox[39m
     [38;5;2m 326[39m: [38;5;2m       86:          [ (* button;  *) Ui.atom <-$ vcount (* quitButton  *) ])[39m
     [38;5;2m 327[39m: [38;5;2m       87:       (Ui.atom <-$ vShowStatus)[39m
     [38;5;2m 328[39m: [38;5;2m       88:   in[39m
     [38;5;2m 329[39m: [38;5;2m       89:   inputs pane[39m
     [38;5;2m 330[39m: [38;5;2m       90: ;;[39m
     [38;5;2m 331[39m: [38;5;2m       91: [39m
     [38;5;2m 332[39m: [38;5;2m       92: (*TODO:For hosting a subprocess i should look into using EIO and Ui_loop.step like some of the other libraries built with nottui*)[39m
     [38;5;2m 333[39m: [38;5;2m       93: Ui_loop.run ~quit:vQuit mainUi[39m
     [38;5;2m 334[39m: [38;5;2m       94: (* let my_image=(Notty.I.string Notty.A.empty "\027[32mThis is in green %s\027[0m" ) in *)[39m
     [38;5;2m 335[39m: [38;5;2m       95: (* let my_image =[39m
     [38;5;2m 336[39m: [38;5;2m       96:      Jj_tui.AnsiReverse.Cap.parse_ansi_escape_codes[39m
     [38;5;2m 337[39m: [38;5;2m       97:        "\027[32mThis is in green %s\027[0m "[39m
     [38;5;2m 338[39m: [38;5;2m       98:      |> List.map (fun (x, str) -> Notty.I.string x str)[39m
     [38;5;2m 339[39m: [38;5;2m       99:    ;;[39m
     [38;5;2m 340[39m: [38;5;2m      100: [39m
     [38;5;2m 341[39m: [38;5;2m      101:    Notty_unix.output_image (my_image |> List.hd) *)[39m
     [38;5;2m 342[39m: [38;5;2m      102: [39m
     [38;5;2m 343[39m: [38;5;2m      103: (*[39m
     [38;5;2m 344[39m: [38;5;2m      104: type tree = Tree of string * (unit -> tree list)[39m
     [38;5;2m 345[39m: [38;5;2m      105: [39m
     [38;5;2m 346[39m: [38;5;2m      106: let rec tree_ui (Tree (label, child)) =[39m
     [38;5;2m 347[39m: [38;5;2m      107:   let opened = Lwd.var false in[39m
     [38;5;2m 348[39m: [38;5;2m      108:   let render is_opened =[39m
     [38;5;2m 349[39m: [38;5;2m      109:     let btn_text = if is_opened then "[-] " else "[+] " in[39m
     [38;5;2m 350[39m: [38;5;2m      110:     let btn_action () = Lwd.set opened (not is_opened) in[39m
     [38;5;2m 351[39m: [38;5;2m      111:     let btn = W.button (btn_text ^ label) btn_action in[39m
     [38;5;2m 352[39m: [38;5;2m      112:     let layout node forest =[39m
     [38;5;2m 353[39m: [38;5;2m      113:       Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
     [38;5;2m 354[39m: [38;5;2m      114:     in[39m
     [38;5;2m 355[39m: [38;5;2m      115:     if is_opened [39m
     [38;5;2m 356[39m: [38;5;2m      116:     then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
     [38;5;2m 357[39m: [38;5;2m      117:     else Lwd.pure btn[39m
     [38;5;2m 358[39m: [38;5;2m      118:   in[39m
     [38;5;2m 359[39m: [38;5;2m      119:   Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
     [38;5;2m 360[39m: [38;5;2m      120:   [39m
     [38;5;2m 361[39m: [38;5;2m      121: and forest_ui nodes = [39m
     [38;5;2m 362[39m: [38;5;2m      122:   Lwd_utils.pack Ui.pack_y [39m
     [38;5;2m 363[39m: [38;5;2m      123:     (List.map tree_ui nodes)[39m
     [38;5;2m 364[39m: [38;5;2m      124: ;;[39m
     [38;5;2m 365[39m: [38;5;2m      125: [39m
     [38;5;2m 366[39m: [38;5;2m      126: let rec fake_fs () = [[39m
     [38;5;2m 367[39m: [38;5;2m      127:   Tree ("bin", fake_fs);[39m
     [38;5;2m 368[39m: [38;5;2m      128:   Tree ("home", fake_fs);[39m
     [38;5;2m 369[39m: [38;5;2m      129:   Tree ("usr", fake_fs);[39m
     [38;5;2m 370[39m: [38;5;2m      130: ] in[39m
     [38;5;2m 371[39m: [38;5;2m      131: [39m
     [38;5;2m 372[39m: [38;5;2m      132: Ui_loop.run (forest_ui (fake_fs ()));;[39m
     [38;5;2m 373[39m: [38;5;2m      133: *)[39m
     [38;5;2m 374[39m: [38;5;2mAdded regular file dune-project:[39m
     [38;5;2m 375[39m: [38;5;2m        1: (lang dune 3.9)[39m
     [38;5;2m 376[39m: [38;5;2m        2: [39m
     [38;5;2m 377[39m: [38;5;2m        3: (name jj_tui)[39m
     [38;5;2m 378[39m: [38;5;2m        4: [39m
     [38;5;2m 379[39m: [38;5;2m        5: (generate_opam_files true)[39m
     [38;5;2m 380[39m: [38;5;2m        6: [39m
     [38;5;2m 381[39m: [38;5;2m        7: (source[39m
     [38;5;2m 382[39m: [38;5;2m        8:  (github username/reponame))[39m
     [38;5;2m 383[39m: [38;5;2m        9: [39m
     [38;5;2m 384[39m: [38;5;2m       10: (authors "Author Name")[39m
     [38;5;2m 385[39m: [38;5;2m       11: [39m
     [38;5;2m 386[39m: [38;5;2m       12: (maintainers "Maintainer Name")[39m
     [38;5;2m 387[39m: [38;5;2m       13: [39m
     [38;5;2m 388[39m: [38;5;2m       14: (license LICENSE)[39m
     [38;5;2m 389[39m: [38;5;2m       15: [39m
     [38;5;2m 390[39m: [38;5;2m       16: (documentation https://url/to/documentation)[39m
     [38;5;2m 391[39m: [38;5;2m       17: [39m
     [38;5;2m 392[39m: [38;5;2m       18: (package[39m
     [38;5;2m 393[39m: [38;5;2m       19:  (name jj_tui)[39m
     [38;5;2m 394[39m: [38;5;2m       20:  (synopsis "A short synopsis")[39m
     [38;5;2m 395[39m: [38;5;2m       21:  (description "A longer description")[39m
     [38;5;2m 396[39m: [38;5;2m       22:  (depends ocaml dune)[39m
     [38;5;2m 397[39m: [38;5;2m       23:  (tags[39m
     [38;5;2m 398[39m: [38;5;2m       24:   (topics "to describe" your project)))[39m
     [38;5;2m 399[39m: [38;5;2m       25: [39m
     [38;5;2m 400[39m: [38;5;2m       26: ; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
     [38;5;2m 401[39m: [38;5;2mAdded regular file flake.lock:[39m
     [38;5;2m 402[39m: [38;5;2m        1: {[39m
     [38;5;2m 403[39m: [38;5;2m        2:   "nodes": {[39m
     [38;5;2m 404[39m: [38;5;2m        3:     "nixpkgs": {[39m
     [38;5;2m 405[39m: [38;5;2m        4:       "locked": {[39m
     [38;5;2m 406[39m: [38;5;2m        5:         "lastModified": 1713344939,[39m
     [38;5;2m 407[39m: [38;5;2m        6:         "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
     [38;5;2m 408[39m: [38;5;2m        7:         "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
     [38;5;2m 409[39m: [38;5;2m        8:         "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
     [38;5;2m 410[39m: [38;5;2m        9:         "type": "path"[39m
     [38;5;2m 411[39m: [38;5;2m       10:       },[39m
     [38;5;2m 412[39m: [38;5;2m       11:       "original": {[39m
     [38;5;2m 413[39m: [38;5;2m       12:         "id": "nixpkgs",[39m
     [38;5;2m 414[39m: [38;5;2m       13:         "type": "indirect"[39m
     [38;5;2m 415[39m: [38;5;2m       14:       }[39m
     [38;5;2m 416[39m: [38;5;2m       15:     },[39m
     [38;5;2m 417[39m: [38;5;2m       16:     "root": {[39m
     [38;5;2m 418[39m: [38;5;2m       17:       "inputs": {[39m
     [38;5;2m 419[39m: [38;5;2m       18:         "nixpkgs": "nixpkgs"[39m
     [38;5;2m 420[39m: [38;5;2m       19:       }[39m
     [38;5;2m 421[39m: [38;5;2m       20:     }[39m
     [38;5;2m 422[39m: [38;5;2m       21:   },[39m
     [38;5;2m 423[39m: [38;5;2m       22:   "root": "root",[39m
     [38;5;2m 424[39m: [38;5;2m       23:   "version": 7[39m
     [38;5;2m 425[39m: [38;5;2m       24: }[39m
     [38;5;2m 426[39m: [38;5;2mAdded regular file flake.nix:[39m
     [38;5;2m 427[39m: [38;5;2m        1: {[39m
     [38;5;2m 428[39m: [38;5;2m        2:   description = "Example JavaScript development environment for Zero to Nix";[39m
     [38;5;2m 429[39m: [38;5;2m        3: [39m
     [38;5;2m 430[39m: [38;5;2m        4:   # Flake inputs[39m
     [38;5;2m 431[39m: [38;5;2m        5:   inputs = {[39m
     [38;5;2m 432[39m: [38;5;2m        6: [39m
     [38;5;2m 433[39m: [38;5;2m        7:     # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
     [38;5;2m 434[39m: [38;5;2m        8:     nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
     [38;5;2m 435[39m: [38;5;2m        9: [39m
     [38;5;2m 436[39m: [38;5;2m       10:     # roc={[39m
     [38;5;2m 437[39m: [38;5;2m       11:     #   url="github:roc-lang/roc";[39m
     [38;5;2m 438[39m: [38;5;2m       12:     # inputs.nixpkgs.follows="nixpkgs";[39m
     [38;5;2m 439[39m: [38;5;2m       13: [39m
     [38;5;2m 440[39m: [38;5;2m       14:     # };[39m
     [38;5;2m 441[39m: [38;5;2m       15: [39m
     [38;5;2m 442[39m: [38;5;2m       16:   };[39m
     [38;5;2m 443[39m: [38;5;2m       17:   # Flake outputs[39m
     [38;5;2m 444[39m: [38;5;2m       18:   outputs = { self, nixpkgs, ... }@inputs:[39m
     [38;5;2m 445[39m: [38;5;2m       19:     let[39m
     [38;5;2m 446[39m: [38;5;2m       20:       # Systems supported[39m
     [38;5;2m 447[39m: [38;5;2m       21:       allSystems = [[39m
     [38;5;2m 448[39m: [38;5;2m       22:         "x86_64-linux" # 64-bit Intel/AMD Linux[39m
     [38;5;2m 449[39m: [38;5;2m       23:       ];[39m
     [38;5;2m 450[39m: [38;5;2m       24: [39m
     [38;5;2m 451[39m: [38;5;2m       25:       # Helper to provide system-specific attributes[39m
     [38;5;2m 452[39m: [38;5;2m       26:       forAllSystems = f:[39m
     [38;5;2m 453[39m: [38;5;2m       27:         nixpkgs.lib.genAttrs allSystems (system:[39m
     [38;5;2m 454[39m: [38;5;2m       28:           f {[39m
     [38;5;2m 455[39m: [38;5;2m       29:             pkgs = import nixpkgs { inherit system; };[39m
     [38;5;2m 456[39m: [38;5;2m       30: [39m
     [38;5;2m 457[39m: [38;5;2m       31:           });[39m
     [38;5;2m 458[39m: [38;5;2m       32:     in {[39m
     [38;5;2m 459[39m: [38;5;2m       33:       # Development environment output[39m
     [38;5;2m 460[39m: [38;5;2m       34:       devShells = forAllSystems ({ pkgs }: {[39m
     [38;5;2m 461[39m: [38;5;2m       35:         default =[39m
     [38;5;2m 462[39m: [38;5;2m       36: [39m
     [38;5;2m 463[39m: [38;5;2m       37:           pkgs.mkShell {[39m
     [38;5;2m 464[39m: [38;5;2m       38:             packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
     [38;5;2m 465[39m: [38;5;2m       39:             shellHook = let[39m
     [38;5;2m 466[39m: [38;5;2m       40:               libPath =[39m
     [38;5;2m 467[39m: [38;5;2m       41:                 pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
     [38;5;2m 468[39m: [38;5;2m       42:             in ''[39m
     [38;5;2m 469[39m: [38;5;2m       43:               # yolo[39m
     [38;5;2m 470[39m: [38;5;2m       44:               export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
     [38;5;2m 471[39m: [38;5;2m       45:               export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
     [38;5;2m 472[39m: [38;5;2m       46:             '';[39m
     [38;5;2m 473[39m: [38;5;2m       47:           };[39m
     [38;5;2m 474[39m: [38;5;2m       48: [39m
     [38;5;2m 475[39m: [38;5;2m       49:       });[39m
     [38;5;2m 476[39m: [38;5;2m       50: [39m
     [38;5;2m 477[39m: [38;5;2m       51:     };[39m
     [38;5;2m 478[39m: [38;5;2m       52: }[39m
     [38;5;2m 479[39m: [38;5;2mAdded regular file jj_tui.opam:[39m
     [38;5;2m 480[39m: [38;5;2m        1: # This file is generated by dune, edit dune-project instead[39m
     [38;5;2m 481[39m: [38;5;2m        2: opam-version: "2.0"[39m
     [38;5;2m 482[39m: [38;5;2m        3: synopsis: "A short synopsis"[39m
     [38;5;2m 483[39m: [38;5;2m        4: description: "A longer description"[39m
     [38;5;2m 484[39m: [38;5;2m        5: maintainer: ["Maintainer Name"][39m
     [38;5;2m 485[39m: [38;5;2m        6: authors: ["Author Name"][39m
     [38;5;2m 486[39m: [38;5;2m        7: license: "LICENSE"[39m
     [38;5;2m 487[39m: [38;5;2m        8: tags: ["topics" "to describe" "your" "project"][39m
     [38;5;2m 488[39m: [38;5;2m        9: homepage: "https://github.com/username/reponame"[39m
     [38;5;2m 489[39m: [38;5;2m       10: doc: "https://url/to/documentation"[39m
     [38;5;2m 490[39m: [38;5;2m       11: bug-reports: "https://github.com/username/reponame/issues"[39m
     [38;5;2m 491[39m: [38;5;2m       12: depends: [[39m
     [38;5;2m 492[39m: [38;5;2m       13:   "ocaml"[39m
     [38;5;2m 493[39m: [38;5;2m       14:   "dune" {>= "3.9"}[39m
     [38;5;2m 494[39m: [38;5;2m       15:   "odoc" {with-doc}[39m
     [38;5;2m 495[39m: [38;5;2m       16: ][39m
     [38;5;2m 496[39m: [38;5;2m       17: build: [[39m
     [38;5;2m 497[39m: [38;5;2m       18:   ["dune" "subst"] {dev}[39m
     [38;5;2m 498[39m: [38;5;2m       19:   [[39m
     [38;5;2m 499[39m: [38;5;2m       20:     "dune"[39m
     [38;5;2m 500[39m: [38;5;2m       21:     "build"[39m
     [38;5;2m 501[39m: [38;5;2m       22:     "-p"[39m
     [38;5;2m 502[39m: [38;5;2m       23:     name[39m
     [38;5;2m 503[39m: [38;5;2m       24:     "-j"[39m
     [38;5;2m 504[39m: [38;5;2m       25:     jobs[39m
     [38;5;2m 505[39m: [38;5;2m       26:     "@install"[39m
     [38;5;2m 506[39m: [38;5;2m       27:     "@runtest" {with-test}[39m
     [38;5;2m 507[39m: [38;5;2m       28:     "@doc" {with-doc}[39m
     [38;5;2m 508[39m: [38;5;2m       29:   ][39m
     [38;5;2m 509[39m: [38;5;2m       30: ][39m
     [38;5;2m 510[39m: [38;5;2m       31: dev-repo: "git+https://github.com/username/reponame.git"[39m
     [38;5;2m 511[39m: [38;5;2mAdded regular file lib/ansiReverse.ml:[39m
     [38;5;2m 512[39m: [38;5;2m        1: open Notty[39m
     [38;5;2m 513[39m: [38;5;2m        2: [39m
     [38;5;2m 514[39m: [38;5;2m        3: type op = Buffer.t -> unit[39m
     [38;5;2m 515[39m: [38;5;2m        4: [39m
     [38;5;2m 516[39m: [38;5;2m        5: (* let ( & ) op1 op2 buf =[39m
     [38;5;2m 517[39m: [38;5;2m        6:      op1 buf;[39m
     [38;5;2m 518[39m: [38;5;2m        7:      op2 buf[39m
     [38;5;2m 519[39m: [38;5;2m        8: [39m
     [38;5;2m 520[39m: [38;5;2m        9: [39m
     [38;5;2m 521[39m: [38;5;2m       10:    let ( <| ), ( <. ), ( <! ) = Buffer.(add_string, add_char, add_decimal) *)[39m
     [38;5;2m 522[39m: [38;5;2m       11: let invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m 523[39m: [38;5;2m       12: [39m
     [38;5;2m 524[39m: [38;5;2m       13: let rgb ~r ~g ~b =[39m
     [38;5;2m 525[39m: [38;5;2m       14:   if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m 526[39m: [38;5;2m       15:     invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m 527[39m: [38;5;2m       16:   else 0x01000000 lor ((r * 36) + (g * 6) + b + 16)[39m
     [38;5;2m 528[39m: [38;5;2m       17: [39m
     [38;5;2m 529[39m: [38;5;2m       18: let gray level =[39m
     [38;5;2m 530[39m: [38;5;2m       19:   if level < 0 || level > 23 then[39m
     [38;5;2m 531[39m: [38;5;2m       20:     invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m 532[39m: [38;5;2m       21:   else 0x01000000 lor (level + 232)[39m
     [38;5;2m 533[39m: [38;5;2m       22: [39m
     [38;5;2m 534[39m: [38;5;2m       23: let rgb_888 ~r ~g ~b =[39m
     [38;5;2m 535[39m: [38;5;2m       24:   if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m 536[39m: [38;5;2m       25:     invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m 537[39m: [38;5;2m       26:   else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m 538[39m: [38;5;2m       27: [39m
     [38;5;2m 539[39m: [38;5;2m       28: let sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m 540[39m: [38;5;2m       29: [39m
     [38;5;2m 541[39m: [38;5;2m       30: let attr_of_ints fg bg st =[39m
     [38;5;2m 542[39m: [38;5;2m       31:   A.fg @@ A.unsafe_color_of_int fg[39m
     [38;5;2m 543[39m: [38;5;2m       32:   |> A.( ++ ) (A.bg @@ A.unsafe_color_of_int bg)[39m
     [38;5;2m 544[39m: [38;5;2m       33:   |> A.( ++ ) (A.st @@ A.unsafe_style_of_int st)[39m
     [38;5;2m 545[39m: [38;5;2m       34: [39m
     [38;5;2m 546[39m: [38;5;2m       35: let fg_int i = A.fg @@ A.unsafe_color_of_int i[39m
     [38;5;2m 547[39m: [38;5;2m       36: let bg_int i = A.bg @@ A.unsafe_color_of_int i[39m
     [38;5;2m 548[39m: [38;5;2m       37: [39m
     [38;5;2m 549[39m: [38;5;2m       38: let print_image img =[39m
     [38;5;2m 550[39m: [38;5;2m       39:   print_endline "image:";[39m
     [38;5;2m 551[39m: [38;5;2m       40:   img |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m 552[39m: [38;5;2m       41:   print_endline (Format.flush_str_formatter () |> String.escaped)[39m
     [38;5;2m 553[39m: [38;5;2m       42: [39m
     [38;5;2m 554[39m: [38;5;2m       43: let parse_ansi_escape_codes (input : string) : (A.t * string) list =[39m
     [38;5;2m 555[39m: [38;5;2m       44:   let len = String.length input in[39m
     [38;5;2m 556[39m: [38;5;2m       45:   let rec parse_codes acc i =[39m
     [38;5;2m 557[39m: [38;5;2m       46:     if i >= len then List.rev acc[39m
     [38;5;2m 558[39m: [38;5;2m       47:     else[39m
     [38;5;2m 559[39m: [38;5;2m       48:       let attr, j =[39m
     [38;5;2m 560[39m: [38;5;2m       49:         if i + 1 < len && input.[i] = '\027' && input.[i + 1] = '[' then ([39m
     [38;5;2m 561[39m: [38;5;2m       50:           let params = ref [] in[39m
     [38;5;2m 562[39m: [38;5;2m       51:           let j = ref (i + 2) in[39m
     [38;5;2m 563[39m: [38;5;2m       52:           while !j < len && input.[!j] <> 'm' do[39m
     [38;5;2m 564[39m: [38;5;2m       53:             let start = !j in[39m
     [38;5;2m 565[39m: [38;5;2m       54:             while !j < len && input.[!j] <> ';' && input.[!j] <> 'm' do[39m
     [38;5;2m 566[39m: [38;5;2m       55:               incr j[39m
     [38;5;2m 567[39m: [38;5;2m       56:             done;[39m
     [38;5;2m 568[39m: [38;5;2m       57:             let param = String.sub input start (!j - start) in[39m
     [38;5;2m 569[39m: [38;5;2m       58:             params := int_of_string param :: !params;[39m
     [38;5;2m 570[39m: [38;5;2m       59:             if !j < len && input.[!j] = ';' then incr j[39m
     [38;5;2m 571[39m: [38;5;2m       60:           done;[39m
     [38;5;2m 572[39m: [38;5;2m       61:           if !j < len && input.[!j] = 'm' then[39m
     [38;5;2m 573[39m: [38;5;2m       62:             let params = List.rev !params in[39m
     [38;5;2m 574[39m: [38;5;2m       63:             let attr =[39m
     [38;5;2m 575[39m: [38;5;2m       64:               match params with[39m
     [38;5;2m 576[39m: [38;5;2m       65:               | [] -> A.empty[39m
     [38;5;2m 577[39m: [38;5;2m       66:               | 0 :: _ -> A.empty[39m
     [38;5;2m 578[39m: [38;5;2m       67:               | 1 :: _ -> A.st A.bold[39m
     [38;5;2m 579[39m: [38;5;2m       68:               | 2 :: _ -> A.st A.italic[39m
     [38;5;2m 580[39m: [38;5;2m       69:               | 4 :: _ -> A.st A.underline[39m
     [38;5;2m 581[39m: [38;5;2m       70:               | 5 :: _ -> A.st A.blink[39m
     [38;5;2m 582[39m: [38;5;2m       71:               | 7 :: _ -> A.st A.reverse[39m
     [38;5;2m 583[39m: [38;5;2m       72:               | 30 :: _ -> A.fg A.black[39m
     [38;5;2m 584[39m: [38;5;2m       73:               | 31 :: _ -> A.fg A.red[39m
     [38;5;2m 585[39m: [38;5;2m       74:               | 32 :: _ -> A.fg A.green[39m
     [38;5;2m 586[39m: [38;5;2m       75:               | 33 :: _ -> A.fg A.yellow[39m
     [38;5;2m 587[39m: [38;5;2m       76:               | 34 :: _ -> A.fg A.blue[39m
     [38;5;2m 588[39m: [38;5;2m       77:               | 35 :: _ -> A.fg A.magenta[39m
     [38;5;2m 589[39m: [38;5;2m       78:               | 36 :: _ -> A.fg A.cyan[39m
     [38;5;2m 590[39m: [38;5;2m       79:               | 37 :: _ -> A.fg A.white[39m
     [38;5;2m 591[39m: [38;5;2m       80:               | 38 :: 5 :: color :: _ ->[39m
     [38;5;2m 592[39m: [38;5;2m       81:                   A.fg (A.unsafe_color_of_int (0x01000000 lor color))[39m
     [38;5;2m 593[39m: [38;5;2m       82:               | 40 :: _ -> A.bg A.black[39m
     [38;5;2m 594[39m: [38;5;2m       83:               | 41 :: _ -> A.bg A.red[39m
     [38;5;2m 595[39m: [38;5;2m       84:               | 42 :: _ -> A.bg A.green[39m
     [38;5;2m 596[39m: [38;5;2m       85:               | 43 :: _ -> A.bg A.yellow[39m
     [38;5;2m 597[39m: [38;5;2m       86:               | 44 :: _ -> A.bg A.blue[39m
     [38;5;2m 598[39m: [38;5;2m       87:               | 45 :: _ -> A.bg A.magenta[39m
     [38;5;2m 599[39m: [38;5;2m       88:               | 46 :: _ -> A.bg A.cyan[39m
     [38;5;2m 600[39m: [38;5;2m       89:               | 47 :: _ -> A.bg A.white[39m
     [38;5;2m 601[39m: [38;5;2m       90:               | 48 :: 5 :: color :: _ ->[39m
     [38;5;2m 602[39m: [38;5;2m       91:                   A.bg (A.unsafe_color_of_int (0x02000000 lor color))[39m
     [38;5;2m 603[39m: [38;5;2m       92:               | _ -> A.empty[39m
     [38;5;2m 604[39m: [38;5;2m       93:             in[39m
     [38;5;2m 605[39m: [38;5;2m       94:             (attr, !j + 1)[39m
     [38;5;2m 606[39m: [38;5;2m       95:           else (A.empty, i))[39m
     [38;5;2m 607[39m: [38;5;2m       96:         else (A.empty, i)[39m
     [38;5;2m 608[39m: [38;5;2m       97:       in[39m
     [38;5;2m 609[39m: [38;5;2m       98:       let k = ref j in[39m
     [38;5;2m 610[39m: [38;5;2m       99:       while !k < len && input.[!k] <> '\027' do[39m
     [38;5;2m 611[39m: [38;5;2m      100:         incr k[39m
     [38;5;2m 612[39m: [38;5;2m      101:       done;[39m
     [38;5;2m 613[39m: [38;5;2m      102:       let substring = String.sub input j (!k - j) in[39m
     [38;5;2m 614[39m: [38;5;2m      103:       parse_codes ((attr, substring) :: acc) !k[39m
     [38;5;2m 615[39m: [38;5;2m      104:   in[39m
     [38;5;2m 616[39m: [38;5;2m      105:   parse_codes [] 0[39m
     [38;5;2m 617[39m: [38;5;2m      106: [39m
     [38;5;2m 618[39m: [38;5;2m      107: (** Like fold left except we run the first element through init to get the state*)[39m
     [38;5;2m 619[39m: [38;5;2m      108: let fold_left_pre (f : 'acc -> 'a -> 'acc) (init : 'a -> 'acc) (input : 'a list)[39m
     [38;5;2m 620[39m: [38;5;2m      109:     =[39m
     [38;5;2m 621[39m: [38;5;2m      110:   match input with[39m
     [38;5;2m 622[39m: [38;5;2m      111:   | [] -> invalid_arg "empty list"[39m
     [38;5;2m 623[39m: [38;5;2m      112:   | x :: xs ->[39m
     [38;5;2m 624[39m: [38;5;2m      113:       let state = init x in[39m
     [38;5;2m 625[39m: [38;5;2m      114:       xs |> List.fold_left f state[39m
     [38;5;2m 626[39m: [38;5;2m      115: [39m
     [38;5;2m 627[39m: [38;5;2m      116: let string_to_image str =[39m
     [38;5;2m 628[39m: [38;5;2m      117:   let coded_strs = parse_ansi_escape_codes str in[39m
     [38;5;2m 629[39m: [38;5;2m      118:   let locate_newlines codes =[39m
     [38;5;2m 630[39m: [38;5;2m      119:     codes[39m
     [38;5;2m 631[39m: [38;5;2m      120:     |> List.concat_map (fun (attr, str) ->[39m
     [38;5;2m 632[39m: [38;5;2m      121:            str |> String.split_on_char '\n'[39m
     [38;5;2m 633[39m: [38;5;2m      122:            |> List.map (fun x -> `Image (I.string attr x))[39m
     [38;5;2m 634[39m: [38;5;2m      123:            |> Base.List.intersperse ~sep:`Newline)[39m
     [38;5;2m 635[39m: [38;5;2m      124:   in[39m
     [38;5;2m 636[39m: [38;5;2m      125:   let newline_seperated = locate_newlines coded_strs in[39m
     [38;5;2m 637[39m: [38;5;2m      126:   (* Printf.printf "len:%d" (List.length newline_seperated); *)[39m
     [38;5;2m 638[39m: [38;5;2m      127:   let lines =[39m
     [38;5;2m 639[39m: [38;5;2m      128:     let open I in[39m
     [38;5;2m 640[39m: [38;5;2m      129:     (* newline_seperated[39m
     [38;5;2m 641[39m: [38;5;2m      130:        |> List.iter (fun x -> match x with `Imarge i -> print_image i | _ -> ()); *)[39m
     [38;5;2m 642[39m: [38;5;2m      131:     newline_seperated[39m
     [38;5;2m 643[39m: [38;5;2m      132:     |> Base.List.fold ~init:([], I.empty) ~f:(fun (images, image) x ->[39m
     [38;5;2m 644[39m: [38;5;2m      133:            match x with[39m
     [38;5;2m 645[39m: [38;5;2m      134:            | `Newline -> (image :: images, I.empty)[39m
     [38;5;2m 646[39m: [38;5;2m      135:            | `Image nextImage -> (images, image <|> nextImage))[39m
     [38;5;2m 647[39m: [38;5;2m      136:     |> fst[39m
     [38;5;2m 648[39m: [38;5;2m      137:     (* |> List.map (fun x ->[39m
     [38;5;2m 649[39m: [38;5;2m      138:            x |> print_image;[39m
     [38;5;2m 650[39m: [38;5;2m      139:            x) *)[39m
     [38;5;2m 651[39m: [38;5;2m      140:     |> Base.List.reduce_exn ~f:(fun bottom top -> top <-> bottom)[39m
     [38;5;2m 652[39m: [38;5;2m      141:   in[39m
     [38;5;2m 653[39m: [38;5;2m      142:   let image =[39m
     [38;5;2m 654[39m: [38;5;2m      143:     lines[39m
     [38;5;2m 655[39m: [38;5;2m      144:     (* |> fold_left_pre[39m
     [38;5;2m 656[39m: [38;5;2m      145:          (fun image (attr, str) ->[39m
     [38;5;2m 657[39m: [38;5;2m      146:            let parts = str |> String.split_on_char '\n' in[39m
     [38;5;2m 658[39m: [38;5;2m      147:            let nextImage =[39m
     [38;5;2m 659[39m: [38;5;2m      148:              parts[39m
     [38;5;2m 660[39m: [38;5;2m      149:              |> fold_left_pre[39m
     [38;5;2m 661[39m: [38;5;2m      150:                   (fun image str -> I.( <-> ) image (I.string attr str))[39m
     [38;5;2m 662[39m: [38;5;2m      151:                   (I.string attr)[39m
     [38;5;2m 663[39m: [38;5;2m      152:            in[39m
     [38;5;2m 664[39m: [38;5;2m      153:            I.( <|> ) image nextImage)[39m
     [38;5;2m 665[39m: [38;5;2m      154:          (fun (attr, str) -> I.string attr str) *)[39m
     [38;5;2m 666[39m: [38;5;2m      155:   in[39m
     [38;5;2m 667[39m: [38;5;2m      156:   image[39m
     [38;5;2m 668[39m: [38;5;2m      157: [39m
     [38;5;2m 669[39m: [38;5;2m      158: let escaped_string ?(attr = A.empty) str =[39m
     [38;5;2m 670[39m: [38;5;2m      159:   let control_character_index str i =[39m
     [38;5;2m 671[39m: [38;5;2m      160:     let len = String.length str in[39m
     [38;5;2m 672[39m: [38;5;2m      161:     let i = ref i in[39m
     [38;5;2m 673[39m: [38;5;2m      162:     while[39m
     [38;5;2m 674[39m: [38;5;2m      163:       let i = !i in[39m
     [38;5;2m 675[39m: [38;5;2m      164:       i < len && str.[i] >= ' '[39m
     [38;5;2m 676[39m: [38;5;2m      165:     do[39m
     [38;5;2m 677[39m: [38;5;2m      166:       incr i[39m
     [38;5;2m 678[39m: [38;5;2m      167:     done;[39m
     [38;5;2m 679[39m: [38;5;2m      168:     if !i = len then raise Not_found;[39m
     [38;5;2m 680[39m: [38;5;2m      169:     !i[39m
     [38;5;2m 681[39m: [38;5;2m      170:   in[39m
     [38;5;2m 682[39m: [38;5;2m      171:   let rec split str i =[39m
     [38;5;2m 683[39m: [38;5;2m      172:     match control_character_index str i with[39m
     [38;5;2m 684[39m: [38;5;2m      173:     | j ->[39m
     [38;5;2m 685[39m: [38;5;2m      174:         let img = I.string attr (String.sub str i (j - i)) in[39m
     [38;5;2m 686[39m: [38;5;2m      175:         img :: split str (j + 1)[39m
     [38;5;2m 687[39m: [38;5;2m      176:     | exception Not_found ->[39m
     [38;5;2m 688[39m: [38;5;2m      177:         [[39m
     [38;5;2m 689[39m: [38;5;2m      178:           I.string attr[39m
     [38;5;2m 690[39m: [38;5;2m      179:             (if i = 0 then str else String.sub str i (String.length str - i));[39m
     [38;5;2m 691[39m: [38;5;2m      180:         ][39m
     [38;5;2m 692[39m: [38;5;2m      181:   in[39m
     [38;5;2m 693[39m: [38;5;2m      182:   I.vcat (split str 0)[39m
     [38;5;2m 694[39m: [38;5;2m      183: [39m
     [38;5;2m 695[39m: [38;5;2m      184: (* let colored_string s =[39m
     [38;5;2m 696[39m: [38;5;2m      185:    s |> parse_ansi_escape_codes[39m
     [38;5;2m 697[39m: [38;5;2m      186:    |> List.map (fun (x, str) -> escaped_string ~attr:x str)[39m
     [38;5;2m 698[39m: [38;5;2m      187:    |> I.vcat *)[39m
     [38;5;2m 699[39m: [38;5;2m      188: let colored_string s = s |> string_to_image[39m
     [38;5;2m 700[39m: [38;5;2m      189: [39m
     [38;5;2m 701[39m: [38;5;2m      190: let%expect_test "string_to_image" =[39m
     [38;5;2m 702[39m: [38;5;2m      191:   string_to_image[39m
     [38;5;2m 703[39m: [38;5;2m      192:     "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m 704[39m: [38;5;2m      193:   |> print_image;[39m
     [38;5;2m 705[39m: [38;5;2m      194:   [%expect.unreachable][39m
     [38;5;2m 706[39m: [38;5;2m      195: [@@expect.uncaught_exn[39m
     [38;5;2m 707[39m: [38;5;2m      196:   {|[39m
     [38;5;2m 708[39m: [38;5;2m      197:   (* CR expect_test_collector: This test expectation appears to contain a backtrace.[39m
     [38;5;2m 709[39m: [38;5;2m      198:      This is strongly discouraged as backtraces are fragile.[39m
     [38;5;2m 710[39m: [38;5;2m      199:      Please change this test to not include a backtrace. *)[39m
     [38;5;2m 711[39m: [38;5;2m      200: [39m
     [38;5;2m 712[39m: [38;5;2m      201:   (Invalid_argument List.reduce_exn)[39m
     [38;5;2m 713[39m: [38;5;2m      202:   Raised at Stdlib.invalid_arg in file "stdlib.ml", line 30, characters 20-45[39m
     [38;5;2m 714[39m: [38;5;2m      203:   Called from Jj_tui__AnsiReverse.(fun) in file "lib/ansiReverse.ml", line 197, characters 2-88[39m
     [38;5;2m 715[39m: [38;5;2m      204:   Called from Expect_test_collector.Make.Instance_io.exec in file "collector/expect_test_collector.ml", line 234, characters 12-19[39m
     [38;5;2m 716[39m: [38;5;2m      205: [39m
     [38;5;2m 717[39m: [38;5;2m      206:   Trailing output[39m
     [38;5;2m 718[39m: [38;5;2m      207:   ---------------[39m
     [38;5;2m 719[39m: [38;5;2m      208:   params 32[39m
     [38;5;2m 720[39m: [38;5;2m      209:   params 0[39m
     [38;5;2m 721[39m: [38;5;2m      210:   params 30[39m
     [38;5;2m 722[39m: [38;5;2m      211:   params 0[39m
     [38;5;2m 723[39m: [38;5;2m      212:   len:4 |}][39m
     [38;5;2m 724[39m: [38;5;2m      213: [39m
     [38;5;2m 725[39m: [38;5;2m      214: let%expect_test "hello" =[39m
     [38;5;2m 726[39m: [38;5;2m      215:   let outBuf = Buffer.create 100 in[39m
     [38;5;2m 727[39m: [38;5;2m      216:   let _fmt = Format.formatter_of_buffer outBuf in[39m
     [38;5;2m 728[39m: [38;5;2m      217:   let res =[39m
     [38;5;2m 729[39m: [38;5;2m      218:     parse_ansi_escape_codes[39m
     [38;5;2m 730[39m: [38;5;2m      219:       "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m 731[39m: [38;5;2m      220:   in[39m
     [38;5;2m 732[39m: [38;5;2m      221:   res[39m
     [38;5;2m 733[39m: [38;5;2m      222:   |> List.iter (fun (x, str) ->[39m
     [38;5;2m 734[39m: [38;5;2m      223:          Notty.I.string x str |> Notty.Render.pp_image @@ Format.str_formatter);[39m
     [38;5;2m 735[39m: [38;5;2m      224:   print_endline (Format.flush_str_formatter () |> String.escaped);[39m
     [38;5;2m 736[39m: [38;5;2m      225:   print_endline (Buffer.contents outBuf);[39m
     [38;5;2m 737[39m: [38;5;2m      226:   [%expect[39m
     [38;5;2m 738[39m: [38;5;2m      227:     {|[39m
     [38;5;2m 739[39m: [38;5;2m      228:       params 32[39m
     [38;5;2m 740[39m: [38;5;2m      229:       params 0[39m
     [38;5;2m 741[39m: [38;5;2m      230:       params 30[39m
     [38;5;2m 742[39m: [38;5;2m      231:       params 0[39m
     [38;5;2m 743[39m: [38;5;2m      232:       \027[0m\027[K\027[0;32mThis is in green %s\027[0m\027[0m\027[K\027[0m \027[0m\027[0m\027[K\027[0;30mThisisnotGreen\027[0m\027[0m\027[K\027[0m|}][39m
     [38;5;2m 744[39m: [38;5;2m      233: [39m
     [38;5;2m 745[39m: [38;5;2m      234: let jjtest =[39m
     [38;5;2m 746[39m: [38;5;2m      235:   {|[39m
     [38;5;2m 747[39m: [38;5;2m      236:   @  ␛[1m␛[38;5;13mm␛[38;5;8mtxzlotn␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 12:19:37␛[39m ␛[38;5;12mb␛[38;5;8mb87f772␛[39m␛[0m[39m
     [38;5;2m 748[39m: [38;5;2m      237:   │  ␛[1m␛[38;5;3m(no description set)␛[39m␛[0m[39m
     [38;5;2m 749[39m: [38;5;2m      238: |}[39m
     [38;5;2m 750[39m: [38;5;2m      239: [39m
     [38;5;2m 751[39m: [38;5;2m      240: let%expect_test "jj_test" =[39m
     [38;5;2m 752[39m: [38;5;2m      241:   jjtest |> string_to_image |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m 753[39m: [38;5;2m      242:   let res = Format.flush_str_formatter () in[39m
     [38;5;2m 754[39m: [38;5;2m      243:   print_endline "====== input=====";[39m
     [38;5;2m 755[39m: [38;5;2m      244:   print_endline (jjtest |> String.escaped);[39m
     [38;5;2m 756[39m: [38;5;2m      245:   print_endline "====== output escaped=====";[39m
     [38;5;2m 757[39m: [38;5;2m      246:   print_endline (res |> String.escaped);[39m
     [38;5;2m 758[39m: [38;5;2m      247:   print_endline "=====output====";[39m
     [38;5;2m 759[39m: [38;5;2m      248:   print_endline res;[39m
     [38;5;2m 760[39m: [38;5;2m      249:   [%expect[39m
     [38;5;2m 761[39m: [38;5;2m      250:     {|[39m
     [38;5;2m 762[39m: [38;5;2m      251:       params 1[39m
     [38;5;2m 763[39m: [38;5;2m      252:       params 38;5;13[39m
     [38;5;2m 764[39m: [38;5;2m      253:       nfg ␛[0m<␛[0;95mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 765[39m: [38;5;2m      254:       params 38;5;8[39m
     [38;5;2m 766[39m: [38;5;2m      255:       nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 767[39m: [38;5;2m      256:       params 39[39m
     [38;5;2m 768[39m: [38;5;2m      257:       params 38;5;3[39m
     [38;5;2m 769[39m: [38;5;2m      258:       nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 770[39m: [38;5;2m      259:       params 39[39m
     [38;5;2m 771[39m: [38;5;2m      260:       params 38;5;14[39m
     [38;5;2m 772[39m: [38;5;2m      261:       nfg ␛[0m<␛[0;96mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 773[39m: [38;5;2m      262:       params 39[39m
     [38;5;2m 774[39m: [38;5;2m      263:       params 38;5;12[39m
     [38;5;2m 775[39m: [38;5;2m      264:       nfg ␛[0m<␛[0;94mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 776[39m: [38;5;2m      265:       params 38;5;8[39m
     [38;5;2m 777[39m: [38;5;2m      266:       nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 778[39m: [38;5;2m      267:       params 39[39m
     [38;5;2m 779[39m: [38;5;2m      268:       params 0[39m
     [38;5;2m 780[39m: [38;5;2m      269:       params 1[39m
     [38;5;2m 781[39m: [38;5;2m      270:       params 38;5;3[39m
     [38;5;2m 782[39m: [38;5;2m      271:       nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m 783[39m: [38;5;2m      272:       params 39[39m
     [38;5;2m 784[39m: [38;5;2m      273:       params 0[39m
     [38;5;2m 785[39m: [38;5;2m      274:       len:23image:[39m
     [38;5;2m 786[39m: [38;5;2m      275:       \027[0m  \226\148\130  \027[0m\027[K\027[0;33m(no description set)\027[0m[39m
     [38;5;2m 787[39m: [38;5;2m      276:       image:[39m
     [38;5;2m 788[39m: [38;5;2m      277:       \027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m[39m
     [38;5;2m 789[39m: [38;5;2m      278:       image:[39m
     [38;5;2m 790[39m: [38;5;2m      279:       \027[0m\027[K\027[0m[39m
     [38;5;2m 791[39m: [38;5;2m      280:       ====== input=====[39m
     [38;5;2m 792[39m: [38;5;2m      281:       \n  @  \027[1m\027[38;5;13mm\027[38;5;8mtxzlotn\027[39m \027[38;5;3meli.jambu@gmail.com\027[39m \027[38;5;14m2024-05-08 12:19:37\027[39m \027[38;5;12mb\027[38;5;8mb87f772\027[39m\027[0m\n  \226\148\130  \027[1m\027[38;5;3m(no description set)\027[39m\027[0m\n[39m
     [38;5;2m 793[39m: [38;5;2m      282:       ====== output escaped=====[39m
     [38;5;2m 794[39m: [38;5;2m      283:       \027[0m\027[K\027[0m\n\027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m\n\027[0m  \226\148\130  \027[0;33m(no description set)\027[0m\027[K\027[0m                                     \027[0m[39m
     [38;5;2m 795[39m: [38;5;2m      284:       =====output====[39m
     [38;5;2m 796[39m: [38;5;2m      285:       ␛[0m␛[K␛[0m[39m
     [38;5;2m 797[39m: [38;5;2m      286:       ␛[0m  @  ␛[0;95mm␛[0;90mtxzlotn␛[0m ␛[0;33meli.jambu@gmail.com␛[0m ␛[0;96m2024-05-08 12:19:37␛[0m ␛[0;94mb␛[0m␛[K␛[0;90mb87f772␛[0m[39m
     [38;5;2m 798[39m: [38;5;2m      287:       ␛[0m  │  ␛[0;33m(no description set)␛[0m␛[K␛[0m                                     ␛[0m|}][39m
     [38;5;2m 799[39m: [38;5;2m      288: [39m
     [38;5;2m 800[39m: [38;5;2m      289: (* let ansi =[39m
     [38;5;2m 801[39m: [38;5;2m      290:    {[39m
     [38;5;2m 802[39m: [38;5;2m      291:      skip =[39m
     [38;5;2m 803[39m: [38;5;2m      292:        (fun (b : Buffer.t) ->[39m
     [38;5;2m 804[39m: [38;5;2m      293:          let n = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 805[39m: [38;5;2m      294:          Buffer.clear b;[39m
     [38;5;2m 806[39m: [38;5;2m      295:          n);[39m
     [38;5;2m 807[39m: [38;5;2m      296:      newline = (fun _ -> ());[39m
     [38;5;2m 808[39m: [38;5;2m      297:      altscr =[39m
     [38;5;2m 809[39m: [38;5;2m      298:        (fun b ->[39m
     [38;5;2m 810[39m: [38;5;2m      299:          Buffer.clear b;[39m
     [38;5;2m 811[39m: [38;5;2m      300:          String.equal (Buffer.contents b) "\x1b[?1049h");[39m
     [38;5;2m 812[39m: [38;5;2m      301:      cursat =[39m
     [38;5;2m 813[39m: [38;5;2m      302:        (fun b ->[39m
     [38;5;2m 814[39m: [38;5;2m      303:          let h = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 815[39m: [38;5;2m      304:          Buffer.clear b;[39m
     [38;5;2m 816[39m: [38;5;2m      305:          Buffer.clear b;[39m
     [38;5;2m 817[39m: [38;5;2m      306:          (* skip ';' *)[39m
     [38;5;2m 818[39m: [38;5;2m      307:          let w = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 819[39m: [38;5;2m      308:          Buffer.clear b;[39m
     [38;5;2m 820[39m: [38;5;2m      309:          (w - 1, h - 1));[39m
     [38;5;2m 821[39m: [38;5;2m      310:      cubcuf =[39m
     [38;5;2m 822[39m: [38;5;2m      311:        (fun b ->[39m
     [38;5;2m 823[39m: [38;5;2m      312:          let x = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 824[39m: [38;5;2m      313:          Buffer.clear b;[39m
     [38;5;2m 825[39m: [38;5;2m      314:          if Buffer.nth b 0 = 'D' then -x else x);[39m
     [38;5;2m 826[39m: [38;5;2m      315:      cuucud =[39m
     [38;5;2m 827[39m: [38;5;2m      316:        (fun b ->[39m
     [38;5;2m 828[39m: [38;5;2m      317:          let y = int_of_string (Buffer.contents b) in[39m
     [38;5;2m 829[39m: [38;5;2m      318:          Buffer.clear b;[39m
     [38;5;2m 830[39m: [38;5;2m      319:          if Buffer.nth b 0 = 'A' then -y else y);[39m
     [38;5;2m 831[39m: [38;5;2m      320:      cr = (fun _ -> ());[39m
     [38;5;2m 832[39m: [38;5;2m      321:      clreol = (fun _ -> ());[39m
     [38;5;2m 833[39m: [38;5;2m      322:      cursvis =[39m
     [38;5;2m 834[39m: [38;5;2m      323:        (fun b ->[39m
     [38;5;2m 835[39m: [38;5;2m      324:          Buffer.clear b;[39m
     [38;5;2m 836[39m: [38;5;2m      325:          String.equal (Buffer.contents b) "\x1b[34h\x1b[?25h");[39m
     [38;5;2m 837[39m: [38;5;2m      326:      mouse =[39m
     [38;5;2m 838[39m: [38;5;2m      327:        (fun b ->[39m
     [38;5;2m 839[39m: [38;5;2m      328:          Buffer.clear b;[39m
     [38;5;2m 840[39m: [38;5;2m      329:          String.equal (Buffer.contents b) "\x1b[?1000;1002;1005;1015;1006h");[39m
     [38;5;2m 841[39m: [38;5;2m      330:      bpaste =[39m
     [38;5;2m 842[39m: [38;5;2m      331:        (fun b ->[39m
     [38;5;2m 843[39m: [38;5;2m      332:          Buffer.clear b;[39m
     [38;5;2m 844[39m: [38;5;2m      333:          String.equal (Buffer.contents b) "\x1b[?2004h");[39m
     [38;5;2m 845[39m: [38;5;2m      334:      sgr;[39m
     [38;5;2m 846[39m: [38;5;2m      335:    } *)[39m
     [38;5;2m 847[39m: [38;5;2m      336: (*[39m
     [38;5;2m 848[39m: [38;5;2m      337:      let no0 _ = ()[39m
     [38;5;2m 849[39m: [38;5;2m      338:      and no1 _ _ = ()[39m
     [38;5;2m 850[39m: [38;5;2m      339:      and no2 _ _ _ = ()[39m
     [38;5;2m 851[39m: [38;5;2m      340: [39m
     [38;5;2m 852[39m: [38;5;2m      341:      let dumb =[39m
     [38;5;2m 853[39m: [38;5;2m      342:        {[39m
     [38;5;2m 854[39m: [38;5;2m      343:          skip = (fun b -> String.length (Buffer.contents b));[39m
     [38;5;2m 855[39m: [38;5;2m      344:          newline = (fun _ -> ());[39m
     [38;5;2m 856[39m: [38;5;2m      345:          altscr = no1;[39m
     [38;5;2m 857[39m: [38;5;2m      346:          cursat = (fun _ -> (0, 0));[39m
     [38;5;2m 858[39m: [38;5;2m      347:          cubcuf = (fun _ -> 0);[39m
     [38;5;2m 859[39m: [38;5;2m      348:          cuucud = (fun _ -> 0);[39m
     [38;5;2m 860[39m: [38;5;2m      349:          cr = no0;[39m
     [38;5;2m 861[39m: [38;5;2m      350:          clreol = no0;[39m
     [38;5;2m 862[39m: [38;5;2m      351:          cursvis = (fun _ -> false);[39m
     [38;5;2m 863[39m: [38;5;2m      352:          sgr = (fun _ -> A.empty);[39m
     [38;5;2m 864[39m: [38;5;2m      353:          mouse = (fun _ -> false);[39m
     [38;5;2m 865[39m: [38;5;2m      354:          bpaste = (fun _ -> false);[39m
     [38;5;2m 866[39m: [38;5;2m      355:        } *)[39m
     [38;5;2m 867[39m: [38;5;2m      356: (*[39m
     [38;5;2m 868[39m: [38;5;2m      357:      let erase cap buf = Buffer.clear buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m 869[39m: [38;5;2m      358: [39m
     [38;5;2m 870[39m: [38;5;2m      359:      let cursat0 cap b =[39m
     [38;5;2m 871[39m: [38;5;2m      360:        let w, h = cap.cursat b in[39m
     [38;5;2m 872[39m: [38;5;2m      361:        (max 0 (w - 1), max 0 (h - 1)) *)[39m
     [38;5;2m 873[39m: [38;5;2mAdded regular file lib/dune:[39m
     [38;5;2m 874[39m: [38;5;2m        1: (library[39m
     [38;5;2m 875[39m: [38;5;2m        2:  (name jj_tui)[39m
     [38;5;2m 876[39m: [38;5;2m        3:  (inline_tests)[39m
     [38;5;2m 877[39m: [38;5;2m        4:  (libraries core stdio core_unix.command_unix notty nottui angstrom)[39m
     [38;5;2m 878[39m: [38;5;2m        5:  (preprocess[39m
     [38;5;2m 879[39m: [38;5;2m        6:   (pps ppx_expect)))[39m
     [38;5;2m 880[39m: [38;5;2mAdded regular file lib/process.ml:[39m
     [38;5;2m 881[39m: [38;5;2m        1: [39m
     [38;5;2m 882[39m: [38;5;2m        2: let mk_home_cmd cmd =[39m
     [38;5;2m 883[39m: [38;5;2m        3:   let home_dir = Unix.getenv "HOME" in[39m
     [38;5;2m 884[39m: [38;5;2m        4:   Printf.sprintf "HOME=%s %s" home_dir cmd[39m
     [38;5;2m 885[39m: [38;5;2m        5: [39m
     [38;5;2m 886[39m: [38;5;2m        6: let proc_silent cmd =[39m
     [38;5;2m 887[39m: [38;5;2m        7:   let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
     [38;5;2m 888[39m: [38;5;2m        8:   ()[39m
     [38;5;2m 889[39m: [38;5;2m        9: [39m
     [38;5;2m 890[39m: [38;5;2m       10: let proc cmd =[39m
     [38;5;2m 891[39m: [38;5;2m       11:   Printf.eprintf "🐚  %s\n%!" cmd;[39m
     [38;5;2m 892[39m: [38;5;2m       12:   proc_silent cmd[39m
     [38;5;2m 893[39m: [38;5;2m       13: [39m
     [38;5;2m 894[39m: [38;5;2m       14: let collect_chan (channel : in_channel) : string =[39m
     [38;5;2m 895[39m: [38;5;2m       15:   let rec loop acc =[39m
     [38;5;2m 896[39m: [38;5;2m       16:     match input_line channel with[39m
     [38;5;2m 897[39m: [38;5;2m       17:     | exception End_of_file -> acc[39m
     [38;5;2m 898[39m: [38;5;2m       18:     | line -> loop (acc ^ line ^ "\n")[39m
     [38;5;2m 899[39m: [38;5;2m       19:   in[39m
     [38;5;2m 900[39m: [38;5;2m       20:   loop ""[39m
     [38;5;2m 901[39m: [38;5;2m       21: [39m
     [38;5;2m 902[39m: [38;5;2m       22: let proc_stdout cmd =[39m
     [38;5;2m 903[39m: [38;5;2m       23:   let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
     [38;5;2m 904[39m: [38;5;2m       24:     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m 905[39m: [38;5;2m       25:   in[39m
     [38;5;2m 906[39m: [38;5;2m       26:   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m 907[39m: [38;5;2m       27:   let _ = Unix.close_process_full process in[39m
     [38;5;2m 908[39m: [38;5;2m       28:   String.trim stdout_result[39m
     [38;5;2m 909[39m: [38;5;2m       29: [39m
     [38;5;2m 910[39m: [38;5;2m       30: let proc_stdOutAndErr cmd =[39m
     [38;5;2m 911[39m: [38;5;2m       31:   let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
     [38;5;2m 912[39m: [38;5;2m       32:     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m 913[39m: [38;5;2m       33:   in[39m
     [38;5;2m 914[39m: [38;5;2m       34:   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m 915[39m: [38;5;2m       35:   let stderr_result = collect_chan proc_stderr in[39m
     [38;5;2m 916[39m: [38;5;2m       36:   let _ = Unix.close_process_full process in[39m
     [38;5;2m 917[39m: [38;5;2m       37:   String.trim (stdout_result^stderr_result)[39m
     [38;5;2m 918[39m: [38;5;2mAdded regular file log:[39m
     [38;5;2m 919[39m: [38;5;2m        1: ◉  ␛[1m␛[38;5;5mv␛[0m␛[38;5;8myzuqwnl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m7␛[0m␛[38;5;8maf062fc␛[39m[39m
     [38;5;2m 920[39m: [38;5;2m        2: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m 921[39m: [38;5;2m        3: ◉  ␛[1m␛[38;5;5mxn␛[0m␛[38;5;8mvoukwm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m9␛[0m␛[38;5;8m50e51d4␛[39m[39m
     [38;5;2m 922[39m: [38;5;2m        4: │  using angstrom parser[39m
     [38;5;2m 923[39m: [38;5;2m        5: ◉  ␛[1m␛[38;5;5mu␛[0m␛[38;5;8mwwzzulo␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m4a␛[0m␛[38;5;8md3ac96␛[39m[39m
     [38;5;2m 924[39m: [38;5;2m        6: │  progress on ui, added boxes[39m
     [38;5;2m 925[39m: [38;5;2m        7: @  ␛[1m␛[38;5;13mkszk␛[38;5;8muqqs␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 23:57:08␛[39m ␛[38;5;12mf␛[38;5;8mc74c4ed␛[39m␛[0m[39m
     [38;5;2m 926[39m: [38;5;2m        8: │  ␛[1mcoloured output is working␛[0m[39m
     [38;5;2m 927[39m: [38;5;2m        9: ◉  ␛[1m␛[38;5;5my␛[0m␛[38;5;8msrpqsvq␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:18:11␛[39m ␛[38;5;2mHEAD@git␛[39m ␛[1m␛[38;5;4me␛[0m␛[38;5;8mc72cc90␛[39m[39m
     [38;5;2m 928[39m: [38;5;2m       10: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m 929[39m: [38;5;2m       11: ◉  ␛[1m␛[38;5;5mn␛[0m␛[38;5;8mulnswsm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:17:05␛[39m ␛[1m␛[38;5;4mb␛[0m␛[38;5;8mfaef69b␛[39m[39m
     [38;5;2m 930[39m: [38;5;2m       12: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m 931[39m: [38;5;2m       13: ◉  ␛[1m␛[38;5;5mxw␛[0m␛[38;5;8msmkxpt␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m2␛[0m␛[38;5;8m12a26e4␛[39m[39m
     [38;5;2m 932[39m: [38;5;2m       14: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m 933[39m: [38;5;2m       15: ◉  ␛[1m␛[38;5;5mkszy␛[0m␛[38;5;8mtrtu␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m8␛[0m␛[38;5;8m754ef74␛[39m[39m
     [38;5;2m 934[39m: [38;5;2m       16: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m 935[39m: [38;5;2m       17: ◉  ␛[1m␛[38;5;5mp␛[0m␛[38;5;8msnrvlsv␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:02:28␛[39m ␛[1m␛[38;5;4md␛[0m␛[38;5;8m09f7fd4␛[39m[39m
     [38;5;2m 936[39m: [38;5;2m       18: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m 937[39m: [38;5;2m       19: │ ◉  ␛[1m␛[38;5;5mt␛[0m␛[38;5;8mooppyyl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:19:58␛[39m ␛[1m␛[38;5;4m49␛[0m␛[38;5;8m125832␛[39m[39m
     [38;5;2m 938[39m: [38;5;2m       20: ├─╯  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m 939[39m: [38;5;2m       21: ◉  ␛[1m␛[38;5;5mz␛[0m␛[38;5;8mzzzzzzz␛[39m ␛[38;5;2mroot()␛[39m ␛[1m␛[38;5;4m0␛[0m␛[38;5;8m0000000␛[39m[39m
     [38;5;2m 940[39m: [38;5;2mAdded regular file log2:[39m
     [38;5;2m 941[39m: [38;5;2m    (empty)[39m
     [38;5;2m 942[39m: [38;5;2mAdded regular file test/dune:[39m
     [38;5;2m 943[39m: [38;5;2m        1: (test[39m
     [38;5;2m 944[39m: [38;5;2m        2:  (name jj_tui)[39m
     [38;5;2m 945[39m: [38;5;2m        3:  (libraries jj_tui)[39m
     [38;5;2m 946[39m: [38;5;2m        4:  (preprocess[39m
     [38;5;2m 947[39m: [38;5;2m        5:   (pps ppx_jane ppx_expect)))[39m
     [38;5;2m 948[39m: [38;5;2mAdded regular file test/jj_tui.ml:[39m
     [38;5;2m 949[39m: [38;5;2m    (empty)[39m
     [38;5;2m 950[39m: [38;5;2mAdded regular file testing/hi:[39m
     [38;5;2m 951[39m: [38;5;2m        1: hiiiiiii[39m
     [38;5;2m 952[39m: [38;5;2m        2: hiiiiiiiiiiii[39m
     [38;5;2m 953[39m: [38;5;2m        3: hiiiiiiiiiiii[39m
     [38;5;2m 954[39m: [38;5;2mAdded regular file testing/other/file:[39m
     [38;5;2m 955[39m: [38;5;2m        1: hello Im other[39m
     [38;5;2m 956[39m: [38;5;2mRemoved regular file ../jj_tui.install:[39m
     [38;5;2m 957[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m 958[39m: [38;5;2m   2     :   "_build/install/default/lib/jj_tui/META"[39m
     [38;5;2m 959[39m: [38;5;2m   3     :   "_build/install/default/lib/jj_tui/dune-package"[39m
     [38;5;2m 960[39m: [38;5;2m   4     :   "_build/install/default/lib/jj_tui/opam"[39m
     [38;5;2m 961[39m: [38;5;2m   5     : ][39m
     [38;5;2m 962[39m: [38;5;2m   6     : bin: [[39m
     [38;5;2m 963[39m: [38;5;2m   7     :   "_build/install/default/bin/jj_tui"[39m
     [38;5;2m 964[39m: [38;5;2m   8     : ][39m
     [38;5;2m 965[39m: [38;5;2mRemoved regular file ../jj_tui.opam:[39m
     [38;5;2m 966[39m: [38;5;2m   1     : # This file is generated by dune, edit dune-project instead[39m
     [38;5;2m 967[39m: [38;5;2m   2     : opam-version: "2.0"[39m
     [38;5;2m 968[39m: [38;5;2m   3     : synopsis: "A short synopsis"[39m
     [38;5;2m 969[39m: [38;5;2m   4     : description: "A longer description"[39m
     [38;5;2m 970[39m: [38;5;2m   5     : maintainer: ["Maintainer Name"][39m
     [38;5;2m 971[39m: [38;5;2m   6     : authors: ["Author Name"][39m
     [38;5;2m 972[39m: [38;5;2m   7     : license: "LICENSE"[39m
     [38;5;2m 973[39m: [38;5;2m   8     : tags: ["topics" "to describe" "your" "project"][39m
     [38;5;2m 974[39m: [38;5;2m   9     : homepage: "https://github.com/username/reponame"[39m
     [38;5;2m 975[39m: [38;5;2m  10     : doc: "https://url/to/documentation"[39m
     [38;5;2m 976[39m: [38;5;2m  11     : bug-reports: "https://github.com/username/reponame/issues"[39m
     [38;5;2m 977[39m: [38;5;2m  12     : depends: [[39m
     [38;5;2m 978[39m: [38;5;2m  13     :   "ocaml"[39m
     [38;5;2m 979[39m: [38;5;2m  14     :   "dune" {>= "3.9"}[39m
     [38;5;2m 980[39m: [38;5;2m  15     :   "odoc" {with-doc}[39m
     [38;5;2m 981[39m: [38;5;2m  16     : ][39m
     [38;5;2m 982[39m: [38;5;2m  17     : build: [[39m
     [38;5;2m 983[39m: [38;5;2m  18     :   ["dune" "subst"] {dev}[39m
     [38;5;2m 984[39m: [38;5;2m  19     :   [[39m
     [38;5;2m 985[39m: [38;5;2m  20     :     "dune"[39m
     [38;5;2m 986[39m: [38;5;2m  21     :     "build"[39m
     [38;5;2m 987[39m: [38;5;2m  22     :     "-p"[39m
     [38;5;2m 988[39m: [38;5;2m  23     :     name[39m
     [38;5;2m 989[39m: [38;5;2m  24     :     "-j"[39m
     [38;5;2m 990[39m: [38;5;2m  25     :     jobs[39m
     [38;5;2m 991[39m: [38;5;2m  26     :     "@install"[39m
     [38;5;2m 992[39m: [38;5;2m  27     :     "@runtest" {with-test}[39m
     [38;5;2m 993[39m: [38;5;2m  28     :     "@doc" {with-doc}[39m
     [38;5;2m 994[39m: [38;5;2m  29     :   ][39m
     [38;5;2m 995[39m: [38;5;2m  30     : ][39m
     [38;5;2m 996[39m: [38;5;2m  31     : dev-repo: "git+https://github.com/username/reponame.git"[39m
     [38;5;2m 997[39m: [38;5;2mRemoved regular file ../lib/dune:[39m
     [38;5;2m 998[39m: [38;5;2m   1     : (library[39m
     [38;5;2m 999[39m: [38;5;2m   2     :  (name jj_tui)[39m
     [38;5;2m1000[39m: [38;5;2m   3     :  (libraries core stdio core_unix.command_unix )[39m
     [38;5;2m1001[39m: [38;5;2m   4     :  )[39m
     [38;5;2m1002[39m: [38;5;2m   5     : [39m
     [38;5;2m1003[39m: [38;5;2mRemoved regular file ../lib/process.ml:[39m
     [38;5;2m1004[39m: [38;5;2m   1     : [39m
     [38;5;2m1005[39m: [38;5;2m   2     : let mk_home_cmd cmd =[39m
     [38;5;2m1006[39m: [38;5;2m   3     :   let home_dir = Unix.getenv "HOME" in[39m
     [38;5;2m1007[39m: [38;5;2m   4     :   Printf.sprintf "HOME=%s %s" home_dir cmd[39m
     [38;5;2m1008[39m: [38;5;2m   5     : [39m
     [38;5;2m1009[39m: [38;5;2m   6     : let proc_silent cmd =[39m
     [38;5;2m1010[39m: [38;5;2m   7     :   let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
     [38;5;2m1011[39m: [38;5;2m   8     :   ()[39m
     [38;5;2m1012[39m: [38;5;2m   9     : [39m
     [38;5;2m1013[39m: [38;5;2m  10     : let proc cmd =[39m
     [38;5;2m1014[39m: [38;5;2m  11     :   Printf.eprintf "🐚  %s\n%!" cmd;[39m
     [38;5;2m1015[39m: [38;5;2m  12     :   proc_silent cmd[39m
     [38;5;2m1016[39m: [38;5;2m  13     : [39m
     [38;5;2m1017[39m: [38;5;2m  14     : let collect_chan (channel : in_channel) : string =[39m
     [38;5;2m1018[39m: [38;5;2m  15     :   let rec loop acc =[39m
     [38;5;2m1019[39m: [38;5;2m  16     :     match input_line channel with[39m
     [38;5;2m1020[39m: [38;5;2m  17     :     | exception End_of_file -> acc[39m
     [38;5;2m1021[39m: [38;5;2m  18     :     | line -> loop (acc ^ line ^ "\n")[39m
     [38;5;2m1022[39m: [38;5;2m  19     :   in[39m
     [38;5;2m1023[39m: [38;5;2m  20     :   loop ""[39m
     [38;5;2m1024[39m: [38;5;2m  21     : [39m
     [38;5;2m1025[39m: [38;5;2m  22     : let proc_stdout cmd =[39m
     [38;5;2m1026[39m: [38;5;2m  23     :   let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
     [38;5;2m1027[39m: [38;5;2m  24     :     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m1028[39m: [38;5;2m  25     :   in[39m
     [38;5;2m1029[39m: [38;5;2m  26     :   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m1030[39m: [38;5;2m  27     :   let _ = Unix.close_process_full process in[39m
     [38;5;2m1031[39m: [38;5;2m  28     :   String.trim stdout_result[39m
     [38;5;2m1032[39m: [38;5;2m  29     : [39m
     [38;5;2m1033[39m: [38;5;2m  30     : let proc_stdOutAndErr cmd =[39m
     [38;5;2m1034[39m: [38;5;2m  31     :   let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
     [38;5;2m1035[39m: [38;5;2m  32     :     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m1036[39m: [38;5;2m  33     :   in[39m
     [38;5;2m1037[39m: [38;5;2m  34     :   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m1038[39m: [38;5;2m  35     :   let stderr_result = collect_chan proc_stderr in[39m
     [38;5;2m1039[39m: [38;5;2m  36     :   let _ = Unix.close_process_full process in[39m
     [38;5;2m1040[39m: [38;5;2m  37     :   String.trim (stdout_result^stderr_result)[39m
     [38;5;2m1041[39m: [38;5;2mRemoved regular file ../minttea/leaves.install:[39m
     [38;5;2m1042[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m1043[39m: [38;5;2m   2     :   "_build/install/default/lib/leaves/META"[39m
     [38;5;2m1044[39m: [38;5;2m   3     :   "_build/install/default/lib/leaves/cursor.ml"[39m
     [38;5;2m1045[39m: [38;5;2m   4     :   "_build/install/default/lib/leaves/cursor.mli"[39m
     [38;5;2m1046[39m: [38;5;2m   5     :   "_build/install/default/lib/leaves/dune-package"[39m
     [38;5;2m1047[39m: [38;5;2m   6     :   "_build/install/default/lib/leaves/filtered_list.ml"[39m
     [38;5;2m1048[39m: [38;5;2m   7     :   "_build/install/default/lib/leaves/filtered_list.mli"[39m
     [38;5;2m1049[39m: [38;5;2m   8     :   "_build/install/default/lib/leaves/forms.ml"[39m
     [38;5;2m1050[39m: [38;5;2m   9     :   "_build/install/default/lib/leaves/fps.ml"[39m
     [38;5;2m1051[39m: [38;5;2m  10     :   "_build/install/default/lib/leaves/fps.mli"[39m
     [38;5;2m1052[39m: [38;5;2m  11     :   "_build/install/default/lib/leaves/leaves.a"[39m
     [38;5;2m1053[39m: [38;5;2m  12     :   "_build/install/default/lib/leaves/leaves.cma"[39m
     [38;5;2m1054[39m: [38;5;2m  13     :   "_build/install/default/lib/leaves/leaves.cmi"[39m
     [38;5;2m1055[39m: [38;5;2m  14     :   "_build/install/default/lib/leaves/leaves.cmt"[39m
     [38;5;2m1056[39m: [38;5;2m  15     :   "_build/install/default/lib/leaves/leaves.cmx"[39m
     [38;5;2m1057[39m: [38;5;2m  16     :   "_build/install/default/lib/leaves/leaves.cmxa"[39m
     [38;5;2m1058[39m: [38;5;2m  17     :   "_build/install/default/lib/leaves/leaves.ml"[39m
     [38;5;2m1059[39m: [38;5;2m  18     :   "_build/install/default/lib/leaves/leaves__Cursor.cmi"[39m
     [38;5;2m1060[39m: [38;5;2m  19     :   "_build/install/default/lib/leaves/leaves__Cursor.cmt"[39m
     [38;5;2m1061[39m: [38;5;2m  20     :   "_build/install/default/lib/leaves/leaves__Cursor.cmti"[39m
     [38;5;2m1062[39m: [38;5;2m  21     :   "_build/install/default/lib/leaves/leaves__Cursor.cmx"[39m
     [38;5;2m1063[39m: [38;5;2m  22     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmi"[39m
     [38;5;2m1064[39m: [38;5;2m  23     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmt"[39m
     [38;5;2m1065[39m: [38;5;2m  24     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmti"[39m
     [38;5;2m1066[39m: [38;5;2m  25     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmx"[39m
     [38;5;2m1067[39m: [38;5;2m  26     :   "_build/install/default/lib/leaves/leaves__Forms.cmi"[39m
     [38;5;2m1068[39m: [38;5;2m  27     :   "_build/install/default/lib/leaves/leaves__Forms.cmt"[39m
     [38;5;2m1069[39m: [38;5;2m  28     :   "_build/install/default/lib/leaves/leaves__Forms.cmx"[39m
     [38;5;2m1070[39m: [38;5;2m  29     :   "_build/install/default/lib/leaves/leaves__Fps.cmi"[39m
     [38;5;2m1071[39m: [38;5;2m  30     :   "_build/install/default/lib/leaves/leaves__Fps.cmt"[39m
     [38;5;2m1072[39m: [38;5;2m  31     :   "_build/install/default/lib/leaves/leaves__Fps.cmti"[39m
     [38;5;2m1073[39m: [38;5;2m  32     :   "_build/install/default/lib/leaves/leaves__Fps.cmx"[39m
     [38;5;2m1074[39m: [38;5;2m  33     :   "_build/install/default/lib/leaves/leaves__Paginator.cmi"[39m
     [38;5;2m1075[39m: [38;5;2m  34     :   "_build/install/default/lib/leaves/leaves__Paginator.cmt"[39m
     [38;5;2m1076[39m: [38;5;2m  35     :   "_build/install/default/lib/leaves/leaves__Paginator.cmti"[39m
     [38;5;2m1077[39m: [38;5;2m  36     :   "_build/install/default/lib/leaves/leaves__Paginator.cmx"[39m
     [38;5;2m1078[39m: [38;5;2m  37     :   "_build/install/default/lib/leaves/leaves__Progress.cmi"[39m
     [38;5;2m1079[39m: [38;5;2m  38     :   "_build/install/default/lib/leaves/leaves__Progress.cmt"[39m
     [38;5;2m1080[39m: [38;5;2m  39     :   "_build/install/default/lib/leaves/leaves__Progress.cmti"[39m
     [38;5;2m1081[39m: [38;5;2m  40     :   "_build/install/default/lib/leaves/leaves__Progress.cmx"[39m
     [38;5;2m1082[39m: [38;5;2m  41     :   "_build/install/default/lib/leaves/leaves__Spinner.cmi"[39m
     [38;5;2m1083[39m: [38;5;2m  42     :   "_build/install/default/lib/leaves/leaves__Spinner.cmt"[39m
     [38;5;2m1084[39m: [38;5;2m  43     :   "_build/install/default/lib/leaves/leaves__Spinner.cmti"[39m
     [38;5;2m1085[39m: [38;5;2m  44     :   "_build/install/default/lib/leaves/leaves__Spinner.cmx"[39m
     [38;5;2m1086[39m: [38;5;2m  45     :   "_build/install/default/lib/leaves/leaves__Sprite.cmi"[39m
     [38;5;2m1087[39m: [38;5;2m  46     :   "_build/install/default/lib/leaves/leaves__Sprite.cmt"[39m
     [38;5;2m1088[39m: [38;5;2m  47     :   "_build/install/default/lib/leaves/leaves__Sprite.cmti"[39m
     [38;5;2m1089[39m: [38;5;2m  48     :   "_build/install/default/lib/leaves/leaves__Sprite.cmx"[39m
     [38;5;2m1090[39m: [38;5;2m  49     :   "_build/install/default/lib/leaves/leaves__Table.cmi"[39m
     [38;5;2m1091[39m: [38;5;2m  50     :   "_build/install/default/lib/leaves/leaves__Table.cmt"[39m
     [38;5;2m1092[39m: [38;5;2m  51     :   "_build/install/default/lib/leaves/leaves__Table.cmx"[39m
     [38;5;2m1093[39m: [38;5;2m  52     :   "_build/install/default/lib/leaves/leaves__Text_input.cmi"[39m
     [38;5;2m1094[39m: [38;5;2m  53     :   "_build/install/default/lib/leaves/leaves__Text_input.cmt"[39m
     [38;5;2m1095[39m: [38;5;2m  54     :   "_build/install/default/lib/leaves/leaves__Text_input.cmti"[39m
     [38;5;2m1096[39m: [38;5;2m  55     :   "_build/install/default/lib/leaves/leaves__Text_input.cmx"[39m
     [38;5;2m1097[39m: [38;5;2m  56     :   "_build/install/default/lib/leaves/opam"[39m
     [38;5;2m1098[39m: [38;5;2m  57     :   "_build/install/default/lib/leaves/paginator.ml"[39m
     [38;5;2m1099[39m: [38;5;2m  58     :   "_build/install/default/lib/leaves/paginator.mli"[39m
     [38;5;2m1100[39m: [38;5;2m  59     :   "_build/install/default/lib/leaves/progress.ml"[39m
     [38;5;2m1101[39m: [38;5;2m  60     :   "_build/install/default/lib/leaves/progress.mli"[39m
     [38;5;2m1102[39m: [38;5;2m  61     :   "_build/install/default/lib/leaves/spinner.ml"[39m
     [38;5;2m1103[39m: [38;5;2m  62     :   "_build/install/default/lib/leaves/spinner.mli"[39m
     [38;5;2m1104[39m: [38;5;2m  63     :   "_build/install/default/lib/leaves/sprite.ml"[39m
     [38;5;2m1105[39m: [38;5;2m  64     :   "_build/install/default/lib/leaves/sprite.mli"[39m
     [38;5;2m1106[39m: [38;5;2m  65     :   "_build/install/default/lib/leaves/table.ml"[39m
     [38;5;2m1107[39m: [38;5;2m  66     :   "_build/install/default/lib/leaves/text_input.ml"[39m
     [38;5;2m1108[39m: [38;5;2m  67     :   "_build/install/default/lib/leaves/text_input.mli"[39m
     [38;5;2m1109[39m: [38;5;2m  68     : ][39m
     [38;5;2m1110[39m: [38;5;2m  69     : libexec: [[39m
     [38;5;2m1111[39m: [38;5;2m  70     :   "_build/install/default/lib/leaves/leaves.cmxs"[39m
     [38;5;2m1112[39m: [38;5;2m  71     : ][39m
     [38;5;2m1113[39m: [38;5;2m  72     : doc: [[39m
     [38;5;2m1114[39m: [38;5;2m  73     :   "_build/install/default/doc/leaves/CHANGES.md"[39m
     [38;5;2m1115[39m: [38;5;2m  74     :   "_build/install/default/doc/leaves/LICENSE.md"[39m
     [38;5;2m1116[39m: [38;5;2m  75     :   "_build/install/default/doc/leaves/README.md"[39m
     [38;5;2m1117[39m: [38;5;2m  76     : ][39m
     [38;5;2m1118[39m: [38;5;2mRemoved regular file ../minttea/minttea.install:[39m
     [38;5;2m1119[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m1120[39m: [38;5;2m   2     :   "_build/install/default/lib/minttea/META"[39m
     [38;5;2m1121[39m: [38;5;2m   3     :   "_build/install/default/lib/minttea/app.ml"[39m
     [38;5;2m1122[39m: [38;5;2m   4     :   "_build/install/default/lib/minttea/command.ml"[39m
     [38;5;2m1123[39m: [38;5;2m   5     :   "_build/install/default/lib/minttea/dune-package"[39m
     [38;5;2m1124[39m: [38;5;2m   6     :   "_build/install/default/lib/minttea/event.ml"[39m
     [38;5;2m1125[39m: [38;5;2m   7     :   "_build/install/default/lib/minttea/io_loop.ml"[39m
     [38;5;2m1126[39m: [38;5;2m   8     :   "_build/install/default/lib/minttea/minttea.a"[39m
     [38;5;2m1127[39m: [38;5;2m   9     :   "_build/install/default/lib/minttea/minttea.cma"[39m
     [38;5;2m1128[39m: [38;5;2m  10     :   "_build/install/default/lib/minttea/minttea.cmi"[39m
     [38;5;2m1129[39m: [38;5;2m  11     :   "_build/install/default/lib/minttea/minttea.cmt"[39m
     [38;5;2m1130[39m: [38;5;2m  12     :   "_build/install/default/lib/minttea/minttea.cmti"[39m
     [38;5;2m1131[39m: [38;5;2m  13     :   "_build/install/default/lib/minttea/minttea.cmx"[39m
     [38;5;2m1132[39m: [38;5;2m  14     :   "_build/install/default/lib/minttea/minttea.cmxa"[39m
     [38;5;2m1133[39m: [38;5;2m  15     :   "_build/install/default/lib/minttea/minttea.ml"[39m
     [38;5;2m1134[39m: [38;5;2m  16     :   "_build/install/default/lib/minttea/minttea.mli"[39m
     [38;5;2m1135[39m: [38;5;2m  17     :   "_build/install/default/lib/minttea/minttea__.cmi"[39m
     [38;5;2m1136[39m: [38;5;2m  18     :   "_build/install/default/lib/minttea/minttea__.cmt"[39m
     [38;5;2m1137[39m: [38;5;2m  19     :   "_build/install/default/lib/minttea/minttea__.cmx"[39m
     [38;5;2m1138[39m: [38;5;2m  20     :   "_build/install/default/lib/minttea/minttea__.ml"[39m
     [38;5;2m1139[39m: [38;5;2m  21     :   "_build/install/default/lib/minttea/minttea__App.cmi"[39m
     [38;5;2m1140[39m: [38;5;2m  22     :   "_build/install/default/lib/minttea/minttea__App.cmt"[39m
     [38;5;2m1141[39m: [38;5;2m  23     :   "_build/install/default/lib/minttea/minttea__App.cmx"[39m
     [38;5;2m1142[39m: [38;5;2m  24     :   "_build/install/default/lib/minttea/minttea__Command.cmi"[39m
     [38;5;2m1143[39m: [38;5;2m  25     :   "_build/install/default/lib/minttea/minttea__Command.cmt"[39m
     [38;5;2m1144[39m: [38;5;2m  26     :   "_build/install/default/lib/minttea/minttea__Command.cmx"[39m
     [38;5;2m1145[39m: [38;5;2m  27     :   "_build/install/default/lib/minttea/minttea__Event.cmi"[39m
     [38;5;2m1146[39m: [38;5;2m  28     :   "_build/install/default/lib/minttea/minttea__Event.cmt"[39m
     [38;5;2m1147[39m: [38;5;2m  29     :   "_build/install/default/lib/minttea/minttea__Event.cmx"[39m
     [38;5;2m1148[39m: [38;5;2m  30     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmi"[39m
     [38;5;2m1149[39m: [38;5;2m  31     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmt"[39m
     [38;5;2m1150[39m: [38;5;2m  32     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmx"[39m
     [38;5;2m1151[39m: [38;5;2m  33     :   "_build/install/default/lib/minttea/minttea__Program.cmi"[39m
     [38;5;2m1152[39m: [38;5;2m  34     :   "_build/install/default/lib/minttea/minttea__Program.cmt"[39m
     [38;5;2m1153[39m: [38;5;2m  35     :   "_build/install/default/lib/minttea/minttea__Program.cmx"[39m
     [38;5;2m1154[39m: [38;5;2m  36     :   "_build/install/default/lib/minttea/minttea__Renderer.cmi"[39m
     [38;5;2m1155[39m: [38;5;2m  37     :   "_build/install/default/lib/minttea/minttea__Renderer.cmt"[39m
     [38;5;2m1156[39m: [38;5;2m  38     :   "_build/install/default/lib/minttea/minttea__Renderer.cmti"[39m
     [38;5;2m1157[39m: [38;5;2m  39     :   "_build/install/default/lib/minttea/minttea__Renderer.cmx"[39m
     [38;5;2m1158[39m: [38;5;2m  40     :   "_build/install/default/lib/minttea/opam"[39m
     [38;5;2m1159[39m: [38;5;2m  41     :   "_build/install/default/lib/minttea/program.ml"[39m
     [38;5;2m1160[39m: [38;5;2m  42     :   "_build/install/default/lib/minttea/renderer.ml"[39m
     [38;5;2m1161[39m: [38;5;2m  43     :   "_build/install/default/lib/minttea/renderer.mli"[39m
     [38;5;2m1162[39m: [38;5;2m  44     : ][39m
     [38;5;2m1163[39m: [38;5;2m  45     : libexec: [[39m
     [38;5;2m1164[39m: [38;5;2m  46     :   "_build/install/default/lib/minttea/minttea.cmxs"[39m
     [38;5;2m1165[39m: [38;5;2m  47     : ][39m
     [38;5;2m1166[39m: [38;5;2m  48     : doc: [[39m
     [38;5;2m1167[39m: [38;5;2m  49     :   "_build/install/default/doc/minttea/CHANGES.md"[39m
     [38;5;2m1168[39m: [38;5;2m  50     :   "_build/install/default/doc/minttea/LICENSE.md"[39m
     [38;5;2m1169[39m: [38;5;2m  51     :   "_build/install/default/doc/minttea/README.md"[39m
     [38;5;2m1170[39m: [38;5;2m  52     : ][39m
     [38;5;2m1171[39m: [38;5;2mRemoved regular file ../minttea/spices.install:[39m
     [38;5;2m1172[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m1173[39m: [38;5;2m   2     :   "_build/install/default/lib/spices/META"[39m
     [38;5;2m1174[39m: [38;5;2m   3     :   "_build/install/default/lib/spices/border.ml"[39m
     [38;5;2m1175[39m: [38;5;2m   4     :   "_build/install/default/lib/spices/dune-package"[39m
     [38;5;2m1176[39m: [38;5;2m   5     :   "_build/install/default/lib/spices/formatter.ml"[39m
     [38;5;2m1177[39m: [38;5;2m   6     :   "_build/install/default/lib/spices/gradient.ml"[39m
     [38;5;2m1178[39m: [38;5;2m   7     :   "_build/install/default/lib/spices/opam"[39m
     [38;5;2m1179[39m: [38;5;2m   8     :   "_build/install/default/lib/spices/spices.a"[39m
     [38;5;2m1180[39m: [38;5;2m   9     :   "_build/install/default/lib/spices/spices.cma"[39m
     [38;5;2m1181[39m: [38;5;2m  10     :   "_build/install/default/lib/spices/spices.cmi"[39m
     [38;5;2m1182[39m: [38;5;2m  11     :   "_build/install/default/lib/spices/spices.cmt"[39m
     [38;5;2m1183[39m: [38;5;2m  12     :   "_build/install/default/lib/spices/spices.cmti"[39m
     [38;5;2m1184[39m: [38;5;2m  13     :   "_build/install/default/lib/spices/spices.cmx"[39m
     [38;5;2m1185[39m: [38;5;2m  14     :   "_build/install/default/lib/spices/spices.cmxa"[39m
     [38;5;2m1186[39m: [38;5;2m  15     :   "_build/install/default/lib/spices/spices.ml"[39m
     [38;5;2m1187[39m: [38;5;2m  16     :   "_build/install/default/lib/spices/spices.mli"[39m
     [38;5;2m1188[39m: [38;5;2m  17     :   "_build/install/default/lib/spices/spices__.cmi"[39m
     [38;5;2m1189[39m: [38;5;2m  18     :   "_build/install/default/lib/spices/spices__.cmt"[39m
     [38;5;2m1190[39m: [38;5;2m  19     :   "_build/install/default/lib/spices/spices__.cmx"[39m
     [38;5;2m1191[39m: [38;5;2m  20     :   "_build/install/default/lib/spices/spices__.ml"[39m
     [38;5;2m1192[39m: [38;5;2m  21     :   "_build/install/default/lib/spices/spices__Border.cmi"[39m
     [38;5;2m1193[39m: [38;5;2m  22     :   "_build/install/default/lib/spices/spices__Border.cmt"[39m
     [38;5;2m1194[39m: [38;5;2m  23     :   "_build/install/default/lib/spices/spices__Border.cmx"[39m
     [38;5;2m1195[39m: [38;5;2m  24     :   "_build/install/default/lib/spices/spices__Formatter.cmi"[39m
     [38;5;2m1196[39m: [38;5;2m  25     :   "_build/install/default/lib/spices/spices__Formatter.cmt"[39m
     [38;5;2m1197[39m: [38;5;2m  26     :   "_build/install/default/lib/spices/spices__Formatter.cmx"[39m
     [38;5;2m1198[39m: [38;5;2m  27     :   "_build/install/default/lib/spices/spices__Gradient.cmi"[39m
     [38;5;2m1199[39m: [38;5;2m  28     :   "_build/install/default/lib/spices/spices__Gradient.cmt"[39m
     [38;5;2m1200[39m: [38;5;2m  29     :   "_build/install/default/lib/spices/spices__Gradient.cmx"[39m
     [38;5;2m1201[39m: [38;5;2m  30     : ][39m
     [38;5;2m1202[39m: [38;5;2m  31     : libexec: [[39m
     [38;5;2m1203[39m: [38;5;2m  32     :   "_build/install/default/lib/spices/spices.cmxs"[39m
     [38;5;2m1204[39m: [38;5;2m  33     : ][39m
     [38;5;2m1205[39m: [38;5;2m  34     : doc: [[39m
     [38;5;2m1206[39m: [38;5;2m  35     :   "_build/install/default/doc/spices/CHANGES.md"[39m
     [38;5;2m1207[39m: [38;5;2m  36     :   "_build/install/default/doc/spices/LICENSE.md"[39m
     [38;5;2m1208[39m: [38;5;2m  37     :   "_build/install/default/doc/spices/README.md"[39m
     [38;5;2m1209[39m: [38;5;2m  38     : ][39m
     [38;5;2m1210[39m: [38;5;2mAdded regular file ../notty/.gitignore:[39m
     [38;5;2m1211[39m: [38;5;2m        1: _build[39m
     [38;5;2m1212[39m: [38;5;2m        2: *.install[39m
     [38;5;2m1213[39m: [38;5;2m        3: *.native[39m
     [38;5;2m1214[39m: [38;5;2m        4: *.byte[39m
     [38;5;2m1215[39m: [38;5;2m        5: .merlin[39m
     [38;5;2m1216[39m: [38;5;2m        6: [39m
     [38;5;2m1217[39m: [38;5;2m        7: tmp[39m
     [38;5;2m1218[39m: [38;5;2m        8: *~[39m
     [38;5;2m1219[39m: [38;5;2m        9: \.\#*[39m
     [38;5;2m1220[39m: [38;5;2m       10: \#*#[39m
     [38;5;2m1221[39m: [38;5;2m       11: [39m
     [38;5;2m1222[39m: [38;5;2m       12: *.json[39m
     [38;5;2m1223[39m: [38;5;2m       13: gmon.out[39m
     [38;5;2m1224[39m: [38;5;2m       14: rondom[39m
     [38;5;2m1225[39m: [38;5;2mAdded regular file ../notty/.ocamlinit:[39m
     [38;5;2m1226[39m: [38;5;2m        1: #require "uucp,uuseg,uutf"[39m
     [38;5;2m1227[39m: [38;5;2m        2: [39m
     [38;5;2m1228[39m: [38;5;2m        3: #directory "_build/default/src"[39m
     [38;5;2m1229[39m: [38;5;2m        4: #directory "_build/default/src/.notty.objs/byte"[39m
     [38;5;2m1230[39m: [38;5;2m        5: #directory "_build/default/src-unix"[39m
     [38;5;2m1231[39m: [38;5;2m        6: #directory "_build/default/src-unix/.notty_unix.objs/byte"[39m
     [38;5;2m1232[39m: [38;5;2m        7: #directory "_build/default/src-lwt"[39m
     [38;5;2m1233[39m: [38;5;2m        8: #directory "_build/default/src-lwt/.notty_lwt.objs/byte"[39m
     [38;5;2m1234[39m: [38;5;2m        9: [39m
     [38;5;2m1235[39m: [38;5;2m       10: #load "notty.cma"[39m
     [38;5;2m1236[39m: [38;5;2m       11: #load "notty_unix.cma"[39m
     [38;5;2m1237[39m: [38;5;2m       12: #load "notty_lwt.cma"[39m
     [38;5;2m1238[39m: [38;5;2m       13: [39m
     [38;5;2m1239[39m: [38;5;2m       14: #use "src/notty_top_init.ml"[39m
     [38;5;2m1240[39m: [38;5;2mAdded regular file ../notty/CHANGES.md:[39m
     [38;5;2m1241[39m: [38;5;2m        1: ## v0.2.3 (2022-09-02)[39m
     [38;5;2m1242[39m: [38;5;2m        2: [39m
     [38;5;2m1243[39m: [38;5;2m        3: * Moved to Dune.[39m
     [38;5;2m1244[39m: [38;5;2m        4: * Renders faster, uses less memory.[39m
     [38;5;2m1245[39m: [38;5;2m        5: * Nested uses of `I.pp_attr` within `I.strf` now stack, instead of replacing.[39m
     [38;5;2m1246[39m: [38;5;2m        6: * Removed dependency on Uucp. Uses internal data instead (Unicode 13).[39m
     [38;5;2m1247[39m: [38;5;2m        7: * Support OCaml 4.08 - 4.14. Thanks to @kit-ty-kate for the 4.14 fixes.[39m
     [38;5;2m1248[39m: [38;5;2m        8: [39m
     [38;5;2m1249[39m: [38;5;2m        9: ## v0.2.2 (2019-02-19)[39m
     [38;5;2m1250[39m: [38;5;2m       10: [39m
     [38;5;2m1251[39m: [38;5;2m       11: * Fix a long-standing terminal cleanup bug. Reported by @ttamttam, fix by @cfcs.[39m
     [38;5;2m1252[39m: [38;5;2m       12: [39m
     [38;5;2m1253[39m: [38;5;2m       13: ## v0.2.1 (2017-11-06)[39m
     [38;5;2m1254[39m: [38;5;2m       14: [39m
     [38;5;2m1255[39m: [38;5;2m       15: * OCaml 4.06 compatible.[39m
     [38;5;2m1256[39m: [38;5;2m       16: * Cache the internal representation of Unicode strings.[39m
     [38;5;2m1257[39m: [38;5;2m       17: * Remove `I.ichar`. **breaking**[39m
     [38;5;2m1258[39m: [38;5;2m       18: [39m
     [38;5;2m1259[39m: [38;5;2m       19: ## v0.2.0 (2017-10-31)[39m
     [38;5;2m1260[39m: [38;5;2m       20: [39m
     [38;5;2m1261[39m: [38;5;2m       21: * All-around speed and memory improvements.[39m
     [38;5;2m1262[39m: [38;5;2m       22: * Draw over lines cell-by-cell instead of using erase-and-skip.[39m
     [38;5;2m1263[39m: [38;5;2m       23:   Slower, but flicker-free drawing.[39m
     [38;5;2m1264[39m: [38;5;2m       24: * `Term.create`: optionally inhibit synthetic TTY signals.[39m
     [38;5;2m1265[39m: [38;5;2m       25: * Cursor origin moved from `(1, 1)` to `(0, 0)`. **breaking**[39m
     [38;5;2m1266[39m: [38;5;2m       26: * `#key` renamed to `#special`. **breaking**[39m
     [38;5;2m1267[39m: [38;5;2m       27: * Added `Term.fds` to get connected file descriptors.[39m
     [38;5;2m1268[39m: [38;5;2m       28: * Added `A.equal` and `I.equal`.[39m
     [38;5;2m1269[39m: [38;5;2m       29: * Switched over to `Uchar.t`. **breaking**[39m
     [38;5;2m1270[39m: [38;5;2m       30: * Separated ASCII from the rest of Unicode input. **breaking**[39m
     [38;5;2m1271[39m: [38;5;2m       31: * Added image pretty-printer `I.pp`.[39m
     [38;5;2m1272[39m: [38;5;2m       32: * Added `notty.top` for use in the toplevel.[39m
     [38;5;2m1273[39m: [38;5;2m       33: * Removed `I.tile`. **breaking**[39m
     [38;5;2m1274[39m: [38;5;2m       34: * Added `I.tabulate`, generalizing `I.tile`.[39m
     [38;5;2m1275[39m: [38;5;2m       35: * Added support for 24-bit color.[39m
     [38;5;2m1276[39m: [38;5;2m       36: * Added `Notty_*.show_cursor` and `Notty_*.move_cursor` for manual cursor[39m
     [38;5;2m1277[39m: [38;5;2m       37:   positioning in inline mode.[39m
     [38;5;2m1278[39m: [38;5;2m       38: * Removed `output_image_endline`. Can be replaced by `eol`. **breaking**[39m
     [38;5;2m1279[39m: [38;5;2m       39: * `Notty_*.output_image` lost the `~clear` parameter. Can be replaced in various[39m
     [38;5;2m1280[39m: [38;5;2m       40:   ways by cursor positioning.[39m
     [38;5;2m1281[39m: [38;5;2m       41: * `Notty_unix.output_image ~chan` renamed to `~fd`. **breaking**[39m
     [38;5;2m1282[39m: [38;5;2m       42: * Added support for bracketed paste.[39m
     [38;5;2m1283[39m: [38;5;2m       43: * More example programs.[39m
     [38;5;2m1284[39m: [38;5;2m       44: [39m
     [38;5;2m1285[39m: [38;5;2m       45: ## v0.1.1 (2016-02-09)[39m
     [38;5;2m1286[39m: [38;5;2m       46: * `Term.input` -> `Term.event`[39m
     [38;5;2m1287[39m: [38;5;2m       47: * Option to redraw the line[39m
     [38;5;2m1288[39m: [38;5;2m       48: [39m
     [38;5;2m1289[39m: [38;5;2m       49: ## v0.1.0 (2016-02-09)[39m
     [38;5;2m1290[39m: [38;5;2m       50: * Initial release[39m
     [38;5;2m1291[39m: [38;5;2mAdded regular file ../notty/LICENSE.md:[39m
     [38;5;2m1292[39m: [38;5;2m        1: Copyright (c) 2016-2017 David Kaloper Meršinjak[39m
     [38;5;2m1293[39m: [38;5;2m        2: [39m
     [38;5;2m1294[39m: [38;5;2m        3: Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m1295[39m: [38;5;2m        4: purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m1296[39m: [38;5;2m        5: copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m1297[39m: [38;5;2m        6: [39m
     [38;5;2m1298[39m: [38;5;2m        7: THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m1299[39m: [38;5;2m        8: WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m1300[39m: [38;5;2m        9: MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m1301[39m: [38;5;2m       10: ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m1302[39m: [38;5;2m       11: WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m1303[39m: [38;5;2m       12: ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m1304[39m: [38;5;2m       13: OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m1305[39m: [38;5;2mAdded regular file ../notty/README.md:[39m
     [38;5;2m1306[39m: [38;5;2m        1: # Notty — Declaring terminals[39m
     [38;5;2m1307[39m: [38;5;2m        2: [39m
     [38;5;2m1308[39m: [38;5;2m        3: <a href="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO" alt="dumper"><img src="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO.png" width="400"/></a>[39m
     [38;5;2m1309[39m: [38;5;2m        4: <a href="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I" alt="input"><img src="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I.png" width="400"/></a>[39m
     [38;5;2m1310[39m: [38;5;2m        5: <a href="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc" alt="microdots"><img src="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc.png" width="400"/></a>[39m
     [38;5;2m1311[39m: [38;5;2m        6: <a href="https://asciinema.org/a/NgpF9Im8qfUICC39GDDAe9Ede" alt="rain"><img src="https://asciinema.org/a/R94gnHTQhCFJAsWpRfVlZWcUB.png" width="400"/></a>[39m
     [38;5;2m1312[39m: [38;5;2m        7: [39m
     [38;5;2m1313[39m: [38;5;2m        8: Notty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m1314[39m: [38;5;2m        9: of composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m1315[39m: [38;5;2m       10: model, providing something simpler and more expressive.[39m
     [38;5;2m1316[39m: [38;5;2m       11: [39m
     [38;5;2m1317[39m: [38;5;2m       12: The core layout engine and IO codecs are pure platform-independent OCaml.[39m
     [38;5;2m1318[39m: [38;5;2m       13: Distribution includes modules with input and output facilities for Unix, and Lwt[39m
     [38;5;2m1319[39m: [38;5;2m       14: on Unix.[39m
     [38;5;2m1320[39m: [38;5;2m       15: [39m
     [38;5;2m1321[39m: [38;5;2m       16: As an attempt to redefine terminal programming, Notty has to be[39m
     [38;5;2m1322[39m: [38;5;2m       17: _opinionated_. It assumes Unicode throughout, does not have universal support[39m
     [38;5;2m1323[39m: [38;5;2m       18: for various terminals out there, and has a peculiar programming and rendering[39m
     [38;5;2m1324[39m: [38;5;2m       19: model.[39m
     [38;5;2m1325[39m: [38;5;2m       20: [39m
     [38;5;2m1326[39m: [38;5;2m       21: Notty's core API was heavily influenced by Haskell's [Vty][vty].[39m
     [38;5;2m1327[39m: [38;5;2m       22: [39m
     [38;5;2m1328[39m: [38;5;2m       23: ## Where to start[39m
     [38;5;2m1329[39m: [38;5;2m       24: [39m
     [38;5;2m1330[39m: [38;5;2m       25: Check out the [documentation], [examples], or peek directly into the [interface][39m
     [38;5;2m1331[39m: [38;5;2m       26: file.[39m
     [38;5;2m1332[39m: [38;5;2m       27: [39m
     [38;5;2m1333[39m: [38;5;2m       28: Building with `dune build @ex` will produce several little example programs that[39m
     [38;5;2m1334[39m: [38;5;2m       29: also double as tests.[39m
     [38;5;2m1335[39m: [38;5;2m       30: [39m
     [38;5;2m1336[39m: [38;5;2m       31: ```OCaml[39m
     [38;5;2m1337[39m: [38;5;2m       32: (* Game of Life with ZX Spectrum kitsch. *)[39m
     [38;5;2m1338[39m: [38;5;2m       33: [39m
     [38;5;2m1339[39m: [38;5;2m       34: let dot : image = I.uchar A.(fg lightred) (Uchar.of_int 0x25cf) 1 1[39m
     [38;5;2m1340[39m: [38;5;2m       35: [39m
     [38;5;2m1341[39m: [38;5;2m       36: let background step (n, m) =[39m
     [38;5;2m1342[39m: [38;5;2m       37:   let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m1343[39m: [38;5;2m       38:   if k > 0 then I.char A.(fg (gray k)) '.' 1 1 else I.void 1 1[39m
     [38;5;2m1344[39m: [38;5;2m       39: [39m
     [38;5;2m1345[39m: [38;5;2m       40: let render (w, h) step life : image =[39m
     [38;5;2m1346[39m: [38;5;2m       41:   I.tabulate w (h - 1) @@ fun x y ->[39m
     [38;5;2m1347[39m: [38;5;2m       42:     let pt = (x, y) in[39m
     [38;5;2m1348[39m: [38;5;2m       43:     if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m1349[39m: [38;5;2m       44: ```[39m
     [38;5;2m1350[39m: [38;5;2m       45: [39m
     [38;5;2m1351[39m: [38;5;2m       46: [documentation]: https://pqwy.github.io/notty/doc[39m
     [38;5;2m1352[39m: [38;5;2m       47: [examples]: http://pqwy.github.io/notty/doc/Notty.html#examples[39m
     [38;5;2m1353[39m: [38;5;2m       48: [interface]: https://github.com/pqwy/notty/blob/master/src/notty.mli[39m
     [38;5;2m1354[39m: [38;5;2m       49: [vty]: https://hackage.haskell.org/package/vty[39m
     [38;5;2m1355[39m: [38;5;2m       50: [39m
     [38;5;2m1356[39m: [38;5;2m       51: ## What?[39m
     [38;5;2m1357[39m: [38;5;2m       52: [39m
     [38;5;2m1358[39m: [38;5;2m       53: - _Notty?_[39m
     [38;5;2m1359[39m: [38;5;2m       54:   [39m
     [38;5;2m1360[39m: [38;5;2m       55:   Terminals are tedious to program for. Notty tries to abstract the tedium away,[39m
     [38;5;2m1361[39m: [38;5;2m       56:   leaving you with a more pleasant programming surface that's quite unlike a TTY.[39m
     [38;5;2m1362[39m: [38;5;2m       57:   Hence, _No-TTY_.[39m
     [38;5;2m1363[39m: [38;5;2m       58: [39m
     [38;5;2m1364[39m: [38;5;2m       59: - A new kind of Rust terminal?[39m
     [38;5;2m1365[39m: [38;5;2m       60: [39m
     [38;5;2m1366[39m: [38;5;2m       61:   This Notty has no connection to any other body of code named Notty.[39m
     [38;5;2m1367[39m: [38;5;2m       62: [39m
     [38;5;2m1368[39m: [38;5;2m       63: - Why make yet another terminal output library?[39m
     [38;5;2m1369[39m: [38;5;2m       64:   [39m
     [38;5;2m1370[39m: [38;5;2m       65:   Because:[39m
     [38;5;2m1371[39m: [38;5;2m       66:   * It allows one to *describe* what should be seen, as opposed to *commanding*[39m
     [38;5;2m1372[39m: [38;5;2m       67:     a terminal.[39m
     [38;5;2m1373[39m: [38;5;2m       68:   * It's pretty compact. Both bells and whistles can be implemented separately.[39m
     [38;5;2m1374[39m: [38;5;2m       69:   * Core is easy to glue onto various IO backends.[39m
     [38;5;2m1375[39m: [38;5;2m       70:   * Pure platform-independent OCaml.[39m
     [38;5;2m1376[39m: [38;5;2mAdded regular file ../notty/benchmarks/dune:[39m
     [38;5;2m1377[39m: [38;5;2m        1: (executable[39m
     [38;5;2m1378[39m: [38;5;2m        2:   (name speed)[39m
     [38;5;2m1379[39m: [38;5;2m        3:   (libraries notty notty.unix common unmark unmark.cli))[39m
     [38;5;2m1380[39m: [38;5;2mAdded regular file ../notty/benchmarks/speed.ml:[39m
     [38;5;2m1381[39m: [38;5;2m        1: (* Copyright (c) 2016-2019 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1382[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1383[39m: [38;5;2m        3: [39m
     [38;5;2m1384[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m1385[39m: [38;5;2m        5: open Common[39m
     [38;5;2m1386[39m: [38;5;2m        6: open Common.Images[39m
     [38;5;2m1387[39m: [38;5;2m        7: [39m
     [38;5;2m1388[39m: [38;5;2m        8: [39m
     [38;5;2m1389[39m: [38;5;2m        9: let decode ?(n=1) str =[39m
     [38;5;2m1390[39m: [38;5;2m       10:   let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m1391[39m: [38;5;2m       11:   let us = str |> Uutf.String.fold_utf_8 f [] |> List.rev in[39m
     [38;5;2m1392[39m: [38;5;2m       12:   for _ = 1 to n do Unescape.decode us |> ignore done[39m
     [38;5;2m1393[39m: [38;5;2m       13: [39m
     [38;5;2m1394[39m: [38;5;2m       14: let input ?(n=1) str =[39m
     [38;5;2m1395[39m: [38;5;2m       15:   let buf = Bytes.unsafe_of_string str in[39m
     [38;5;2m1396[39m: [38;5;2m       16:   let rec go f n = match Unescape.next f with[39m
     [38;5;2m1397[39m: [38;5;2m       17:     | #Unescape.event -> go f n[39m
     [38;5;2m1398[39m: [38;5;2m       18:     | `Await when n > 0 ->[39m
     [38;5;2m1399[39m: [38;5;2m       19:         Unescape.input f buf 0 (Bytes.length buf); go f (pred n)[39m
     [38;5;2m1400[39m: [38;5;2m       20:     | `Await -> ()[39m
     [38;5;2m1401[39m: [38;5;2m       21:     | `End   -> assert false in[39m
     [38;5;2m1402[39m: [38;5;2m       22:   go (Unescape.create ()) n[39m
     [38;5;2m1403[39m: [38;5;2m       23: [39m
     [38;5;2m1404[39m: [38;5;2m       24: let escapes =[39m
     [38;5;2m1405[39m: [38;5;2m       25:   "\027[5~\027[6~\027[1~\027[4~\027OP\027OQ\027OR\027OS\027[15~\027[17~" ^[39m
     [38;5;2m1406[39m: [38;5;2m       26:   "\027[18~\027[19~\027[20~\027[21~\027[23~\027[24~"[39m
     [38;5;2m1407[39m: [38;5;2m       27: [39m
     [38;5;2m1408[39m: [38;5;2m       28: let escapes_m =[39m
     [38;5;2m1409[39m: [38;5;2m       29:   "\027[<0;59;7M\027[<32;58;7M\027[<32;57;7M\027[<32;56;7M\027[<32;54;7M" ^[39m
     [38;5;2m1410[39m: [38;5;2m       30:   "\027[<32;53;8M\027[<32;52;8M\027[<32;51;8M\027[<32;50;8M\027[<32;49;8M" ^[39m
     [38;5;2m1411[39m: [38;5;2m       31:   "\027[<32;47;9M\027[<32;46;9M\027[<32;44;9M\027[<32;42;10M\027[<32;41;10M" ^[39m
     [38;5;2m1412[39m: [38;5;2m       32:   "\027[<32;41;11M\027[<32;40;11M\027[<32;41;12M\027[<32;42;12M" ^[39m
     [38;5;2m1413[39m: [38;5;2m       33:   "\027[<32;42;13M\027[<32;43;13M\027[<32;44;13M\027[<0;44;13m"[39m
     [38;5;2m1414[39m: [38;5;2m       34: [39m
     [38;5;2m1415[39m: [38;5;2m       35: let chars = String.(make (length escapes) 'x')[39m
     [38;5;2m1416[39m: [38;5;2m       36: [39m
     [38;5;2m1417[39m: [38;5;2m       37: let buf = Buffer.create 1024[39m
     [38;5;2m1418[39m: [38;5;2m       38: let buf_render off dim image =[39m
     [38;5;2m1419[39m: [38;5;2m       39:   Buffer.clear buf; Render.to_buffer buf Cap.ansi off dim image[39m
     [38;5;2m1420[39m: [38;5;2m       40: [39m
     [38;5;2m1421[39m: [38;5;2m       41: [39m
     [38;5;2m1422[39m: [38;5;2m       42: open Unmark[39m
     [38;5;2m1423[39m: [38;5;2m       43: [39m
     [38;5;2m1424[39m: [38;5;2m       44: let strf = Format.asprintf[39m
     [38;5;2m1425[39m: [38;5;2m       45: let group_of name xs f = group name (List.map f xs)[39m
     [38;5;2m1426[39m: [38;5;2m       46: let bench_fmt fmt = Format.kasprintf bench fmt[39m
     [38;5;2m1427[39m: [38;5;2m       47: let group_fmt fmt = Format.kasprintf group fmt[39m
     [38;5;2m1428[39m: [38;5;2m       48: [39m
     [38;5;2m1429[39m: [38;5;2m       49: let render =[39m
     [38;5;2m1430[39m: [38;5;2m       50: [39m
     [38;5;2m1431[39m: [38;5;2m       51:   let clip i = I.(width i |> min 200, height i |> min 200) in[39m
     [38;5;2m1432[39m: [38;5;2m       52:   let ops i = Operation.of_image (0, 0) (clip i) i[39m
     [38;5;2m1433[39m: [38;5;2m       53:   and render i = buf_render (0, 0) (clip i) i in[39m
     [38;5;2m1434[39m: [38;5;2m       54: [39m
     [38;5;2m1435[39m: [38;5;2m       55:   group "render" [[39m
     [38;5;2m1436[39m: [38;5;2m       56:     group "rasterize" [[39m
     [38;5;2m1437[39m: [38;5;2m       57:       bench "i2" (fun () -> ops i2)[39m
     [38;5;2m1438[39m: [38;5;2m       58:     ; bench "i3" (fun () -> ops i3)[39m
     [38;5;2m1439[39m: [38;5;2m       59:     ; bench "i4" (fun () -> ops i4)[39m
     [38;5;2m1440[39m: [38;5;2m       60:     ; bench "i5" (fun () -> ops i5)[39m
     [38;5;2m1441[39m: [38;5;2m       61:     ];[39m
     [38;5;2m1442[39m: [38;5;2m       62:     group "render" [[39m
     [38;5;2m1443[39m: [38;5;2m       63:       bench "i2" (fun () -> render i2)[39m
     [38;5;2m1444[39m: [38;5;2m       64:     ; bench "i3" (fun () -> render i3)[39m
     [38;5;2m1445[39m: [38;5;2m       65:     ; bench "i4" (fun () -> render i4)[39m
     [38;5;2m1446[39m: [38;5;2m       66:     ; bench "i5" (fun () -> render i5)[39m
     [38;5;2m1447[39m: [38;5;2m       67:     ];[39m
     [38;5;2m1448[39m: [38;5;2m       68:     group_f "draw" (fun t -> [[39m
     [38;5;2m1449[39m: [38;5;2m       69:       bench "i3" (fun () -> Term.image t i3)[39m
     [38;5;2m1450[39m: [38;5;2m       70:     ; bench "i5" (fun () -> Term.image t i5)[39m
     [38;5;2m1451[39m: [38;5;2m       71:     ]) ~init:Term.create ~fini:Term.release[39m
     [38;5;2m1452[39m: [38;5;2m       72: ][39m
     [38;5;2m1453[39m: [38;5;2m       73: [39m
     [38;5;2m1454[39m: [38;5;2m       74: let input = group "input" [[39m
     [38;5;2m1455[39m: [38;5;2m       75:   group "decode" [[39m
     [38;5;2m1456[39m: [38;5;2m       76:     bench "escapes"     (fun () -> decode ~n:100 escapes);[39m
     [38;5;2m1457[39m: [38;5;2m       77:     bench "CSI escapes" (fun () -> decode ~n:100 escapes_m);[39m
     [38;5;2m1458[39m: [38;5;2m       78:     bench "chars"       (fun () -> decode ~n:100 chars);[39m
     [38;5;2m1459[39m: [38;5;2m       79:   ];[39m
     [38;5;2m1460[39m: [38;5;2m       80:   group "input" [[39m
     [38;5;2m1461[39m: [38;5;2m       81:     bench "escapes"     (fun () -> input ~n:100 escapes);[39m
     [38;5;2m1462[39m: [38;5;2m       82:     bench "CSI escapes" (fun () -> input ~n:100 escapes_m);[39m
     [38;5;2m1463[39m: [38;5;2m       83:     bench "chars"       (fun () -> input ~n:100 chars);[39m
     [38;5;2m1464[39m: [38;5;2m       84:   ][39m
     [38;5;2m1465[39m: [38;5;2m       85: ][39m
     [38;5;2m1466[39m: [38;5;2m       86: [39m
     [38;5;2m1467[39m: [38;5;2m       87: let construct =[39m
     [38;5;2m1468[39m: [38;5;2m       88: [39m
     [38;5;2m1469[39m: [38;5;2m       89:   let strings = [[39m
     [38;5;2m1470[39m: [38;5;2m       90:       "s1", "a"[39m
     [38;5;2m1471[39m: [38;5;2m       91:     ; "s2", "abcdefghij"[39m
     [38;5;2m1472[39m: [38;5;2m       92:     ; "s3", String.repeat 10 "abcdefghij"[39m
     [38;5;2m1473[39m: [38;5;2m       93:     ; "s4", String.repeat 100 "abcdefghij"[39m
     [38;5;2m1474[39m: [38;5;2m       94:     ; "u1", "☭"[39m
     [38;5;2m1475[39m: [38;5;2m       95:     ; "u2", String.repeat 10 "☭"[39m
     [38;5;2m1476[39m: [38;5;2m       96:     ; "u3", String.repeat 100 "☭"[39m
     [38;5;2m1477[39m: [38;5;2m       97:     ; "u4", String.repeat 1000 "☭" ] in[39m
     [38;5;2m1478[39m: [38;5;2m       98: [39m
     [38;5;2m1479[39m: [38;5;2m       99:   group "construct" [[39m
     [38;5;2m1480[39m: [38;5;2m      100: [39m
     [38;5;2m1481[39m: [38;5;2m      101:     group "make" (strings |> List.map @@ fun (n, s) ->[39m
     [38;5;2m1482[39m: [38;5;2m      102:       bench n (fun () -> I.string A.empty s))[39m
     [38;5;2m1483[39m: [38;5;2m      103: [39m
     [38;5;2m1484[39m: [38;5;2m      104:   ; group "repeat" ([0x40; 0x262d] |> List.map @@ fun x ->[39m
     [38;5;2m1485[39m: [38;5;2m      105:       let u = Uchar.of_int x in[39m
     [38;5;2m1486[39m: [38;5;2m      106:       group_fmt "U+%04x" x ([1; 10; 100] |> List.map @@ fun n ->[39m
     [38;5;2m1487[39m: [38;5;2m      107:         bench_fmt "%dx" n (fun () -> I.uchar A.empty u n 1)))[39m
     [38;5;2m1488[39m: [38;5;2m      108: [39m
     [38;5;2m1489[39m: [38;5;2m      109:   ; bench "pxmatrix" (fun () -> pxmatrix 200 200 @@ fun _ _ -> A.black)[39m
     [38;5;2m1490[39m: [38;5;2m      110:   ][39m
     [38;5;2m1491[39m: [38;5;2m      111: [39m
     [38;5;2m1492[39m: [38;5;2m      112: [39m
     [38;5;2m1493[39m: [38;5;2m      113: let _ = Unmark_cli.main "Notty" [ render; input; construct ][39m
     [38;5;2m1494[39m: [38;5;2mAdded regular file ../notty/dune-project:[39m
     [38;5;2m1495[39m: [38;5;2m        1: (lang dune 1.7)[39m
     [38;5;2m1496[39m: [38;5;2m        2: (name notty)[39m
     [38;5;2m1497[39m: [38;5;2m        3: (version %%VERSION_NUM%%)[39m
     [38;5;2m1498[39m: [38;5;2mAdded regular file ../notty/examples/almondbread.ml:[39m
     [38;5;2m1499[39m: [38;5;2m        1: open Notty[39m
     [38;5;2m1500[39m: [38;5;2m        2: open Common[39m
     [38;5;2m1501[39m: [38;5;2m        3: [39m
     [38;5;2m1502[39m: [38;5;2m        4: let iter = 200[39m
     [38;5;2m1503[39m: [38;5;2m        5: [39m
     [38;5;2m1504[39m: [38;5;2m        6: let member x y =[39m
     [38;5;2m1505[39m: [38;5;2m        7:   let rec go cx cy x y n =[39m
     [38;5;2m1506[39m: [38;5;2m        8:     let xx = x *. x and yy = y *. y in[39m
     [38;5;2m1507[39m: [38;5;2m        9:     if n = 0 || xx +. yy > 4. then n else[39m
     [38;5;2m1508[39m: [38;5;2m       10:       go cx cy (xx -. yy +. cx) (2. *. x *. y +. cy) (n - 1) in[39m
     [38;5;2m1509[39m: [38;5;2m       11:   float (iter - go x y 0. 0. iter) /. float iter[39m
     [38;5;2m1510[39m: [38;5;2m       12: [39m
     [38;5;2m1511[39m: [38;5;2m       13: let pi2   = 2. *. 3.14159[39m
     [38;5;2m1512[39m: [38;5;2m       14: let pi2_3 = pi2 /. 3.[39m
     [38;5;2m1513[39m: [38;5;2m       15: [39m
     [38;5;2m1514[39m: [38;5;2m       16: let mandelbrot x y =[39m
     [38;5;2m1515[39m: [38;5;2m       17:   (* let esc = 1. -. member x y in *)[39m
     [38;5;2m1516[39m: [38;5;2m       18:   (* 23. *. esc *. esc |> truncate |> A.gray *)[39m
     [38;5;2m1517[39m: [38;5;2m       19:   match member x y with[39m
     [38;5;2m1518[39m: [38;5;2m       20:   | 1.  -> A.gray 0[39m
     [38;5;2m1519[39m: [38;5;2m       21:   | esc ->[39m
     [38;5;2m1520[39m: [38;5;2m       22:       let t = esc *. pi2 in[39m
     [38;5;2m1521[39m: [38;5;2m       23:       let f d = (sin (t +. d) *. 128. +. 128.) |> truncate in[39m
     [38;5;2m1522[39m: [38;5;2m       24:       A.rgb_888 ~b:(f (-.pi2_3)) ~g:(f 0.) ~r:(f pi2_3)[39m
     [38;5;2m1523[39m: [38;5;2m       25: [39m
     [38;5;2m1524[39m: [38;5;2m       26: let xlate dx dy f x y = f (x -. dx) (y -. dy)[39m
     [38;5;2m1525[39m: [38;5;2m       27: let scale k f = let k1 = 1./.k in fun x y -> f (x *. k1) (y *. k1)[39m
     [38;5;2m1526[39m: [38;5;2m       28: let rot a f =[39m
     [38;5;2m1527[39m: [38;5;2m       29:   let sina = sin a and cosa = cos a in fun x y ->[39m
     [38;5;2m1528[39m: [38;5;2m       30:     f (x *. cosa -. y *. sina) (x *. sina +. cosa *. y)[39m
     [38;5;2m1529[39m: [38;5;2m       31: [39m
     [38;5;2m1530[39m: [38;5;2m       32: let render_unit f (w, h) =[39m
     [38;5;2m1531[39m: [38;5;2m       33:   let sw = 1. /. float w[39m
     [38;5;2m1532[39m: [38;5;2m       34:   and sh = 1. /. float (2 * h) in[39m
     [38;5;2m1533[39m: [38;5;2m       35:   pxmatrix w h (fun x y -> f (float x *. sw) (float y *. sh))[39m
     [38;5;2m1534[39m: [38;5;2m       36: [39m
     [38;5;2m1535[39m: [38;5;2m       37: let () =[39m
     [38;5;2m1536[39m: [38;5;2m       38:   let pix =[39m
     [38;5;2m1537[39m: [38;5;2m       39:     render_unit @@[39m
     [38;5;2m1538[39m: [38;5;2m       40:     rot (-1.570795) @@ xlate (1.6) (-0.5) @@[39m
     [38;5;2m1539[39m: [38;5;2m       41:     mandelbrot in[39m
     [38;5;2m1540[39m: [38;5;2m       42:   Notty_unix.(output_image_size @@ fun (w, h) -> pix (w, h - 1) |> eol)[39m
     [38;5;2m1541[39m: [38;5;2mAdded regular file ../notty/examples/colors.ml:[39m
     [38;5;2m1542[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1543[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1544[39m: [38;5;2m        3: [39m
     [38;5;2m1545[39m: [38;5;2m        4: (**[39m
     [38;5;2m1546[39m: [38;5;2m        5:  * Demonstrates text attributes.[39m
     [38;5;2m1547[39m: [38;5;2m        6:  *)[39m
     [38;5;2m1548[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m1549[39m: [38;5;2m        8: open Common[39m
     [38;5;2m1550[39m: [38;5;2m        9: [39m
     [38;5;2m1551[39m: [38;5;2m       10: let colors = A.[[39m
     [38;5;2m1552[39m: [38;5;2m       11:   "black"        , black[39m
     [38;5;2m1553[39m: [38;5;2m       12: ; "red"          , red[39m
     [38;5;2m1554[39m: [38;5;2m       13: ; "green"        , green[39m
     [38;5;2m1555[39m: [38;5;2m       14: ; "yellow"       , yellow[39m
     [38;5;2m1556[39m: [38;5;2m       15: ; "blue"         , blue[39m
     [38;5;2m1557[39m: [38;5;2m       16: ; "magenta"      , magenta[39m
     [38;5;2m1558[39m: [38;5;2m       17: ; "cyan"         , cyan[39m
     [38;5;2m1559[39m: [38;5;2m       18: ; "white"        , white[39m
     [38;5;2m1560[39m: [38;5;2m       19: ; "lightblack"   , lightblack[39m
     [38;5;2m1561[39m: [38;5;2m       20: ; "lightred"     , lightred[39m
     [38;5;2m1562[39m: [38;5;2m       21: ; "lightgreen"   , lightgreen[39m
     [38;5;2m1563[39m: [38;5;2m       22: ; "lightyellow"  , lightyellow[39m
     [38;5;2m1564[39m: [38;5;2m       23: ; "lightblue"    , lightblue[39m
     [38;5;2m1565[39m: [38;5;2m       24: ; "lightmagenta" , lightmagenta[39m
     [38;5;2m1566[39m: [38;5;2m       25: ; "lightcyan"    , lightcyan[39m
     [38;5;2m1567[39m: [38;5;2m       26: ; "lightwhite"   , lightwhite[39m
     [38;5;2m1568[39m: [38;5;2m       27: ][39m
     [38;5;2m1569[39m: [38;5;2m       28: [39m
     [38;5;2m1570[39m: [38;5;2m       29: let styles = A.[[39m
     [38;5;2m1571[39m: [38;5;2m       30:   "empty"      , empty[39m
     [38;5;2m1572[39m: [38;5;2m       31: ; "bold"       , st bold[39m
     [38;5;2m1573[39m: [38;5;2m       32: ; "italic"     , st italic[39m
     [38;5;2m1574[39m: [38;5;2m       33: ; "underline"  , st underline[39m
     [38;5;2m1575[39m: [38;5;2m       34: ; "blink"      , st blink[39m
     [38;5;2m1576[39m: [38;5;2m       35: ; "reverse"    , st reverse[39m
     [38;5;2m1577[39m: [38;5;2m       36: ; "bold/italic", st bold ++ st italic[39m
     [38;5;2m1578[39m: [38;5;2m       37: ; "rev/underln", st underline ++ st reverse[39m
     [38;5;2m1579[39m: [38;5;2m       38: ; "bold/rev"   , st reverse ++ st bold[39m
     [38;5;2m1580[39m: [38;5;2m       39: ][39m
     [38;5;2m1581[39m: [38;5;2m       40: [39m
     [38;5;2m1582[39m: [38;5;2m       41: let image w =[39m
     [38;5;2m1583[39m: [38;5;2m       42:   let open List in[39m
     [38;5;2m1584[39m: [38;5;2m       43:   let core16 =[39m
     [38;5;2m1585[39m: [38;5;2m       44:     let c1  = map (fun (n, c) -> I.string A.(fg c) n) colors[39m
     [38;5;2m1586[39m: [38;5;2m       45:     and c2  = map (fun (n, c) -> I.string A.(fg black ++ bg c) n) colors[39m
     [38;5;2m1587[39m: [38;5;2m       46:     in I.(vcat c1 <|> void 1 0 <|> vcat c2)[39m
     [38;5;2m1588[39m: [38;5;2m       47:   and attr =[39m
     [38;5;2m1589[39m: [38;5;2m       48:     I.( styles |> map (fun (n, s) -> hpad 0 1 (string s n)) |> hcat) in[39m
     [38;5;2m1590[39m: [38;5;2m       49:   let combine imgs =[39m
     [38;5;2m1591[39m: [38;5;2m       50:     List.map I.(fun (n, i) -> string A.empty n <-> i <-> void 0 1) imgs[39m
     [38;5;2m1592[39m: [38;5;2m       51:     |> I.vcat |> I.pad ~l:1 ~t:1 in[39m
     [38;5;2m1593[39m: [38;5;2m       52:   combine [[39m
     [38;5;2m1594[39m: [38;5;2m       53:     "System colors:",     core16;[39m
     [38;5;2m1595[39m: [38;5;2m       54:     "Color cube, 6x6x6:", Images.c_cube_ix;[39m
     [38;5;2m1596[39m: [38;5;2m       55:     "Grayscale ramp:",    Images.c_gray_ramp;[39m
     [38;5;2m1597[39m: [38;5;2m       56:     "24bit:",             Images.c_rainbow (w - 2) 1;[39m
     [38;5;2m1598[39m: [38;5;2m       57:     "Text styles:",       attr[39m
     [38;5;2m1599[39m: [38;5;2m       58:   ][39m
     [38;5;2m1600[39m: [38;5;2m       59: [39m
     [38;5;2m1601[39m: [38;5;2m       60: let () = Notty_unix.output_image_size @@ fun (w, _) -> image w[39m
     [38;5;2m1602[39m: [38;5;2mAdded regular file ../notty/examples/common.ml:[39m
     [38;5;2m1603[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1604[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1605[39m: [38;5;2m        3: [39m
     [38;5;2m1606[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m1607[39m: [38;5;2m        5: open Notty.Infix[39m
     [38;5;2m1608[39m: [38;5;2m        6: [39m
     [38;5;2m1609[39m: [38;5;2m        7: let pow n e = int_of_float (float n ** float e)[39m
     [38;5;2m1610[39m: [38;5;2m        8: [39m
     [38;5;2m1611[39m: [38;5;2m        9: module List = struct[39m
     [38;5;2m1612[39m: [38;5;2m       10: [39m
     [38;5;2m1613[39m: [38;5;2m       11:   include List[39m
     [38;5;2m1614[39m: [38;5;2m       12: [39m
     [38;5;2m1615[39m: [38;5;2m       13:   let rec replicate n a = if n < 1 then [] else a :: replicate (n - 1) a[39m
     [38;5;2m1616[39m: [38;5;2m       14: [39m
     [38;5;2m1617[39m: [38;5;2m       15:   let rec range a b = if a > b then [] else a :: range (a + 1) b[39m
     [38;5;2m1618[39m: [38;5;2m       16: [39m
     [38;5;2m1619[39m: [38;5;2m       17:   let rec intersperse a = function[39m
     [38;5;2m1620[39m: [38;5;2m       18:     | [] | [_] as t -> t[39m
     [38;5;2m1621[39m: [38;5;2m       19:     | x::xs         -> x :: a :: intersperse a xs[39m
     [38;5;2m1622[39m: [38;5;2m       20: [39m
     [38;5;2m1623[39m: [38;5;2m       21:   let rec take n = function[39m
     [38;5;2m1624[39m: [38;5;2m       22:     | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m1625[39m: [38;5;2m       23:     | _ -> [][39m
     [38;5;2m1626[39m: [38;5;2m       24: [39m
     [38;5;2m1627[39m: [38;5;2m       25:   let rec splitat n = function[39m
     [38;5;2m1628[39m: [38;5;2m       26:     | x::xs when n > 0 ->[39m
     [38;5;2m1629[39m: [38;5;2m       27:         let (a, b) = splitat (pred n) xs in (x::a, b)[39m
     [38;5;2m1630[39m: [38;5;2m       28:     | xs -> ([], xs)[39m
     [38;5;2m1631[39m: [38;5;2m       29: [39m
     [38;5;2m1632[39m: [38;5;2m       30:   let rec chunks n xs =[39m
     [38;5;2m1633[39m: [38;5;2m       31:     match splitat n xs with[39m
     [38;5;2m1634[39m: [38;5;2m       32:     | (a, []) -> [a][39m
     [38;5;2m1635[39m: [38;5;2m       33:     | (a, b)  -> a :: chunks n b[39m
     [38;5;2m1636[39m: [38;5;2m       34: [39m
     [38;5;2m1637[39m: [38;5;2m       35:   let rec zip xs ys = match (xs, ys) with[39m
     [38;5;2m1638[39m: [38;5;2m       36:     | ([], _) | (_, []) -> [][39m
     [38;5;2m1639[39m: [38;5;2m       37:     | (x::xs, y::ys) -> (x, y) :: zip xs ys[39m
     [38;5;2m1640[39m: [38;5;2m       38: [39m
     [38;5;2m1641[39m: [38;5;2m       39: end[39m
     [38;5;2m1642[39m: [38;5;2m       40: [39m
     [38;5;2m1643[39m: [38;5;2m       41: module String = struct[39m
     [38;5;2m1644[39m: [38;5;2m       42: [39m
     [38;5;2m1645[39m: [38;5;2m       43:   include String[39m
     [38;5;2m1646[39m: [38;5;2m       44: [39m
     [38;5;2m1647[39m: [38;5;2m       45:   let repeat n str =[39m
     [38;5;2m1648[39m: [38;5;2m       46:     let b = Buffer.create 16 in[39m
     [38;5;2m1649[39m: [38;5;2m       47:     for _ = 1 to n do Buffer.add_string b str done;[39m
     [38;5;2m1650[39m: [38;5;2m       48:     Buffer.contents b[39m
     [38;5;2m1651[39m: [38;5;2m       49: end[39m
     [38;5;2m1652[39m: [38;5;2m       50: [39m
     [38;5;2m1653[39m: [38;5;2m       51: let tile w h i = I.tabulate w h (fun _ _ -> i)[39m
     [38;5;2m1654[39m: [38;5;2m       52: [39m
     [38;5;2m1655[39m: [38;5;2m       53: (** A few images used in several places. *)[39m
     [38;5;2m1656[39m: [38;5;2m       54: module Images = struct[39m
     [38;5;2m1657[39m: [38;5;2m       55: [39m
     [38;5;2m1658[39m: [38;5;2m       56:   let i1 =[39m
     [38;5;2m1659[39m: [38;5;2m       57:     I.(string A.(fg lightblack) "omgbbq" <->[39m
     [38;5;2m1660[39m: [38;5;2m       58:        string A.(fg white ++ bg red) "@")[39m
     [38;5;2m1661[39m: [38;5;2m       59:     <|> I.(pad ~t:2 @@ string A.(fg green) "xo")[39m
     [38;5;2m1662[39m: [38;5;2m       60: [39m
     [38;5;2m1663[39m: [38;5;2m       61:   let i2 = I.(hpad 1 1 (hcrop 1 1 @@ tile 3 3 i1) <|> i1)[39m
     [38;5;2m1664[39m: [38;5;2m       62: [39m
     [38;5;2m1665[39m: [38;5;2m       63:   let i3 = tile 5 5 i2[39m
     [38;5;2m1666[39m: [38;5;2m       64: [39m
     [38;5;2m1667[39m: [38;5;2m       65:   let i4 =[39m
     [38;5;2m1668[39m: [38;5;2m       66:     let i = I.(i3 <|> crop ~t:1 i3 <|> i3) in[39m
     [38;5;2m1669[39m: [38;5;2m       67:     I.(crop ~l:1 i <-> crop ~r:1 i <-> crop ~b:2 i)[39m
     [38;5;2m1670[39m: [38;5;2m       68: [39m
     [38;5;2m1671[39m: [38;5;2m       69:   let i5 =[39m
     [38;5;2m1672[39m: [38;5;2m       70:     tile 5 1 List.([39m
     [38;5;2m1673[39m: [38;5;2m       71:       range 0 15 |> map (fun i -> I.pad ~t:i ~l:(i*2) i2) |> I.zcat[39m
     [38;5;2m1674[39m: [38;5;2m       72:     )[39m
     [38;5;2m1675[39m: [38;5;2m       73: [39m
     [38;5;2m1676[39m: [38;5;2m       74:   let c_gray_ramp =[39m
     [38;5;2m1677[39m: [38;5;2m       75:     I.tabulate 24 1 (fun g _ -> I.string A.(bg (gray g)) " ")[39m
     [38;5;2m1678[39m: [38;5;2m       76: [39m
     [38;5;2m1679[39m: [38;5;2m       77:   let c_cube_ix =[39m
     [38;5;2m1680[39m: [38;5;2m       78:     I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m1681[39m: [38;5;2m       79:       I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m1682[39m: [38;5;2m       80:         I.string A.(bg (rgb ~r ~g ~b)) " "[39m
     [38;5;2m1683[39m: [38;5;2m       81: [39m
     [38;5;2m1684[39m: [38;5;2m       82:   let c_cube_rgb =[39m
     [38;5;2m1685[39m: [38;5;2m       83:     let f x = [| 0x00; 0x5f; 0x87; 0xaf; 0xd7; 0xff |].(x) in[39m
     [38;5;2m1686[39m: [38;5;2m       84:     I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m1687[39m: [38;5;2m       85:       I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m1688[39m: [38;5;2m       86:         I.string A.(bg (rgb_888 ~r:(f r) ~g:(f g) ~b:(f b))) " "[39m
     [38;5;2m1689[39m: [38;5;2m       87: [39m
     [38;5;2m1690[39m: [38;5;2m       88:   let c_rainbow w h =[39m
     [38;5;2m1691[39m: [38;5;2m       89:     let pi2     = 2. *. 3.14159 in[39m
     [38;5;2m1692[39m: [38;5;2m       90:     let pi2_3   = pi2 /. 3.[39m
     [38;5;2m1693[39m: [38;5;2m       91:     and f t off = sin (t +. off) *. 128. +. 128. |> truncate in[39m
     [38;5;2m1694[39m: [38;5;2m       92:     let color t = A.rgb_888 ~r:(f t (-.pi2_3)) ~g:(f t 0.) ~b:(f t pi2_3) in[39m
     [38;5;2m1695[39m: [38;5;2m       93:     I.tabulate (w - 1) 1 @@ fun x _ ->[39m
     [38;5;2m1696[39m: [38;5;2m       94:       let t = (pi2 *. float x /. float w) +. 3.7 in[39m
     [38;5;2m1697[39m: [38;5;2m       95:       I.char A.(bg (color t)) ' ' 1 h[39m
     [38;5;2m1698[39m: [38;5;2m       96: [39m
     [38;5;2m1699[39m: [38;5;2m       97:   (* U+25CF BLACK CIRCLE *)[39m
     [38;5;2m1700[39m: [38;5;2m       98:   let dot color = I.string (A.fg color) "●"[39m
     [38;5;2m1701[39m: [38;5;2m       99:   (* U+25AA BLACK SMALL SQUARE *)[39m
     [38;5;2m1702[39m: [38;5;2m      100:   let square color = I.string (A.fg color) "▪"[39m
     [38;5;2m1703[39m: [38;5;2m      101: [39m
     [38;5;2m1704[39m: [38;5;2m      102:   let rec cantor = function[39m
     [38;5;2m1705[39m: [38;5;2m      103:     | 0 -> square A.lightblue[39m
     [38;5;2m1706[39m: [38;5;2m      104:     | n ->[39m
     [38;5;2m1707[39m: [38;5;2m      105:         let sub = cantor (pred n) in[39m
     [38;5;2m1708[39m: [38;5;2m      106:         I.hcat (List.replicate (pow 3 n) (square A.lightblue)) <->[39m
     [38;5;2m1709[39m: [38;5;2m      107:         (sub <|> I.void (pow 3 (n - 1)) 0 <|> sub)[39m
     [38;5;2m1710[39m: [38;5;2m      108: [39m
     [38;5;2m1711[39m: [38;5;2m      109:   let checker n m i =[39m
     [38;5;2m1712[39m: [38;5;2m      110:     let w = I.width i in[39m
     [38;5;2m1713[39m: [38;5;2m      111:     I.(tile (n/2) (m/2) (hpad 0 w i <-> hpad w 0 i))[39m
     [38;5;2m1714[39m: [38;5;2m      112: [39m
     [38;5;2m1715[39m: [38;5;2m      113:   let checker1 = checker 20 20 I.(char A.(bg magenta) ' ' 2 1)[39m
     [38;5;2m1716[39m: [38;5;2m      114: [39m
     [38;5;2m1717[39m: [38;5;2m      115:   let rec sierp c n = I.([39m
     [38;5;2m1718[39m: [38;5;2m      116:     if n > 1 then[39m
     [38;5;2m1719[39m: [38;5;2m      117:       let ss = sierp c (pred n) in ss <-> (ss <|> ss)[39m
     [38;5;2m1720[39m: [38;5;2m      118:     else hpad 1 0 (square c)[39m
     [38;5;2m1721[39m: [38;5;2m      119:   )[39m
     [38;5;2m1722[39m: [38;5;2m      120: [39m
     [38;5;2m1723[39m: [38;5;2m      121:   let grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m1724[39m: [38;5;2m      122: [39m
     [38;5;2m1725[39m: [38;5;2m      123:   let outline attr i =[39m
     [38;5;2m1726[39m: [38;5;2m      124:     let (w, h) = I.(width i, height i) in[39m
     [38;5;2m1727[39m: [38;5;2m      125:     let chr x = I.uchar attr (Uchar.of_int x) 1 1[39m
     [38;5;2m1728[39m: [38;5;2m      126:     and hbar  = I.uchar attr (Uchar.of_int 0x2500) w 1[39m
     [38;5;2m1729[39m: [38;5;2m      127:     and vbar  = I.uchar attr (Uchar.of_int 0x2502) 1 h in[39m
     [38;5;2m1730[39m: [38;5;2m      128:     let (a, b, c, d) = (chr 0x256d, chr 0x256e, chr 0x256f, chr 0x2570) in[39m
     [38;5;2m1731[39m: [38;5;2m      129:     grid [ [a; hbar; b]; [vbar; i; vbar]; [d; hbar; c] ][39m
     [38;5;2m1732[39m: [38;5;2m      130: end[39m
     [38;5;2m1733[39m: [38;5;2m      131: [39m
     [38;5;2m1734[39m: [38;5;2m      132: let halfblock = "▄"[39m
     [38;5;2m1735[39m: [38;5;2m      133: [39m
     [38;5;2m1736[39m: [38;5;2m      134: let pxmatrix w h f = I.tabulate w h @@ fun x y ->[39m
     [38;5;2m1737[39m: [38;5;2m      135:   let y = y * 2 in[39m
     [38;5;2m1738[39m: [38;5;2m      136:   I.string A.(bg (f x y) ++ fg (f x (y + 1))) halfblock[39m
     [38;5;2m1739[39m: [38;5;2m      137: [39m
     [38;5;2m1740[39m: [38;5;2m      138: module Term = Notty_unix.Term[39m
     [38;5;2m1741[39m: [38;5;2m      139: [39m
     [38;5;2m1742[39m: [38;5;2m      140: let simpleterm ~imgf ~f ~s =[39m
     [38;5;2m1743[39m: [38;5;2m      141:   let term = Term.create () in[39m
     [38;5;2m1744[39m: [38;5;2m      142:   let imgf (w, h) s =[39m
     [38;5;2m1745[39m: [38;5;2m      143:     I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m1746[39m: [38;5;2m      144:   let rec go s =[39m
     [38;5;2m1747[39m: [38;5;2m      145:     Term.image term (imgf (Term.size term) s);[39m
     [38;5;2m1748[39m: [38;5;2m      146:     match Term.event term with[39m
     [38;5;2m1749[39m: [38;5;2m      147:     | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m1750[39m: [38;5;2m      148:     | `Resize _ -> go s[39m
     [38;5;2m1751[39m: [38;5;2m      149:     | #Unescape.event as e ->[39m
     [38;5;2m1752[39m: [38;5;2m      150:         match f s e with Some s -> go s | _ -> ()[39m
     [38;5;2m1753[39m: [38;5;2m      151:   in go s[39m
     [38;5;2m1754[39m: [38;5;2mAdded regular file ../notty/examples/common_lwt.ml:[39m
     [38;5;2m1755[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1756[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1757[39m: [38;5;2m        3: [39m
     [38;5;2m1758[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m1759[39m: [38;5;2m        5: open Lwt.Infix[39m
     [38;5;2m1760[39m: [38;5;2m        6: [39m
     [38;5;2m1761[39m: [38;5;2m        7: include Common[39m
     [38;5;2m1762[39m: [38;5;2m        8: [39m
     [38;5;2m1763[39m: [38;5;2m        9: module T = Notty_lwt.Term[39m
     [38;5;2m1764[39m: [38;5;2m       10: [39m
     [38;5;2m1765[39m: [38;5;2m       11: let simpleterm_lwt ~imgf ~f ~s =[39m
     [38;5;2m1766[39m: [38;5;2m       12:   let term = T.create () in[39m
     [38;5;2m1767[39m: [38;5;2m       13:   let imgf (w, h) s =[39m
     [38;5;2m1768[39m: [38;5;2m       14:     I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m1769[39m: [38;5;2m       15:   let step e s = match e with[39m
     [38;5;2m1770[39m: [38;5;2m       16:     | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m1771[39m: [38;5;2m       17:         T.release term >|= fun () -> s[39m
     [38;5;2m1772[39m: [38;5;2m       18:     | `Resize dim -> T.image term (imgf dim s) >|= fun () -> s[39m
     [38;5;2m1773[39m: [38;5;2m       19:     | #Unescape.event as e ->[39m
     [38;5;2m1774[39m: [38;5;2m       20:         match f s e with[39m
     [38;5;2m1775[39m: [38;5;2m       21:         | Some s -> T.image term (imgf (T.size term) s) >|= fun () -> s[39m
     [38;5;2m1776[39m: [38;5;2m       22:         | None   -> T.release term >|= fun () -> s[39m
     [38;5;2m1777[39m: [38;5;2m       23:   in[39m
     [38;5;2m1778[39m: [38;5;2m       24:   ( T.image term (imgf (T.size term) s)[39m
     [38;5;2m1779[39m: [38;5;2m       25:     >>= fun () -> Lwt_stream.fold_s step (T.events term) s )[39m
     [38;5;2m1780[39m: [38;5;2m       26:   |> Lwt_main.run |> ignore[39m
     [38;5;2m1781[39m: [38;5;2m       27: [39m
     [38;5;2m1782[39m: [38;5;2m       28: [39m
     [38;5;2m1783[39m: [38;5;2m       29: let timer = function[39m
     [38;5;2m1784[39m: [38;5;2m       30:   | None   -> Lwt.wait () |> fst[39m
     [38;5;2m1785[39m: [38;5;2m       31:   | Some t -> Lwt_unix.sleep t >|= fun _ -> `Timer[39m
     [38;5;2m1786[39m: [38;5;2m       32: [39m
     [38;5;2m1787[39m: [38;5;2m       33: let event e = Lwt_stream.get (T.events e) >|= function[39m
     [38;5;2m1788[39m: [38;5;2m       34:   | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m1789[39m: [38;5;2m       35:   | None -> `End[39m
     [38;5;2m1790[39m: [38;5;2m       36: [39m
     [38;5;2m1791[39m: [38;5;2m       37: let simpleterm_lwt_timed ?delay ~f s0 =[39m
     [38;5;2m1792[39m: [38;5;2m       38:   let term = T.create () in[39m
     [38;5;2m1793[39m: [38;5;2m       39:   let rec loop (e, t) dim s =[39m
     [38;5;2m1794[39m: [38;5;2m       40:     (e <?> t) >>= function[39m
     [38;5;2m1795[39m: [38;5;2m       41:     | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m1796[39m: [38;5;2m       42:         Lwt.return_unit[39m
     [38;5;2m1797[39m: [38;5;2m       43:     | `Resize dim as evt     -> invoke (event term, t) dim s evt[39m
     [38;5;2m1798[39m: [38;5;2m       44:     | #Unescape.event as evt -> invoke (event term, t) dim s evt[39m
     [38;5;2m1799[39m: [38;5;2m       45:     | `Timer as evt          -> invoke (e, timer delay) dim s evt[39m
     [38;5;2m1800[39m: [38;5;2m       46:   and invoke es dim s e =[39m
     [38;5;2m1801[39m: [38;5;2m       47:     match f dim s e with[39m
     [38;5;2m1802[39m: [38;5;2m       48:     | `Continue s    -> loop es dim s[39m
     [38;5;2m1803[39m: [38;5;2m       49:     | `Redraw (s, i) -> T.image term i >>= fun () -> loop es dim s[39m
     [38;5;2m1804[39m: [38;5;2m       50:     | `Stop          -> Lwt.return_unit in[39m
     [38;5;2m1805[39m: [38;5;2m       51:   let size = T.size term in[39m
     [38;5;2m1806[39m: [38;5;2m       52:   loop (event term, timer delay) size s0[39m
     [38;5;2m1807[39m: [38;5;2mAdded regular file ../notty/examples/crops.ml:[39m
     [38;5;2m1808[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1809[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1810[39m: [38;5;2m        3: [39m
     [38;5;2m1811[39m: [38;5;2m        4: (**[39m
     [38;5;2m1812[39m: [38;5;2m        5:  * Demonstrates edge-case behavior of functions that produce rectangle-like[39m
     [38;5;2m1813[39m: [38;5;2m        6:  * things.[39m
     [38;5;2m1814[39m: [38;5;2m        7:  *)[39m
     [38;5;2m1815[39m: [38;5;2m        8: open Notty[39m
     [38;5;2m1816[39m: [38;5;2m        9: open Common[39m
     [38;5;2m1817[39m: [38;5;2m       10: [39m
     [38;5;2m1818[39m: [38;5;2m       11: let hdistribute ?align w imgs =[39m
     [38;5;2m1819[39m: [38;5;2m       12:   let n = List.length imgs in[39m
     [38;5;2m1820[39m: [38;5;2m       13:   I.(List.map (hsnap ?align (w / n)) imgs |> hcat)[39m
     [38;5;2m1821[39m: [38;5;2m       14: [39m
     [38;5;2m1822[39m: [38;5;2m       15: let take w h i = I.(vsnap h i |> hsnap w)[39m
     [38;5;2m1823[39m: [38;5;2m       16: [39m
     [38;5;2m1824[39m: [38;5;2m       17: let () =[39m
     [38;5;2m1825[39m: [38;5;2m       18:   simpleterm ~s:(2, 2)[39m
     [38;5;2m1826[39m: [38;5;2m       19:     ~f:(fun (w, h as s) -> function[39m
     [38;5;2m1827[39m: [38;5;2m       20:         `Key (`Arrow `Left, _) -> Some (w - 1, h)[39m
     [38;5;2m1828[39m: [38;5;2m       21:       | `Key (`Arrow `Right, _) -> Some (w + 1, h)[39m
     [38;5;2m1829[39m: [38;5;2m       22:       | `Key (`Arrow `Up, _) -> Some (w, h - 1)[39m
     [38;5;2m1830[39m: [38;5;2m       23:       | `Key (`Arrow `Down, _) -> Some (w, h + 1)[39m
     [38;5;2m1831[39m: [38;5;2m       24:       | `Key (`ASCII '0', _) -> Some (0, 0)[39m
     [38;5;2m1832[39m: [38;5;2m       25:       | _ -> Some s)[39m
     [38;5;2m1833[39m: [38;5;2m       26:     ~imgf:I.(fun (ow, oh) (w, h) ->[39m
     [38;5;2m1834[39m: [38;5;2m       27:       let (a1, a2, a3) = A.(fg lightmagenta, fg lightred, fg lightblue) in[39m
     [38;5;2m1835[39m: [38;5;2m       28:       strf "Sizing edge behavior. Dim: (%d, %d)" w h <->[39m
     [38;5;2m1836[39m: [38;5;2m       29:       ( hdistribute ow Images.[[39m
     [38;5;2m1837[39m: [38;5;2m       30:           outline a1 (uchar a1 (Uchar.of_int 0x2022) w h)[39m
     [38;5;2m1838[39m: [38;5;2m       31:         ; outline a2 (uchar a2 (Uchar.of_int 0x2022) 300 300 |> take w h)[39m
     [38;5;2m1839[39m: [38;5;2m       32:         ; outline a3 (void w h)[39m
     [38;5;2m1840[39m: [38;5;2m       33:         ] |> vsnap (oh - 4) )[39m
     [38;5;2m1841[39m: [38;5;2m       34:       <->[39m
     [38;5;2m1842[39m: [38;5;2m       35:       hdistribute ow [string a1 "char"; string a2 "crop"; string a3 "void"][39m
     [38;5;2m1843[39m: [38;5;2m       36:     )[39m
     [38;5;2m1844[39m: [38;5;2mAdded regular file ../notty/examples/cursor.ml:[39m
     [38;5;2m1845[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1846[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1847[39m: [38;5;2m        3: [39m
     [38;5;2m1848[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m1849[39m: [38;5;2m        5: open Common[39m
     [38;5;2m1850[39m: [38;5;2m        6: [39m
     [38;5;2m1851[39m: [38;5;2m        7: let rec main t (x, y as pos) =[39m
     [38;5;2m1852[39m: [38;5;2m        8:   let img =[39m
     [38;5;2m1853[39m: [38;5;2m        9:     let dot = I.string A.(bg lightred ++ fg black) "✓" |> I.pad ~l:x ~t:y[39m
     [38;5;2m1854[39m: [38;5;2m       10:     and txt = I.strf ~attr:A.(fg lightblack) "@(%d, %d)" x y in[39m
     [38;5;2m1855[39m: [38;5;2m       11:     I.(txt </> dot) in[39m
     [38;5;2m1856[39m: [38;5;2m       12:   Term.image t img;[39m
     [38;5;2m1857[39m: [38;5;2m       13:   Term.cursor t (Some pos);[39m
     [38;5;2m1858[39m: [38;5;2m       14:   match Term.event t with[39m
     [38;5;2m1859[39m: [38;5;2m       15:   | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m1860[39m: [38;5;2m       16:   | `Resize _ -> main t pos[39m
     [38;5;2m1861[39m: [38;5;2m       17:   | `Mouse ((`Press _ | `Drag), pos, _) -> main t pos[39m
     [38;5;2m1862[39m: [38;5;2m       18:   | `Key (`Arrow d, _) ->[39m
     [38;5;2m1863[39m: [38;5;2m       19:     ( main t @@ match d with[39m
     [38;5;2m1864[39m: [38;5;2m       20:       | `Up    -> (x, y - 1)[39m
     [38;5;2m1865[39m: [38;5;2m       21:       | `Down  -> (x, y + 1)[39m
     [38;5;2m1866[39m: [38;5;2m       22:       | `Left  -> (x - 1, y)[39m
     [38;5;2m1867[39m: [38;5;2m       23:       | `Right -> (x + 1, y) )[39m
     [38;5;2m1868[39m: [38;5;2m       24:   | _ -> main t pos[39m
     [38;5;2m1869[39m: [38;5;2m       25: [39m
     [38;5;2m1870[39m: [38;5;2m       26: let () = main (Term.create ()) (0, 1)[39m
     [38;5;2m1871[39m: [38;5;2mAdded regular file ../notty/examples/cuts.ml:[39m
     [38;5;2m1872[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1873[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1874[39m: [38;5;2m        3: [39m
     [38;5;2m1875[39m: [38;5;2m        4: (**[39m
     [38;5;2m1876[39m: [38;5;2m        5:  * Demonstrates text cropping, particularly of grapheme clusters and wide[39m
     [38;5;2m1877[39m: [38;5;2m        6:  * characters.[39m
     [38;5;2m1878[39m: [38;5;2m        7:  *)[39m
     [38;5;2m1879[39m: [38;5;2m        8: open Notty[39m
     [38;5;2m1880[39m: [38;5;2m        9: open Notty_unix[39m
     [38;5;2m1881[39m: [38;5;2m       10: open Common[39m
     [38;5;2m1882[39m: [38;5;2m       11: [39m
     [38;5;2m1883[39m: [38;5;2m       12: let hpadwith attr c a b i =[39m
     [38;5;2m1884[39m: [38;5;2m       13:   I.(char attr c a 1 <|> i <|> char attr c b 1)[39m
     [38;5;2m1885[39m: [38;5;2m       14: [39m
     [38;5;2m1886[39m: [38;5;2m       15: let cuts i =[39m
     [38;5;2m1887[39m: [38;5;2m       16:   let w = I.width i in[39m
     [38;5;2m1888[39m: [38;5;2m       17:   List.([39m
     [38;5;2m1889[39m: [38;5;2m       18:     range 0 w |> map (fun a ->[39m
     [38;5;2m1890[39m: [38;5;2m       19:       range 0 (w - a) |> map (fun b ->[39m
     [38;5;2m1891[39m: [38;5;2m       20:         i |> I.hcrop a b |> hpadwith A.(fg lightblack) '.' a b[39m
     [38;5;2m1892[39m: [38;5;2m       21:       ) |> I.vcat |> I.hpad 1 1[39m
     [38;5;2m1893[39m: [38;5;2m       22:     ) |> I.hcat |> I.vpad 1 1[39m
     [38;5;2m1894[39m: [38;5;2m       23:   )[39m
     [38;5;2m1895[39m: [38;5;2m       24: [39m
     [38;5;2m1896[39m: [38;5;2m       25: let colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m1897[39m: [38;5;2m       26: [39m
     [38;5;2m1898[39m: [38;5;2m       27: let patterns = [[39m
     [38;5;2m1899[39m: [38;5;2m       28:   "desu"[39m
     [38;5;2m1900[39m: [38;5;2m       29: ; ".▪e\204\129●."[39m
     [38;5;2m1901[39m: [38;5;2m       30: ; "(茶‸茶‶)"[39m
     [38;5;2m1902[39m: [38;5;2m       31: ; "(⌐■_■)"[39m
     [38;5;2m1903[39m: [38;5;2m       32: (* ; "¯\\(ツ)/¯" *)[39m
     [38;5;2m1904[39m: [38;5;2m       33: (* ; "ಠ_ಠ" *)[39m
     [38;5;2m1905[39m: [38;5;2m       34: (* ; "ಡ_ಡ" *)[39m
     [38;5;2m1906[39m: [38;5;2m       35: (* ; "\xe0\xb2\xa0\x5f\xe0\xb1\x83" *)[39m
     [38;5;2m1907[39m: [38;5;2m       36: (* ; "ತಎತ" *)[39m
     [38;5;2m1908[39m: [38;5;2m       37: (* ; "ಥ_ಥ" *)[39m
     [38;5;2m1909[39m: [38;5;2m       38: ; "ᕕ( ᐛ )ᕗ"[39m
     [38;5;2m1910[39m: [38;5;2m       39: (* ; "ᕙ(⇀‸↼‶)ᕗ" *)[39m
     [38;5;2m1911[39m: [38;5;2m       40: (* ; "ᕦ(ò_óˇ)ᕤ" *)[39m
     [38;5;2m1912[39m: [38;5;2m       41: (* ; "(╯ ︵╰ )" *)[39m
     [38;5;2m1913[39m: [38;5;2m       42: (* ; "\x28\x20\xcd\xa1\xc2\xb0\x20\xcd\x9c\xca\x96\x20\xcd\xa1\xc2\xb0\x29" *)[39m
     [38;5;2m1914[39m: [38;5;2m       43: ][39m
     [38;5;2m1915[39m: [38;5;2m       44: [39m
     [38;5;2m1916[39m: [38;5;2m       45: [39m
     [38;5;2m1917[39m: [38;5;2m       46: let () =[39m
     [38;5;2m1918[39m: [38;5;2m       47:   let open I in[39m
     [38;5;2m1919[39m: [38;5;2m       48: [39m
     [38;5;2m1920[39m: [38;5;2m       49:   patterns |> List.map (fun s ->[39m
     [38;5;2m1921[39m: [38;5;2m       50:     cuts (string A.(fg lightmagenta ++ bg lightblack) s)[39m
     [38;5;2m1922[39m: [38;5;2m       51:   ) |> I.vcat |> eol |> output_image ;[39m
     [38;5;2m1923[39m: [38;5;2m       52: [39m
     [38;5;2m1924[39m: [38;5;2m       53:   colors |> List.mapi (fun i c ->[39m
     [38;5;2m1925[39m: [38;5;2m       54:     pad ~l:i ~t:i ([39m
     [38;5;2m1926[39m: [38;5;2m       55:       string A.(fg black ++ bg c ++ st blink) "茶" <|>[39m
     [38;5;2m1927[39m: [38;5;2m       56:       pad ~l:2 ~t:1[39m
     [38;5;2m1928[39m: [38;5;2m       57:         (string A.(fg c ++ st blink) "PARTY!"))[39m
     [38;5;2m1929[39m: [38;5;2m       58:   ) |> zcat |> pad ~l:2 ~t:2 ~b:2 |> output_image[39m
     [38;5;2m1930[39m: [38;5;2mAdded regular file ../notty/examples/dune:[39m
     [38;5;2m1931[39m: [38;5;2m        1: (library[39m
     [38;5;2m1932[39m: [38;5;2m        2:   (name common)[39m
     [38;5;2m1933[39m: [38;5;2m        3:   (modules common)[39m
     [38;5;2m1934[39m: [38;5;2m        4:   (libraries notty notty.unix))[39m
     [38;5;2m1935[39m: [38;5;2m        5: [39m
     [38;5;2m1936[39m: [38;5;2m        6: (library[39m
     [38;5;2m1937[39m: [38;5;2m        7:   (name common_lwt)[39m
     [38;5;2m1938[39m: [38;5;2m        8:   (modules common_lwt)[39m
     [38;5;2m1939[39m: [38;5;2m        9:   (libraries common notty.lwt))[39m
     [38;5;2m1940[39m: [38;5;2m       10: [39m
     [38;5;2m1941[39m: [38;5;2m       11: (executables[39m
     [38;5;2m1942[39m: [38;5;2m       12:   (names testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m1943[39m: [38;5;2m       13:          letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m1944[39m: [38;5;2m       14:          life)[39m
     [38;5;2m1945[39m: [38;5;2m       15:   (modules testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m1946[39m: [38;5;2m       16:            letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m1947[39m: [38;5;2m       17:            life)[39m
     [38;5;2m1948[39m: [38;5;2m       18:   (libraries common common_lwt))[39m
     [38;5;2m1949[39m: [38;5;2m       19: [39m
     [38;5;2m1950[39m: [38;5;2m       20: (alias[39m
     [38;5;2m1951[39m: [38;5;2m       21:   (name ex)[39m
     [38;5;2m1952[39m: [38;5;2m       22:   (package notty)[39m
     [38;5;2m1953[39m: [38;5;2m       23:   (deps testpatterns.exe colors.exe almondbread.exe crops.exe cursor.exe[39m
     [38;5;2m1954[39m: [38;5;2m       24:         cuts.exe emoji.exe inline.exe keys.exe letters.exe mouse.exe[39m
     [38;5;2m1955[39m: [38;5;2m       25:         thisbig.exe runes.exe sierpinski.exe rain.exe sierpinski_lwt.exe[39m
     [38;5;2m1956[39m: [38;5;2m       26:         linear.exe life.exe))[39m
     [38;5;2m1957[39m: [38;5;2mAdded regular file ../notty/examples/emoji.ml:[39m
     [38;5;2m1958[39m: [38;5;2m        1: open Notty[39m
     [38;5;2m1959[39m: [38;5;2m        2: open Common[39m
     [38;5;2m1960[39m: [38;5;2m        3: [39m
     [38;5;2m1961[39m: [38;5;2m        4: let es = [[39m
     [38;5;2m1962[39m: [38;5;2m        5:   [0x2e; 0x2e; 0x2e; 0x2e];[39m
     [38;5;2m1963[39m: [38;5;2m        6:   [0x25aa; 0x25fe; 0x25fc; 0x2b1b];[39m
     [38;5;2m1964[39m: [38;5;2m        7:   [0x1f346; 0x1f351; 0x1f605; 0x1f4a6];[39m
     [38;5;2m1965[39m: [38;5;2m        8:   [0x1f62d; 0x1f52a; 0x1f52a; 0x1f47c];[39m
     [38;5;2m1966[39m: [38;5;2m        9: ][39m
     [38;5;2m1967[39m: [38;5;2m       10: [39m
     [38;5;2m1968[39m: [38;5;2m       11: let image =[39m
     [38;5;2m1969[39m: [38;5;2m       12:   es |> List.(map (map @@ fun x ->[39m
     [38;5;2m1970[39m: [38;5;2m       13:     let i = I.uchar A.(fg lightwhite) (Uchar.of_int x) 1 1 in[39m
     [38;5;2m1971[39m: [38;5;2m       14:     I.(pad ~r:(3 - width i) i)[39m
     [38;5;2m1972[39m: [38;5;2m       15:   )) |> Images.grid |> I.pad ~l:1 |> Images.outline A.(fg lightblack)[39m
     [38;5;2m1973[39m: [38;5;2m       16: [39m
     [38;5;2m1974[39m: [38;5;2m       17: let () = Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m1975[39m: [38;5;2m       18:   I.(pad ~l:((w - width image) / 2) ~b:1 image)[39m
     [38;5;2m1976[39m: [38;5;2mAdded regular file ../notty/examples/inline.ml:[39m
     [38;5;2m1977[39m: [38;5;2m        1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m1978[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m1979[39m: [38;5;2m        3: [39m
     [38;5;2m1980[39m: [38;5;2m        4: (** Demonstrates manual cursor positioning. *)[39m
     [38;5;2m1981[39m: [38;5;2m        5: [39m
     [38;5;2m1982[39m: [38;5;2m        6: open Notty[39m
     [38;5;2m1983[39m: [38;5;2m        7: open Notty.Infix[39m
     [38;5;2m1984[39m: [38;5;2m        8: open Notty_unix[39m
     [38;5;2m1985[39m: [38;5;2m        9: [39m
     [38;5;2m1986[39m: [38;5;2m       10: let sleep n = flush stdout; Unix.select [] [] [] n |> ignore[39m
     [38;5;2m1987[39m: [38;5;2m       11: [39m
     [38;5;2m1988[39m: [38;5;2m       12: let pp_str attr = I.pp_attr attr Format.pp_print_string[39m
     [38;5;2m1989[39m: [38;5;2m       13: [39m
     [38;5;2m1990[39m: [38;5;2m       14: let rewind n = move_cursor `Home; move_cursor (`By (0, - (max n 0)))[39m
     [38;5;2m1991[39m: [38;5;2m       15: [39m
     [38;5;2m1992[39m: [38;5;2m       16: let output_subst ~prev i =[39m
     [38;5;2m1993[39m: [38;5;2m       17:   let h = I.height prev in[39m
     [38;5;2m1994[39m: [38;5;2m       18:   let d = h - I.height i in[39m
     [38;5;2m1995[39m: [38;5;2m       19:   if d > 0 then ( rewind (d - 1); output_image (I.void 0 d) );[39m
     [38;5;2m1996[39m: [38;5;2m       20:   rewind (h - 1); output_image i[39m
     [38;5;2m1997[39m: [38;5;2m       21: [39m
     [38;5;2m1998[39m: [38;5;2m       22: let cmyk = function[39m
     [38;5;2m1999[39m: [38;5;2m       23:   | 0 -> A.rgb ~r:0 ~g:5 ~b:5[39m
     [38;5;2m2000[39m: [38;5;2m       24:   | 1 -> A.rgb ~r:5 ~g:0 ~b:5[39m
     [38;5;2m2001[39m: [38;5;2m       25:   | 2 -> A.rgb ~r:5 ~g:5 ~b:0[39m
     [38;5;2m2002[39m: [38;5;2m       26:   | 3 -> A.rgb ~r:0 ~g:0 ~b:0[39m
     [38;5;2m2003[39m: [38;5;2m       27:   | _ -> A.rgb ~r:5 ~g:5 ~b:5[39m
     [38;5;2m2004[39m: [38;5;2m       28: [39m
     [38;5;2m2005[39m: [38;5;2m       29: let () =[39m
     [38;5;2m2006[39m: [38;5;2m       30: [39m
     [38;5;2m2007[39m: [38;5;2m       31:   let (w, h) = match winsize Unix.stdout with[39m
     [38;5;2m2008[39m: [38;5;2m       32:     Some dim -> dim | _ -> assert false[39m
     [38;5;2m2009[39m: [38;5;2m       33:   and attr = A.(fg lightwhite ++ bg blue) in[39m
     [38;5;2m2010[39m: [38;5;2m       34:   let img1 =[39m
     [38;5;2m2011[39m: [38;5;2m       35:     I.(string attr "THE BLUE STRIPE ABOVE" <->[39m
     [38;5;2m2012[39m: [38;5;2m       36:          tabulate 1 h (fun _ _ -> I.strf "HIDDEN"))[39m
     [38;5;2m2013[39m: [38;5;2m       37:   and img2 =[39m
     [38;5;2m2014[39m: [38;5;2m       38:     I.(strf "Top line. There's a %a above. ^^^"[39m
     [38;5;2m2015[39m: [38;5;2m       39:          (pp_str attr) "blue stripe" |> vpad 0 2) in[39m
     [38;5;2m2016[39m: [38;5;2m       40: [39m
     [38;5;2m2017[39m: [38;5;2m       41:   output_image img1; output_subst ~prev:img1 img2;[39m
     [38;5;2m2018[39m: [38;5;2m       42: [39m
     [38;5;2m2019[39m: [38;5;2m       43:   output_image I.(string A.(fg white) "[..]" |> eol);[39m
     [38;5;2m2020[39m: [38;5;2m       44:   for i = 0 to 5 do[39m
     [38;5;2m2021[39m: [38;5;2m       45:     let a  = A.(bg (rgb ~r:i ~b:(5 - i) ~g:0)) in[39m
     [38;5;2m2022[39m: [38;5;2m       46:     let bg = I.tabulate 1 i (fun _ -> I.strf "HIDDEN [%d]") |> eol[39m
     [38;5;2m2023[39m: [38;5;2m       47:     and fg = I.char a ' ' 19 (5 - i) <|> I.char a '-' 1 (5 - i) |> eol in[39m
     [38;5;2m2024[39m: [38;5;2m       48:     output_image bg; output_subst ~prev:bg fg;[39m
     [38;5;2m2025[39m: [38;5;2m       49:   done;[39m
     [38;5;2m2026[39m: [38;5;2m       50:   output_image I.(string A.(fg white) "[..]" |> vpad 0 2);[39m
     [38;5;2m2027[39m: [38;5;2m       51: [39m
     [38;5;2m2028[39m: [38;5;2m       52:   let rec go prev n =[39m
     [38;5;2m2029[39m: [38;5;2m       53:     if n <= w then[39m
     [38;5;2m2030[39m: [38;5;2m       54:       let h = log (float n) |> truncate in[39m
     [38;5;2m2031[39m: [38;5;2m       55:       let i = prev <|> I.tabulate 1 h (fun _ y -> I.char A.(bg (cmyk y)) ' ' 1 1) in[39m
     [38;5;2m2032[39m: [38;5;2m       56:       output_subst ~prev i; sleep 0.01; go i (n + 1)[39m
     [38;5;2m2033[39m: [38;5;2m       57:     else output_subst ~prev I.empty in[39m
     [38;5;2m2034[39m: [38;5;2m       58:   show_cursor false;[39m
     [38;5;2m2035[39m: [38;5;2m       59:   go I.empty 1;[39m
     [38;5;2m2036[39m: [38;5;2m       60:   show_cursor true;[39m
     [38;5;2m2037[39m: [38;5;2m       61: [39m
     [38;5;2m2038[39m: [38;5;2m       62:   output_image[39m
     [38;5;2m2039[39m: [38;5;2m       63:     I.(strf "It doesn't say %a anywhere on screen, either."[39m
     [38;5;2m2040[39m: [38;5;2m       64:         (pp_attr A.(fg white) Format.pp_print_string) "hidden" |> eol)[39m
     [38;5;2m2041[39m: [38;5;2m       65: [39m
     [38;5;2m2042[39m: [38;5;2mAdded regular file ../notty/examples/keys.ml:[39m
     [38;5;2m2043[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2044[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2045[39m: [38;5;2m        3: [39m
     [38;5;2m2046[39m: [38;5;2m        4: (**[39m
     [38;5;2m2047[39m: [38;5;2m        5:  * Demonstrates input parsing.[39m
     [38;5;2m2048[39m: [38;5;2m        6:  *)[39m
     [38;5;2m2049[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m2050[39m: [38;5;2m        8: open Common[39m
     [38;5;2m2051[39m: [38;5;2m        9: [39m
     [38;5;2m2052[39m: [38;5;2m       10: let pps = Format.pp_print_string[39m
     [38;5;2m2053[39m: [38;5;2m       11: let ppi = Format.pp_print_int[39m
     [38;5;2m2054[39m: [38;5;2m       12: [39m
     [38;5;2m2055[39m: [38;5;2m       13: let pp_special fmt = function[39m
     [38;5;2m2056[39m: [38;5;2m       14:   | `Escape       -> pps fmt "ESCAPE"[39m
     [38;5;2m2057[39m: [38;5;2m       15:   | `Enter        -> pps fmt "ENTER"[39m
     [38;5;2m2058[39m: [38;5;2m       16:   | `Tab          -> pps fmt "TAB"[39m
     [38;5;2m2059[39m: [38;5;2m       17:   | `Backspace    -> pps fmt "BACKSPACE"[39m
     [38;5;2m2060[39m: [38;5;2m       18:   | `Arrow `Up    -> pps fmt "UP"[39m
     [38;5;2m2061[39m: [38;5;2m       19:   | `Arrow `Down  -> pps fmt "DOWN"[39m
     [38;5;2m2062[39m: [38;5;2m       20:   | `Arrow `Left  -> pps fmt "LEFT"[39m
     [38;5;2m2063[39m: [38;5;2m       21:   | `Arrow `Right -> pps fmt "RIGHT"[39m
     [38;5;2m2064[39m: [38;5;2m       22:   | `Page `Up     -> pps fmt "PAGE UP"[39m
     [38;5;2m2065[39m: [38;5;2m       23:   | `Page `Down   -> pps fmt "PAGE DOWN"[39m
     [38;5;2m2066[39m: [38;5;2m       24:   | `Home         -> pps fmt "HOME"[39m
     [38;5;2m2067[39m: [38;5;2m       25:   | `End          -> pps fmt "END"[39m
     [38;5;2m2068[39m: [38;5;2m       26:   | `Insert       -> pps fmt "INSERT"[39m
     [38;5;2m2069[39m: [38;5;2m       27:   | `Delete       -> pps fmt "DELETE"[39m
     [38;5;2m2070[39m: [38;5;2m       28:   | `Function n   -> pps fmt "FN"; ppi fmt n[39m
     [38;5;2m2071[39m: [38;5;2m       29: [39m
     [38;5;2m2072[39m: [38;5;2m       30: let pp_mods fmt = function[39m
     [38;5;2m2073[39m: [38;5;2m       31:   | [] -> ()[39m
     [38;5;2m2074[39m: [38;5;2m       32:   | ms -> ms |> List.iter (fun m ->[39m
     [38;5;2m2075[39m: [38;5;2m       33:       pps fmt @@ match m with `Meta -> "M" | `Ctrl -> "C" | `Shift -> "S"[39m
     [38;5;2m2076[39m: [38;5;2m       34:     )[39m
     [38;5;2m2077[39m: [38;5;2m       35: [39m
     [38;5;2m2078[39m: [38;5;2m       36: let pp_mouse fmt = function[39m
     [38;5;2m2079[39m: [38;5;2m       37:   | `Release -> pps fmt "Release"[39m
     [38;5;2m2080[39m: [38;5;2m       38:   | `Drag    -> pps fmt "Drag"[39m
     [38;5;2m2081[39m: [38;5;2m       39:   | `Move    -> pps fmt "Move"[39m
     [38;5;2m2082[39m: [38;5;2m       40:   | `Press k ->[39m
     [38;5;2m2083[39m: [38;5;2m       41:       pps fmt "Press ";[39m
     [38;5;2m2084[39m: [38;5;2m       42:       pps fmt @@ match k with[39m
     [38;5;2m2085[39m: [38;5;2m       43:         | `Left         -> "Left"[39m
     [38;5;2m2086[39m: [38;5;2m       44:         | `Middle       -> "Middle"[39m
     [38;5;2m2087[39m: [38;5;2m       45:         | `Right        -> "Right"[39m
     [38;5;2m2088[39m: [38;5;2m       46:         | `Scroll `Up   -> "Scroll Up"[39m
     [38;5;2m2089[39m: [38;5;2m       47:         | `Scroll `Down -> "Scroll Down"[39m
     [38;5;2m2090[39m: [38;5;2m       48: [39m
     [38;5;2m2091[39m: [38;5;2m       49: let pp_u ppf u = Format.fprintf ppf "U+%04X" (Uchar.to_int u)[39m
     [38;5;2m2092[39m: [38;5;2m       50: [39m
     [38;5;2m2093[39m: [38;5;2m       51: let () =[39m
     [38;5;2m2094[39m: [38;5;2m       52:   let magenta = A.(fg lightmagenta ++ bg black)[39m
     [38;5;2m2095[39m: [38;5;2m       53:   and green   = A.(fg lightgreen   ++ bg black)[39m
     [38;5;2m2096[39m: [38;5;2m       54:   and blue    = A.(fg lightblue    ++ bg black) in[39m
     [38;5;2m2097[39m: [38;5;2m       55:   let pp_mods  = I.pp_attr green pp_mods[39m
     [38;5;2m2098[39m: [38;5;2m       56:   and pp_mouse = I.pp_attr blue pp_mouse in[39m
     [38;5;2m2099[39m: [38;5;2m       57:   simpleterm ~s:[][39m
     [38;5;2m2100[39m: [38;5;2m       58:     ~f:(fun xs x -> Some (List.take 100 (x::xs)))[39m
     [38;5;2m2101[39m: [38;5;2m       59:     ~imgf:(fun (_, h) xs ->[39m
     [38;5;2m2102[39m: [38;5;2m       60:       let attr = magenta in[39m
     [38;5;2m2103[39m: [38;5;2m       61:       let msg = I.string A.empty "Push keys."[39m
     [38;5;2m2104[39m: [38;5;2m       62:       and ks = List.map (function[39m
     [38;5;2m2105[39m: [38;5;2m       63:         | `Key ((`ASCII _ | `Uchar _) as c, mods) ->[39m
     [38;5;2m2106[39m: [38;5;2m       64:             let u = Unescape.uchar c in[39m
     [38;5;2m2107[39m: [38;5;2m       65:             I.(uchar blue u 1 1 <|> strf ~attr " %a %a" pp_u u pp_mods mods)[39m
     [38;5;2m2108[39m: [38;5;2m       66:         | `Key (#Unescape.special as k, mods) ->[39m
     [38;5;2m2109[39m: [38;5;2m       67:             I.strf ~attr "%a %a" pp_special k pp_mods mods[39m
     [38;5;2m2110[39m: [38;5;2m       68:         | `Mouse (e, (x, y), mods) ->[39m
     [38;5;2m2111[39m: [38;5;2m       69:             I.strf ~attr "MOUSE %a (%d, %d) %a" pp_mouse e x y pp_mods mods[39m
     [38;5;2m2112[39m: [38;5;2m       70:         | `Paste e ->[39m
     [38;5;2m2113[39m: [38;5;2m       71:             I.strf ~attr "PASTE %s" (if e = `Start then "START" else "END")[39m
     [38;5;2m2114[39m: [38;5;2m       72:         ) xs |> I.vcat in[39m
     [38;5;2m2115[39m: [38;5;2m       73:       I.(vsnap ~align:`Top (h - 3) ks <-> void 0 1 <-> msg |> pad ~l:1 ~t:1))[39m
     [38;5;2m2116[39m: [38;5;2mAdded regular file ../notty/examples/letters.ml:[39m
     [38;5;2m2117[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2118[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2119[39m: [38;5;2m        3: [39m
     [38;5;2m2120[39m: [38;5;2m        4: (**[39m
     [38;5;2m2121[39m: [38;5;2m        5:  * Dancing letters.[39m
     [38;5;2m2122[39m: [38;5;2m        6:  *)[39m
     [38;5;2m2123[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m2124[39m: [38;5;2m        8: open Common[39m
     [38;5;2m2125[39m: [38;5;2m        9: [39m
     [38;5;2m2126[39m: [38;5;2m       10: let nw = 6[39m
     [38;5;2m2127[39m: [38;5;2m       11: and nh = 5[39m
     [38;5;2m2128[39m: [38;5;2m       12: [39m
     [38;5;2m2129[39m: [38;5;2m       13: let () =[39m
     [38;5;2m2130[39m: [38;5;2m       14:   simpleterm ~s:[][39m
     [38;5;2m2131[39m: [38;5;2m       15:     ~f:(fun us -> function[39m
     [38;5;2m2132[39m: [38;5;2m       16:       | `Key ((`Delete|`Backspace), _) ->[39m
     [38;5;2m2133[39m: [38;5;2m       17:           Some (match us with _::xs -> xs | _ -> us)[39m
     [38;5;2m2134[39m: [38;5;2m       18:       | `Key ((`ASCII _|`Uchar _ as u), _) ->[39m
     [38;5;2m2135[39m: [38;5;2m       19:           Some (List.take (nw * nh) (Unescape.uchar u :: us))[39m
     [38;5;2m2136[39m: [38;5;2m       20:       | _  -> Some us)[39m
     [38;5;2m2137[39m: [38;5;2m       21:     ~imgf:(fun _ us ->[39m
     [38;5;2m2138[39m: [38;5;2m       22:       let open List in[39m
     [38;5;2m2139[39m: [38;5;2m       23:       let uus = chunks nw (rev us) in[39m
     [38;5;2m2140[39m: [38;5;2m       24:       mapi (fun i us ->[39m
     [38;5;2m2141[39m: [38;5;2m       25:         mapi (fun j u ->[39m
     [38;5;2m2142[39m: [38;5;2m       26:           I.uchar A.(fg white ++ bg (rgb ~r:0 ~g:i ~b:j)) u 1 1[39m
     [38;5;2m2143[39m: [38;5;2m       27:         ) us |> I.hcat[39m
     [38;5;2m2144[39m: [38;5;2m       28:       ) uus |> I.vcat[39m
     [38;5;2m2145[39m: [38;5;2m       29:       |> I.pad ~t:1 ~l:1[39m
     [38;5;2m2146[39m: [38;5;2m       30:       |> I.hsnap ~align:`Left (nw + 1)[39m
     [38;5;2m2147[39m: [38;5;2m       31:       |> tile nw 1)[39m
     [38;5;2m2148[39m: [38;5;2mAdded regular file ../notty/examples/life.ml:[39m
     [38;5;2m2149[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2150[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2151[39m: [38;5;2m        3: [39m
     [38;5;2m2152[39m: [38;5;2m        4: (*[39m
     [38;5;2m2153[39m: [38;5;2m        5:  * Game of Life with some ZX spectrum kitsch.[39m
     [38;5;2m2154[39m: [38;5;2m        6:  *)[39m
     [38;5;2m2155[39m: [38;5;2m        7: [39m
     [38;5;2m2156[39m: [38;5;2m        8: let flip f a b = f b a[39m
     [38;5;2m2157[39m: [38;5;2m        9: [39m
     [38;5;2m2158[39m: [38;5;2m       10: (** Live, **)[39m
     [38;5;2m2159[39m: [38;5;2m       11: [39m
     [38;5;2m2160[39m: [38;5;2m       12: module Coord = struct[39m
     [38;5;2m2161[39m: [38;5;2m       13:   type t = int * int[39m
     [38;5;2m2162[39m: [38;5;2m       14:   let compare ((a, b) : t) (c, d) =[39m
     [38;5;2m2163[39m: [38;5;2m       15:     match compare a c with 0 -> compare b d | r -> r[39m
     [38;5;2m2164[39m: [38;5;2m       16:   let equal ((a, b) : t) (c, d) = a = c && b = d[39m
     [38;5;2m2165[39m: [38;5;2m       17: end[39m
     [38;5;2m2166[39m: [38;5;2m       18: [39m
     [38;5;2m2167[39m: [38;5;2m       19: module CSet = struct[39m
     [38;5;2m2168[39m: [38;5;2m       20:   include Set.Make (Coord)[39m
     [38;5;2m2169[39m: [38;5;2m       21:   let of_list = List.fold_left (flip add) empty[39m
     [38;5;2m2170[39m: [38;5;2m       22:   let map f s = fold (fun x s -> add (f x) s) s empty[39m
     [38;5;2m2171[39m: [38;5;2m       23: end[39m
     [38;5;2m2172[39m: [38;5;2m       24: [39m
     [38;5;2m2173[39m: [38;5;2m       25: module CMap = struct[39m
     [38;5;2m2174[39m: [38;5;2m       26:   include Map.Make (Coord)[39m
     [38;5;2m2175[39m: [38;5;2m       27:   let preimg p m =[39m
     [38;5;2m2176[39m: [38;5;2m       28:     fold (fun k v s -> if p v then CSet.add k s else s) m CSet.empty[39m
     [38;5;2m2177[39m: [38;5;2m       29: end[39m
     [38;5;2m2178[39m: [38;5;2m       30: [39m
     [38;5;2m2179[39m: [38;5;2m       31: let erem x y = (x mod y + y) mod y[39m
     [38;5;2m2180[39m: [38;5;2m       32: let square (w, h) (a, b as ab) =[39m
     [38;5;2m2181[39m: [38;5;2m       33:   if a < 0 || a >= w || b < 0 || b >= h then (-1, -1) else ab[39m
     [38;5;2m2182[39m: [38;5;2m       34: let torus (w, h) (a, b) = (erem a w, erem b h)[39m
     [38;5;2m2183[39m: [38;5;2m       35: let moebius (w, h) (a, b as ab) =[39m
     [38;5;2m2184[39m: [38;5;2m       36:   if a < 0 || a >= w then (erem a w, h - b - 1) else ab[39m
     [38;5;2m2185[39m: [38;5;2m       37: [39m
     [38;5;2m2186[39m: [38;5;2m       38: let neigh topo (a, b) = [[39m
     [38;5;2m2187[39m: [38;5;2m       39:   (a-1, b); (a+1, b); (a-1, b-1); (a-1, b+1)[39m
     [38;5;2m2188[39m: [38;5;2m       40: ; (a, b-1); (a, b+1); (a+1, b-1); (a+1, b+1)[39m
     [38;5;2m2189[39m: [38;5;2m       41: ] |> List.map topo[39m
     [38;5;2m2190[39m: [38;5;2m       42: [39m
     [38;5;2m2191[39m: [38;5;2m       43: let step topo life =[39m
     [38;5;2m2192[39m: [38;5;2m       44:   let nlive pt =[39m
     [38;5;2m2193[39m: [38;5;2m       45:     List.(neigh topo pt |> filter (flip CSet.mem life) |> length) in[39m
     [38;5;2m2194[39m: [38;5;2m       46:   let f1 pt acc =[39m
     [38;5;2m2195[39m: [38;5;2m       47:     pt :: neigh topo pt |> List.fold_left (fun acc -> function[39m
     [38;5;2m2196[39m: [38;5;2m       48:       | (-1, -1) -> acc[39m
     [38;5;2m2197[39m: [38;5;2m       49:       | pt when CMap.mem pt acc -> acc[39m
     [38;5;2m2198[39m: [38;5;2m       50:       | pt ->[39m
     [38;5;2m2199[39m: [38;5;2m       51:           let n = nlive pt in[39m
     [38;5;2m2200[39m: [38;5;2m       52:           acc |> CMap.add pt[39m
     [38;5;2m2201[39m: [38;5;2m       53:             (if n = 3 || (n = 2 && CSet.mem pt life) then 0 else 1)[39m
     [38;5;2m2202[39m: [38;5;2m       54:     ) acc in[39m
     [38;5;2m2203[39m: [38;5;2m       55:   CSet.fold f1 life CMap.empty |> CMap.preimg ((=) 0)[39m
     [38;5;2m2204[39m: [38;5;2m       56: [39m
     [38;5;2m2205[39m: [38;5;2m       57: let glider = CSet.of_list [(2,1); (3,2); (1,3); (2,3); (3,3)][39m
     [38;5;2m2206[39m: [38;5;2m       58: [39m
     [38;5;2m2207[39m: [38;5;2m       59: (** ...render, **)[39m
     [38;5;2m2208[39m: [38;5;2m       60: [39m
     [38;5;2m2209[39m: [38;5;2m       61: open Notty[39m
     [38;5;2m2210[39m: [38;5;2m       62: open Notty.Infix[39m
     [38;5;2m2211[39m: [38;5;2m       63: [39m
     [38;5;2m2212[39m: [38;5;2m       64: let dot = I.string A.(fg lightred) "●"[39m
     [38;5;2m2213[39m: [38;5;2m       65: [39m
     [38;5;2m2214[39m: [38;5;2m       66: let background step (n, m) =[39m
     [38;5;2m2215[39m: [38;5;2m       67:   let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m2216[39m: [38;5;2m       68:   if k > 0 then I.string A.(fg (gray k)) "." else I.void 1 1[39m
     [38;5;2m2217[39m: [38;5;2m       69: [39m
     [38;5;2m2218[39m: [38;5;2m       70: let render (w, h) step life =[39m
     [38;5;2m2219[39m: [38;5;2m       71:   I.tabulate w (h - 1) (fun x y ->[39m
     [38;5;2m2220[39m: [38;5;2m       72:     let pt = (x, y) in if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m2221[39m: [38;5;2m       73:   ) <->[39m
     [38;5;2m2222[39m: [38;5;2m       74:   I.(strf ~attr:A.(fg lightblack) "[generation %04d]" step |>[39m
     [38;5;2m2223[39m: [38;5;2m       75:       hsnap ~align:`Right w)[39m
     [38;5;2m2224[39m: [38;5;2m       76: [39m
     [38;5;2m2225[39m: [38;5;2m       77: (** ...and interact. **)[39m
     [38;5;2m2226[39m: [38;5;2m       78: [39m
     [38;5;2m2227[39m: [38;5;2m       79: open Lwt.Infix[39m
     [38;5;2m2228[39m: [38;5;2m       80: open Notty_lwt[39m
     [38;5;2m2229[39m: [38;5;2m       81: [39m
     [38;5;2m2230[39m: [38;5;2m       82: let timer () = Lwt_unix.sleep 0.1 >|= fun () -> `Timer[39m
     [38;5;2m2231[39m: [38;5;2m       83: let event term = Lwt_stream.get (Term.events term) >|= function[39m
     [38;5;2m2232[39m: [38;5;2m       84:   | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m2233[39m: [38;5;2m       85:   | None -> `End[39m
     [38;5;2m2234[39m: [38;5;2m       86: [39m
     [38;5;2m2235[39m: [38;5;2m       87: let rec loop term (e, t) (dim, n, life as st) =[39m
     [38;5;2m2236[39m: [38;5;2m       88:   (e <?> t) >>= function[39m
     [38;5;2m2237[39m: [38;5;2m       89:   | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m2238[39m: [38;5;2m       90:       Lwt.return_unit[39m
     [38;5;2m2239[39m: [38;5;2m       91:   | `Timer ->[39m
     [38;5;2m2240[39m: [38;5;2m       92:       Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m2241[39m: [38;5;2m       93:         loop term (e, timer ())[39m
     [38;5;2m2242[39m: [38;5;2m       94:           (dim, n + 1, step (torus dim) life)[39m
     [38;5;2m2243[39m: [38;5;2m       95:   | `Mouse ((`Press `Left|`Drag), (x, y), _) ->[39m
     [38;5;2m2244[39m: [38;5;2m       96:       loop term (event term, t)[39m
     [38;5;2m2245[39m: [38;5;2m       97:         (dim, n, CSet.add (torus dim (x, y)) life)[39m
     [38;5;2m2246[39m: [38;5;2m       98:   | `Resize dim ->[39m
     [38;5;2m2247[39m: [38;5;2m       99:       let life = CSet.map (torus dim) life in[39m
     [38;5;2m2248[39m: [38;5;2m      100:       Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m2249[39m: [38;5;2m      101:         loop term (event term, t) (dim, n, life)[39m
     [38;5;2m2250[39m: [38;5;2m      102:   | _ -> loop term (event term, t) st[39m
     [38;5;2m2251[39m: [38;5;2m      103: [39m
     [38;5;2m2252[39m: [38;5;2m      104: let main () =[39m
     [38;5;2m2253[39m: [38;5;2m      105:   let t = Term.create () in[39m
     [38;5;2m2254[39m: [38;5;2m      106:   loop t (event t, timer ()) (Term.size t, 0, glider)[39m
     [38;5;2m2255[39m: [38;5;2m      107: [39m
     [38;5;2m2256[39m: [38;5;2m      108: let () = Lwt_main.run @@ main ()[39m
     [38;5;2m2257[39m: [38;5;2mAdded regular file ../notty/examples/linear.ml:[39m
     [38;5;2m2258[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2259[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2260[39m: [38;5;2m        3: [39m
     [38;5;2m2261[39m: [38;5;2m        4: (*[39m
     [38;5;2m2262[39m: [38;5;2m        5:  * Elementary Cellular Automata[39m
     [38;5;2m2263[39m: [38;5;2m        6:  *)[39m
     [38;5;2m2264[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m2265[39m: [38;5;2m        8: open Notty.Infix[39m
     [38;5;2m2266[39m: [38;5;2m        9: open Common_lwt[39m
     [38;5;2m2267[39m: [38;5;2m       10: [39m
     [38;5;2m2268[39m: [38;5;2m       11: let flip f a b = f b a[39m
     [38;5;2m2269[39m: [38;5;2m       12: let rec take n = function[39m
     [38;5;2m2270[39m: [38;5;2m       13:   | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m2271[39m: [38;5;2m       14:   | _                -> [][39m
     [38;5;2m2272[39m: [38;5;2m       15: [39m
     [38;5;2m2273[39m: [38;5;2m       16: let getd arr d i =[39m
     [38;5;2m2274[39m: [38;5;2m       17:   if i < 0 || i >= Array.length arr then d else arr.(i)[39m
     [38;5;2m2275[39m: [38;5;2m       18: [39m
     [38;5;2m2276[39m: [38;5;2m       19: let f ~rule a b c =[39m
     [38;5;2m2277[39m: [38;5;2m       20:   if rule land (1 lsl (a lsl 2 + b lsl 1 + c)) > 0 then 1 else 0[39m
     [38;5;2m2278[39m: [38;5;2m       21: [39m
     [38;5;2m2279[39m: [38;5;2m       22: let step ~rule w arr =[39m
     [38;5;2m2280[39m: [38;5;2m       23:   let get = getd arr 0 in[39m
     [38;5;2m2281[39m: [38;5;2m       24:   Array.init w @@ fun i ->[39m
     [38;5;2m2282[39m: [38;5;2m       25:     f ~rule (get (i - 1)) (get i) (get (i + 1))[39m
     [38;5;2m2283[39m: [38;5;2m       26: [39m
     [38;5;2m2284[39m: [38;5;2m       27: let dot  = I.char A.(bg lightwhite) ' ' 1 1[39m
     [38;5;2m2285[39m: [38;5;2m       28: let void = I.void 1 1[39m
     [38;5;2m2286[39m: [38;5;2m       29: [39m
     [38;5;2m2287[39m: [38;5;2m       30: let render ~rule ~h xss =[39m
     [38;5;2m2288[39m: [38;5;2m       31:   let cons k = function[39m
     [38;5;2m2289[39m: [38;5;2m       32:     | 0 -> I.void k 1[39m
     [38;5;2m2290[39m: [38;5;2m       33:     | _ -> I.char A.(bg lightwhite) ' ' k 1 in[39m
     [38;5;2m2291[39m: [38;5;2m       34:   let rec rline s k i arr =[39m
     [38;5;2m2292[39m: [38;5;2m       35:     if i >= Array.length arr then[39m
     [38;5;2m2293[39m: [38;5;2m       36:       cons k s[39m
     [38;5;2m2294[39m: [38;5;2m       37:     else if arr.(i) = s then[39m
     [38;5;2m2295[39m: [38;5;2m       38:       rline s (k + 1) (i + 1) arr[39m
     [38;5;2m2296[39m: [38;5;2m       39:     else cons k s <|> rline (1 - s) 1 (i + 1) arr in[39m
     [38;5;2m2297[39m: [38;5;2m       40:   ( xss |> List.rev |> List.map (rline 0 0 0) |> I.vcat[39m
     [38;5;2m2298[39m: [38;5;2m       41:     |> I.vsnap ~align:`Top (h - 2) ) <->[39m
     [38;5;2m2299[39m: [38;5;2m       42:   ( I.strf ~attr:A.(fg lightgreen ++ bg black) " RULE %d " rule[39m
     [38;5;2m2300[39m: [38;5;2m       43:     |> I.vpad 1 0 )[39m
     [38;5;2m2301[39m: [38;5;2m       44: [39m
     [38;5;2m2302[39m: [38;5;2m       45: let rule = 124 (* 110 mirrored *)[39m
     [38;5;2m2303[39m: [38;5;2m       46: [39m
     [38;5;2m2304[39m: [38;5;2m       47: let main () =[39m
     [38;5;2m2305[39m: [38;5;2m       48:   simpleterm_lwt_timed ~delay:0.1 ([], rule)[39m
     [38;5;2m2306[39m: [38;5;2m       49:   ~f:(fun (w, h) (lines, rule) -> function[39m
     [38;5;2m2307[39m: [38;5;2m       50:     | `Timer ->[39m
     [38;5;2m2308[39m: [38;5;2m       51:         let prev  = match lines with [] -> [|1|] | h::_ -> h in[39m
     [38;5;2m2309[39m: [38;5;2m       52:         let lines = step ~rule w prev :: lines |> take (h - 2) in[39m
     [38;5;2m2310[39m: [38;5;2m       53:         `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m2311[39m: [38;5;2m       54:     | `Resize _ ->[39m
     [38;5;2m2312[39m: [38;5;2m       55:         let lines = lines |> take h in[39m
     [38;5;2m2313[39m: [38;5;2m       56:         `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m2314[39m: [38;5;2m       57:     | `Key (`Arrow `Left, []) ->[39m
     [38;5;2m2315[39m: [38;5;2m       58:         `Redraw (([], rule - 1), render ~rule ~h lines)[39m
     [38;5;2m2316[39m: [38;5;2m       59:     | `Key (`Arrow `Right, []) ->[39m
     [38;5;2m2317[39m: [38;5;2m       60:         `Redraw (([], rule + 1), render ~rule ~h lines)[39m
     [38;5;2m2318[39m: [38;5;2m       61:     | _ -> `Continue (lines, rule)[39m
     [38;5;2m2319[39m: [38;5;2m       62:   )[39m
     [38;5;2m2320[39m: [38;5;2m       63: [39m
     [38;5;2m2321[39m: [38;5;2m       64: let () = Lwt_main.run @@ main ()[39m
     [38;5;2m2322[39m: [38;5;2mAdded regular file ../notty/examples/mouse.ml:[39m
     [38;5;2m2323[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2324[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2325[39m: [38;5;2m        3: [39m
     [38;5;2m2326[39m: [38;5;2m        4: (**[39m
     [38;5;2m2327[39m: [38;5;2m        5:  * Demonstrates mouse input.[39m
     [38;5;2m2328[39m: [38;5;2m        6:  *)[39m
     [38;5;2m2329[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m2330[39m: [38;5;2m        8: open Common[39m
     [38;5;2m2331[39m: [38;5;2m        9: [39m
     [38;5;2m2332[39m: [38;5;2m       10: let lnv = Uchar.of_int 0x2502[39m
     [38;5;2m2333[39m: [38;5;2m       11: and lnh = Uchar.of_int 0x2500[39m
     [38;5;2m2334[39m: [38;5;2m       12: and crs = Uchar.of_int 0x253c[39m
     [38;5;2m2335[39m: [38;5;2m       13: [39m
     [38;5;2m2336[39m: [38;5;2m       14: let clip a b x = min b (max a x)[39m
     [38;5;2m2337[39m: [38;5;2m       15: [39m
     [38;5;2m2338[39m: [38;5;2m       16: let () =[39m
     [38;5;2m2339[39m: [38;5;2m       17:   simpleterm ~s:(`Down, (0, 0), [], 11)[39m
     [38;5;2m2340[39m: [38;5;2m       18:     ~f:(fun (st, pos, mods, scr as s) -> function[39m
     [38;5;2m2341[39m: [38;5;2m       19:       | `Mouse ((`Press `Left|`Drag), pos, mods) -> Some (`Drag, pos, mods, scr)[39m
     [38;5;2m2342[39m: [38;5;2m       20:       | `Mouse (`Press (`Scroll s), _, _) ->[39m
     [38;5;2m2343[39m: [38;5;2m       21:           Some (st, pos, mods, clip 0 23 (scr + match s with `Up -> 1 | _ -> -1))[39m
     [38;5;2m2344[39m: [38;5;2m       22:       | `Mouse (`Release, pos, _) -> Some (`Down, pos, [], scr)[39m
     [38;5;2m2345[39m: [38;5;2m       23:       | _ -> Some s)[39m
     [38;5;2m2346[39m: [38;5;2m       24:     ~imgf:I.(fun (w, h) (st, (x, y), mods, scr) ->[39m
     [38;5;2m2347[39m: [38;5;2m       25:       let cross =[39m
     [38;5;2m2348[39m: [38;5;2m       26:         let a  = match st with `Drag -> A.(fg lightgreen) | `Down -> A.(fg green) in[39m
     [38;5;2m2349[39m: [38;5;2m       27:         (uchar a lnh x 1 |> vpad y 0) <|>[39m
     [38;5;2m2350[39m: [38;5;2m       28:         (uchar a lnv 1 y <-> uchar a crs 1 1 <-> uchar a lnv 1 (h - y)) <|>[39m
     [38;5;2m2351[39m: [38;5;2m       29:         (uchar a lnh (w - x - 1) 1 |> vpad y 0)[39m
     [38;5;2m2352[39m: [38;5;2m       30:         |> crop ~t:1 ~l:1 ~r:3[39m
     [38;5;2m2353[39m: [38;5;2m       31:         |> hpad 1 1[39m
     [38;5;2m2354[39m: [38;5;2m       32:         |> vsnap ~align:`Top (h - 1)[39m
     [38;5;2m2355[39m: [38;5;2m       33:       and scroll =[39m
     [38;5;2m2356[39m: [38;5;2m       34:         List.(range 0 scr |> rev |> map @@ fun level ->[39m
     [38;5;2m2357[39m: [38;5;2m       35:           Images.dot A.(gray level)[39m
     [38;5;2m2358[39m: [38;5;2m       36:         ) |> vcat |> vsnap ~align:`Bottom (h - 1)[39m
     [38;5;2m2359[39m: [38;5;2m       37:       and status =[39m
     [38;5;2m2360[39m: [38;5;2m       38:         let a = A.(fg lightblack ++ bg black) in[39m
     [38;5;2m2361[39m: [38;5;2m       39:         let fa m = if List.mem m mods then A.(fg lightgreen ++ bg black) else a in[39m
     [38;5;2m2362[39m: [38;5;2m       40:         string A.empty "Use the mouse." </>[39m
     [38;5;2m2363[39m: [38;5;2m       41:         (hcat [ string a "["[39m
     [38;5;2m2364[39m: [38;5;2m       42:               ; string (fa `Ctrl) "C"[39m
     [38;5;2m2365[39m: [38;5;2m       43:               ; string (fa `Meta) "M"[39m
     [38;5;2m2366[39m: [38;5;2m       44:               ; strf ~attr:a "] @(%03d, %03d)" x y ][39m
     [38;5;2m2367[39m: [38;5;2m       45:          |> hsnap ~align:`Right w)[39m
     [38;5;2m2368[39m: [38;5;2m       46:       in (cross <|> scroll) <-> status[39m
     [38;5;2m2369[39m: [38;5;2m       47:     )[39m
     [38;5;2m2370[39m: [38;5;2mAdded regular file ../notty/examples/rain.ml:[39m
     [38;5;2m2371[39m: [38;5;2m        1: [39m
     [38;5;2m2372[39m: [38;5;2m        2: let () = Random.self_init ()[39m
     [38;5;2m2373[39m: [38;5;2m        3: [39m
     [38;5;2m2374[39m: [38;5;2m        4: let rec (--) a b = if a > b then [] else a :: succ a -- b[39m
     [38;5;2m2375[39m: [38;5;2m        5: [39m
     [38;5;2m2376[39m: [38;5;2m        6: let utf8_of_code_point =[39m
     [38;5;2m2377[39m: [38;5;2m        7:   let buf = Buffer.create 7 in fun cp ->[39m
     [38;5;2m2378[39m: [38;5;2m        8:     Buffer.clear buf;[39m
     [38;5;2m2379[39m: [38;5;2m        9:     Uutf.Buffer.add_utf_8 buf (Uchar.of_int cp);[39m
     [38;5;2m2380[39m: [38;5;2m       10:     Buffer.contents buf[39m
     [38;5;2m2381[39m: [38;5;2m       11: [39m
     [38;5;2m2382[39m: [38;5;2m       12: let nsym = 4096[39m
     [38;5;2m2383[39m: [38;5;2m       13: let glitch = nsym / 20[39m
     [38;5;2m2384[39m: [38;5;2m       14: let symbols = Array.(concat [[39m
     [38;5;2m2385[39m: [38;5;2m       15:   init 58 (fun x -> utf8_of_code_point (0xff66 + x));[39m
     [38;5;2m2386[39m: [38;5;2m       16:   init 10 (fun x -> utf8_of_code_point (0x30 + x));[39m
     [38;5;2m2387[39m: [38;5;2m       17:   (* init 26 (fun x -> utf8_of_code_point (0x61 + x)); *)[39m
     [38;5;2m2388[39m: [38;5;2m       18:   (* init 14 (fun x -> utf8_of_code_point (0x21 + x)); *)[39m
     [38;5;2m2389[39m: [38;5;2m       19: ])[39m
     [38;5;2m2390[39m: [38;5;2m       20: let sym () = symbols.(Random.int (Array.length symbols))[39m
     [38;5;2m2391[39m: [38;5;2m       21: let syms = Array.init nsym (fun _ -> sym ())[39m
     [38;5;2m2392[39m: [38;5;2m       22: [39m
     [38;5;2m2393[39m: [38;5;2m       23: let gen_wait h = `Wait Random.(int (h / 2))[39m
     [38;5;2m2394[39m: [38;5;2m       24: and gen_line h =[39m
     [38;5;2m2395[39m: [38;5;2m       25:   `Line Random.(0, int (nsym - h), int (h + h / 2) + 1, int 2 + 1)[39m
     [38;5;2m2396[39m: [38;5;2m       26: let gen (w, h as dim) =[39m
     [38;5;2m2397[39m: [38;5;2m       27:   let lines = 1 -- w |> List.map @@ fun _ ->[39m
     [38;5;2m2398[39m: [38;5;2m       28:     if Random.float 1. < 0.1 then gen_line h else gen_wait h in[39m
     [38;5;2m2399[39m: [38;5;2m       29:   (dim, lines)[39m
     [38;5;2m2400[39m: [38;5;2m       30: [39m
     [38;5;2m2401[39m: [38;5;2m       31: let step ((_, h as dim), xs) =[39m
     [38;5;2m2402[39m: [38;5;2m       32:   let xs = xs |> List.map @@ function[39m
     [38;5;2m2403[39m: [38;5;2m       33:       `Wait 0 -> gen_line h[39m
     [38;5;2m2404[39m: [38;5;2m       34:     | `Wait n -> `Wait (n - 1)[39m
     [38;5;2m2405[39m: [38;5;2m       35:     | `Line (i, _, win, k) when i - win + k >= h -> gen_wait h[39m
     [38;5;2m2406[39m: [38;5;2m       36:     | `Line (i, s, win, k) -> `Line (i + k, s, win, k) in[39m
     [38;5;2m2407[39m: [38;5;2m       37:   Random.(for _ = 0 to int glitch do syms.(int nsym) <- sym () done);[39m
     [38;5;2m2408[39m: [38;5;2m       38:   (dim, xs)[39m
     [38;5;2m2409[39m: [38;5;2m       39: [39m
     [38;5;2m2410[39m: [38;5;2m       40: open Notty[39m
     [38;5;2m2411[39m: [38;5;2m       41: open Notty.Infix[39m
     [38;5;2m2412[39m: [38;5;2m       42: [39m
     [38;5;2m2413[39m: [38;5;2m       43: let bgc = A.(bg @@ rgb ~r:0 ~g:0 ~b:0)[39m
     [38;5;2m2414[39m: [38;5;2m       44: [39m
     [38;5;2m2415[39m: [38;5;2m       45: let color i n =[39m
     [38;5;2m2416[39m: [38;5;2m       46:   let chan x = x *. 255. |> truncate[39m
     [38;5;2m2417[39m: [38;5;2m       47:   and t  = float i /. float n in[39m
     [38;5;2m2418[39m: [38;5;2m       48:   let t1 = exp (-. t /. 0.02) |> chan[39m
     [38;5;2m2419[39m: [38;5;2m       49:   and t2 = exp (-. t /. 0.45) |> chan in[39m
     [38;5;2m2420[39m: [38;5;2m       50:   A.rgb_888 ~r:t1 ~b:t1 ~g:t2[39m
     [38;5;2m2421[39m: [38;5;2m       51: [39m
     [38;5;2m2422[39m: [38;5;2m       52: let show ((w, h), xs) =[39m
     [38;5;2m2423[39m: [38;5;2m       53:   let f = function[39m
     [38;5;2m2424[39m: [38;5;2m       54:     `Wait _ -> I.void 1 0[39m
     [38;5;2m2425[39m: [38;5;2m       55:   | `Line (i, sym, win, _) ->[39m
     [38;5;2m2426[39m: [38;5;2m       56:       let last = i - win[39m
     [38;5;2m2427[39m: [38;5;2m       57:       and off = max 0 (i - h + 1) in[39m
     [38;5;2m2428[39m: [38;5;2m       58:       let rec chars w =[39m
     [38;5;2m2429[39m: [38;5;2m       59:         let ix = w + last in[39m
     [38;5;2m2430[39m: [38;5;2m       60:         if 0 <= min ix w then syms.(sym + ix) :: chars (w - 1) else [] in[39m
     [38;5;2m2431[39m: [38;5;2m       61:       let rec images acc i = function[39m
     [38;5;2m2432[39m: [38;5;2m       62:         | []    -> acc[39m
     [38;5;2m2433[39m: [38;5;2m       63:         | x::xs -> let img = I.string A.(fg (color i win) ++ bgc) x in[39m
     [38;5;2m2434[39m: [38;5;2m       64:                    images (img :: acc) (i + 1) xs in[39m
     [38;5;2m2435[39m: [38;5;2m       65:       chars (win - off) |> images [] off[39m
     [38;5;2m2436[39m: [38;5;2m       66:         |> I.vcat |> I.vpad (max 0 (i - win)) 0 in[39m
     [38;5;2m2437[39m: [38;5;2m       67:   (List.map f xs |> I.hcat) </> I.char bgc ' ' w h[39m
     [38;5;2m2438[39m: [38;5;2m       68: [39m
     [38;5;2m2439[39m: [38;5;2m       69: open Notty_unix[39m
     [38;5;2m2440[39m: [38;5;2m       70: [39m
     [38;5;2m2441[39m: [38;5;2m       71: type r = [ Unescape.event | `Resize of int * int | `End | `Timer ][39m
     [38;5;2m2442[39m: [38;5;2m       72: [39m
     [38;5;2m2443[39m: [38;5;2m       73: let event ~delay t =[39m
     [38;5;2m2444[39m: [38;5;2m       74:   if Term.pending t then (Term.event t :> r) else[39m
     [38;5;2m2445[39m: [38;5;2m       75:     let open Unix in[39m
     [38;5;2m2446[39m: [38;5;2m       76:     match select [Term.fds t |> fst] [] [] delay with[39m
     [38;5;2m2447[39m: [38;5;2m       77:     | ([], _, _) -> `Timer[39m
     [38;5;2m2448[39m: [38;5;2m       78:     | (_::_, _, _) -> (Term.event t :> r)[39m
     [38;5;2m2449[39m: [38;5;2m       79:     | exception Unix_error (EINTR, _, _) -> (Term.event t :> r)[39m
     [38;5;2m2450[39m: [38;5;2m       80: [39m
     [38;5;2m2451[39m: [38;5;2m       81: let loop t ~frame st =[39m
     [38;5;2m2452[39m: [38;5;2m       82:   let rec go st deadline =[39m
     [38;5;2m2453[39m: [38;5;2m       83:     let now = Unix.gettimeofday () in[39m
     [38;5;2m2454[39m: [38;5;2m       84:     if deadline <= now then[39m
     [38;5;2m2455[39m: [38;5;2m       85:       ( Term.image t (show st); go (step st) (frame +. deadline) )[39m
     [38;5;2m2456[39m: [38;5;2m       86:     else match event ~delay:(deadline -. now) t with[39m
     [38;5;2m2457[39m: [38;5;2m       87:       | `End | `Key (`Escape, _) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m2458[39m: [38;5;2m       88:       | `Resize _ | `Key (`ASCII ' ', _) -> go (gen (Term.size t)) deadline[39m
     [38;5;2m2459[39m: [38;5;2m       89:       | _ -> go st deadline in[39m
     [38;5;2m2460[39m: [38;5;2m       90:   go st (Unix.gettimeofday ())[39m
     [38;5;2m2461[39m: [38;5;2m       91: [39m
     [38;5;2m2462[39m: [38;5;2m       92: let () =[39m
     [38;5;2m2463[39m: [38;5;2m       93:   let t = Term.create () in[39m
     [38;5;2m2464[39m: [38;5;2m       94:   loop t ~frame:0.075 (gen (Term.size t));[39m
     [38;5;2m2465[39m: [38;5;2m       95:   Term.release t[39m
     [38;5;2m2466[39m: [38;5;2mAdded regular file ../notty/examples/runes.ml:[39m
     [38;5;2m2467[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2468[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2469[39m: [38;5;2m        3: [39m
     [38;5;2m2470[39m: [38;5;2m        4: (**[39m
     [38;5;2m2471[39m: [38;5;2m        5:  * Demonstrates geometry computation with various scripts. A few of those will[39m
     [38;5;2m2472[39m: [38;5;2m        6:  * usually break.[39m
     [38;5;2m2473[39m: [38;5;2m        7:  *)[39m
     [38;5;2m2474[39m: [38;5;2m        8: open Notty[39m
     [38;5;2m2475[39m: [38;5;2m        9: open Notty.Infix[39m
     [38;5;2m2476[39m: [38;5;2m       10: open Common[39m
     [38;5;2m2477[39m: [38;5;2m       11: [39m
     [38;5;2m2478[39m: [38;5;2m       12: let hpad_sp attr l r i =[39m
     [38;5;2m2479[39m: [38;5;2m       13:   let h = I.height i in[39m
     [38;5;2m2480[39m: [38;5;2m       14:   I.(char attr ' ' l h <|> i <|> char attr ' ' r h)[39m
     [38;5;2m2481[39m: [38;5;2m       15: [39m
     [38;5;2m2482[39m: [38;5;2m       16: let vpad_sp attr t b i =[39m
     [38;5;2m2483[39m: [38;5;2m       17:   let w = I.width i in[39m
     [38;5;2m2484[39m: [38;5;2m       18:   I.(char attr ' ' w t <-> i <-> char attr ' ' w b)[39m
     [38;5;2m2485[39m: [38;5;2m       19: [39m
     [38;5;2m2486[39m: [38;5;2m       20: let grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m2487[39m: [38;5;2m       21: [39m
     [38;5;2m2488[39m: [38;5;2m       22: let centered attr xs =[39m
     [38;5;2m2489[39m: [38;5;2m       23:   let lns = List.map I.(string attr) xs in[39m
     [38;5;2m2490[39m: [38;5;2m       24:   let w   = List.fold_left (fun a i -> max a I.(width i)) 0 lns in[39m
     [38;5;2m2491[39m: [38;5;2m       25:   lns |> List.map I.(fun ln ->[39m
     [38;5;2m2492[39m: [38;5;2m       26:     let d = w - I.width ln in[39m
     [38;5;2m2493[39m: [38;5;2m       27:     char attr ' ' (d / 2) 1 <|> ln <|> char attr ' ' (d - d / 2) 1[39m
     [38;5;2m2494[39m: [38;5;2m       28:   ) |> I.vcat[39m
     [38;5;2m2495[39m: [38;5;2m       29: [39m
     [38;5;2m2496[39m: [38;5;2m       30: let note xs = I.([39m
     [38;5;2m2497[39m: [38;5;2m       31:   string A.(st bold) "Note:" <|>[39m
     [38;5;2m2498[39m: [38;5;2m       32:   (xs |> List.map (string A.empty) |> vcat |> hpad 1 0)[39m
     [38;5;2m2499[39m: [38;5;2m       33: )[39m
     [38;5;2m2500[39m: [38;5;2m       34: [39m
     [38;5;2m2501[39m: [38;5;2m       35: let text = [[39m
     [38;5;2m2502[39m: [38;5;2m       36:     "\225\154\160\225\155\135\225\154\187\225\155\171\225\155\146\225\155\166\225\154\166\225\155\171\225\154\160\225\154\177\225\154\169\225\154\160\225\154\162\225\154\177\225\155\171\225\154\160\225\155\129\225\154\177\225\154\170\225\155\171\225\154\183\225\155\150\225\154\187\225\154\185\225\155\166\225\155\154\225\154\179\225\154\162\225\155\151"[39m
     [38;5;2m2503[39m: [38;5;2m[39m
     [38;5;2m2504[39m: [38;5;2m       38:   ; "\225\154\183\225\155\129\225\154\160\225\155\171\225\154\187\225\155\150\225\155\171\225\154\185\225\155\129\225\155\154\225\155\150\225\155\171\225\154\160\225\154\169\225\154\177\225\155\171\225\155\158\225\154\177\225\155\129\225\154\187\225\155\143\225\154\190\225\155\150\225\155\171\225\155\158\225\154\169\225\155\151\225\155\150\225\155\139\225\155\171\225\154\187\225\155\154\225\155\135\225\155\143\225\154\170\225\154\190\225\155\172"[39m
     [38;5;2m2505[39m: [38;5;2m       39:   ; ""[39m
     [38;5;2m2506[39m: [38;5;2m       40:   ; "\227\129\132\227\130\141\227\129\175\227\129\171\227\129\187\227\129\184\227\129\168\227\129\161\227\130\138\227\129\172\227\130\139\227\130\146"[39m
     [38;5;2m2507[39m: [38;5;2m       41:   ; "\227\130\143\227\129\139\227\130\136\227\129\159\227\130\140\227\129\157\227\129\164\227\129\173\227\129\170\227\130\137\227\130\128"[39m
     [38;5;2m2508[39m: [38;5;2m       42:   ; "\227\129\134\227\130\144\227\129\174\227\129\138\227\129\143\227\130\132\227\129\190\227\129\145\227\129\181\227\129\147\227\129\136\227\129\166"[39m
     [38;5;2m2509[39m: [38;5;2m       43:   ; "\227\129\130\227\129\149\227\129\141\227\130\134\227\130\129\227\129\191\227\129\151\227\130\145\227\129\178\227\130\130\227\129\155\227\129\153"[39m
     [38;5;2m2510[39m: [38;5;2m       44:   ; ""[39m
     [38;5;2m2511[39m: [38;5;2m       45:   ; "\227\130\164\227\131\173\227\131\143\227\131\139\227\131\155\227\131\152\227\131\136 \227\131\129\227\131\170\227\131\140\227\131\171\227\131\178 \227\131\175\227\130\171\227\131\168\227\130\191\227\131\172\227\130\189 \227\131\132\227\131\141\227\131\138\227\131\169\227\131\160"[39m
     [38;5;2m2512[39m: [38;5;2m       46:   ; "\227\130\166\227\131\176\227\131\142\227\130\170\227\130\175\227\131\164\227\131\158 \227\130\177\227\131\149\227\130\179\227\130\168\227\131\134 \227\130\162\227\130\181\227\130\173\227\131\166\227\131\161\227\131\159\227\130\183 \227\131\177\227\131\146\227\131\162\227\130\187\227\130\185\227\131\179"[39m
     [38;5;2m2513[39m: [38;5;2m       47:   ; ""[39m
     [38;5;2m2514[39m: [38;5;2m       48:   ; "\237\130\164\236\138\164\236\157\152 \234\179\160\236\156\160\236\161\176\234\177\180\236\157\128 \236\158\133\236\136\160\235\129\188\235\166\172 \235\167\140\235\130\152\236\149\188"[39m
     [38;5;2m2515[39m: [38;5;2m       49:   ; "\237\149\152\234\179\160 \237\138\185\235\179\132\237\149\156 \234\184\176\236\136\160\236\157\128 \237\149\132\236\154\148\236\185\152 \236\149\138\235\139\164"[39m
     [38;5;2m2516[39m: [38;5;2m       50:   ; ""[39m
     [38;5;2m2517[39m: [38;5;2m       51:   ; "\206\158\206\181\207\131\206\186\206\181\207\128\206\172\206\182\207\137 \207\132\225\189\180\206\189 \207\136\207\133\207\135\206\191\207\134\206\184\207\140\207\129\206\177 \206\178\206\180\206\181\206\187\207\133\206\179\206\188\206\175\206\177"[39m
     [38;5;2m2518[39m: [38;5;2m       52:   ; ""[39m
     [38;5;2m2519[39m: [38;5;2m       53:   ; "\208\167\208\181\209\136\209\155\208\181 \209\134e\209\146\208\181\209\154\208\181 \208\188\209\128e\208\182\208\176\209\129\209\130\208\184\208\188 \209\159\208\176\208\186\208\190\208\188 \208\191\208\190\208\177\208\190\209\153\209\136\208\176\208\178\208\176"[39m
     [38;5;2m2520[39m: [38;5;2m       54:   ; "\209\132\208\181\209\128\209\130\208\184\208\187\208\184\208\183\208\176\209\134\208\184\209\152\209\131 \208\179\208\181\208\189\209\129\208\186\208\184\209\133 \209\133\208\184\208\177\209\128\208\184\208\180\208\176!"[39m
     [38;5;2m2521[39m: [38;5;2m       55:   ; ""[39m
     [38;5;2m2522[39m: [38;5;2m       56:   ; "Heiz\195\182lr\195\188cksto\195\159abd\195\164mpfung."[39m
     [38;5;2m2523[39m: [38;5;2m       57:   ; ""[39m
     [38;5;2m2524[39m: [38;5;2m       58:   ; "\208\146 \209\135\208\176\209\137\208\176\209\133 \209\142\208\179\208\176 \208\182\208\184\208\187 \208\177\209\139 \209\134\208\184\209\130\209\128\209\131\209\129? \208\148\208\176, \208\189\208\190 \209\132\208\176\208\187\209\140\209\136\208\184\208\178\209\139\208\185 \209\141\208\186\208\183\208\181\208\188\208\191\208\187\209\143\209\128!"[39m
     [38;5;2m2525[39m: [38;5;2m       59:   ; ""[39m
     [38;5;2m2526[39m: [38;5;2m       60:   ; "\225\131\149\225\131\148\225\131\158\225\131\174\225\131\152\225\131\161 \225\131\162\225\131\167\225\131\144\225\131\157\225\131\161\225\131\144\225\131\156\225\131\152 \225\131\168\225\131\157\225\131\151\225\131\144 \225\131\160\225\131\163\225\131\161\225\131\151\225\131\144\225\131\149\225\131\148\225\131\154\225\131\152"[39m
     [38;5;2m2527[39m: [38;5;2m       61:   ; ""[39m
     [38;5;2m2528[39m: [38;5;2m       62:   ; "Lu\195\173s arg\195\188ia \195\160 J\195\186lia que \194\171bra\195\167\195\181es, f\195\169, ch\195\161,"[39m
     [38;5;2m2529[39m: [38;5;2m       63:   ; "\195\179xido, p\195\180r, z\195\162ng\195\163o\194\187 eram palavras do portugu\195\170s."[39m
     [38;5;2m2530[39m: [38;5;2m       64:   ; ""[39m
     [38;5;2m2531[39m: [38;5;2m       65:   ; "ding ↹ ∀ ⌘ ▓ ◭ ☃ ♠ ♋ ♕ ⚅ ♩ ☭ ✎ 🂡 bats"[39m
     [38;5;2m2532[39m: [38;5;2m       66:   ; ""[39m
     [38;5;2m2533[39m: [38;5;2m[39m
     [38;5;2m2534[39m: [38;5;2m       68:   ; ""[39m
     [38;5;2m2535[39m: [38;5;2m       69:   ; "\215\147\215\146 \215\161\215\167\215\168\215\159 \215\169\215\152 \215\145\215\153\215\157 \215\158\215\144\215\149\215\155\215\150\215\145 \215\149\215\156\215\164\215\170\215\162 \215\158\215\166\215\144 \215\156\215\149 \215\151\215\145\215\168\215\148 \215\144\215\153\215\154 \215\148\215\167\215\156\215\153\215\152\215\148"[39m
     [38;5;2m2536[39m: [38;5;2m       70:   ; ""[39m
     [38;5;2m2537[39m: [38;5;2m       71:   ; "\224\174\175\224\174\190\224\174\174\224\174\177\224\174\191\224\174\168\224\175\141\224\174\164 \224\174\174\224\175\138\224\174\180\224\174\191\224\174\149\224\174\179\224\174\191\224\174\178\224\175\135 \224\174\164\224\174\174\224\174\191\224\174\180\224\175\141\224\174\174\224\175\138\224\174\180\224\174\191 \224\174\170\224\175\139\224\174\178\224\175\141 \224\174\135\224\174\169\224\174\191\224\174\164\224\174\190\224\174\181\224\174\164\224\175\129 \224\174\142\224\174\153\224\175\141\224\174\149\224\175\129\224\174\174\224\175\141 \224\174\149\224\174\190\224\174\163\224\175\139\224\174\174\224\175\141,"[39m
     [38;5;2m2538[39m: [38;5;2m       72:   ; "\224\174\170\224\174\190\224\174\174\224\174\176\224\174\176\224\174\190\224\174\175\224\175\141 \224\174\181\224\174\191\224\174\178\224\174\153\224\175\141\224\174\149\224\175\129\224\174\149\224\174\179\224\174\190\224\174\175\224\175\141, \224\174\137\224\174\178\224\174\149\224\174\169\224\175\136\224\174\164\224\175\141\224\174\164\224\175\129\224\174\174\224\175\141 \224\174\135\224\174\149\224\174\180\224\175\141\224\174\154\224\175\141\224\174\154\224\174\191\224\174\154\224\175\138\224\174\178\224\174\170\224\175\141 \224\174\170\224\174\190\224\174\169\224\175\141\224\174\174\224\175\136 \224\174\149\224\175\134\224\174\159\224\175\141\224\174\159\224\175\129"[39m
     [38;5;2m2539[39m: [38;5;2m       73:   ; ""[39m
     [38;5;2m2540[39m: [38;5;2m       74:   ; "\224\178\172\224\178\190 \224\178\135\224\178\178\224\179\141\224\178\178\224\178\191 \224\178\184\224\178\130\224\178\173\224\178\181\224\178\191\224\178\184\224\179\129 \224\178\135\224\178\130\224\178\166\224\179\134\224\178\168\224\179\141\224\178\168 \224\178\185\224\179\131\224\178\166\224\178\175\224\178\166\224\178\178\224\178\191"[39m
     [38;5;2m2541[39m: [38;5;2m       75:   ; "\224\178\168\224\178\191\224\178\164\224\179\141\224\178\175\224\178\181\224\179\130 \224\178\133\224\178\181\224\178\164\224\178\176\224\178\191\224\178\170 \224\178\184\224\178\164\224\179\141\224\178\175\224\178\190\224\178\181\224\178\164\224\178\190\224\178\176"[39m
     [38;5;2m2542[39m: [38;5;2m       76:   ; ""[39m
     [38;5;2m2543[39m: [38;5;2m       77:   ; "\224\164\139\224\164\183\224\164\191\224\164\175\224\165\139\224\164\130 \224\164\149\224\165\139 \224\164\184\224\164\164\224\164\190\224\164\168\224\165\135 \224\164\181\224\164\190\224\164\178\224\165\135 \224\164\166\224\165\129\224\164\183\224\165\141\224\164\159 \224\164\176\224\164\190\224\164\149\224\165\141\224\164\183\224\164\184\224\165\139\224\164\130 \224\164\149\224\165\135 \224\164\176\224\164\190\224\164\156\224\164\190 \224\164\176\224\164\190\224\164\181\224\164\163 \224\164\149\224\164\190 \224\164\184\224\164\176\224\165\141\224\164\181\224\164\168\224\164\190\224\164\182 \224\164\149\224\164\176\224\164\168\224\165\135 \224\164\181\224\164\190\224\164\178\224\165\135"[39m
     [38;5;2m2544[39m: [38;5;2m       78:   ; "\224\164\181\224\164\191\224\164\183\224\165\141\224\164\163\224\165\129\224\164\181\224\164\164\224\164\190\224\164\176 \224\164\173\224\164\151\224\164\181\224\164\190\224\164\168 \224\164\182\224\165\141\224\164\176\224\165\128\224\164\176\224\164\190\224\164\174, \224\164\133\224\164\175\224\165\139\224\164\167\224\165\141\224\164\175\224\164\190 \224\164\149\224\165\135 \224\164\174\224\164\185\224\164\190\224\164\176\224\164\190\224\164\156 \224\164\166\224\164\182\224\164\176\224\164\165 \224\164\149\224\165\135 \224\164\172\224\164\161\224\164\188\224\165\135 \224\164\184\224\164\170\224\165\129\224\164\164\224\165\141\224\164\176 \224\164\165\224\165\135\224\165\164"[39m
     [38;5;2m2545[39m: [38;5;2m       79: ][39m
     [38;5;2m2546[39m: [38;5;2m       80: [39m
     [38;5;2m2547[39m: [38;5;2m       81: let () =[39m
     [38;5;2m2548[39m: [38;5;2m       82:   let attr = A.(fg lightmagenta) in[39m
     [38;5;2m2549[39m: [38;5;2m       83:   let img = I.([39m
     [38;5;2m2550[39m: [38;5;2m       84:     centered attr text[39m
     [38;5;2m2551[39m: [38;5;2m       85:     |> vpad_sp attr 1 1 |> hpad_sp attr 2 2[39m
     [38;5;2m2552[39m: [38;5;2m       86:     |> Images.outline attr[39m
     [38;5;2m2553[39m: [38;5;2m       87:     |> pad ~t:1 ~b:1 ~l:2 ~r:2[39m
     [38;5;2m2554[39m: [38;5;2m       88:   ) <->[39m
     [38;5;2m2555[39m: [38;5;2m       89:     note [ "Alignment will usually break on the last few scripts."[39m
     [38;5;2m2556[39m: [38;5;2m       90:          ; "This is at the limit of what terminals can do."[39m
     [38;5;2m2557[39m: [38;5;2m       91:          ; ":(" ][39m
     [38;5;2m2558[39m: [38;5;2m       92:   in Notty_unix.(eol img |> output_image)[39m
     [38;5;2m2559[39m: [38;5;2mAdded regular file ../notty/examples/sierpinski.ml:[39m
     [38;5;2m2560[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2561[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2562[39m: [38;5;2m        3: [39m
     [38;5;2m2563[39m: [38;5;2m        4: (**[39m
     [38;5;2m2564[39m: [38;5;2m        5:  * A classic example in combinatory graphics.[39m
     [38;5;2m2565[39m: [38;5;2m        6:  *[39m
     [38;5;2m2566[39m: [38;5;2m        7:  * Demonstrates interaction.[39m
     [38;5;2m2567[39m: [38;5;2m        8:  *)[39m
     [38;5;2m2568[39m: [38;5;2m        9: open Notty[39m
     [38;5;2m2569[39m: [38;5;2m       10: open Common[39m
     [38;5;2m2570[39m: [38;5;2m       11: [39m
     [38;5;2m2571[39m: [38;5;2m       12: let () =[39m
     [38;5;2m2572[39m: [38;5;2m       13:   simpleterm ~s:1[39m
     [38;5;2m2573[39m: [38;5;2m       14:     ~f:(fun s -> function[39m
     [38;5;2m2574[39m: [38;5;2m       15:       | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m2575[39m: [38;5;2m       16:       | `Key (`Arrow a, _) ->[39m
     [38;5;2m2576[39m: [38;5;2m       17:         ( match a with[39m
     [38;5;2m2577[39m: [38;5;2m       18:           | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m2578[39m: [38;5;2m       19:           | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m2579[39m: [38;5;2m       20:       | _ -> Some s)[39m
     [38;5;2m2580[39m: [38;5;2m       21:     ~imgf:I.(fun _ s ->[39m
     [38;5;2m2581[39m: [38;5;2m       22:       string A.empty (string_of_int s) <->[39m
     [38;5;2m2582[39m: [38;5;2m       23:       pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m2583[39m: [38;5;2m       24:     )[39m
     [38;5;2m2584[39m: [38;5;2mAdded regular file ../notty/examples/sierpinski_lwt.ml:[39m
     [38;5;2m2585[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2586[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2587[39m: [38;5;2m        3: [39m
     [38;5;2m2588[39m: [38;5;2m        4: (**[39m
     [38;5;2m2589[39m: [38;5;2m        5:  * Demonstrates Lwt interaction.[39m
     [38;5;2m2590[39m: [38;5;2m        6:  *)[39m
     [38;5;2m2591[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m2592[39m: [38;5;2m        8: open Common_lwt[39m
     [38;5;2m2593[39m: [38;5;2m        9: [39m
     [38;5;2m2594[39m: [38;5;2m       10: let img s = I.([39m
     [38;5;2m2595[39m: [38;5;2m       11:   string A.empty (string_of_int s) <-> hpad 2 0 (Images.sierp A.magenta s)[39m
     [38;5;2m2596[39m: [38;5;2m       12: )[39m
     [38;5;2m2597[39m: [38;5;2m       13: [39m
     [38;5;2m2598[39m: [38;5;2m       14: let () =[39m
     [38;5;2m2599[39m: [38;5;2m       15:   simpleterm_lwt ~s:1[39m
     [38;5;2m2600[39m: [38;5;2m       16:     ~f:(fun s -> function[39m
     [38;5;2m2601[39m: [38;5;2m       17:       | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m2602[39m: [38;5;2m       18:       | `Key (`Arrow a, _) ->[39m
     [38;5;2m2603[39m: [38;5;2m       19:         ( match a with[39m
     [38;5;2m2604[39m: [38;5;2m       20:           | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m2605[39m: [38;5;2m       21:           | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m2606[39m: [38;5;2m       22:       | _ -> Some s)[39m
     [38;5;2m2607[39m: [38;5;2m       23:     ~imgf:I.(fun _ s ->[39m
     [38;5;2m2608[39m: [38;5;2m       24:       string A.empty (string_of_int s) <->[39m
     [38;5;2m2609[39m: [38;5;2m       25:       pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m2610[39m: [38;5;2m       26:     )[39m
     [38;5;2m2611[39m: [38;5;2mAdded regular file ../notty/examples/testpatterns.ml:[39m
     [38;5;2m2612[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2613[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2614[39m: [38;5;2m        3: [39m
     [38;5;2m2615[39m: [38;5;2m        4: (**[39m
     [38;5;2m2616[39m: [38;5;2m        5:  * A few images that exercise image composition, cropping, and padding. This[39m
     [38;5;2m2617[39m: [38;5;2m        6:  * test is a good canary.[39m
     [38;5;2m2618[39m: [38;5;2m        7:  *)[39m
     [38;5;2m2619[39m: [38;5;2m        8: open Common[39m
     [38;5;2m2620[39m: [38;5;2m        9: open Notty_unix[39m
     [38;5;2m2621[39m: [38;5;2m       10: [39m
     [38;5;2m2622[39m: [38;5;2m       11: let () = Images.[i3; i5; checker1] |> List.map eol |> List.iter output_image[39m
     [38;5;2m2623[39m: [38;5;2mAdded regular file ../notty/examples/thisbig.ml:[39m
     [38;5;2m2624[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2625[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2626[39m: [38;5;2m        3: [39m
     [38;5;2m2627[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m2628[39m: [38;5;2m        5: open Common[39m
     [38;5;2m2629[39m: [38;5;2m        6: [39m
     [38;5;2m2630[39m: [38;5;2m        7: let () =[39m
     [38;5;2m2631[39m: [38;5;2m        8:   Notty_unix.output_image_size @@ fun (w, h) ->[39m
     [38;5;2m2632[39m: [38;5;2m        9:     Images.outline A.(fg lightblue)[39m
     [38;5;2m2633[39m: [38;5;2m       10:       I.(hsnap (w - 2) @@[39m
     [38;5;2m2634[39m: [38;5;2m       11:           vsnap (h - 3) @@ (* +1 for the prompt *)[39m
     [38;5;2m2635[39m: [38;5;2m       12:             Images.sierp A.lightblue 5)[39m
     [38;5;2m2636[39m: [38;5;2mAdded regular file ../notty/notty.opam:[39m
     [38;5;2m2637[39m: [38;5;2m        1: opam-version: "2.0"[39m
     [38;5;2m2638[39m: [38;5;2m        2: homepage:     "https://github.com/pqwy/notty"[39m
     [38;5;2m2639[39m: [38;5;2m        3: dev-repo:     "git+https://github.com/pqwy/notty.git"[39m
     [38;5;2m2640[39m: [38;5;2m        4: bug-reports:  "https://github.com/pqwy/notty/issues"[39m
     [38;5;2m2641[39m: [38;5;2m        5: doc:          "https://pqwy.github.io/notty/doc"[39m
     [38;5;2m2642[39m: [38;5;2m        6: author:       "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m2643[39m: [38;5;2m        7: maintainer:   "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m2644[39m: [38;5;2m        8: license:      "ISC"[39m
     [38;5;2m2645[39m: [38;5;2m        9: synopsis:     "Declaring terminals"[39m
     [38;5;2m2646[39m: [38;5;2m       10: description:[39m
     [38;5;2m2647[39m: [38;5;2m       11:   "Notty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m2648[39m: [38;5;2m       12:   of composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m2649[39m: [38;5;2m       13:   model, providing something simpler and more expressive."[39m
     [38;5;2m2650[39m: [38;5;2m       14: [39m
     [38;5;2m2651[39m: [38;5;2m       15: build: [ [ "dune" "subst" ] {dev}[39m
     [38;5;2m2652[39m: [38;5;2m       16:          [ "dune" "build" "-p" name "-j" jobs ] ][39m
     [38;5;2m2653[39m: [38;5;2m       17: depends: [[39m
     [38;5;2m2654[39m: [38;5;2m       18:   "ocaml" {>= "4.08.0"}[39m
     [38;5;2m2655[39m: [38;5;2m       19:   "dune" {>= "1.7"}[39m
     [38;5;2m2656[39m: [38;5;2m       20:   "cppo" {build & >= "1.1.0"}[39m
     [38;5;2m2657[39m: [38;5;2m       21:   "uutf" {>= "1.0.0"}[39m
     [38;5;2m2658[39m: [38;5;2m       22: ][39m
     [38;5;2m2659[39m: [38;5;2m       23: depopts: [ "lwt" ][39m
     [38;5;2m2660[39m: [38;5;2m       24: conflicts: [ "lwt" {<"2.5.2"} ][39m
     [38;5;2m2661[39m: [38;5;2mAdded regular file ../notty/src/dune:[39m
     [38;5;2m2662[39m: [38;5;2m        1: (include_subdirs unqualified)[39m
     [38;5;2m2663[39m: [38;5;2m        2: [39m
     [38;5;2m2664[39m: [38;5;2m        3: (library[39m
     [38;5;2m2665[39m: [38;5;2m        4:   (public_name notty)[39m
     [38;5;2m2666[39m: [38;5;2m        5:   (synopsis "Declaring terminals")[39m
     [38;5;2m2667[39m: [38;5;2m        6:   (libraries uutf)[39m
     [38;5;2m2668[39m: [38;5;2m        7:   (wrapped false)[39m
     [38;5;2m2669[39m: [38;5;2m        8:   (modules notty notty_grapheme_cluster notty_uucp notty_uucp_data)[39m
     [38;5;2m2670[39m: [38;5;2m        9:   (private_modules notty_grapheme_cluster notty_uucp notty_uucp_data))[39m
     [38;5;2m2671[39m: [38;5;2m       10: [39m
     [38;5;2m2672[39m: [38;5;2m       11: (library[39m
     [38;5;2m2673[39m: [38;5;2m       12:   (public_name notty.top)[39m
     [38;5;2m2674[39m: [38;5;2m       13:   (synopsis "Notty toplevel support")[39m
     [38;5;2m2675[39m: [38;5;2m       14:   (name notty_top)[39m
     [38;5;2m2676[39m: [38;5;2m       15:   (wrapped false)[39m
     [38;5;2m2677[39m: [38;5;2m       16:   (modules notty_top)[39m
     [38;5;2m2678[39m: [38;5;2m       17:   (preprocess (action (run %{bin:cppo} -V OCAML:%{ocaml_version} %{input-file})))[39m
     [38;5;2m2679[39m: [38;5;2m       18:   (libraries notty compiler-libs.toplevel))[39m
     [38;5;2m2680[39m: [38;5;2m       19: [39m
     [38;5;2m2681[39m: [38;5;2m       20: (install[39m
     [38;5;2m2682[39m: [38;5;2m       21:   (section lib)[39m
     [38;5;2m2683[39m: [38;5;2m       22:   (files (notty_top_init.ml as top/notty_top_init.ml)))[39m
     [38;5;2m2684[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/README.md:[39m
     [38;5;2m2685[39m: [38;5;2m        1: Cannibalized bits of Uucp:[39m
     [38;5;2m2686[39m: [38;5;2m        2: [39m
     [38;5;2m2687[39m: [38;5;2m        3: - `Notty_uucp_data` is generated from an actual Uucp installation.[39m
     [38;5;2m2688[39m: [38;5;2m        4: - `Notty_uucp` uses it to provide the few Unicode properties that Notty needs.[39m
     [38;5;2m2689[39m: [38;5;2m        5: - `Notty_grapheme_cluster` is `Grapheme_cluster` from Uuseg, adapted to use the[39m
     [38;5;2m2690[39m: [38;5;2m        6:   above.[39m
     [38;5;2m2691[39m: [38;5;2m        7: [39m
     [38;5;2m2692[39m: [38;5;2m        8: Compiled size of these is on the order of 70K. Uucp is presently a monolithic 10M.[39m
     [38;5;2m2693[39m: [38;5;2m        9: [39m
     [38;5;2m2694[39m: [38;5;2m       10: The idea is to remove these in favor of the actual Uucp/Uuseg, as soon as it[39m
     [38;5;2m2695[39m: [38;5;2m       11: becomes possible to depend only on the necessary parts of Uucp.[39m
     [38;5;2m2696[39m: [38;5;2m       12: [39m
     [38;5;2m2697[39m: [38;5;2m       13: Uucp and Uuseg are Copyright (c) 2014 Daniel C. Bünzli.[39m
     [38;5;2m2698[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_grapheme_cluster.ml:[39m
     [38;5;2m2699[39m: [38;5;2m        1: (*---------------------------------------------------------------------------[39m
     [38;5;2m2700[39m: [38;5;2m        2:    Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m2701[39m: [38;5;2m        3:    Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m2702[39m: [38;5;2m        4:    %%NAME%% %%VERSION%%[39m
     [38;5;2m2703[39m: [38;5;2m        5:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m2704[39m: [38;5;2m        6: [39m
     [38;5;2m2705[39m: [38;5;2m        7: (* These are the rules as found in [1], with property values aliases [2][39m
     [38;5;2m2706[39m: [38;5;2m        8:    substituted.[39m
     [38;5;2m2707[39m: [38;5;2m        9: [39m
     [38;5;2m2708[39m: [38;5;2m       10:    GB1.               sot ÷ Any[39m
     [38;5;2m2709[39m: [38;5;2m       11:    GB2.               Any ÷ eot[39m
     [38;5;2m2710[39m: [38;5;2m       12:    GB3.                CR × LF[39m
     [38;5;2m2711[39m: [38;5;2m       13:    GB4.        (CN|CR|LF) ÷[39m
     [38;5;2m2712[39m: [38;5;2m       14:    GB5.                   ÷ (CN|CR|LF)[39m
     [38;5;2m2713[39m: [38;5;2m       15:    GB6.                 L × (L|V|LV|LVT)[39m
     [38;5;2m2714[39m: [38;5;2m       16:    GB7.            (LV|V) × (V|T)[39m
     [38;5;2m2715[39m: [38;5;2m       17:    GB8.           (LVT|T) × T[39m
     [38;5;2m2716[39m: [38;5;2m       18:    GB9.                   × (EX|ZWJ)[39m
     [38;5;2m2717[39m: [38;5;2m       19:    GB9a.                  × SM[39m
     [38;5;2m2718[39m: [38;5;2m       20:    GB9b.               PP ×[39m
     [38;5;2m2719[39m: [38;5;2m       21:    GB10. (v10.0.0) (EB|EBG) EX* × EM[39m
     [38;5;2m2720[39m: [38;5;2m       22:    GB11. (v10.0.0)          ZWJ × (GAZ|EBG)[39m
     [38;5;2m2721[39m: [38;5;2m       23:    GB12.  sot (RI RI)* RI × RI[39m
     [38;5;2m2722[39m: [38;5;2m       24:    GB13.   [^RI] (RI RI)* × RI[39m
     [38;5;2m2723[39m: [38;5;2m       25:    GB999.             Any ÷ Any[39m
     [38;5;2m2724[39m: [38;5;2m       26: [39m
     [38;5;2m2725[39m: [38;5;2m       27:    [1]: http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries[39m
     [38;5;2m2726[39m: [38;5;2m       28:    [2]: http://www.unicode.org/Public/7.0.0/ucd/PropertyValueAliases.txt[39m
     [38;5;2m2727[39m: [38;5;2m       29:    [3]: http://www.unicode.org/Public/7.0.0/ucd/auxiliary/GraphemeBreakTest.html[39m
     [38;5;2m2728[39m: [38;5;2m       30: [39m
     [38;5;2m2729[39m: [38;5;2m       31:    By the structure of the rules we see that grapheme clusters[39m
     [38;5;2m2730[39m: [38;5;2m       32:    boundaries can *mostly* be determined by simply looking at the[39m
     [38;5;2m2731[39m: [38;5;2m       33:    grapheme cluster break property value of the character on the left[39m
     [38;5;2m2732[39m: [38;5;2m       34:    and on the right of a boundary. The exceptions are GB10 and GB12-13[39m
     [38;5;2m2733[39m: [38;5;2m       35:    which are handled specially by enriching the segmenter state in[39m
     [38;5;2m2734[39m: [38;5;2m       36:    a horribly ad-hoc fashion. *)[39m
     [38;5;2m2735[39m: [38;5;2m       37: [39m
     [38;5;2m2736[39m: [38;5;2m       38: type ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m2737[39m: [38;5;2m       39: [39m
     [38;5;2m2738[39m: [38;5;2m       40: type gcb =[39m
     [38;5;2m2739[39m: [38;5;2m       41:   | CN | CR | EX | EB | EBG | EM | GAZ | L | LF | LV | LVT | PP | RI[39m
     [38;5;2m2740[39m: [38;5;2m       42:   | SM | T | V | XX | ZWJ | Sot[39m
     [38;5;2m2741[39m: [38;5;2m       43: [39m
     [38;5;2m2742[39m: [38;5;2m       44: (* WARNING. The indexes used here need to be synchronized with those[39m
     [38;5;2m2743[39m: [38;5;2m       45:    assigned by uucp for Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m2744[39m: [38;5;2m       46: [39m
     [38;5;2m2745[39m: [38;5;2m       47: let byte_to_gcb =[39m
     [38;5;2m2746[39m: [38;5;2m       48:   [| CN; CR; EX; EB; EBG; EM; GAZ; L; LF; LV; LVT; PP; RI;[39m
     [38;5;2m2747[39m: [38;5;2m       49:      SM; T; V; XX; ZWJ; |][39m
     [38;5;2m2748[39m: [38;5;2m       50: [39m
     [38;5;2m2749[39m: [38;5;2m       51: let gcb u = byte_to_gcb.(Notty_uucp.grapheme_cluster_boundary u)[39m
     [38;5;2m2750[39m: [38;5;2m       52: [39m
     [38;5;2m2751[39m: [38;5;2m       53: type state =[39m
     [38;5;2m2752[39m: [38;5;2m       54: | Fill  (* get next uchar to decide boundary. *)[39m
     [38;5;2m2753[39m: [38;5;2m       55: | Flush (* an uchar is buffered, client needs to get it out with `Await. *)[39m
     [38;5;2m2754[39m: [38;5;2m       56: | End   (* `End was added. *)[39m
     [38;5;2m2755[39m: [38;5;2m       57: [39m
     [38;5;2m2756[39m: [38;5;2m       58: type t =[39m
     [38;5;2m2757[39m: [38;5;2m       59:   { mutable state : state;                                 (* current state. *)[39m
     [38;5;2m2758[39m: [38;5;2m       60:     mutable left : gcb;            (* break property value left of boundary. *)[39m
     [38;5;2m2759[39m: [38;5;2m       61:     mutable odd_ri : bool;                  (* odd number of RI on the left. *)[39m
     [38;5;2m2760[39m: [38;5;2m       62:     mutable emoji_seq : bool;               (* (EB|EBG) Extend* on the left. *)[39m
     [38;5;2m2761[39m: [38;5;2m       63:     mutable buf : [ `Uchar of Uchar.t ] }                 (* bufferized add. *)[39m
     [38;5;2m2762[39m: [38;5;2m       64: [39m
     [38;5;2m2763[39m: [38;5;2m       65: let nul_buf = `Uchar (Uchar.unsafe_of_int 0x0000)[39m
     [38;5;2m2764[39m: [38;5;2m       66: [39m
     [38;5;2m2765[39m: [38;5;2m       67: let create () =[39m
     [38;5;2m2766[39m: [38;5;2m       68:   { state = Fill; left = Sot;[39m
     [38;5;2m2767[39m: [38;5;2m       69:     odd_ri = false; emoji_seq = false;[39m
     [38;5;2m2768[39m: [38;5;2m       70:     buf = nul_buf (* overwritten *); }[39m
     [38;5;2m2769[39m: [38;5;2m       71: [39m
     [38;5;2m2770[39m: [38;5;2m       72: let break s right = match s.left, right with[39m
     [38;5;2m2771[39m: [38;5;2m       73: | (* GB1 *)   Sot, _ -> true[39m
     [38;5;2m2772[39m: [38;5;2m       74:   (* GB2 is handled by `End *)[39m
     [38;5;2m2773[39m: [38;5;2m       75: | (* GB3 *)   CR, LF -> false[39m
     [38;5;2m2774[39m: [38;5;2m       76: | (* GB4 *)   (CN|CR|LF), _ -> true[39m
     [38;5;2m2775[39m: [38;5;2m       77: | (* GB5 *)   _, (CN|CR|LF) -> true[39m
     [38;5;2m2776[39m: [38;5;2m       78: | (* GB6 *)   L, (L|V|LV|LVT) -> false[39m
     [38;5;2m2777[39m: [38;5;2m       79: | (* GB7 *)   (LV|V), (V|T) -> false[39m
     [38;5;2m2778[39m: [38;5;2m       80: | (* GB8 *)   (LVT|T), T -> false[39m
     [38;5;2m2779[39m: [38;5;2m       81: | (* GB9+a *) _, (EX|ZWJ|SM) -> false[39m
     [38;5;2m2780[39m: [38;5;2m       82: | (* GB9b *)  PP, _ -> false[39m
     [38;5;2m2781[39m: [38;5;2m       83: | (* GB10 *)  _, EM when s.emoji_seq -> false[39m
     [38;5;2m2782[39m: [38;5;2m       84: | (* GB11 *)  ZWJ, (GAZ|EBG) -> false[39m
     [38;5;2m2783[39m: [38;5;2m       85: | (* GB12+13 *) RI, RI when s.odd_ri -> false[39m
     [38;5;2m2784[39m: [38;5;2m       86: | (* GB999 *) _, _ -> true[39m
     [38;5;2m2785[39m: [38;5;2m       87: [39m
     [38;5;2m2786[39m: [38;5;2m       88: let update_left s right =[39m
     [38;5;2m2787[39m: [38;5;2m       89:   s.left <- right;[39m
     [38;5;2m2788[39m: [38;5;2m       90:   match s.left with[39m
     [38;5;2m2789[39m: [38;5;2m       91:   | EX -> (* keep s.emoji_seq as is *) s.odd_ri <- false[39m
     [38;5;2m2790[39m: [38;5;2m       92:   | EB | EBG -> s.emoji_seq <- true; s.odd_ri <- false[39m
     [38;5;2m2791[39m: [38;5;2m       93:   | RI -> s.emoji_seq <- false; s.odd_ri <- not s.odd_ri[39m
     [38;5;2m2792[39m: [38;5;2m       94:   | _ -> s.emoji_seq <- false; s.odd_ri <- false[39m
     [38;5;2m2793[39m: [38;5;2m       95: [39m
     [38;5;2m2794[39m: [38;5;2m       96: let add s = function[39m
     [38;5;2m2795[39m: [38;5;2m       97: | `Uchar u as add ->[39m
     [38;5;2m2796[39m: [38;5;2m       98:     begin match s.state with[39m
     [38;5;2m2797[39m: [38;5;2m       99:     | Fill ->[39m
     [38;5;2m2798[39m: [38;5;2m      100:         let right = gcb u in[39m
     [38;5;2m2799[39m: [38;5;2m      101:         let break = break s right in[39m
     [38;5;2m2800[39m: [38;5;2m      102:         update_left s right;[39m
     [38;5;2m2801[39m: [38;5;2m      103:         if not break then add else[39m
     [38;5;2m2802[39m: [38;5;2m      104:         (s.state <- Flush; s.buf <- add; `Boundary)[39m
     [38;5;2m2803[39m: [38;5;2m      105:     | Flush | End -> assert false[39m
     [38;5;2m2804[39m: [38;5;2m      106:     end[39m
     [38;5;2m2805[39m: [38;5;2m      107: | `Await ->[39m
     [38;5;2m2806[39m: [38;5;2m      108:     begin match s.state with[39m
     [38;5;2m2807[39m: [38;5;2m      109:     | Flush -> s.state <- Fill; (s.buf :> ret)[39m
     [38;5;2m2808[39m: [38;5;2m      110:     | End -> `End[39m
     [38;5;2m2809[39m: [38;5;2m      111:     | Fill -> `Await[39m
     [38;5;2m2810[39m: [38;5;2m      112:     end[39m
     [38;5;2m2811[39m: [38;5;2m      113: | `End ->[39m
     [38;5;2m2812[39m: [38;5;2m      114:     begin match s.state with[39m
     [38;5;2m2813[39m: [38;5;2m      115:     | Fill -> s.state <- End; if s.left = Sot then `End else `Boundary[39m
     [38;5;2m2814[39m: [38;5;2m      116:     | Flush | End -> assert false[39m
     [38;5;2m2815[39m: [38;5;2m      117:     end[39m
     [38;5;2m2816[39m: [38;5;2m      118: [39m
     [38;5;2m2817[39m: [38;5;2m      119: (*---------------------------------------------------------------------------[39m
     [38;5;2m2818[39m: [38;5;2m      120:    Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m2819[39m: [38;5;2m      121: [39m
     [38;5;2m2820[39m: [38;5;2m      122:    Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m2821[39m: [38;5;2m      123:    purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m2822[39m: [38;5;2m      124:    copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m2823[39m: [38;5;2m      125: [39m
     [38;5;2m2824[39m: [38;5;2m      126:    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m2825[39m: [38;5;2m      127:    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m2826[39m: [38;5;2m      128:    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m2827[39m: [38;5;2m      129:    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m2828[39m: [38;5;2m      130:    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m2829[39m: [38;5;2m      131:    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m2830[39m: [38;5;2m      132:    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m2831[39m: [38;5;2m      133:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m2832[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_grapheme_cluster.mli:[39m
     [38;5;2m2833[39m: [38;5;2m        1: (*---------------------------------------------------------------------------[39m
     [38;5;2m2834[39m: [38;5;2m        2:    Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m2835[39m: [38;5;2m        3:    Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m2836[39m: [38;5;2m        4:    %%NAME%% %%VERSION%%[39m
     [38;5;2m2837[39m: [38;5;2m        5:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m2838[39m: [38;5;2m        6: [39m
     [38;5;2m2839[39m: [38;5;2m        7: type ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m2840[39m: [38;5;2m        8: [39m
     [38;5;2m2841[39m: [38;5;2m        9: type t[39m
     [38;5;2m2842[39m: [38;5;2m       10: val create : unit -> t[39m
     [38;5;2m2843[39m: [38;5;2m       11: val add : t -> [ `Await | `End | `Uchar of Uchar.t ] -> ret[39m
     [38;5;2m2844[39m: [38;5;2m       12: [39m
     [38;5;2m2845[39m: [38;5;2m       13: (*---------------------------------------------------------------------------[39m
     [38;5;2m2846[39m: [38;5;2m       14:    Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m2847[39m: [38;5;2m       15: [39m
     [38;5;2m2848[39m: [38;5;2m       16:    Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m2849[39m: [38;5;2m       17:    purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m2850[39m: [38;5;2m       18:    copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m2851[39m: [38;5;2m       19: [39m
     [38;5;2m2852[39m: [38;5;2m       20:    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m2853[39m: [38;5;2m       21:    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m2854[39m: [38;5;2m       22:    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m2855[39m: [38;5;2m       23:    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m2856[39m: [38;5;2m       24:    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m2857[39m: [38;5;2m       25:    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m2858[39m: [38;5;2m       26:    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m2859[39m: [38;5;2m       27:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m2860[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp.ml:[39m
     [38;5;2m2861[39m: [38;5;2m        1: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2862[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2863[39m: [38;5;2m        3: [39m
     [38;5;2m2864[39m: [38;5;2m        4: (* Unpacked interval lookup table. *)[39m
     [38;5;2m2865[39m: [38;5;2m        5: let find_i ~def k (xs, _, _ as tab) =[39m
     [38;5;2m2866[39m: [38;5;2m        6:   let rec go i j (los, his, vs as tab) (k: int) def =[39m
     [38;5;2m2867[39m: [38;5;2m        7:     if i > j then def else[39m
     [38;5;2m2868[39m: [38;5;2m        8:     let x = (i + j) / 2 in[39m
     [38;5;2m2869[39m: [38;5;2m        9:     if k < Array.unsafe_get los x then go i (x - 1) tab k def else[39m
     [38;5;2m2870[39m: [38;5;2m       10:     if k > Array.unsafe_get his x then go (x + 1) j tab k def else[39m
     [38;5;2m2871[39m: [38;5;2m       11:       Array.unsafe_get vs x in[39m
     [38;5;2m2872[39m: [38;5;2m       12:   go 0 (Array.length xs - 1) tab k def[39m
     [38;5;2m2873[39m: [38;5;2m       13: [39m
     [38;5;2m2874[39m: [38;5;2m       14: (* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m2875[39m: [38;5;2m       15:    Root is variable; lower levels are either empty or complete. *)[39m
     [38;5;2m2876[39m: [38;5;2m       16: let find_t ~def k tab =[39m
     [38;5;2m2877[39m: [38;5;2m       17:   let k = if k > 0xd7ff then k - 0x800 else k in (* Pack to continuous range. *)[39m
     [38;5;2m2878[39m: [38;5;2m       18:   let b0 = (k lsr 12) land 0xfff in[39m
     [38;5;2m2879[39m: [38;5;2m       19:   if Array.length tab <= b0 then def else[39m
     [38;5;2m2880[39m: [38;5;2m       20:   match Array.unsafe_get tab b0 with[39m
     [38;5;2m2881[39m: [38;5;2m       21:   | [||] -> def[39m
     [38;5;2m2882[39m: [38;5;2m       22:   | arr -> match Array.unsafe_get arr ((k lsr 6) land 0x3f) with[39m
     [38;5;2m2883[39m: [38;5;2m       23:     | "" -> def[39m
     [38;5;2m2884[39m: [38;5;2m       24:     | str -> String.unsafe_get str (k land 0x3f) |> Char.code[39m
     [38;5;2m2885[39m: [38;5;2m       25: [39m
     [38;5;2m2886[39m: [38;5;2m       26: (* We catch w = -1 and default to w = 1 to minimize the table. *)[39m
     [38;5;2m2887[39m: [38;5;2m       27: let tty_width_hint u = match Uchar.to_int u with[39m
     [38;5;2m2888[39m: [38;5;2m       28: | 0 -> 0[39m
     [38;5;2m2889[39m: [38;5;2m       29: | u when u <= 0x001F || 0x007F <= u && u <= 0x009F -> -1[39m
     [38;5;2m2890[39m: [38;5;2m       30: | u when u <= 0x02ff -> 1[39m
     [38;5;2m2891[39m: [38;5;2m       31: | u -> find_i ~def:1 u Notty_uucp_data.tty_width_hint[39m
     [38;5;2m2892[39m: [38;5;2m       32: [39m
     [38;5;2m2893[39m: [38;5;2m       33: let grapheme_cluster_boundary u =[39m
     [38;5;2m2894[39m: [38;5;2m       34:   find_t ~def:16 (Uchar.to_int u) Notty_uucp_data.grapheme_cluster_boundary[39m
     [38;5;2m2895[39m: [38;5;2m       35: [39m
     [38;5;2m2896[39m: [38;5;2m       36: (* let check () = *)[39m
     [38;5;2m2897[39m: [38;5;2m       37: (*   let pp_u ppf u = Format.fprintf ppf "u+%04x" (Uchar.to_int u) in *)[39m
     [38;5;2m2898[39m: [38;5;2m       38: (*   let rec go i u = *)[39m
     [38;5;2m2899[39m: [38;5;2m       39: (*     let w1 = tty_width_hint u *)[39m
     [38;5;2m2900[39m: [38;5;2m       40: (*     and w2 = Uucp.Break.tty_width_hint u in *)[39m
     [38;5;2m2901[39m: [38;5;2m       41: (*     if w1 <> w2 then Format.printf "w: %a here: %d there: %d@." pp_u u w1 w2; *)[39m
     [38;5;2m2902[39m: [38;5;2m       42: (*     let gc1 = grapheme_cluster_boundary u *)[39m
     [38;5;2m2903[39m: [38;5;2m       43: (*     and gc2 = Uucp.Break.Low.grapheme_cluster u in *)[39m
     [38;5;2m2904[39m: [38;5;2m       44: (*     if gc1 <> gc2 then Format.printf "gc: %a here: %d there: %d@." pp_u u gc1 gc2; *)[39m
     [38;5;2m2905[39m: [38;5;2m       45: (*     if u = Uchar.max then i else go (i + 1) (Uchar.succ u) in *)[39m
     [38;5;2m2906[39m: [38;5;2m       46: (*   let n = go 1 Uchar.min in *)[39m
     [38;5;2m2907[39m: [38;5;2m       47: (*   Format.printf "Checked equality for %d code points.@." n *)[39m
     [38;5;2m2908[39m: [38;5;2m       48: [39m
     [38;5;2m2909[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp.mli:[39m
     [38;5;2m2910[39m: [38;5;2m        1: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m2911[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m2912[39m: [38;5;2m        3: [39m
     [38;5;2m2913[39m: [38;5;2m        4: (* This is a local copy of the (very few) relevant [uucp] properties. *)[39m
     [38;5;2m2914[39m: [38;5;2m        5: [39m
     [38;5;2m2915[39m: [38;5;2m        6: val tty_width_hint : Uchar.t -> int[39m
     [38;5;2m2916[39m: [38;5;2m        7: (* [Uucp.Break.tty_width_hint]. *)[39m
     [38;5;2m2917[39m: [38;5;2m        8: [39m
     [38;5;2m2918[39m: [38;5;2m        9: val grapheme_cluster_boundary : Uchar.t -> int[39m
     [38;5;2m2919[39m: [38;5;2m       10: (* [Uucp.Break.Low.grapheme_cluster]. *)[39m
     [38;5;2m2920[39m: [38;5;2m       11: [39m
     [38;5;2m2921[39m: [38;5;2m       12: (* val check : unit -> unit *)[39m
     [38;5;2m2922[39m: [38;5;2m       13: [39m
     [38;5;2m2923[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp_data.ml:[39m
     [38;5;2m2924[39m: [38;5;2m        1: (* Do not edit.[39m
     [38;5;2m2925[39m: [38;5;2m        2:  *[39m
     [38;5;2m2926[39m: [38;5;2m        3:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m2927[39m: [38;5;2m        4:  * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m2928[39m: [38;5;2m        5:  *[39m
     [38;5;2m2929[39m: [38;5;2m        6:  * Unicode version 13.0.0.[39m
     [38;5;2m2930[39m: [38;5;2m        7:  *)[39m
     [38;5;2m2931[39m: [38;5;2m        8: [39m
     [38;5;2m2932[39m: [38;5;2m        9: [39m
     [38;5;2m2933[39m: [38;5;2m       10: let tty_width_hint =[39m
     [38;5;2m2934[39m: [38;5;2m       11:   ([|0x0000; 0x0300; 0x0483; 0x0591; 0x05bf; 0x05c1; 0x05c4; 0x05c7; 0x0600;[39m
     [38;5;2m2935[39m: [38;5;2m       12:      0x0610; 0x061c; 0x064b; 0x0670; 0x06d6; 0x06df; 0x06e7; 0x06ea; 0x070f;[39m
     [38;5;2m2936[39m: [38;5;2m       13:      0x0711; 0x0730; 0x07a6; 0x07eb; 0x07fd; 0x0816; 0x081b; 0x0825; 0x0829;[39m
     [38;5;2m2937[39m: [38;5;2m       14:      0x0859; 0x08d3; 0x093a; 0x093c; 0x0941; 0x094d; 0x0951; 0x0962; 0x0981;[39m
     [38;5;2m2938[39m: [38;5;2m       15:      0x09bc; 0x09c1; 0x09cd; 0x09e2; 0x09fe; 0x0a01; 0x0a3c; 0x0a41; 0x0a47;[39m
     [38;5;2m2939[39m: [38;5;2m       16:      0x0a4b; 0x0a51; 0x0a70; 0x0a75; 0x0a81; 0x0abc; 0x0ac1; 0x0ac7; 0x0acd;[39m
     [38;5;2m2940[39m: [38;5;2m       17:      0x0ae2; 0x0afa; 0x0b01; 0x0b3c; 0x0b3f; 0x0b41; 0x0b4d; 0x0b55; 0x0b62;[39m
     [38;5;2m2941[39m: [38;5;2m       18:      0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c3e; 0x0c46; 0x0c4a; 0x0c55;[39m
     [38;5;2m2942[39m: [38;5;2m       19:      0x0c62; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccc; 0x0ce2; 0x0d00; 0x0d3b;[39m
     [38;5;2m2943[39m: [38;5;2m       20:      0x0d41; 0x0d4d; 0x0d62; 0x0d81; 0x0dca; 0x0dd2; 0x0dd6; 0x0e31; 0x0e34;[39m
     [38;5;2m2944[39m: [38;5;2m       21:      0x0e47; 0x0eb1; 0x0eb4; 0x0ec8; 0x0f18; 0x0f35; 0x0f37; 0x0f39; 0x0f71;[39m
     [38;5;2m2945[39m: [38;5;2m       22:      0x0f80; 0x0f86; 0x0f8d; 0x0f99; 0x0fc6; 0x102d; 0x1032; 0x1039; 0x103d;[39m
     [38;5;2m2946[39m: [38;5;2m       23:      0x1058; 0x105e; 0x1071; 0x1082; 0x1085; 0x108d; 0x109d; 0x1100; 0x135d;[39m
     [38;5;2m2947[39m: [38;5;2m       24:      0x1712; 0x1732; 0x1752; 0x1772; 0x17b4; 0x17b7; 0x17c6; 0x17c9; 0x17dd;[39m
     [38;5;2m2948[39m: [38;5;2m       25:      0x180b; 0x1885; 0x18a9; 0x1920; 0x1927; 0x1932; 0x1939; 0x1a17; 0x1a1b;[39m
     [38;5;2m2949[39m: [38;5;2m       26:      0x1a56; 0x1a58; 0x1a60; 0x1a62; 0x1a65; 0x1a73; 0x1a7f; 0x1ab0; 0x1b00;[39m
     [38;5;2m2950[39m: [38;5;2m       27:      0x1b34; 0x1b36; 0x1b3c; 0x1b42; 0x1b6b; 0x1b80; 0x1ba2; 0x1ba8; 0x1bab;[39m
     [38;5;2m2951[39m: [38;5;2m       28:      0x1be6; 0x1be8; 0x1bed; 0x1bef; 0x1c2c; 0x1c36; 0x1cd0; 0x1cd4; 0x1ce2;[39m
     [38;5;2m2952[39m: [38;5;2m       29:      0x1ced; 0x1cf4; 0x1cf8; 0x1dc0; 0x1dfb; 0x200b; 0x202a; 0x2060; 0x2066;[39m
     [38;5;2m2953[39m: [38;5;2m       30:      0x20d0; 0x231a; 0x2329; 0x23e9; 0x23f0; 0x23f3; 0x25fd; 0x2614; 0x2648;[39m
     [38;5;2m2954[39m: [38;5;2m       31:      0x267f; 0x2693; 0x26a1; 0x26aa; 0x26bd; 0x26c4; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m2955[39m: [38;5;2m       32:      0x26f2; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270a; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m2956[39m: [38;5;2m       33:      0x2753; 0x2757; 0x2795; 0x27b0; 0x27bf; 0x2b1b; 0x2b50; 0x2b55; 0x2cef;[39m
     [38;5;2m2957[39m: [38;5;2m       34:      0x2d7f; 0x2de0; 0x2e80; 0x2e9b; 0x2f00; 0x2ff0; 0x3000; 0x302a; 0x302e;[39m
     [38;5;2m2958[39m: [38;5;2m       35:      0x3041; 0x3099; 0x309b; 0x3105; 0x3131; 0x3190; 0x31f0; 0x3220; 0x3250;[39m
     [38;5;2m2959[39m: [38;5;2m       36:      0x4e00; 0xa490; 0xa66f; 0xa674; 0xa69e; 0xa6f0; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m2960[39m: [38;5;2m       37:      0xa825; 0xa82c; 0xa8c4; 0xa8e0; 0xa8ff; 0xa926; 0xa947; 0xa960; 0xa980;[39m
     [38;5;2m2961[39m: [38;5;2m       38:      0xa9b3; 0xa9b6; 0xa9bc; 0xa9e5; 0xaa29; 0xaa31; 0xaa35; 0xaa43; 0xaa4c;[39m
     [38;5;2m2962[39m: [38;5;2m       39:      0xaa7c; 0xaab0; 0xaab2; 0xaab7; 0xaabe; 0xaac1; 0xaaec; 0xaaf6; 0xabe5;[39m
     [38;5;2m2963[39m: [38;5;2m       40:      0xabe8; 0xabed; 0xac00; 0xf900; 0xfb1e; 0xfe00; 0xfe10; 0xfe20; 0xfe30;[39m
     [38;5;2m2964[39m: [38;5;2m       41:      0xfe54; 0xfe68; 0xfeff; 0xff01; 0xffe0; 0xfff9; 0x101fd; 0x102e0;[39m
     [38;5;2m2965[39m: [38;5;2m       42:      0x10376; 0x10a01; 0x10a05; 0x10a0c; 0x10a38; 0x10a3f; 0x10ae5; 0x10d24;[39m
     [38;5;2m2966[39m: [38;5;2m       43:      0x10eab; 0x10f46; 0x11001; 0x11038; 0x1107f; 0x110b3; 0x110b9; 0x110bd;[39m
     [38;5;2m2967[39m: [38;5;2m       44:      0x110cd; 0x11100; 0x11127; 0x1112d; 0x11173; 0x11180; 0x111b6; 0x111c9;[39m
     [38;5;2m2968[39m: [38;5;2m       45:      0x111cf; 0x1122f; 0x11234; 0x11236; 0x1123e; 0x112df; 0x112e3; 0x11300;[39m
     [38;5;2m2969[39m: [38;5;2m       46:      0x1133b; 0x11340; 0x11366; 0x11370; 0x11438; 0x11442; 0x11446; 0x1145e;[39m
     [38;5;2m2970[39m: [38;5;2m       47:      0x114b3; 0x114ba; 0x114bf; 0x114c2; 0x115b2; 0x115bc; 0x115bf; 0x115dc;[39m
     [38;5;2m2971[39m: [38;5;2m       48:      0x11633; 0x1163d; 0x1163f; 0x116ab; 0x116ad; 0x116b0; 0x116b7; 0x1171d;[39m
     [38;5;2m2972[39m: [38;5;2m       49:      0x11722; 0x11727; 0x1182f; 0x11839; 0x1193b; 0x1193e; 0x11943; 0x119d4;[39m
     [38;5;2m2973[39m: [38;5;2m       50:      0x119da; 0x119e0; 0x11a01; 0x11a33; 0x11a3b; 0x11a47; 0x11a51; 0x11a59;[39m
     [38;5;2m2974[39m: [38;5;2m       51:      0x11a8a; 0x11a98; 0x11c30; 0x11c38; 0x11c3f; 0x11c92; 0x11caa; 0x11cb2;[39m
     [38;5;2m2975[39m: [38;5;2m       52:      0x11cb5; 0x11d31; 0x11d3a; 0x11d3c; 0x11d3f; 0x11d47; 0x11d90; 0x11d95;[39m
     [38;5;2m2976[39m: [38;5;2m       53:      0x11d97; 0x11ef3; 0x13430; 0x16af0; 0x16b30; 0x16f4f; 0x16f8f; 0x16fe0;[39m
     [38;5;2m2977[39m: [38;5;2m       54:      0x16fe4; 0x16ff0; 0x17000; 0x18800; 0x18d00; 0x1b000; 0x1b150; 0x1b164;[39m
     [38;5;2m2978[39m: [38;5;2m       55:      0x1b170; 0x1bc9d; 0x1bca0; 0x1d167; 0x1d173; 0x1d185; 0x1d1aa; 0x1d242;[39m
     [38;5;2m2979[39m: [38;5;2m       56:      0x1da00; 0x1da3b; 0x1da75; 0x1da84; 0x1da9b; 0x1daa1; 0x1e000; 0x1e008;[39m
     [38;5;2m2980[39m: [38;5;2m       57:      0x1e01b; 0x1e023; 0x1e026; 0x1e130; 0x1e2ec; 0x1e8d0; 0x1e944; 0x1f004;[39m
     [38;5;2m2981[39m: [38;5;2m       58:      0x1f0cf; 0x1f18e; 0x1f191; 0x1f200; 0x1f210; 0x1f240; 0x1f250; 0x1f260;[39m
     [38;5;2m2982[39m: [38;5;2m       59:      0x1f300; 0x1f32d; 0x1f337; 0x1f37e; 0x1f3a0; 0x1f3cf; 0x1f3e0; 0x1f3f4;[39m
     [38;5;2m2983[39m: [38;5;2m       60:      0x1f3f8; 0x1f440; 0x1f442; 0x1f4ff; 0x1f54b; 0x1f550; 0x1f57a; 0x1f595;[39m
     [38;5;2m2984[39m: [38;5;2m       61:      0x1f5a4; 0x1f5fb; 0x1f680; 0x1f6cc; 0x1f6d0; 0x1f6d5; 0x1f6eb; 0x1f6f4;[39m
     [38;5;2m2985[39m: [38;5;2m       62:      0x1f7e0; 0x1f90c; 0x1f93c; 0x1f947; 0x1f97a; 0x1f9cd; 0x1fa70; 0x1fa78;[39m
     [38;5;2m2986[39m: [38;5;2m       63:      0x1fa80; 0x1fa90; 0x1fab0; 0x1fac0; 0x1fad0; 0x20000; 0x30000; 0xe0001;[39m
     [38;5;2m2987[39m: [38;5;2m       64:      0xe0020; 0xe0100|],[39m
     [38;5;2m2988[39m: [38;5;2m       65:    [|0x0000; 0x036f; 0x0489; 0x05bd; 0x05bf; 0x05c2; 0x05c5; 0x05c7; 0x0605;[39m
     [38;5;2m2989[39m: [38;5;2m       66:      0x061a; 0x061c; 0x065f; 0x0670; 0x06dd; 0x06e4; 0x06e8; 0x06ed; 0x070f;[39m
     [38;5;2m2990[39m: [38;5;2m       67:      0x0711; 0x074a; 0x07b0; 0x07f3; 0x07fd; 0x0819; 0x0823; 0x0827; 0x082d;[39m
     [38;5;2m2991[39m: [38;5;2m       68:      0x085b; 0x0902; 0x093a; 0x093c; 0x0948; 0x094d; 0x0957; 0x0963; 0x0981;[39m
     [38;5;2m2992[39m: [38;5;2m       69:      0x09bc; 0x09c4; 0x09cd; 0x09e3; 0x09fe; 0x0a02; 0x0a3c; 0x0a42; 0x0a48;[39m
     [38;5;2m2993[39m: [38;5;2m       70:      0x0a4d; 0x0a51; 0x0a71; 0x0a75; 0x0a82; 0x0abc; 0x0ac5; 0x0ac8; 0x0acd;[39m
     [38;5;2m2994[39m: [38;5;2m       71:      0x0ae3; 0x0aff; 0x0b01; 0x0b3c; 0x0b3f; 0x0b44; 0x0b4d; 0x0b56; 0x0b63;[39m
     [38;5;2m2995[39m: [38;5;2m       72:      0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c40; 0x0c48; 0x0c4d; 0x0c56;[39m
     [38;5;2m2996[39m: [38;5;2m       73:      0x0c63; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccd; 0x0ce3; 0x0d01; 0x0d3c;[39m
     [38;5;2m2997[39m: [38;5;2m       74:      0x0d44; 0x0d4d; 0x0d63; 0x0d81; 0x0dca; 0x0dd4; 0x0dd6; 0x0e31; 0x0e3a;[39m
     [38;5;2m2998[39m: [38;5;2m       75:      0x0e4e; 0x0eb1; 0x0ebc; 0x0ecd; 0x0f19; 0x0f35; 0x0f37; 0x0f39; 0x0f7e;[39m
     [38;5;2m2999[39m: [38;5;2m       76:      0x0f84; 0x0f87; 0x0f97; 0x0fbc; 0x0fc6; 0x1030; 0x1037; 0x103a; 0x103e;[39m
     [38;5;2m3000[39m: [38;5;2m       77:      0x1059; 0x1060; 0x1074; 0x1082; 0x1086; 0x108d; 0x109d; 0x115f; 0x135f;[39m
     [38;5;2m3001[39m: [38;5;2m       78:      0x1714; 0x1734; 0x1753; 0x1773; 0x17b5; 0x17bd; 0x17c6; 0x17d3; 0x17dd;[39m
     [38;5;2m3002[39m: [38;5;2m       79:      0x180e; 0x1886; 0x18a9; 0x1922; 0x1928; 0x1932; 0x193b; 0x1a18; 0x1a1b;[39m
     [38;5;2m3003[39m: [38;5;2m       80:      0x1a56; 0x1a5e; 0x1a60; 0x1a62; 0x1a6c; 0x1a7c; 0x1a7f; 0x1ac0; 0x1b03;[39m
     [38;5;2m3004[39m: [38;5;2m       81:      0x1b34; 0x1b3a; 0x1b3c; 0x1b42; 0x1b73; 0x1b81; 0x1ba5; 0x1ba9; 0x1bad;[39m
     [38;5;2m3005[39m: [38;5;2m       82:      0x1be6; 0x1be9; 0x1bed; 0x1bf1; 0x1c33; 0x1c37; 0x1cd2; 0x1ce0; 0x1ce8;[39m
     [38;5;2m3006[39m: [38;5;2m       83:      0x1ced; 0x1cf4; 0x1cf9; 0x1df9; 0x1dff; 0x200f; 0x202e; 0x2064; 0x206f;[39m
     [38;5;2m3007[39m: [38;5;2m       84:      0x20f0; 0x231b; 0x232a; 0x23ec; 0x23f0; 0x23f3; 0x25fe; 0x2615; 0x2653;[39m
     [38;5;2m3008[39m: [38;5;2m       85:      0x267f; 0x2693; 0x26a1; 0x26ab; 0x26be; 0x26c5; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m3009[39m: [38;5;2m       86:      0x26f3; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270b; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m3010[39m: [38;5;2m       87:      0x2755; 0x2757; 0x2797; 0x27b0; 0x27bf; 0x2b1c; 0x2b50; 0x2b55; 0x2cf1;[39m
     [38;5;2m3011[39m: [38;5;2m       88:      0x2d7f; 0x2dff; 0x2e99; 0x2ef3; 0x2fd5; 0x2ffb; 0x3029; 0x302d; 0x303e;[39m
     [38;5;2m3012[39m: [38;5;2m       89:      0x3096; 0x309a; 0x30ff; 0x312f; 0x318e; 0x31e3; 0x321e; 0x3247; 0x4dbf;[39m
     [38;5;2m3013[39m: [38;5;2m       90:      0xa48c; 0xa4c6; 0xa672; 0xa67d; 0xa69f; 0xa6f1; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m3014[39m: [38;5;2m       91:      0xa826; 0xa82c; 0xa8c5; 0xa8f1; 0xa8ff; 0xa92d; 0xa951; 0xa97c; 0xa982;[39m
     [38;5;2m3015[39m: [38;5;2m       92:      0xa9b3; 0xa9b9; 0xa9bd; 0xa9e5; 0xaa2e; 0xaa32; 0xaa36; 0xaa43; 0xaa4c;[39m
     [38;5;2m3016[39m: [38;5;2m       93:      0xaa7c; 0xaab0; 0xaab4; 0xaab8; 0xaabf; 0xaac1; 0xaaed; 0xaaf6; 0xabe5;[39m
     [38;5;2m3017[39m: [38;5;2m       94:      0xabe8; 0xabed; 0xd7a3; 0xfaff; 0xfb1e; 0xfe0f; 0xfe19; 0xfe2f; 0xfe52;[39m
     [38;5;2m3018[39m: [38;5;2m       95:      0xfe66; 0xfe6b; 0xfeff; 0xff60; 0xffe6; 0xfffb; 0x101fd; 0x102e0;[39m
     [38;5;2m3019[39m: [38;5;2m       96:      0x1037a; 0x10a03; 0x10a06; 0x10a0f; 0x10a3a; 0x10a3f; 0x10ae6; 0x10d27;[39m
     [38;5;2m3020[39m: [38;5;2m       97:      0x10eac; 0x10f50; 0x11001; 0x11046; 0x11081; 0x110b6; 0x110ba; 0x110bd;[39m
     [38;5;2m3021[39m: [38;5;2m       98:      0x110cd; 0x11102; 0x1112b; 0x11134; 0x11173; 0x11181; 0x111be; 0x111cc;[39m
     [38;5;2m3022[39m: [38;5;2m       99:      0x111cf; 0x11231; 0x11234; 0x11237; 0x1123e; 0x112df; 0x112ea; 0x11301;[39m
     [38;5;2m3023[39m: [38;5;2m      100:      0x1133c; 0x11340; 0x1136c; 0x11374; 0x1143f; 0x11444; 0x11446; 0x1145e;[39m
     [38;5;2m3024[39m: [38;5;2m      101:      0x114b8; 0x114ba; 0x114c0; 0x114c3; 0x115b5; 0x115bd; 0x115c0; 0x115dd;[39m
     [38;5;2m3025[39m: [38;5;2m      102:      0x1163a; 0x1163d; 0x11640; 0x116ab; 0x116ad; 0x116b5; 0x116b7; 0x1171f;[39m
     [38;5;2m3026[39m: [38;5;2m      103:      0x11725; 0x1172b; 0x11837; 0x1183a; 0x1193c; 0x1193e; 0x11943; 0x119d7;[39m
     [38;5;2m3027[39m: [38;5;2m      104:      0x119db; 0x119e0; 0x11a0a; 0x11a38; 0x11a3e; 0x11a47; 0x11a56; 0x11a5b;[39m
     [38;5;2m3028[39m: [38;5;2m      105:      0x11a96; 0x11a99; 0x11c36; 0x11c3d; 0x11c3f; 0x11ca7; 0x11cb0; 0x11cb3;[39m
     [38;5;2m3029[39m: [38;5;2m      106:      0x11cb6; 0x11d36; 0x11d3a; 0x11d3d; 0x11d45; 0x11d47; 0x11d91; 0x11d95;[39m
     [38;5;2m3030[39m: [38;5;2m      107:      0x11d97; 0x11ef4; 0x13438; 0x16af4; 0x16b36; 0x16f4f; 0x16f92; 0x16fe3;[39m
     [38;5;2m3031[39m: [38;5;2m      108:      0x16fe4; 0x16ff1; 0x187f7; 0x18cd5; 0x18d08; 0x1b11e; 0x1b152; 0x1b167;[39m
     [38;5;2m3032[39m: [38;5;2m      109:      0x1b2fb; 0x1bc9e; 0x1bca3; 0x1d169; 0x1d182; 0x1d18b; 0x1d1ad; 0x1d244;[39m
     [38;5;2m3033[39m: [38;5;2m      110:      0x1da36; 0x1da6c; 0x1da75; 0x1da84; 0x1da9f; 0x1daaf; 0x1e006; 0x1e018;[39m
     [38;5;2m3034[39m: [38;5;2m      111:      0x1e021; 0x1e024; 0x1e02a; 0x1e136; 0x1e2ef; 0x1e8d6; 0x1e94a; 0x1f004;[39m
     [38;5;2m3035[39m: [38;5;2m      112:      0x1f0cf; 0x1f18e; 0x1f19a; 0x1f202; 0x1f23b; 0x1f248; 0x1f251; 0x1f265;[39m
     [38;5;2m3036[39m: [38;5;2m      113:      0x1f320; 0x1f335; 0x1f37c; 0x1f393; 0x1f3ca; 0x1f3d3; 0x1f3f0; 0x1f3f4;[39m
     [38;5;2m3037[39m: [38;5;2m      114:      0x1f43e; 0x1f440; 0x1f4fc; 0x1f53d; 0x1f54e; 0x1f567; 0x1f57a; 0x1f596;[39m
     [38;5;2m3038[39m: [38;5;2m      115:      0x1f5a4; 0x1f64f; 0x1f6c5; 0x1f6cc; 0x1f6d2; 0x1f6d7; 0x1f6ec; 0x1f6fc;[39m
     [38;5;2m3039[39m: [38;5;2m      116:      0x1f7eb; 0x1f93a; 0x1f945; 0x1f978; 0x1f9cb; 0x1f9ff; 0x1fa74; 0x1fa7a;[39m
     [38;5;2m3040[39m: [38;5;2m      117:      0x1fa86; 0x1faa8; 0x1fab6; 0x1fac2; 0x1fad6; 0x2fffd; 0x3fffd; 0xe0001;[39m
     [38;5;2m3041[39m: [38;5;2m      118:      0xe007f; 0xe01ef|],[39m
     [38;5;2m3042[39m: [38;5;2m      119:    [|0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3043[39m: [38;5;2m      120:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3044[39m: [38;5;2m      121:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3045[39m: [38;5;2m      122:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3046[39m: [38;5;2m      123:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 0; 0; 0;[39m
     [38;5;2m3047[39m: [38;5;2m      124:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3048[39m: [38;5;2m      125:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3049[39m: [38;5;2m      126:      0; 0; 0; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m3050[39m: [38;5;2m      127:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 2; 2; 2; 2; 2; 0; 2;[39m
     [38;5;2m3051[39m: [38;5;2m      128:      2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3052[39m: [38;5;2m      129:      0; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2;[39m
     [38;5;2m3053[39m: [38;5;2m      130:      2; 0; 0; 2; 0; 2; 2; 2; 0; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3054[39m: [38;5;2m      131:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3055[39m: [38;5;2m      132:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3056[39m: [38;5;2m      133:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m3057[39m: [38;5;2m      134:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 0;[39m
     [38;5;2m3058[39m: [38;5;2m      135:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 2; 2;[39m
     [38;5;2m3059[39m: [38;5;2m      136:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m3060[39m: [38;5;2m      137:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0|])[39m
     [38;5;2m3061[39m: [38;5;2m      138: [39m
     [38;5;2m3062[39m: [38;5;2m      139: let s000 = ""[39m
     [38;5;2m3063[39m: [38;5;2m      140: let s001 = "\000\000\000\000\000\000\000\000\000\000\b\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3064[39m: [38;5;2m      141: let s002 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000"[39m
     [38;5;2m3065[39m: [38;5;2m      142: let s003 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3066[39m: [38;5;2m      143: let s004 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3067[39m: [38;5;2m      144: let s005 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3068[39m: [38;5;2m      145: let s006 = "\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3069[39m: [38;5;2m      146: let s007 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002"[39m
     [38;5;2m3070[39m: [38;5;2m      147: let s008 = "\016\002\002\016\002\002\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3071[39m: [38;5;2m      148: let s009 = "\011\011\011\011\011\011\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3072[39m: [38;5;2m      149: let s010 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3073[39m: [38;5;2m      150: let s011 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\011\016\002\002\002\002\002\002\016\016\002\002\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3074[39m: [38;5;2m      151: let s012 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3075[39m: [38;5;2m      152: let s013 = "\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3076[39m: [38;5;2m      153: let s014 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3077[39m: [38;5;2m      154: let s015 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m3078[39m: [38;5;2m      155: let s016 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\016\002\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3079[39m: [38;5;2m      156: let s017 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3080[39m: [38;5;2m      157: let s018 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\011\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3081[39m: [38;5;2m      158: let s019 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\016\r\r"[39m
     [38;5;2m3082[39m: [38;5;2m      159: let s020 = "\r\002\002\002\002\002\002\002\002\r\r\r\r\002\r\r\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3083[39m: [38;5;2m      160: let s021 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\r"[39m
     [38;5;2m3084[39m: [38;5;2m      161: let s022 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016"[39m
     [38;5;2m3085[39m: [38;5;2m      162: let s023 = "\016\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r"[39m
     [38;5;2m3086[39m: [38;5;2m      163: let s024 = "\r\002\002\016\016\016\016\002\002\016\016\002\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3087[39m: [38;5;2m      164: let s025 = "\r\002\002\002\002\002\016\002\002\r\016\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002"[39m
     [38;5;2m3088[39m: [38;5;2m      165: let s026 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002"[39m
     [38;5;2m3089[39m: [38;5;2m      166: let s027 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3090[39m: [38;5;2m      167: let s028 = "\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r"[39m
     [38;5;2m3091[39m: [38;5;2m      168: let s029 = "\002\r\r\016\016\016\r\r\r\016\r\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3092[39m: [38;5;2m      169: let s030 = "\002\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002"[39m
     [38;5;2m3093[39m: [38;5;2m      170: let s031 = "\002\r\r\r\r\016\002\002\002\016\002\002\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3094[39m: [38;5;2m      171: let s032 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002"[39m
     [38;5;2m3095[39m: [38;5;2m      172: let s033 = "\r\r\002\r\r\016\002\r\r\016\r\r\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3096[39m: [38;5;2m      173: let s034 = "\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\002\r"[39m
     [38;5;2m3097[39m: [38;5;2m      174: let s035 = "\r\002\002\002\002\016\r\r\r\016\r\r\r\002\011\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3098[39m: [38;5;2m      175: let s036 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3099[39m: [38;5;2m      176: let s037 = "\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\002\r\r\002\002\002\016\002\016\r\r\r\r\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3100[39m: [38;5;2m      177: let s038 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m3101[39m: [38;5;2m      178: let s039 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3102[39m: [38;5;2m      179: let s040 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m3103[39m: [38;5;2m      180: let s041 = "\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3104[39m: [38;5;2m      181: let s042 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\016\002\016\016\016\016\r\r"[39m
     [38;5;2m3105[39m: [38;5;2m      182: let s043 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m3106[39m: [38;5;2m      183: let s044 = "\002\002\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m3107[39m: [38;5;2m      184: let s045 = "\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3108[39m: [38;5;2m      185: let s046 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\r\002\002\002\002\002\002\016\002\002\r\r\002\002\016"[39m
     [38;5;2m3109[39m: [38;5;2m      186: let s047 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3110[39m: [38;5;2m      187: let s048 = "\016\016\002\016\r\002\002\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3111[39m: [38;5;2m      188: let s049 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007"[39m
     [38;5;2m3112[39m: [38;5;2m      189: let s050 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m3113[39m: [38;5;2m      190: let s051 = "\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m3114[39m: [38;5;2m      191: let s052 = "\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m3115[39m: [38;5;2m      192: let s053 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3116[39m: [38;5;2m      193: let s054 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3117[39m: [38;5;2m      194: let s055 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3118[39m: [38;5;2m      195: let s056 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\002\002\002\002\002\002\002\r\r"[39m
     [38;5;2m3119[39m: [38;5;2m      196: let s057 = "\r\r\r\r\r\r\002\r\r\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3120[39m: [38;5;2m      197: let s058 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3121[39m: [38;5;2m      198: let s059 = "\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3122[39m: [38;5;2m      199: let s060 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\r\r\002\002\r\r\r\016\016\016\016\r\r\002\r\r\r\r\r\r\002\002\002\016\016\016\016"[39m
     [38;5;2m3123[39m: [38;5;2m      200: let s061 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3124[39m: [38;5;2m      201: let s062 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\r\002\002\002\002\002\002\002\016\002\016\002\016\016\002\002\002\002\002\002\002\002\r\r\r\r\r\r\002\002\002\002\002\002\002\002\002\002\016\016\002"[39m
     [38;5;2m3125[39m: [38;5;2m      202: let s063 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3126[39m: [38;5;2m      203: let s064 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3127[39m: [38;5;2m      204: let s065 = "\002\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\r\002\r\r\r"[39m
     [38;5;2m3128[39m: [38;5;2m      205: let s066 = "\r\r\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3129[39m: [38;5;2m      206: let s067 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\r\r\002\002\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3130[39m: [38;5;2m      207: let s068 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\r\r\r\002\r\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3131[39m: [38;5;2m      208: let s069 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\002\002\002\002\002\002\002\002\r\r\002\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3132[39m: [38;5;2m      209: let s070 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\002\002\002\002\002\016\016\016\016\002\016\016\016\016\016\016\002\016\016\r\002\002\016\016\016\016\016\016"[39m
     [38;5;2m3133[39m: [38;5;2m      210: let s071 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002"[39m
     [38;5;2m3134[39m: [38;5;2m      211: let s072 = "\016\016\016\016\016\016\016\016\016\016\016\000\002\017\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3135[39m: [38;5;2m      212: let s073 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3136[39m: [38;5;2m      213: let s074 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3137[39m: [38;5;2m      214: let s075 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3138[39m: [38;5;2m      215: let s076 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m3139[39m: [38;5;2m      216: let s077 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3140[39m: [38;5;2m      217: let s078 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3141[39m: [38;5;2m      218: let s079 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3142[39m: [38;5;2m      219: let s080 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\016\016"[39m
     [38;5;2m3143[39m: [38;5;2m      220: let s081 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3144[39m: [38;5;2m      221: let s082 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3145[39m: [38;5;2m      222: let s083 = "\016\016\002\016\016\016\002\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\r\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3146[39m: [38;5;2m      223: let s084 = "\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m3147[39m: [38;5;2m      224: let s085 = "\r\r\r\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m3148[39m: [38;5;2m      225: let s086 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3149[39m: [38;5;2m      226: let s087 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\016\016\016"[39m
     [38;5;2m3150[39m: [38;5;2m      227: let s088 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\r\r\002\002\r\r"[39m
     [38;5;2m3151[39m: [38;5;2m      228: let s089 = "\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3152[39m: [38;5;2m      229: let s090 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\r\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3153[39m: [38;5;2m      230: let s091 = "\016\016\016\002\016\016\016\016\016\016\016\016\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016"[39m
     [38;5;2m3154[39m: [38;5;2m      231: let s092 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002\002\016\016\002\002\016\016\016\016\016\002\002"[39m
     [38;5;2m3155[39m: [38;5;2m      232: let s093 = "\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\r\r\016\016\016\016\016\r\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3156[39m: [38;5;2m      233: let s094 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\r\r\002\r\r\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3157[39m: [38;5;2m      234: let s095 = "\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n"[39m
     [38;5;2m3158[39m: [38;5;2m      235: let s096 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m3159[39m: [38;5;2m      236: let s097 = "\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m3160[39m: [38;5;2m      237: let s098 = "\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n"[39m
     [38;5;2m3161[39m: [38;5;2m      238: let s099 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m3162[39m: [38;5;2m      239: let s100 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m3163[39m: [38;5;2m      240: let s101 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m3164[39m: [38;5;2m      241: let s102 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\016\016\016\016\016\016\016\016\016\016\016\016\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m3165[39m: [38;5;2m      242: let s103 = "\015\015\015\015\015\015\015\016\016\016\016\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\016\016\016\016"[39m
     [38;5;2m3166[39m: [38;5;2m      243: let s104 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3167[39m: [38;5;2m      244: let s105 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3168[39m: [38;5;2m      245: let s106 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016"[39m
     [38;5;2m3169[39m: [38;5;2m      246: let s107 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m3170[39m: [38;5;2m      247: let s108 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3171[39m: [38;5;2m      248: let s109 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m3172[39m: [38;5;2m      249: let s110 = "\016\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\002"[39m
     [38;5;2m3173[39m: [38;5;2m      250: let s111 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3174[39m: [38;5;2m      251: let s112 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3175[39m: [38;5;2m      252: let s113 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3176[39m: [38;5;2m      253: let s114 = "\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3177[39m: [38;5;2m      254: let s115 = "\r\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3178[39m: [38;5;2m      255: let s116 = "\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m3179[39m: [38;5;2m      256: let s117 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\r\r\002\002\016\016\011\016\016"[39m
     [38;5;2m3180[39m: [38;5;2m      257: let s118 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3181[39m: [38;5;2m      258: let s119 = "\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3182[39m: [38;5;2m      259: let s120 = "\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3183[39m: [38;5;2m      260: let s121 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m3184[39m: [38;5;2m      261: let s122 = "\r\016\011\011\016\016\016\016\016\002\002\002\002\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3185[39m: [38;5;2m      262: let s123 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\r\r\002\r\002\002\016\016\016\016\016\016\002\016"[39m
     [38;5;2m3186[39m: [38;5;2m      263: let s124 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3187[39m: [38;5;2m      264: let s125 = "\002\r\r\r\r\016\016\r\r\016\016\r\r\r\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\r\r\016\016\002\002\002\002\002\002\002\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3188[39m: [38;5;2m      265: let s126 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3189[39m: [38;5;2m      266: let s127 = "\r\r\002\002\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3190[39m: [38;5;2m      267: let s128 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\002\002\r\002\r\r\002\r\002"[39m
     [38;5;2m3191[39m: [38;5;2m      268: let s129 = "\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3192[39m: [38;5;2m      269: let s130 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\016\016\r\r\r\r\002\002\r\002"[39m
     [38;5;2m3193[39m: [38;5;2m      270: let s131 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3194[39m: [38;5;2m      271: let s132 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\r\r\002\r\002"[39m
     [38;5;2m3195[39m: [38;5;2m      272: let s133 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\r\r\002\002\002\002\002\002\r\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3196[39m: [38;5;2m      273: let s134 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\002\002\002\002\r\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3197[39m: [38;5;2m      274: let s135 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016"[39m
     [38;5;2m3198[39m: [38;5;2m      275: let s136 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\r\r\016\r\r\016\016\002\002\r\002\011"[39m
     [38;5;2m3199[39m: [38;5;2m      276: let s137 = "\r\011\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3200[39m: [38;5;2m      277: let s138 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\016\016\002\002\r\r\r\r\002\016\016\016\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3201[39m: [38;5;2m      278: let s139 = "\016\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\011\002\002\002\002\016"[39m
     [38;5;2m3202[39m: [38;5;2m      279: let s140 = "\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3203[39m: [38;5;2m      280: let s141 = "\016\016\016\016\011\011\011\011\011\011\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3204[39m: [38;5;2m      281: let s142 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\002\002\002\016\002\002\002\002\002\002\r\002"[39m
     [38;5;2m3205[39m: [38;5;2m      282: let s143 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\r\002\002\002\002\002\002\002\r\002\002\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3206[39m: [38;5;2m      283: let s144 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\002\016\002\002\016\002"[39m
     [38;5;2m3207[39m: [38;5;2m      284: let s145 = "\002\002\002\002\002\002\011\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3208[39m: [38;5;2m      285: let s146 = "\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\016\002\002\016\r\r\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3209[39m: [38;5;2m      286: let s147 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3210[39m: [38;5;2m      287: let s148 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016"[39m
     [38;5;2m3211[39m: [38;5;2m      288: let s149 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3212[39m: [38;5;2m      289: let s150 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3213[39m: [38;5;2m      290: let s151 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m3214[39m: [38;5;2m      291: let s152 = "\r\r\r\r\r\r\r\r\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3215[39m: [38;5;2m      292: let s153 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3216[39m: [38;5;2m      293: let s154 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3217[39m: [38;5;2m      294: let s155 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\002\016\016\016\r\002\002\002\002\002\000\000\000\000\000\000\000\000\002\002\002\002\002"[39m
     [38;5;2m3218[39m: [38;5;2m      295: let s156 = "\002\002\002\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3219[39m: [38;5;2m      296: let s157 = "\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3220[39m: [38;5;2m      297: let s158 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m3221[39m: [38;5;2m      298: let s159 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3222[39m: [38;5;2m      299: let s160 = "\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3223[39m: [38;5;2m      300: let s161 = "\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\002\002\002\002\002\002\002\016\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3224[39m: [38;5;2m      301: let s162 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3225[39m: [38;5;2m      302: let s163 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3226[39m: [38;5;2m      303: let s164 = "\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m3227[39m: [38;5;2m      304: let s165 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012"[39m
     [38;5;2m3228[39m: [38;5;2m      305: let s166 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m3229[39m: [38;5;2m      306: let s167 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m3230[39m: [38;5;2m      307: let s168 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m3231[39m: [38;5;2m      308: let s169 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m3232[39m: [38;5;2m      309: [39m
     [38;5;2m3233[39m: [38;5;2m      310: let grapheme_cluster_boundary =[39m
     [38;5;2m3234[39m: [38;5;2m      311:   [|[|s001; s002; s003; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3235[39m: [38;5;2m      312:       s004; s005; s000; s000; s000; s000; s006; s000; s000; s000; s007; s008;[39m
     [38;5;2m3236[39m: [38;5;2m      313:       s009; s010; s000; s011; s012; s013; s014; s015; s016; s017; s000; s018;[39m
     [38;5;2m3237[39m: [38;5;2m      314:       s019; s020; s021; s022; s023; s024; s023; s025; s026; s027; s028; s029;[39m
     [38;5;2m3238[39m: [38;5;2m      315:       s030; s031; s032; s033; s034; s035; s036; s037; s038; s039; s040; s041;[39m
     [38;5;2m3239[39m: [38;5;2m      316:       s042; s043; s044; s045|];[39m
     [38;5;2m3240[39m: [38;5;2m      317:     [|s046; s047; s048; s000; s049; s050; s051; s052; s000; s000; s000; s000;[39m
     [38;5;2m3241[39m: [38;5;2m      318:       s000; s053; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3242[39m: [38;5;2m      319:       s000; s000; s000; s000; s054; s055; s056; s057; s058; s000; s059; s000;[39m
     [38;5;2m3243[39m: [38;5;2m      320:       s060; s000; s000; s000; s061; s062; s063; s064; s065; s066; s067; s068;[39m
     [38;5;2m3244[39m: [38;5;2m      321:       s069; s000; s000; s070; s000; s000; s000; s071; s000; s000; s000; s000;[39m
     [38;5;2m3245[39m: [38;5;2m      322:       s000; s000; s000; s000|];[39m
     [38;5;2m3246[39m: [38;5;2m      323:     [|s072; s073; s000; s074; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3247[39m: [38;5;2m      324:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3248[39m: [38;5;2m      325:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3249[39m: [38;5;2m      326:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3250[39m: [38;5;2m      327:       s000; s000; s000; s075; s000; s076; s000; s077; s000; s000; s000; s000;[39m
     [38;5;2m3251[39m: [38;5;2m      328:       s000; s000; s000; s000|];[39m
     [38;5;2m3252[39m: [38;5;2m      329:     [|s078; s000; s079; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3253[39m: [38;5;2m      330:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3254[39m: [38;5;2m      331:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3255[39m: [38;5;2m      332:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3256[39m: [38;5;2m      333:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3257[39m: [38;5;2m      334:       s000; s000; s000; s000|];[39m
     [38;5;2m3258[39m: [38;5;2m      335:     [||]; [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m3259[39m: [38;5;2m      336:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3260[39m: [38;5;2m      337:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3261[39m: [38;5;2m      338:       s000; s080; s081; s082; s000; s000; s000; s000; s083; s000; s084; s085;[39m
     [38;5;2m3262[39m: [38;5;2m      339:       s086; s087; s088; s089; s090; s091; s092; s093; s000; s000; s000; s094;[39m
     [38;5;2m3263[39m: [38;5;2m      340:       s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m3264[39m: [38;5;2m      341:       s100; s101; s095; s096|];[39m
     [38;5;2m3265[39m: [38;5;2m      342:     [|s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m3266[39m: [38;5;2m      343:       s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m3267[39m: [38;5;2m      344:       s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097;[39m
     [38;5;2m3268[39m: [38;5;2m      345:       s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m3269[39m: [38;5;2m      346:       s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m3270[39m: [38;5;2m      347:       s101; s095; s096; s097|];[39m
     [38;5;2m3271[39m: [38;5;2m      348:     [|s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m3272[39m: [38;5;2m      349:       s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m3273[39m: [38;5;2m      350:       s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098;[39m
     [38;5;2m3274[39m: [38;5;2m      351:       s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m3275[39m: [38;5;2m      352:       s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m3276[39m: [38;5;2m      353:       s095; s096; s097; s098|];[39m
     [38;5;2m3277[39m: [38;5;2m      354:     [|s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m3278[39m: [38;5;2m      355:       s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m3279[39m: [38;5;2m      356:       s095; s096; s097; s098; s099; s100; s102; s103; s000; s000; s000; s000;[39m
     [38;5;2m3280[39m: [38;5;2m      357:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3281[39m: [38;5;2m      358:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3282[39m: [38;5;2m      359:       s000; s000; s000; s000|];[39m
     [38;5;2m3283[39m: [38;5;2m      360:     [||];[39m
     [38;5;2m3284[39m: [38;5;2m      361:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3285[39m: [38;5;2m      362:       s104; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3286[39m: [38;5;2m      363:       s105; s000; s000; s002; s000; s000; s081; s106; s000; s000; s000; s000;[39m
     [38;5;2m3287[39m: [38;5;2m      364:       s000; s000; s000; s107; s000; s000; s000; s108; s000; s109; s000; s000;[39m
     [38;5;2m3288[39m: [38;5;2m      365:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3289[39m: [38;5;2m      366:       s000; s000; s000; s000|];[39m
     [38;5;2m3290[39m: [38;5;2m      367:     [|s000; s000; s000; s000; s000; s000; s000; s000; s110; s000; s000; s111;[39m
     [38;5;2m3291[39m: [38;5;2m      368:       s000; s000; s000; s000; s000; s000; s000; s000; s112; s000; s000; s000;[39m
     [38;5;2m3292[39m: [38;5;2m      369:       s000; s000; s113; s000; s000; s114; s000; s000; s115; s116; s117; s118;[39m
     [38;5;2m3293[39m: [38;5;2m      370:       s119; s120; s121; s122; s123; s000; s000; s124; s034; s125; s000; s000;[39m
     [38;5;2m3294[39m: [38;5;2m      371:       s126; s127; s128; s129; s000; s000; s130; s131; s132; s064; s133; s000;[39m
     [38;5;2m3295[39m: [38;5;2m      372:       s134; s000; s000; s000|];[39m
     [38;5;2m3296[39m: [38;5;2m      373:     [|s135; s000; s000; s000; s136; s137; s000; s138; s139; s140; s141; s000;[39m
     [38;5;2m3297[39m: [38;5;2m      374:       s000; s000; s000; s000; s142; s000; s143; s000; s144; s145; s146; s000;[39m
     [38;5;2m3298[39m: [38;5;2m      375:       s000; s000; s000; s147; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3299[39m: [38;5;2m      376:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3300[39m: [38;5;2m      377:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3301[39m: [38;5;2m      378:       s000; s000; s000; s000|];[39m
     [38;5;2m3302[39m: [38;5;2m      379:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3303[39m: [38;5;2m      380:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3304[39m: [38;5;2m      381:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3305[39m: [38;5;2m      382:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3306[39m: [38;5;2m      383:       s148; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3307[39m: [38;5;2m      384:       s000; s000; s000; s000|];[39m
     [38;5;2m3308[39m: [38;5;2m      385:     [||]; [||]; [||];[39m
     [38;5;2m3309[39m: [38;5;2m      386:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s149;[39m
     [38;5;2m3310[39m: [38;5;2m      387:       s150; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3311[39m: [38;5;2m      388:       s000; s000; s000; s000; s000; s151; s152; s153; s000; s000; s000; s000;[39m
     [38;5;2m3312[39m: [38;5;2m      389:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3313[39m: [38;5;2m      390:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3314[39m: [38;5;2m      391:       s000; s000; s000; s000|];[39m
     [38;5;2m3315[39m: [38;5;2m      392:     [||]; [||]; [||]; [||];[39m
     [38;5;2m3316[39m: [38;5;2m      393:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3317[39m: [38;5;2m      394:       s000; s000; s000; s000; s000; s000; s154; s000; s000; s000; s000; s000;[39m
     [38;5;2m3318[39m: [38;5;2m      395:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3319[39m: [38;5;2m      396:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3320[39m: [38;5;2m      397:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3321[39m: [38;5;2m      398:       s000; s000; s000; s000|];[39m
     [38;5;2m3322[39m: [38;5;2m      399:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3323[39m: [38;5;2m      400:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3324[39m: [38;5;2m      401:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3325[39m: [38;5;2m      402:       s000; s155; s156; s000; s000; s157; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3326[39m: [38;5;2m      403:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3327[39m: [38;5;2m      404:       s000; s000; s000; s000|];[39m
     [38;5;2m3328[39m: [38;5;2m      405:     [|s000; s000; s000; s000; s000; s000; s000; s000; s158; s159; s160; s000;[39m
     [38;5;2m3329[39m: [38;5;2m      406:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3330[39m: [38;5;2m      407:       s000; s000; s000; s000; s000; s000; s000; s000; s161; s000; s000; s000;[39m
     [38;5;2m3331[39m: [38;5;2m      408:       s150; s000; s000; s000; s000; s000; s000; s162; s000; s000; s000; s000;[39m
     [38;5;2m3332[39m: [38;5;2m      409:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3333[39m: [38;5;2m      410:       s000; s000; s000; s000|];[39m
     [38;5;2m3334[39m: [38;5;2m      411:     [|s000; s000; s000; s163; s000; s164; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3335[39m: [38;5;2m      412:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3336[39m: [38;5;2m      413:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3337[39m: [38;5;2m      414:       s000; s000; s000; s165; s000; s000; s000; s000; s000; s000; s000; s166;[39m
     [38;5;2m3338[39m: [38;5;2m      415:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3339[39m: [38;5;2m      416:       s000; s000; s000; s000|];[39m
     [38;5;2m3340[39m: [38;5;2m      417:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3341[39m: [38;5;2m      418:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3342[39m: [38;5;2m      419:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3343[39m: [38;5;2m      420:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3344[39m: [38;5;2m      421:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3345[39m: [38;5;2m      422:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3346[39m: [38;5;2m      423:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3347[39m: [38;5;2m      424:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3348[39m: [38;5;2m      425:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3349[39m: [38;5;2m      426:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3350[39m: [38;5;2m      427:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3351[39m: [38;5;2m      428:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3352[39m: [38;5;2m      429:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3353[39m: [38;5;2m      430:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3354[39m: [38;5;2m      431:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3355[39m: [38;5;2m      432:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3356[39m: [38;5;2m      433:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m3357[39m: [38;5;2m      434:     [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m3358[39m: [38;5;2m      435:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3359[39m: [38;5;2m      436:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3360[39m: [38;5;2m      437:       s000; s000; s000; s000; s000; s000; s000; s000; s167; s004; s168; s168;[39m
     [38;5;2m3361[39m: [38;5;2m      438:       s004; s004; s004; s169; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m3362[39m: [38;5;2m      439:       s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m3363[39m: [38;5;2m      440:       s168; s168; s168; s168|];[39m
     [38;5;2m3364[39m: [38;5;2m      441:     [|s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m3365[39m: [38;5;2m      442:       s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m3366[39m: [38;5;2m      443:       s168; s168; s168; s168; s168; s168; s168; s168; s000; s000; s000; s000;[39m
     [38;5;2m3367[39m: [38;5;2m      444:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3368[39m: [38;5;2m      445:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m3369[39m: [38;5;2m      446:       s000; s000; s000; s000|]|][39m
     [38;5;2m3370[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp_data.mli:[39m
     [38;5;2m3371[39m: [38;5;2m        1: (* Do not edit.[39m
     [38;5;2m3372[39m: [38;5;2m        2:  *[39m
     [38;5;2m3373[39m: [38;5;2m        3:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m3374[39m: [38;5;2m        4:  * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m3375[39m: [38;5;2m        5:  *[39m
     [38;5;2m3376[39m: [38;5;2m        6:  * Unicode version 13.0.0.[39m
     [38;5;2m3377[39m: [38;5;2m        7:  *)[39m
     [38;5;2m3378[39m: [38;5;2m        8: [39m
     [38;5;2m3379[39m: [38;5;2m        9: (* Uucp.Break.tty_width_hint *)[39m
     [38;5;2m3380[39m: [38;5;2m       10: val tty_width_hint: int array * int array * int array[39m
     [38;5;2m3381[39m: [38;5;2m       11: [39m
     [38;5;2m3382[39m: [38;5;2m       12: (* Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m3383[39m: [38;5;2m       13: val grapheme_cluster_boundary: string array array[39m
     [38;5;2m3384[39m: [38;5;2m       14: [39m
     [38;5;2m3385[39m: [38;5;2mAdded regular file ../notty/src/notty.ml:[39m
     [38;5;2m3386[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m3387[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m3388[39m: [38;5;2m        3: [39m
     [38;5;2m3389[39m: [38;5;2m        4: let invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m3390[39m: [38;5;2m        5: [39m
     [38;5;2m3391[39m: [38;5;2m        6: let (&.) f g x = f (g x)[39m
     [38;5;2m3392[39m: [38;5;2m        7: [39m
     [38;5;2m3393[39m: [38;5;2m        8: let btw (x : int) a b = a <= x && x <= b[39m
     [38;5;2m3394[39m: [38;5;2m        9: let bit n b = b land (1 lsl n) > 0[39m
     [38;5;2m3395[39m: [38;5;2m       10: [39m
     [38;5;2m3396[39m: [38;5;2m       11: let max (a : int) b = if a > b then a else b[39m
     [38;5;2m3397[39m: [38;5;2m       12: let min (a : int) b = if a < b then a else b[39m
     [38;5;2m3398[39m: [38;5;2m       13: [39m
     [38;5;2m3399[39m: [38;5;2m       14: let is_C0 x = x < 0x20 || x = 0x7f[39m
     [38;5;2m3400[39m: [38;5;2m       15: and is_C1 x = 0x80 <= x && x < 0xa0[39m
     [38;5;2m3401[39m: [38;5;2m       16: let is_ctrl x = is_C0 x || is_C1 x[39m
     [38;5;2m3402[39m: [38;5;2m       17: and is_ascii x = x < 0x80[39m
     [38;5;2m3403[39m: [38;5;2m       18: [39m
     [38;5;2m3404[39m: [38;5;2m       19: let rec concatm z (@) xs =[39m
     [38;5;2m3405[39m: [38;5;2m       20:   let rec accum (@) = function[39m
     [38;5;2m3406[39m: [38;5;2m       21:     | []|[_] as xs -> xs[39m
     [38;5;2m3407[39m: [38;5;2m       22:     | a::b::xs -> (a @ b) :: accum (@) xs in[39m
     [38;5;2m3408[39m: [38;5;2m       23:   match xs with [] -> z | [x] -> x | xs -> concatm z (@) (accum (@) xs)[39m
     [38;5;2m3409[39m: [38;5;2m       24: [39m
     [38;5;2m3410[39m: [38;5;2m       25: let rec linspcm z (@) x n f = match n with[39m
     [38;5;2m3411[39m: [38;5;2m       26:   | 0 -> z[39m
     [38;5;2m3412[39m: [38;5;2m       27:   | 1 -> f x[39m
     [38;5;2m3413[39m: [38;5;2m       28:   | _ -> let m = n / 2 in linspcm z (@) x m f @ linspcm z (@) (x + m) (n - m) f[39m
     [38;5;2m3414[39m: [38;5;2m       29: [39m
     [38;5;2m3415[39m: [38;5;2m       30: let memo (type a) ?(hash=Hashtbl.hash) ?(eq=(=)) ~size f =[39m
     [38;5;2m3416[39m: [38;5;2m       31:   let module H = Ephemeron.K1.Make[39m
     [38;5;2m3417[39m: [38;5;2m       32:     (struct type t = a let (hash, equal) = (hash, eq) end) in[39m
     [38;5;2m3418[39m: [38;5;2m       33:   let t = H.create size in fun x ->[39m
     [38;5;2m3419[39m: [38;5;2m       34:     try H.find t x with Not_found -> let y = f x in H.add t x y; y[39m
     [38;5;2m3420[39m: [38;5;2m       35: [39m
     [38;5;2m3421[39m: [38;5;2m       36: module Buffer = struct[39m
     [38;5;2m3422[39m: [38;5;2m       37:   include Buffer[39m
     [38;5;2m3423[39m: [38;5;2m       38:   let buf = Buffer.create 1024[39m
     [38;5;2m3424[39m: [38;5;2m       39:   let mkstring f = f buf; let res = contents buf in reset buf; res[39m
     [38;5;2m3425[39m: [38;5;2m       40:   let add_decimal b = function[39m
     [38;5;2m3426[39m: [38;5;2m       41:     | x when btw x 0 999 ->[39m
     [38;5;2m3427[39m: [38;5;2m       42:         let d1 = x / 100 and d2 = (x mod 100) / 10 and d3 = x mod 10 in[39m
     [38;5;2m3428[39m: [38;5;2m       43:         if d1 > 0 then 0x30 + d1 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m3429[39m: [38;5;2m       44:         if (d1 + d2) > 0 then 0x30 + d2 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m3430[39m: [38;5;2m       45:         0x30 + d3 |> Char.unsafe_chr |> add_char b[39m
     [38;5;2m3431[39m: [38;5;2m       46:     | x -> string_of_int x |> add_string b[39m
     [38;5;2m3432[39m: [38;5;2m       47:   let add_chars b c n = for _ = 1 to n do add_char b c done[39m
     [38;5;2m3433[39m: [38;5;2m       48: end[39m
     [38;5;2m3434[39m: [38;5;2m       49: [39m
     [38;5;2m3435[39m: [38;5;2m       50: module String = struct[39m
     [38;5;2m3436[39m: [38;5;2m       51:   include String[39m
     [38;5;2m3437[39m: [38;5;2m       52:   let sub0cp s i len = if i > 0 || len < length s then sub s i len else s[39m
     [38;5;2m3438[39m: [38;5;2m       53:   let of_chars_rev = function[39m
     [38;5;2m3439[39m: [38;5;2m       54:     | []  -> ""[39m
     [38;5;2m3440[39m: [38;5;2m       55:     | [c] -> String.make 1 c[39m
     [38;5;2m3441[39m: [38;5;2m       56:     | cs  ->[39m
     [38;5;2m3442[39m: [38;5;2m       57:         let n = List.length cs in[39m
     [38;5;2m3443[39m: [38;5;2m       58:         let rec go bs i = Bytes.(function[39m
     [38;5;2m3444[39m: [38;5;2m       59:           | []    -> unsafe_to_string bs[39m
     [38;5;2m3445[39m: [38;5;2m       60:           | x::xs -> unsafe_set bs i x; go bs (pred i) xs[39m
     [38;5;2m3446[39m: [38;5;2m       61:         ) in go (Bytes.create n) (n - 1) cs[39m
     [38;5;2m3447[39m: [38;5;2m       62: end[39m
     [38;5;2m3448[39m: [38;5;2m       63: [39m
     [38;5;2m3449[39m: [38;5;2m       64: module Option = struct[39m
     [38;5;2m3450[39m: [38;5;2m       65: [39m
     [38;5;2m3451[39m: [38;5;2m       66:   let map f = function Some x -> Some (f x) | _ -> None[39m
     [38;5;2m3452[39m: [38;5;2m       67:   let get def = function Some x -> x | _ -> def[39m
     [38;5;2m3453[39m: [38;5;2m       68:   let to_list = function Some x -> [x] | _ -> [][39m
     [38;5;2m3454[39m: [38;5;2m       69:   let (>>|) a f = map f a[39m
     [38;5;2m3455[39m: [38;5;2m       70:   let (>>=) a f = match a with Some x -> f x | _ -> None[39m
     [38;5;2m3456[39m: [38;5;2m       71: end[39m
     [38;5;2m3457[39m: [38;5;2m       72: [39m
     [38;5;2m3458[39m: [38;5;2m       73: module Text = struct[39m
     [38;5;2m3459[39m: [38;5;2m       74: [39m
     [38;5;2m3460[39m: [38;5;2m       75:   let err_ctrl u = invalid_arg "Notty: control char: U+%02X, %S" (Char.code u)[39m
     [38;5;2m3461[39m: [38;5;2m       76:   let err_malformed = invalid_arg "Notty: malformed UTF-8: %s, %S"[39m
     [38;5;2m3462[39m: [38;5;2m       77: [39m
     [38;5;2m3463[39m: [38;5;2m       78:   type t =[39m
     [38;5;2m3464[39m: [38;5;2m       79:     | Ascii of string * int * int[39m
     [38;5;2m3465[39m: [38;5;2m       80:     | Utf8  of string * int array * int * int[39m
     [38;5;2m3466[39m: [38;5;2m       81: [39m
     [38;5;2m3467[39m: [38;5;2m       82:   let equal t1 t2 = match (t1, t2) with[39m
     [38;5;2m3468[39m: [38;5;2m       83:     | (Utf8 (s1, _, i1, n1), Utf8 (s2, _, i2, n2))[39m
     [38;5;2m3469[39m: [38;5;2m       84:     | (Ascii (s1, i1, n1), Ascii (s2, i2, n2)) -> i1 = i2 && n1 = n2 && s1 = s2[39m
     [38;5;2m3470[39m: [38;5;2m       85:     | _ -> false[39m
     [38;5;2m3471[39m: [38;5;2m       86: [39m
     [38;5;2m3472[39m: [38;5;2m       87:   let width = function Utf8 (_, _, _, w) -> w | Ascii (_, _, w)   -> w[39m
     [38;5;2m3473[39m: [38;5;2m       88: [39m
     [38;5;2m3474[39m: [38;5;2m       89:   let empty = Ascii ("", 0, 0)[39m
     [38;5;2m3475[39m: [38;5;2m       90: [39m
     [38;5;2m3476[39m: [38;5;2m       91:   let is_empty t = width t = 0[39m
     [38;5;2m3477[39m: [38;5;2m       92: [39m
     [38;5;2m3478[39m: [38;5;2m       93:   let graphemes str =[39m
     [38;5;2m3479[39m: [38;5;2m       94:     let module Uuseg = Notty_grapheme_cluster in[39m
     [38;5;2m3480[39m: [38;5;2m       95:     let seg = Uuseg.create () in[39m
     [38;5;2m3481[39m: [38;5;2m       96:     let rec f (is, w as acc) i evt =[39m
     [38;5;2m3482[39m: [38;5;2m       97:       match Uuseg.add seg evt with[39m
     [38;5;2m3483[39m: [38;5;2m       98:       | `Await | `End -> acc[39m
     [38;5;2m3484[39m: [38;5;2m       99:       | `Uchar u      -> f (is, w + Notty_uucp.tty_width_hint u) i `Await[39m
     [38;5;2m3485[39m: [38;5;2m      100:       | `Boundary     ->[39m
     [38;5;2m3486[39m: [38;5;2m      101:           let is = match w with 0 -> is | 1 -> i::is | _ -> i::(-1)::is in[39m
     [38;5;2m3487[39m: [38;5;2m      102:           f (is, 0) i `Await in[39m
     [38;5;2m3488[39m: [38;5;2m      103:     let acc = Uutf.String.fold_utf_8 (fun acc i -> function[39m
     [38;5;2m3489[39m: [38;5;2m      104:       | `Malformed err -> err_malformed err str[39m
     [38;5;2m3490[39m: [38;5;2m      105:       | `Uchar _ as u  -> f acc i u[39m
     [38;5;2m3491[39m: [38;5;2m      106:       ) ([0], 0) str in[39m
     [38;5;2m3492[39m: [38;5;2m      107:     f acc (String.length str) `End |> fst |> List.rev |> Array.of_list (*XXX*)[39m
     [38;5;2m3493[39m: [38;5;2m      108: [39m
     [38;5;2m3494[39m: [38;5;2m      109:   let dead = ' '[39m
     [38;5;2m3495[39m: [38;5;2m      110: [39m
     [38;5;2m3496[39m: [38;5;2m      111:   let to_buffer buf = function[39m
     [38;5;2m3497[39m: [38;5;2m      112:     | Ascii (s, off, w)    -> Buffer.add_substring buf s off w[39m
     [38;5;2m3498[39m: [38;5;2m      113:     | Utf8 (s, ix, off, w) ->[39m
     [38;5;2m3499[39m: [38;5;2m      114:         let x1 = match ix.(off) with[39m
     [38;5;2m3500[39m: [38;5;2m      115:           | -1 -> Buffer.add_char buf dead; ix.(off + 1) | x -> x[39m
     [38;5;2m3501[39m: [38;5;2m      116:         and x2 = ix.(off + w) in[39m
     [38;5;2m3502[39m: [38;5;2m      117:         Buffer.add_substring buf s x1 @@[39m
     [38;5;2m3503[39m: [38;5;2m      118:           (if x2 = -1 then ix.(off + w - 1) else x2) - x1;[39m
     [38;5;2m3504[39m: [38;5;2m      119:         if x2 = -1 then Buffer.add_char buf dead[39m
     [38;5;2m3505[39m: [38;5;2m      120: [39m
     [38;5;2m3506[39m: [38;5;2m      121:   let sub t x w =[39m
     [38;5;2m3507[39m: [38;5;2m      122:     let w1 = width t in[39m
     [38;5;2m3508[39m: [38;5;2m      123:     if w = 0 || x >= w1 then empty else[39m
     [38;5;2m3509[39m: [38;5;2m      124:       let w = min w (w1 - x) in[39m
     [38;5;2m3510[39m: [38;5;2m      125:       if w = w1 then t else match t with[39m
     [38;5;2m3511[39m: [38;5;2m      126:         Ascii (s, off, _) -> Ascii (s, off + x, w)[39m
     [38;5;2m3512[39m: [38;5;2m      127:       | Utf8 (s, ix, off, _) -> Utf8 (s, ix, off + x, w)[39m
     [38;5;2m3513[39m: [38;5;2m      128: [39m
     [38;5;2m3514[39m: [38;5;2m      129:   let is_ascii_or_raise_ctrl s =[39m
     [38;5;2m3515[39m: [38;5;2m      130:     let (@!) s i = String.unsafe_get s i |> Char.code in[39m
     [38;5;2m3516[39m: [38;5;2m      131:     let rec go s acc i n =[39m
     [38;5;2m3517[39m: [38;5;2m      132:       if n = 0 then acc else[39m
     [38;5;2m3518[39m: [38;5;2m      133:         let x = s @! i in[39m
     [38;5;2m3519[39m: [38;5;2m      134:         if is_C0 x then[39m
     [38;5;2m3520[39m: [38;5;2m      135:           err_ctrl s.[i] s[39m
     [38;5;2m3521[39m: [38;5;2m      136:         else if x = 0xc2 && n > 1 && is_C1 (s @! (i + 1)) then[39m
     [38;5;2m3522[39m: [38;5;2m      137:           err_ctrl s.[i + 1] s[39m
     [38;5;2m3523[39m: [38;5;2m      138:         else go s (acc && is_ascii x) (i + 1) (n - 1) in[39m
     [38;5;2m3524[39m: [38;5;2m      139:     go s true 0 (String.length s)[39m
     [38;5;2m3525[39m: [38;5;2m      140: [39m
     [38;5;2m3526[39m: [38;5;2m      141:   let of_ascii s = Ascii (s, 0, String.length s)[39m
     [38;5;2m3527[39m: [38;5;2m      142:   and of_unicode s = let x = graphemes s in Utf8 (s, x, 0, Array.length x - 1)[39m
     [38;5;2m3528[39m: [38;5;2m      143:   let of_unicode = memo ~eq:String.equal ~size:128 of_unicode[39m
     [38;5;2m3529[39m: [38;5;2m      144: [39m
     [38;5;2m3530[39m: [38;5;2m      145:   let of_string = function[39m
     [38;5;2m3531[39m: [38;5;2m      146:     | "" -> empty[39m
     [38;5;2m3532[39m: [38;5;2m      147:     | s  -> if is_ascii_or_raise_ctrl s then of_ascii s else of_unicode s[39m
     [38;5;2m3533[39m: [38;5;2m      148: [39m
     [38;5;2m3534[39m: [38;5;2m      149:   let of_uchars ucs = of_string @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m3535[39m: [38;5;2m      150:     Array.iter (Buffer.add_utf_8_uchar buf) ucs[39m
     [38;5;2m3536[39m: [38;5;2m      151: [39m
     [38;5;2m3537[39m: [38;5;2m      152:   let replicateu w u =[39m
     [38;5;2m3538[39m: [38;5;2m      153:     if is_ctrl (Uchar.to_int u) then[39m
     [38;5;2m3539[39m: [38;5;2m      154:       err_ctrl (Uchar.unsafe_to_char u) "<repeated character>"[39m
     [38;5;2m3540[39m: [38;5;2m      155:     else if w < 1 then empty[39m
     [38;5;2m3541[39m: [38;5;2m      156:     else if is_ascii (Uchar.to_int u) then[39m
     [38;5;2m3542[39m: [38;5;2m      157:       of_ascii (String.make w (Uchar.unsafe_to_char u))[39m
     [38;5;2m3543[39m: [38;5;2m      158:     else of_unicode @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m3544[39m: [38;5;2m      159:       for _ = 1 to w do Buffer.add_utf_8_uchar buf u done[39m
     [38;5;2m3545[39m: [38;5;2m      160: [39m
     [38;5;2m3546[39m: [38;5;2m      161:   let replicatec w c = replicateu w (Uchar.of_char c)[39m
     [38;5;2m3547[39m: [38;5;2m      162: end[39m
     [38;5;2m3548[39m: [38;5;2m      163: [39m
     [38;5;2m3549[39m: [38;5;2m      164: module A = struct[39m
     [38;5;2m3550[39m: [38;5;2m      165: [39m
     [38;5;2m3551[39m: [38;5;2m      166:   type color = int[39m
     [38;5;2m3552[39m: [38;5;2m      167:   type style = int[39m
     [38;5;2m3553[39m: [38;5;2m      168:   type t = { fg : color; bg : color; st : style }[39m
     [38;5;2m3554[39m: [38;5;2m      169: [39m
     [38;5;2m3555[39m: [38;5;2m      170:   let equal t1 t2 = t1.fg = t2.fg && t1.bg = t2.bg && t1.st = t2.st[39m
     [38;5;2m3556[39m: [38;5;2m      171:   let unsafe_color_of_int int= int[39m
     [38;5;2m3557[39m: [38;5;2m      172:   let unsafe_style_of_int int= int[39m
     [38;5;2m3558[39m: [38;5;2m      173: [39m
     [38;5;2m3559[39m: [38;5;2m      174:   let black        = 0x01000000[39m
     [38;5;2m3560[39m: [38;5;2m      175:   and red          = 0x01000001[39m
     [38;5;2m3561[39m: [38;5;2m      176:   and green        = 0x01000002[39m
     [38;5;2m3562[39m: [38;5;2m      177:   and yellow       = 0x01000003[39m
     [38;5;2m3563[39m: [38;5;2m      178:   and blue         = 0x01000004[39m
     [38;5;2m3564[39m: [38;5;2m      179:   and magenta      = 0x01000005[39m
     [38;5;2m3565[39m: [38;5;2m      180:   and cyan         = 0x01000006[39m
     [38;5;2m3566[39m: [38;5;2m      181:   and white        = 0x01000007[39m
     [38;5;2m3567[39m: [38;5;2m      182:   and lightblack   = 0x01000008[39m
     [38;5;2m3568[39m: [38;5;2m      183:   and lightred     = 0x01000009[39m
     [38;5;2m3569[39m: [38;5;2m      184:   and lightgreen   = 0x0100000a[39m
     [38;5;2m3570[39m: [38;5;2m      185:   and lightyellow  = 0x0100000b[39m
     [38;5;2m3571[39m: [38;5;2m      186:   and lightblue    = 0x0100000c[39m
     [38;5;2m3572[39m: [38;5;2m      187:   and lightmagenta = 0x0100000d[39m
     [38;5;2m3573[39m: [38;5;2m      188:   and lightcyan    = 0x0100000e[39m
     [38;5;2m3574[39m: [38;5;2m      189:   and lightwhite   = 0x0100000f[39m
     [38;5;2m3575[39m: [38;5;2m      190: [39m
     [38;5;2m3576[39m: [38;5;2m      191:   let tag c = (c land 0x03000000) lsr 24[39m
     [38;5;2m3577[39m: [38;5;2m      192: [39m
     [38;5;2m3578[39m: [38;5;2m      193:   let rgb ~r ~g ~b =[39m
     [38;5;2m3579[39m: [38;5;2m      194:     if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m3580[39m: [38;5;2m      195:       invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m3581[39m: [38;5;2m      196:     else 0x01000000 lor (r * 36 + g * 6 + b + 16)[39m
     [38;5;2m3582[39m: [38;5;2m      197: [39m
     [38;5;2m3583[39m: [38;5;2m      198:   let gray level =[39m
     [38;5;2m3584[39m: [38;5;2m      199:     if level < 0 || level > 23 then[39m
     [38;5;2m3585[39m: [38;5;2m      200:       invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m3586[39m: [38;5;2m      201:     else 0x01000000 lor (level + 232)[39m
     [38;5;2m3587[39m: [38;5;2m      202: [39m
     [38;5;2m3588[39m: [38;5;2m      203:   let rgb_888 ~r ~g ~b =[39m
     [38;5;2m3589[39m: [38;5;2m      204:     if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m3590[39m: [38;5;2m      205:       invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m3591[39m: [38;5;2m      206:     else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m3592[39m: [38;5;2m      207: [39m
     [38;5;2m3593[39m: [38;5;2m      208:   let i x = x land 0xff[39m
     [38;5;2m3594[39m: [38;5;2m      209:   and r x = x lsr 16 land 0xff[39m
     [38;5;2m3595[39m: [38;5;2m      210:   and g x = x lsr 8 land 0xff[39m
     [38;5;2m3596[39m: [38;5;2m      211:   and b x = x land 0xff[39m
     [38;5;2m3597[39m: [38;5;2m      212: [39m
     [38;5;2m3598[39m: [38;5;2m      213:   let bold      = 1[39m
     [38;5;2m3599[39m: [38;5;2m      214:   and italic    = 2[39m
     [38;5;2m3600[39m: [38;5;2m      215:   and underline = 4[39m
     [38;5;2m3601[39m: [38;5;2m      216:   and blink     = 8[39m
     [38;5;2m3602[39m: [38;5;2m      217:   and reverse   = 16[39m
     [38;5;2m3603[39m: [38;5;2m      218: [39m
     [38;5;2m3604[39m: [38;5;2m      219:   let empty = { fg = 0; bg = 0; st = 0 }[39m
     [38;5;2m3605[39m: [38;5;2m      220: [39m
     [38;5;2m3606[39m: [38;5;2m      221:  let (++) a1 a2 =[39m
     [38;5;2m3607[39m: [38;5;2m      222:    if a1 == empty then a2 else if a2 == empty then a1 else[39m
     [38;5;2m3608[39m: [38;5;2m      223:      { fg = (match a2.fg with 0 -> a1.fg | x -> x)[39m
     [38;5;2m3609[39m: [38;5;2m      224:      ; bg = (match a2.bg with 0 -> a1.bg | x -> x)[39m
     [38;5;2m3610[39m: [38;5;2m      225:      ; st = a1.st lor a2.st }[39m
     [38;5;2m3611[39m: [38;5;2m      226: [39m
     [38;5;2m3612[39m: [38;5;2m      227:   let fg fg = { empty with fg }[39m
     [38;5;2m3613[39m: [38;5;2m      228:   let bg bg = { empty with bg }[39m
     [38;5;2m3614[39m: [38;5;2m      229:   let st st = { empty with st }[39m
     [38;5;2m3615[39m: [38;5;2m      230: end[39m
     [38;5;2m3616[39m: [38;5;2m      231: [39m
     [38;5;2m3617[39m: [38;5;2m      232: module I = struct[39m
     [38;5;2m3618[39m: [38;5;2m      233: [39m
     [38;5;2m3619[39m: [38;5;2m      234:   type dim = int * int[39m
     [38;5;2m3620[39m: [38;5;2m      235: [39m
     [38;5;2m3621[39m: [38;5;2m      236:   type t =[39m
     [38;5;2m3622[39m: [38;5;2m      237:     | Empty[39m
     [38;5;2m3623[39m: [38;5;2m      238:     | Segment  of A.t * Text.t[39m
     [38;5;2m3624[39m: [38;5;2m      239:     | Hcompose of (t * t) * dim[39m
     [38;5;2m3625[39m: [38;5;2m      240:     | Vcompose of (t * t) * dim[39m
     [38;5;2m3626[39m: [38;5;2m      241:     | Zcompose of (t * t) * dim[39m
     [38;5;2m3627[39m: [38;5;2m      242:     | Hcrop    of (t * int * int) * dim[39m
     [38;5;2m3628[39m: [38;5;2m      243:     | Vcrop    of (t * int * int) * dim[39m
     [38;5;2m3629[39m: [38;5;2m      244:     | Void     of dim[39m
     [38;5;2m3630[39m: [38;5;2m      245: [39m
     [38;5;2m3631[39m: [38;5;2m      246:   let width = function[39m
     [38;5;2m3632[39m: [38;5;2m      247:     | Empty -> 0[39m
     [38;5;2m3633[39m: [38;5;2m      248:     | Segment (_, text) -> Text.width text[39m
     [38;5;2m3634[39m: [38;5;2m      249:     | Hcompose (_, (w, _)) -> w[39m
     [38;5;2m3635[39m: [38;5;2m      250:     | Vcompose (_, (w, _)) -> w[39m
     [38;5;2m3636[39m: [38;5;2m      251:     | Zcompose (_, (w, _)) -> w[39m
     [38;5;2m3637[39m: [38;5;2m      252:     | Hcrop    (_, (w, _)) -> w[39m
     [38;5;2m3638[39m: [38;5;2m      253:     | Vcrop    (_, (w, _)) -> w[39m
     [38;5;2m3639[39m: [38;5;2m      254:     | Void         (w, _)  -> w [@@inline][39m
     [38;5;2m3640[39m: [38;5;2m      255: [39m
     [38;5;2m3641[39m: [38;5;2m      256:   let height = function[39m
     [38;5;2m3642[39m: [38;5;2m      257:     | Empty -> 0[39m
     [38;5;2m3643[39m: [38;5;2m      258:     | Segment _ -> 1[39m
     [38;5;2m3644[39m: [38;5;2m      259:     | Hcompose (_, (_, h)) -> h[39m
     [38;5;2m3645[39m: [38;5;2m      260:     | Vcompose (_, (_, h)) -> h[39m
     [38;5;2m3646[39m: [38;5;2m      261:     | Zcompose (_, (_, h)) -> h[39m
     [38;5;2m3647[39m: [38;5;2m      262:     | Hcrop    (_, (_, h)) -> h[39m
     [38;5;2m3648[39m: [38;5;2m      263:     | Vcrop    (_, (_, h)) -> h[39m
     [38;5;2m3649[39m: [38;5;2m      264:     | Void         (_, h)  -> h [@@inline][39m
     [38;5;2m3650[39m: [38;5;2m      265: [39m
     [38;5;2m3651[39m: [38;5;2m      266:   let equal t1 t2 =[39m
     [38;5;2m3652[39m: [38;5;2m      267:     let rec eq t1 t2 = match (t1, t2) with[39m
     [38;5;2m3653[39m: [38;5;2m      268:       | (Empty, Empty) -> true[39m
     [38;5;2m3654[39m: [38;5;2m      269:       | (Segment (a1, t1), Segment (a2, t2)) ->[39m
     [38;5;2m3655[39m: [38;5;2m      270:           A.equal a1 a2 && Text.equal t1 t2[39m
     [38;5;2m3656[39m: [38;5;2m      271:       | (Hcompose ((a, b), _), Hcompose ((c, d), _))[39m
     [38;5;2m3657[39m: [38;5;2m      272:       | (Vcompose ((a, b), _), Vcompose ((c, d), _))[39m
     [38;5;2m3658[39m: [38;5;2m      273:       | (Zcompose ((a, b), _), Zcompose ((c, d), _)) -> eq a c && eq b d[39m
     [38;5;2m3659[39m: [38;5;2m      274:       | (Hcrop ((a, i1, n1), _), Hcrop ((b, i2, n2), _))[39m
     [38;5;2m3660[39m: [38;5;2m      275:       | (Vcrop ((a, i1, n1), _), Vcrop ((b, i2, n2), _)) ->[39m
     [38;5;2m3661[39m: [38;5;2m      276:           i1 = i2 && n1 = n2 && eq a b[39m
     [38;5;2m3662[39m: [38;5;2m      277:       | (Void (a, b), Void (c, d)) -> a = c && b = d[39m
     [38;5;2m3663[39m: [38;5;2m      278:       | _ -> false in[39m
     [38;5;2m3664[39m: [38;5;2m      279:     width t1 = width t2 && height t1 = height t2 && eq t1 t2[39m
     [38;5;2m3665[39m: [38;5;2m      280: [39m
     [38;5;2m3666[39m: [38;5;2m      281:   let empty = Empty[39m
     [38;5;2m3667[39m: [38;5;2m      282: [39m
     [38;5;2m3668[39m: [38;5;2m      283:   let (<|>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m3669[39m: [38;5;2m      284:     | (_, Empty) -> t1[39m
     [38;5;2m3670[39m: [38;5;2m      285:     | (Empty, _) -> t2[39m
     [38;5;2m3671[39m: [38;5;2m      286:     | _          ->[39m
     [38;5;2m3672[39m: [38;5;2m      287:         let w = width t1 + width t2[39m
     [38;5;2m3673[39m: [38;5;2m      288:         and h = max (height t1) (height t2) in[39m
     [38;5;2m3674[39m: [38;5;2m      289:         Hcompose ((t1, t2), (w, h))[39m
     [38;5;2m3675[39m: [38;5;2m      290: [39m
     [38;5;2m3676[39m: [38;5;2m      291:   let (<->) t1 t2 = match (t1, t2) with[39m
     [38;5;2m3677[39m: [38;5;2m      292:     | (_, Empty) -> t1[39m
     [38;5;2m3678[39m: [38;5;2m      293:     | (Empty, _) -> t2[39m
     [38;5;2m3679[39m: [38;5;2m      294:     | _          ->[39m
     [38;5;2m3680[39m: [38;5;2m      295:         let w = max (width t1) (width t2)[39m
     [38;5;2m3681[39m: [38;5;2m      296:         and h = height t1 + height t2 in[39m
     [38;5;2m3682[39m: [38;5;2m      297:         Vcompose ((t1, t2), (w, h))[39m
     [38;5;2m3683[39m: [38;5;2m      298: [39m
     [38;5;2m3684[39m: [38;5;2m      299:   let (</>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m3685[39m: [38;5;2m      300:     | (_, Empty) -> t1[39m
     [38;5;2m3686[39m: [38;5;2m      301:     | (Empty, _) -> t2[39m
     [38;5;2m3687[39m: [38;5;2m      302:     | _          ->[39m
     [38;5;2m3688[39m: [38;5;2m      303:         let w = max (width t1) (width t2)[39m
     [38;5;2m3689[39m: [38;5;2m      304:         and h = max (height t1) (height t2) in[39m
     [38;5;2m3690[39m: [38;5;2m      305:         Zcompose ((t1, t2), (w, h))[39m
     [38;5;2m3691[39m: [38;5;2m      306: [39m
     [38;5;2m3692[39m: [38;5;2m      307:   let void w h =[39m
     [38;5;2m3693[39m: [38;5;2m      308:     if w < 1 && h < 1 then Empty else Void (max 0 w, max 0 h)[39m
     [38;5;2m3694[39m: [38;5;2m      309: [39m
     [38;5;2m3695[39m: [38;5;2m      310:   let lincropinv crop void (++) init fini img =[39m
     [38;5;2m3696[39m: [38;5;2m      311:     match (init >= 0, fini >= 0) with[39m
     [38;5;2m3697[39m: [38;5;2m      312:     | (true, true) -> crop init fini img[39m
     [38;5;2m3698[39m: [38;5;2m      313:     | (true, _   ) -> crop init 0 img ++ void (-fini)[39m
     [38;5;2m3699[39m: [38;5;2m      314:     | (_   , true) -> void (-init) ++ crop 0 fini img[39m
     [38;5;2m3700[39m: [38;5;2m      315:     | _            -> void (-init) ++ img ++ void (-fini)[39m
     [38;5;2m3701[39m: [38;5;2m      316: [39m
     [38;5;2m3702[39m: [38;5;2m      317:   let hcrop =[39m
     [38;5;2m3703[39m: [38;5;2m      318:     let ctor left right img =[39m
     [38;5;2m3704[39m: [38;5;2m      319:       let h = height img and w = width img - left - right in[39m
     [38;5;2m3705[39m: [38;5;2m      320:       if w > 0 then Hcrop ((img, left, right), (w, h)) else void w h[39m
     [38;5;2m3706[39m: [38;5;2m      321:     in lincropinv ctor (fun w -> void w 0) (<|>)[39m
     [38;5;2m3707[39m: [38;5;2m      322: [39m
     [38;5;2m3708[39m: [38;5;2m      323:   let vcrop =[39m
     [38;5;2m3709[39m: [38;5;2m      324:     let ctor top bottom img =[39m
     [38;5;2m3710[39m: [38;5;2m      325:       let w = width img and h = height img - top - bottom in[39m
     [38;5;2m3711[39m: [38;5;2m      326:       if h > 0 then Vcrop ((img, top, bottom), (w, h)) else void w h[39m
     [38;5;2m3712[39m: [38;5;2m      327:     in lincropinv ctor (void 0) (<->)[39m
     [38;5;2m3713[39m: [38;5;2m      328: [39m
     [38;5;2m3714[39m: [38;5;2m      329:   let crop ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m3715[39m: [38;5;2m      330:     let img = if l <> 0 || r <> 0 then hcrop l r img else img in[39m
     [38;5;2m3716[39m: [38;5;2m      331:     if t <> 0 || b <> 0 then vcrop t b img else img[39m
     [38;5;2m3717[39m: [38;5;2m      332: [39m
     [38;5;2m3718[39m: [38;5;2m      333:   let hpad left right img = hcrop (-left) (-right) img[39m
     [38;5;2m3719[39m: [38;5;2m      334: [39m
     [38;5;2m3720[39m: [38;5;2m      335:   let vpad top bottom img = vcrop (-top) (-bottom) img[39m
     [38;5;2m3721[39m: [38;5;2m      336: [39m
     [38;5;2m3722[39m: [38;5;2m      337:   let pad ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m3723[39m: [38;5;2m      338:     crop ~l:(-l) ~r:(-r) ~t:(-t) ~b:(-b) img[39m
     [38;5;2m3724[39m: [38;5;2m      339: [39m
     [38;5;2m3725[39m: [38;5;2m      340:   let hcat = concatm empty (<|>)[39m
     [38;5;2m3726[39m: [38;5;2m      341: [39m
     [38;5;2m3727[39m: [38;5;2m      342:   let vcat = concatm empty (<->)[39m
     [38;5;2m3728[39m: [38;5;2m      343: [39m
     [38;5;2m3729[39m: [38;5;2m      344:   let zcat xs = List.fold_right (</>) xs empty[39m
     [38;5;2m3730[39m: [38;5;2m      345: [39m
     [38;5;2m3731[39m: [38;5;2m      346:   let text attr tx =[39m
     [38;5;2m3732[39m: [38;5;2m      347:     if Text.is_empty tx then void 0 1 else Segment (attr, tx)[39m
     [38;5;2m3733[39m: [38;5;2m      348: [39m
     [38;5;2m3734[39m: [38;5;2m      349:   let string attr s = text attr (Text.of_string s)[39m
     [38;5;2m3735[39m: [38;5;2m      350: [39m
     [38;5;2m3736[39m: [38;5;2m      351:   let uchars attr a = text attr (Text.of_uchars a)[39m
     [38;5;2m3737[39m: [38;5;2m      352: [39m
     [38;5;2m3738[39m: [38;5;2m      353:   let tabulate m n f =[39m
     [38;5;2m3739[39m: [38;5;2m      354:     let m = max m 0 and n = max n 0 in[39m
     [38;5;2m3740[39m: [38;5;2m      355:     linspcm empty (<->) 0 n (fun y -> linspcm empty (<|>) 0 m (fun x -> f x y))[39m
     [38;5;2m3741[39m: [38;5;2m      356: [39m
     [38;5;2m3742[39m: [38;5;2m      357:   let chars ctor attr c w h =[39m
     [38;5;2m3743[39m: [38;5;2m      358:     if w < 1 || h < 1 then void w h else[39m
     [38;5;2m3744[39m: [38;5;2m      359:       let line = text attr (ctor w c) in tabulate 1 h (fun _ _ -> line)[39m
     [38;5;2m3745[39m: [38;5;2m      360: [39m
     [38;5;2m3746[39m: [38;5;2m      361:   let char  = chars Text.replicatec[39m
     [38;5;2m3747[39m: [38;5;2m      362:   let uchar = chars Text.replicateu[39m
     [38;5;2m3748[39m: [38;5;2m      363: [39m
     [38;5;2m3749[39m: [38;5;2m      364:   let hsnap ?(align=`Middle) w img =[39m
     [38;5;2m3750[39m: [38;5;2m      365:     let off = width img - w in match align with[39m
     [38;5;2m3751[39m: [38;5;2m      366:       | `Left   -> hcrop 0 off img[39m
     [38;5;2m3752[39m: [38;5;2m      367:       | `Right  -> hcrop off 0 img[39m
     [38;5;2m3753[39m: [38;5;2m      368:       | `Middle -> let w1 = off / 2 in hcrop w1 (off - w1) img[39m
     [38;5;2m3754[39m: [38;5;2m      369: [39m
     [38;5;2m3755[39m: [38;5;2m      370:   let vsnap ?(align=`Middle) h img =[39m
     [38;5;2m3756[39m: [38;5;2m      371:     let off = height img - h in match align with[39m
     [38;5;2m3757[39m: [38;5;2m      372:       | `Top    -> vcrop 0 off img[39m
     [38;5;2m3758[39m: [38;5;2m      373:       | `Bottom -> vcrop off 0 img[39m
     [38;5;2m3759[39m: [38;5;2m      374:       | `Middle -> let h1 = off / 2 in vcrop h1 (off - h1) img[39m
     [38;5;2m3760[39m: [38;5;2m      375: [39m
     [38;5;2m3761[39m: [38;5;2m      376:   module Fmt = struct[39m
     [38;5;2m3762[39m: [38;5;2m      377: [39m
     [38;5;2m3763[39m: [38;5;2m      378:     open Format[39m
     [38;5;2m3764[39m: [38;5;2m      379: [39m
     [38;5;2m3765[39m: [38;5;2m      380:     type stag += Attr of A.t[39m
     [38;5;2m3766[39m: [38;5;2m      381: [39m
     [38;5;2m3767[39m: [38;5;2m      382:     let push r x = r := x :: !r[39m
     [38;5;2m3768[39m: [38;5;2m      383:     let pop r = r := (match !r with _::xs -> xs | _ -> [])[39m
     [38;5;2m3769[39m: [38;5;2m      384:     let top_a r = match !r with a::_ -> a | _ -> A.empty[39m
     [38;5;2m3770[39m: [38;5;2m      385: [39m
     [38;5;2m3771[39m: [38;5;2m      386:     let create () =[39m
     [38;5;2m3772[39m: [38;5;2m      387:       let img, line, attr = ref empty, ref empty, ref [] in[39m
     [38;5;2m3773[39m: [38;5;2m      388:       let fmt = formatter_of_out_functions {[39m
     [38;5;2m3774[39m: [38;5;2m      389:           out_flush = (fun () ->[39m
     [38;5;2m3775[39m: [38;5;2m      390:             img := !img <-> !line; line := empty; attr := [])[39m
     [38;5;2m3776[39m: [38;5;2m      391:         ; out_newline = (fun () ->[39m
     [38;5;2m3777[39m: [38;5;2m      392:             img := !img <-> !line; line := void 0 1)[39m
     [38;5;2m3778[39m: [38;5;2m      393:         ; out_string = (fun s i n ->[39m
     [38;5;2m3779[39m: [38;5;2m      394:             line := !line <|> string (top_a attr) String.(sub0cp s i n))[39m
     [38;5;2m3780[39m: [38;5;2m      395:         (* Not entirely clear; either or both could be void: *)[39m
     [38;5;2m3781[39m: [38;5;2m      396:         ; out_spaces = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m3782[39m: [38;5;2m      397:         ; out_indent = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m3783[39m: [38;5;2m      398:       } in[39m
     [38;5;2m3784[39m: [38;5;2m      399:       pp_set_formatter_stag_functions fmt {[39m
     [38;5;2m3785[39m: [38;5;2m      400:         (pp_get_formatter_stag_functions fmt ()) with[39m
     [38;5;2m3786[39m: [38;5;2m      401:             mark_open_stag =[39m
     [38;5;2m3787[39m: [38;5;2m      402:               (function Attr a -> push attr A.(top_a attr ++ a); "" | _ -> "")[39m
     [38;5;2m3788[39m: [38;5;2m      403:           ; mark_close_stag = (fun _ -> pop attr; "") };[39m
     [38;5;2m3789[39m: [38;5;2m      404:       pp_set_mark_tags fmt true;[39m
     [38;5;2m3790[39m: [38;5;2m      405:       fmt, fun () -> let i = !img in img := empty; line := empty; attr := []; i[39m
     [38;5;2m3791[39m: [38;5;2m      406: [39m
     [38;5;2m3792[39m: [38;5;2m      407:     let ppf, reset = create ()[39m
     [38;5;2m3793[39m: [38;5;2m      408: [39m
     [38;5;2m3794[39m: [38;5;2m      409:     let kstrf ?(attr = A.empty) ?(w = 1000000) k format =[39m
     [38;5;2m3795[39m: [38;5;2m      410:       let m = ref 0 in[39m
     [38;5;2m3796[39m: [38;5;2m      411:       let f1 _ () =[39m
     [38;5;2m3797[39m: [38;5;2m      412:         m := pp_get_margin ppf ();[39m
     [38;5;2m3798[39m: [38;5;2m      413:         pp_set_margin ppf w;[39m
     [38;5;2m3799[39m: [38;5;2m      414:         pp_open_stag ppf (Attr attr)[39m
     [38;5;2m3800[39m: [38;5;2m      415:       and k _ =[39m
     [38;5;2m3801[39m: [38;5;2m      416:         pp_print_flush ppf ();[39m
     [38;5;2m3802[39m: [38;5;2m      417:         pp_set_margin ppf !m;[39m
     [38;5;2m3803[39m: [38;5;2m      418:         reset () |> k[39m
     [38;5;2m3804[39m: [38;5;2m      419:       in kfprintf k ppf ("%a" ^^ format) f1 ()[39m
     [38;5;2m3805[39m: [38;5;2m      420: [39m
     [38;5;2m3806[39m: [38;5;2m      421:     let strf ?attr ?w format = kstrf ?attr ?w (fun i -> i) format[39m
     [38;5;2m3807[39m: [38;5;2m      422: [39m
     [38;5;2m3808[39m: [38;5;2m      423:     let attr attr f fmt x =[39m
     [38;5;2m3809[39m: [38;5;2m      424:       pp_open_stag fmt (Attr attr); f fmt x; pp_close_stag fmt ()[39m
     [38;5;2m3810[39m: [38;5;2m      425:   end[39m
     [38;5;2m3811[39m: [38;5;2m      426: [39m
     [38;5;2m3812[39m: [38;5;2m      427:   let kstrf, strf, pp_attr = Fmt.(kstrf, strf, attr)[39m
     [38;5;2m3813[39m: [38;5;2m      428: end[39m
     [38;5;2m3814[39m: [38;5;2m      429: [39m
     [38;5;2m3815[39m: [38;5;2m      430: module Operation = struct[39m
     [38;5;2m3816[39m: [38;5;2m      431: [39m
     [38;5;2m3817[39m: [38;5;2m      432:   type t =[39m
     [38;5;2m3818[39m: [38;5;2m      433:     End[39m
     [38;5;2m3819[39m: [38;5;2m      434:   | Skip of int * t[39m
     [38;5;2m3820[39m: [38;5;2m      435:   | Text of A.t * Text.t * t[39m
     [38;5;2m3821[39m: [38;5;2m      436: [39m
     [38;5;2m3822[39m: [38;5;2m      437:   let skip n k = if n = 0 then k else match k with[39m
     [38;5;2m3823[39m: [38;5;2m      438:       End         -> End[39m
     [38;5;2m3824[39m: [38;5;2m      439:     | Skip (m, k) -> Skip (m + n, k)[39m
     [38;5;2m3825[39m: [38;5;2m      440:     | _           -> Skip (n, k) [@@inline][39m
     [38;5;2m3826[39m: [38;5;2m      441: [39m
     [38;5;2m3827[39m: [38;5;2m      442:   let rec scan x w row i k =[39m
     [38;5;2m3828[39m: [38;5;2m      443:     let open I in match i with[39m
     [38;5;2m3829[39m: [38;5;2m      444: [39m
     [38;5;2m3830[39m: [38;5;2m      445:     | Empty | Void _ -> skip w k[39m
     [38;5;2m3831[39m: [38;5;2m      446: [39m
     [38;5;2m3832[39m: [38;5;2m      447:     | Segment _ when row > 0 -> skip w k[39m
     [38;5;2m3833[39m: [38;5;2m      448:     | Segment (attr, text) ->[39m
     [38;5;2m3834[39m: [38;5;2m      449:         let t  = Text.sub text x w in[39m
     [38;5;2m3835[39m: [38;5;2m      450:         let w1 = Text.width t in[39m
     [38;5;2m3836[39m: [38;5;2m      451:         let p  = if w > w1 then skip (w - w1) k else k in[39m
     [38;5;2m3837[39m: [38;5;2m      452:         if w1 > 0 then Text (attr, t, p) else p[39m
     [38;5;2m3838[39m: [38;5;2m      453: [39m
     [38;5;2m3839[39m: [38;5;2m      454:     | Hcompose ((i1, i2), _) ->[39m
     [38;5;2m3840[39m: [38;5;2m      455:         let w1 = width i1[39m
     [38;5;2m3841[39m: [38;5;2m      456:         and w2 = width i2 in[39m
     [38;5;2m3842[39m: [38;5;2m      457:         if x >= w1 + w2 then skip w k else[39m
     [38;5;2m3843[39m: [38;5;2m      458:         if x >= w1 then scan (x - w1) w row i2 k else[39m
     [38;5;2m3844[39m: [38;5;2m      459:         if x + w <= w1 then scan x w row i1 k else[39m
     [38;5;2m3845[39m: [38;5;2m      460:           scan x (w1 - x) row i1 @@ scan 0 (w - w1 + x) row i2 @@ k[39m
     [38;5;2m3846[39m: [38;5;2m      461: [39m
     [38;5;2m3847[39m: [38;5;2m      462:     | Vcompose ((i1, i2), _) ->[39m
     [38;5;2m3848[39m: [38;5;2m      463:         let h1 = height i1[39m
     [38;5;2m3849[39m: [38;5;2m      464:         and h2 = height i2 in[39m
     [38;5;2m3850[39m: [38;5;2m      465:         if row >= h1 + h2 then skip w k else[39m
     [38;5;2m3851[39m: [38;5;2m      466:         if row >= h1 then scan x w (row - h1) i2 k else scan x w row i1 k[39m
     [38;5;2m3852[39m: [38;5;2m      467: [39m
     [38;5;2m3853[39m: [38;5;2m      468:     | Zcompose ((i1, i2), _) ->[39m
     [38;5;2m3854[39m: [38;5;2m      469:         let rec stitch x w row i = function[39m
     [38;5;2m3855[39m: [38;5;2m      470:           | End -> scan x w row i End[39m
     [38;5;2m3856[39m: [38;5;2m      471:           | Text (a, t, ops) as opss ->[39m
     [38;5;2m3857[39m: [38;5;2m      472:               let w1 = Text.width t in[39m
     [38;5;2m3858[39m: [38;5;2m      473:               if w1 >= w then opss else[39m
     [38;5;2m3859[39m: [38;5;2m      474:                 Text (a, t, stitch (x + w1) (w - w1) row i ops)[39m
     [38;5;2m3860[39m: [38;5;2m      475:           | Skip (w1, ops) ->[39m
     [38;5;2m3861[39m: [38;5;2m      476:               scan x w1 row i @@[39m
     [38;5;2m3862[39m: [38;5;2m      477:                 if w1 >= w then ops else stitch (x + w1) (w - w1) row i ops[39m
     [38;5;2m3863[39m: [38;5;2m      478:         in stitch x w row i2 @@ scan x w row i1 @@ k[39m
     [38;5;2m3864[39m: [38;5;2m      479: [39m
     [38;5;2m3865[39m: [38;5;2m      480:     | Hcrop ((i, left, _), (w1, _)) ->[39m
     [38;5;2m3866[39m: [38;5;2m      481:         if x >= w1 then skip w k else[39m
     [38;5;2m3867[39m: [38;5;2m      482:         if x + w <= w1 then scan (x + left) w row i k else[39m
     [38;5;2m3868[39m: [38;5;2m      483:           scan (x + left) (w1 - x) row i @@ skip (w - w1 + x) k[39m
     [38;5;2m3869[39m: [38;5;2m      484: [39m
     [38;5;2m3870[39m: [38;5;2m      485:     | Vcrop ((i, top, _), (_, h1)) ->[39m
     [38;5;2m3871[39m: [38;5;2m      486:         if row < h1 then scan x w (top + row) i k else skip w k[39m
     [38;5;2m3872[39m: [38;5;2m      487: [39m
     [38;5;2m3873[39m: [38;5;2m      488:   let of_image (x, y) (w, h) i =[39m
     [38;5;2m3874[39m: [38;5;2m      489:     List.init h (fun off -> scan x (x + w) (y + off) i End)[39m
     [38;5;2m3875[39m: [38;5;2m      490: end[39m
     [38;5;2m3876[39m: [38;5;2m      491: [39m
     [38;5;2m3877[39m: [38;5;2m      492: module Cap = struct[39m
     [38;5;2m3878[39m: [38;5;2m      493: [39m
     [38;5;2m3879[39m: [38;5;2m      494:   type op = Buffer.t -> unit[39m
     [38;5;2m3880[39m: [38;5;2m      495: [39m
     [38;5;2m3881[39m: [38;5;2m      496:   let (&) op1 op2 buf = op1 buf; op2 buf[39m
     [38;5;2m3882[39m: [38;5;2m      497: [39m
     [38;5;2m3883[39m: [38;5;2m      498:   type t = {[39m
     [38;5;2m3884[39m: [38;5;2m      499:     skip    : int -> op[39m
     [38;5;2m3885[39m: [38;5;2m      500:   ; sgr     : A.t -> op[39m
     [38;5;2m3886[39m: [38;5;2m      501:   ; newline : op[39m
     [38;5;2m3887[39m: [38;5;2m      502:   ; clreol  : op[39m
     [38;5;2m3888[39m: [38;5;2m      503:   ; cursvis : bool -> op[39m
     [38;5;2m3889[39m: [38;5;2m      504:   ; cursat  : int -> int -> op[39m
     [38;5;2m3890[39m: [38;5;2m      505:   ; cubcuf  : int -> op[39m
     [38;5;2m3891[39m: [38;5;2m      506:   ; cuucud  : int -> op[39m
     [38;5;2m3892[39m: [38;5;2m      507:   ; cr      : op[39m
     [38;5;2m3893[39m: [38;5;2m      508:   ; altscr  : bool -> op[39m
     [38;5;2m3894[39m: [38;5;2m      509:   ; mouse   : bool -> op[39m
     [38;5;2m3895[39m: [38;5;2m      510:   ; bpaste  : bool -> op[39m
     [38;5;2m3896[39m: [38;5;2m      511:   }[39m
     [38;5;2m3897[39m: [38;5;2m      512: [39m
     [38;5;2m3898[39m: [38;5;2m      513:   let ((<|), (<.), (<!)) = Buffer.(add_string, add_char, add_decimal)[39m
     [38;5;2m3899[39m: [38;5;2m      514: [39m
     [38;5;2m3900[39m: [38;5;2m      515:   let sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m3901[39m: [38;5;2m      516: [39m
     [38;5;2m3902[39m: [38;5;2m      517:   let sgr { A.fg; bg; st } buf =[39m
     [38;5;2m3903[39m: [38;5;2m      518:     buf <| "\x1b[0";[39m
     [38;5;2m3904[39m: [38;5;2m      519:     let rgb888 buf x =[39m
     [38;5;2m3905[39m: [38;5;2m      520:       buf <! A.r x; buf <. ';'; buf <! A.g x; buf <. ';'; buf <! A.b x in[39m
     [38;5;2m3906[39m: [38;5;2m      521:     ( match A.tag fg with[39m
     [38;5;2m3907[39m: [38;5;2m      522:         0 -> ()[39m
     [38;5;2m3908[39m: [38;5;2m      523:       | 1 -> let c = A.i fg in[39m
     [38;5;2m3909[39m: [38;5;2m      524:              if c < 8  then ( buf <. ';'; buf <! (c + 30) )[39m
     [38;5;2m3910[39m: [38;5;2m      525:              else if c < 16 then ( buf <. ';'; buf <! (c + 82) )[39m
     [38;5;2m3911[39m: [38;5;2m      526:              else ( buf <| ";38;5;"; buf <! c )[39m
     [38;5;2m3912[39m: [38;5;2m      527:       | _ -> buf <| ";38;2;"; rgb888 buf fg );[39m
     [38;5;2m3913[39m: [38;5;2m      528:     ( match A.tag bg with[39m
     [38;5;2m3914[39m: [38;5;2m      529:         0 -> ()[39m
     [38;5;2m3915[39m: [38;5;2m      530:       | 1 -> let c = A.i bg in[39m
     [38;5;2m3916[39m: [38;5;2m      531:              if c < 8  then ( buf <. ';'; buf <! (c + 40) )[39m
     [38;5;2m3917[39m: [38;5;2m      532:              else if c < 16 then ( buf <. ';'; buf <! (c + 92) )[39m
     [38;5;2m3918[39m: [38;5;2m      533:              else ( buf <| ";48;5;"; buf <! c )[39m
     [38;5;2m3919[39m: [38;5;2m      534:       | _ -> buf <| ";48;2;"; rgb888 buf bg );[39m
     [38;5;2m3920[39m: [38;5;2m      535:     if st <> 0 then[39m
     [38;5;2m3921[39m: [38;5;2m      536:       ( let rec go f xs = match (f, xs) with[39m
     [38;5;2m3922[39m: [38;5;2m      537:           | (0, _) | (_, []) -> ()[39m
     [38;5;2m3923[39m: [38;5;2m      538:           | (_, x::xs) -> if f land 1 > 0 then buf <| x; go (f lsr 1) xs in[39m
     [38;5;2m3924[39m: [38;5;2m      539:         go st sts );[39m
     [38;5;2m3925[39m: [38;5;2m      540:     buf <. 'm'[39m
     [38;5;2m3926[39m: [38;5;2m      541: [39m
     [38;5;2m3927[39m: [38;5;2m      542:   let ansi = {[39m
     [38;5;2m3928[39m: [38;5;2m      543:       skip    = (fun n b -> b <| "\x1b[0m"; Buffer.add_chars b ' ' n)[39m
     [38;5;2m3929[39m: [38;5;2m      544:     ; newline = (fun b -> b <| "\x1bE")[39m
     [38;5;2m3930[39m: [38;5;2m      545:     ; altscr  = (fun x b -> b <| if x then "\x1b[?1049h" else "\x1b[?1049l")[39m
     [38;5;2m3931[39m: [38;5;2m      546:     ; cursat  = (fun w h b -> b <| "\x1b["; b <! h; b <. ';'; b <! w; b <. 'H')[39m
     [38;5;2m3932[39m: [38;5;2m      547:     ; cubcuf  = (fun x b -> b <| "\x1b["; b <! abs x; b <. if x < 0 then 'D' else 'C')[39m
     [38;5;2m3933[39m: [38;5;2m      548:     ; cuucud  = (fun y b -> b <| "\x1b["; b <! abs y; b <. if y < 0 then 'A' else 'B')[39m
     [38;5;2m3934[39m: [38;5;2m      549:     ; cr      = (fun b -> b <| "\x1b[1G")[39m
     [38;5;2m3935[39m: [38;5;2m      550:     ; clreol  = (fun b -> b <| "\x1b[K")[39m
     [38;5;2m3936[39m: [38;5;2m      551:     ; cursvis = (fun x b -> b <| if x then "\x1b[34h\x1b[?25h" else "\x1b[?25l")[39m
     [38;5;2m3937[39m: [38;5;2m      552:     ; mouse   = (fun x b -> b <| if x then "\x1b[?1000;1002;1005;1015;1006h"[39m
     [38;5;2m3938[39m: [38;5;2m      553:                                       else "\x1b[?1000;1002;1005;1015;1006l")[39m
     [38;5;2m3939[39m: [38;5;2m      554:     ; bpaste  = (fun x b -> b <| if x then "\x1b[?2004h" else "\x1b[?2004l")[39m
     [38;5;2m3940[39m: [38;5;2m      555:     ; sgr }[39m
     [38;5;2m3941[39m: [38;5;2m      556: [39m
     [38;5;2m3942[39m: [38;5;2m      557:   let no0 _     = ()[39m
     [38;5;2m3943[39m: [38;5;2m      558:   and no1 _ _   = ()[39m
     [38;5;2m3944[39m: [38;5;2m      559:   and no2 _ _ _ = ()[39m
     [38;5;2m3945[39m: [38;5;2m      560: [39m
     [38;5;2m3946[39m: [38;5;2m      561:   let dumb = {[39m
     [38;5;2m3947[39m: [38;5;2m      562:       skip    = (fun n b -> Buffer.add_chars b ' ' n)[39m
     [38;5;2m3948[39m: [38;5;2m      563:     ; newline = (fun b -> b <| "\n")[39m
     [38;5;2m3949[39m: [38;5;2m      564:     ; altscr  = no1[39m
     [38;5;2m3950[39m: [38;5;2m      565:     ; cursat  = no2[39m
     [38;5;2m3951[39m: [38;5;2m      566:     ; cubcuf  = no1[39m
     [38;5;2m3952[39m: [38;5;2m      567:     ; cuucud  = no1[39m
     [38;5;2m3953[39m: [38;5;2m      568:     ; cr      = no0[39m
     [38;5;2m3954[39m: [38;5;2m      569:     ; clreol  = no0[39m
     [38;5;2m3955[39m: [38;5;2m      570:     ; cursvis = no1[39m
     [38;5;2m3956[39m: [38;5;2m      571:     ; sgr     = no1[39m
     [38;5;2m3957[39m: [38;5;2m      572:     ; mouse   = no1[39m
     [38;5;2m3958[39m: [38;5;2m      573:     ; bpaste  = no1[39m
     [38;5;2m3959[39m: [38;5;2m      574:     }[39m
     [38;5;2m3960[39m: [38;5;2m      575: [39m
     [38;5;2m3961[39m: [38;5;2m      576:   let erase cap buf = cap.sgr A.empty buf; cap.clreol buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m3962[39m: [38;5;2m      577:   let cursat0 cap w h = cap.cursat (max w 0 + 1) (max h 0 + 1)[39m
     [38;5;2m3963[39m: [38;5;2m      578: end[39m
     [38;5;2m3964[39m: [38;5;2m      579: [39m
     [38;5;2m3965[39m: [38;5;2m      580: module Render = struct[39m
     [38;5;2m3966[39m: [38;5;2m      581: [39m
     [38;5;2m3967[39m: [38;5;2m      582:   open Cap[39m
     [38;5;2m3968[39m: [38;5;2m      583:   open Operation[39m
     [38;5;2m3969[39m: [38;5;2m      584: [39m
     [38;5;2m3970[39m: [38;5;2m      585:   let skip_op cap buf n = cap.skip n buf[39m
     [38;5;2m3971[39m: [38;5;2m      586:   let text_op cap buf a x = cap.sgr a buf; Text.to_buffer buf x[39m
     [38;5;2m3972[39m: [38;5;2m      587: [39m
     [38;5;2m3973[39m: [38;5;2m      588:   let rec line cap buf = function[39m
     [38;5;2m3974[39m: [38;5;2m      589:     End              -> erase cap buf[39m
     [38;5;2m3975[39m: [38;5;2m      590:   | Skip (n,    End) -> erase cap buf; skip_op cap buf n[39m
     [38;5;2m3976[39m: [38;5;2m      591:   | Text (a, x, End) -> erase cap buf; text_op cap buf a x[39m
     [38;5;2m3977[39m: [38;5;2m      592:   | Skip (n,    ops) -> skip_op cap buf n; line cap buf ops[39m
     [38;5;2m3978[39m: [38;5;2m      593:   | Text (a, x, ops) -> text_op cap buf a x; line cap buf ops[39m
     [38;5;2m3979[39m: [38;5;2m      594: [39m
     [38;5;2m3980[39m: [38;5;2m      595:   let rec lines cap buf = function[39m
     [38;5;2m3981[39m: [38;5;2m      596:     []      -> ()[39m
     [38;5;2m3982[39m: [38;5;2m      597:   | [ln]    -> line cap buf ln; cap.sgr A.empty buf[39m
     [38;5;2m3983[39m: [38;5;2m      598:   | ln::lns -> line cap buf ln; cap.newline buf; lines cap buf lns[39m
     [38;5;2m3984[39m: [38;5;2m      599: [39m
     [38;5;2m3985[39m: [38;5;2m      600:   let to_buffer buf cap off dim img =[39m
     [38;5;2m3986[39m: [38;5;2m      601:     Operation.of_image off dim img |> lines cap buf[39m
     [38;5;2m3987[39m: [38;5;2m      602: [39m
     [38;5;2m3988[39m: [38;5;2m      603:   let pp cap ppf img =[39m
     [38;5;2m3989[39m: [38;5;2m      604:     let open Format in[39m
     [38;5;2m3990[39m: [38;5;2m      605:     let buf = Buffer.create (I.width img * 2) in[39m
     [38;5;2m3991[39m: [38;5;2m      606:     let h, w = I.(height img, width img |> min (pp_get_margin ppf ())) in[39m
     [38;5;2m3992[39m: [38;5;2m      607:     let img = I.(img </> vpad (h - 1) 0 (char A.empty ' ' w 1)) in[39m
     [38;5;2m3993[39m: [38;5;2m      608:     pp_open_vbox ppf 0;[39m
     [38;5;2m3994[39m: [38;5;2m      609:     for y = 0 to h - 1 do[39m
     [38;5;2m3995[39m: [38;5;2m      610:       Buffer.clear buf; to_buffer buf cap (0, y) (w, 1) img;[39m
     [38;5;2m3996[39m: [38;5;2m      611:       pp_print_as ppf w (Buffer.contents buf);[39m
     [38;5;2m3997[39m: [38;5;2m      612:       if y < h - 1 then pp_print_cut ppf ()[39m
     [38;5;2m3998[39m: [38;5;2m      613:     done;[39m
     [38;5;2m3999[39m: [38;5;2m      614:     pp_close_box ppf ()[39m
     [38;5;2m4000[39m: [38;5;2m      615: [39m
     [38;5;2m4001[39m: [38;5;2m      616:   let pp_image = pp Cap.ansi[39m
     [38;5;2m4002[39m: [38;5;2m      617:   let pp_attr ppf a =[39m
     [38;5;2m4003[39m: [38;5;2m      618:     let string_ = I.string A.empty in[39m
     [38;5;2m4004[39m: [38;5;2m      619:     pp_image ppf I.(string_ "<" <|> string a "ATTR" <|> string_ ">")[39m
     [38;5;2m4005[39m: [38;5;2m      620: end[39m
     [38;5;2m4006[39m: [38;5;2m      621: [39m
     [38;5;2m4007[39m: [38;5;2m      622: module Unescape = struct[39m
     [38;5;2m4008[39m: [38;5;2m      623: [39m
     [38;5;2m4009[39m: [38;5;2m      624:   type special = [[39m
     [38;5;2m4010[39m: [38;5;2m      625:     `Escape[39m
     [38;5;2m4011[39m: [38;5;2m      626:   | `Enter[39m
     [38;5;2m4012[39m: [38;5;2m      627:   | `Tab[39m
     [38;5;2m4013[39m: [38;5;2m      628:   | `Backspace[39m
     [38;5;2m4014[39m: [38;5;2m      629:   | `Insert[39m
     [38;5;2m4015[39m: [38;5;2m      630:   | `Delete[39m
     [38;5;2m4016[39m: [38;5;2m      631:   | `Home | `End[39m
     [38;5;2m4017[39m: [38;5;2m      632:   | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m4018[39m: [38;5;2m      633:   | `Page of [ `Up | `Down ][39m
     [38;5;2m4019[39m: [38;5;2m      634:   | `Function of int[39m
     [38;5;2m4020[39m: [38;5;2m      635:   ][39m
     [38;5;2m4021[39m: [38;5;2m      636: [39m
     [38;5;2m4022[39m: [38;5;2m      637:   type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m4023[39m: [38;5;2m      638: [39m
     [38;5;2m4024[39m: [38;5;2m      639:   type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m4025[39m: [38;5;2m      640: [39m
     [38;5;2m4026[39m: [38;5;2m      641:   type key = [ special | `Uchar of Uchar.t  | `ASCII of char ] * mods[39m
     [38;5;2m4027[39m: [38;5;2m      642: [39m
     [38;5;2m4028[39m: [38;5;2m      643:   type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m4029[39m: [38;5;2m      644: [39m
     [38;5;2m4030[39m: [38;5;2m      645:   type paste = [ `Start | `End ][39m
     [38;5;2m4031[39m: [38;5;2m      646: [39m
     [38;5;2m4032[39m: [38;5;2m      647:   type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m4033[39m: [38;5;2m      648: [39m
     [38;5;2m4034[39m: [38;5;2m      649:   type esc =[39m
     [38;5;2m4035[39m: [38;5;2m      650:     C0    of char[39m
     [38;5;2m4036[39m: [38;5;2m      651:   | C1    of char[39m
     [38;5;2m4037[39m: [38;5;2m      652:   | SS2   of char[39m
     [38;5;2m4038[39m: [38;5;2m      653:   | CSI   of string * int list * char[39m
     [38;5;2m4039[39m: [38;5;2m      654:   | Esc_M of int * int * int[39m
     [38;5;2m4040[39m: [38;5;2m      655:   | Uchar of Uchar.t[39m
     [38;5;2m4041[39m: [38;5;2m      656: [39m
     [38;5;2m4042[39m: [38;5;2m      657:   let uchar = function `Uchar u -> u | `ASCII c -> Uchar.of_char c[39m
     [38;5;2m4043[39m: [38;5;2m      658: [39m
     [38;5;2m4044[39m: [38;5;2m      659:   let csi =[39m
     [38;5;2m4045[39m: [38;5;2m      660:     let open Option in[39m
     [38;5;2m4046[39m: [38;5;2m      661:     let rec priv acc = function[39m
     [38;5;2m4047[39m: [38;5;2m      662:       | x::xs when btw x 0x3c 0x3f -> priv (Char.unsafe_chr x::acc) xs[39m
     [38;5;2m4048[39m: [38;5;2m      663:       | xs                         -> param (String.of_chars_rev acc) None [] xs[39m
     [38;5;2m4049[39m: [38;5;2m      664:     and param prv p ps = function[39m
     [38;5;2m4050[39m: [38;5;2m      665:       | x::xs when btw x 0x30 0x39 -> param prv (Some (get 0 p * 10 + x - 0x30)) ps xs[39m
     [38;5;2m4051[39m: [38;5;2m      666:       | 0x3b::xs                   -> param prv None (get 0 p :: ps) xs[39m
     [38;5;2m4052[39m: [38;5;2m      667:       | xs                         -> code prv (List.rev (to_list p @ ps)) xs[39m
     [38;5;2m4053[39m: [38;5;2m      668:     and code prv ps = function (* Conflate two classes because urxvt... *)[39m
     [38;5;2m4054[39m: [38;5;2m      669:       | x::xs when btw x 0x20 0x2f || btw x 0x40 0x7e ->[39m
     [38;5;2m4055[39m: [38;5;2m      670:           Some (CSI (prv, ps, (Char.chr x)), xs)[39m
     [38;5;2m4056[39m: [38;5;2m      671:       | _ -> None in[39m
     [38;5;2m4057[39m: [38;5;2m      672:     priv [][39m
     [38;5;2m4058[39m: [38;5;2m      673: [39m
     [38;5;2m4059[39m: [38;5;2m      674:   let rec demux =[39m
     [38;5;2m4060[39m: [38;5;2m      675:     let chr = Char.chr in function[39m
     [38;5;2m4061[39m: [38;5;2m      676:     | 0x1b::0x5b::0x4d::a::b::c::xs -> Esc_M (a, b, c) :: demux xs[39m
     [38;5;2m4062[39m: [38;5;2m      677:     | 0x1b::0x5b::xs | 0x9b::xs ->[39m
     [38;5;2m4063[39m: [38;5;2m      678:         let (r, xs) = csi xs |> Option.get (C1 '\x5b', xs) in r :: demux xs[39m
     [38;5;2m4064[39m: [38;5;2m      679:     | 0x1b::0x4f::x::xs | 0x8f::x::xs[39m
     [38;5;2m4065[39m: [38;5;2m      680:         when is_ascii x                 -> SS2 (chr x) :: demux xs[39m
     [38;5;2m4066[39m: [38;5;2m      681:     | 0x1b::x::xs when is_C1 (x + 0x40) -> C1 (chr x) :: demux xs[39m
     [38;5;2m4067[39m: [38;5;2m      682:     | x::xs when is_C1 x                -> C1 (chr (x - 0x40)) :: demux xs[39m
     [38;5;2m4068[39m: [38;5;2m      683:     | x::xs when is_C0 x                -> C0 (chr x) :: demux xs[39m
     [38;5;2m4069[39m: [38;5;2m      684:     | x::xs -> Uchar (Uchar.unsafe_of_int x) :: demux xs[39m
     [38;5;2m4070[39m: [38;5;2m      685:     | [] -> [][39m
     [38;5;2m4071[39m: [38;5;2m      686: [39m
     [38;5;2m4072[39m: [38;5;2m      687:   let xtrm_mod_flags = function[39m
     [38;5;2m4073[39m: [38;5;2m      688:     | 2 -> Some [`Shift][39m
     [38;5;2m4074[39m: [38;5;2m      689:     | 3 -> Some [`Meta][39m
     [38;5;2m4075[39m: [38;5;2m      690:     | 4 -> Some [`Shift; `Meta][39m
     [38;5;2m4076[39m: [38;5;2m      691:     | 5 -> Some [`Ctrl][39m
     [38;5;2m4077[39m: [38;5;2m      692:     | 6 -> Some [`Shift; `Ctrl][39m
     [38;5;2m4078[39m: [38;5;2m      693:     | 7 -> Some [`Meta; `Ctrl][39m
     [38;5;2m4079[39m: [38;5;2m      694:     | 8 -> Some [`Shift; `Meta; `Ctrl][39m
     [38;5;2m4080[39m: [38;5;2m      695:     | _ -> None[39m
     [38;5;2m4081[39m: [38;5;2m      696: [39m
     [38;5;2m4082[39m: [38;5;2m      697:   let mods_xtrm = function[39m
     [38;5;2m4083[39m: [38;5;2m      698:     | [1;p] -> xtrm_mod_flags p[39m
     [38;5;2m4084[39m: [38;5;2m      699:     | []    -> Some [][39m
     [38;5;2m4085[39m: [38;5;2m      700:     | _     -> None[39m
     [38;5;2m4086[39m: [38;5;2m      701: [39m
     [38;5;2m4087[39m: [38;5;2m      702:   let mods_rxvt = function[39m
     [38;5;2m4088[39m: [38;5;2m      703:     | '~' -> Some [][39m
     [38;5;2m4089[39m: [38;5;2m      704:     | '$' -> Some [`Shift][39m
     [38;5;2m4090[39m: [38;5;2m      705:     | '^' -> Some [`Ctrl][39m
     [38;5;2m4091[39m: [38;5;2m      706:     | '@' -> Some [`Ctrl; `Shift][39m
     [38;5;2m4092[39m: [38;5;2m      707:     | _ -> None[39m
     [38;5;2m4093[39m: [38;5;2m      708: [39m
     [38;5;2m4094[39m: [38;5;2m      709:   let mods_common ps code = match (ps, code) with[39m
     [38;5;2m4095[39m: [38;5;2m      710:     | ([], '~')  -> Some [][39m
     [38;5;2m4096[39m: [38;5;2m      711:     | ([], c)    -> mods_rxvt c[39m
     [38;5;2m4097[39m: [38;5;2m      712:     | ([p], '~') -> xtrm_mod_flags p[39m
     [38;5;2m4098[39m: [38;5;2m      713:     | _          -> None[39m
     [38;5;2m4099[39m: [38;5;2m      714: [39m
     [38;5;2m4100[39m: [38;5;2m      715:   let mouse_p p =[39m
     [38;5;2m4101[39m: [38;5;2m      716:     let btn = match p land 3 with[39m
     [38;5;2m4102[39m: [38;5;2m      717:       | 0 when bit 6 p -> `Scroll `Up[39m
     [38;5;2m4103[39m: [38;5;2m      718:       | 0              -> `Left[39m
     [38;5;2m4104[39m: [38;5;2m      719:       | 1 when bit 6 p -> `Scroll `Down[39m
     [38;5;2m4105[39m: [38;5;2m      720:       | 1              -> `Middle[39m
     [38;5;2m4106[39m: [38;5;2m      721:       | 2 when bit 6 p -> `ALL (* `Scroll `Left *)[39m
     [38;5;2m4107[39m: [38;5;2m      722:       | 2              -> `Right[39m
     [38;5;2m4108[39m: [38;5;2m      723:       | 3 when bit 6 p -> `ALL (* `Scroll `Right *)[39m
     [38;5;2m4109[39m: [38;5;2m      724:       | _              -> `ALL[39m
     [38;5;2m4110[39m: [38;5;2m      725:     and drag = bit 5 p[39m
     [38;5;2m4111[39m: [38;5;2m      726:     and mods =[39m
     [38;5;2m4112[39m: [38;5;2m      727:       (if bit 3 p then [`Meta] else []) @[39m
     [38;5;2m4113[39m: [38;5;2m      728:       (if bit 4 p then [`Ctrl] else [])[39m
     [38;5;2m4114[39m: [38;5;2m      729:     in (btn, drag, mods)[39m
     [38;5;2m4115[39m: [38;5;2m      730: [39m
     [38;5;2m4116[39m: [38;5;2m      731:   let key k mods = Some (`Key (k, mods))[39m
     [38;5;2m4117[39m: [38;5;2m      732: [39m
     [38;5;2m4118[39m: [38;5;2m      733:   let event_of_control_code =[39m
     [38;5;2m4119[39m: [38;5;2m      734:     let open Option in function[39m
     [38;5;2m4120[39m: [38;5;2m      735:     | Uchar u when Uchar.to_int u |> is_ascii ->[39m
     [38;5;2m4121[39m: [38;5;2m      736:         Some (`Key (`ASCII (Uchar.unsafe_to_char u), []))[39m
     [38;5;2m4122[39m: [38;5;2m      737:     | Uchar u -> Some (`Key (`Uchar u, []))[39m
     [38;5;2m4123[39m: [38;5;2m      738: [39m
     [38;5;2m4124[39m: [38;5;2m      739:     | C0 '\x1b'        -> key `Escape [][39m
     [38;5;2m4125[39m: [38;5;2m      740:     | C0 ('\b'|'\x7f') -> key `Backspace [][39m
     [38;5;2m4126[39m: [38;5;2m      741:     | C0 '\n'          -> key `Enter [][39m
     [38;5;2m4127[39m: [38;5;2m      742:     | C0 '\t'          -> key `Tab [][39m
     [38;5;2m4128[39m: [38;5;2m      743: [39m
     [38;5;2m4129[39m: [38;5;2m      744:     | C0 x -> key (`ASCII Char.(code x + 0x40 |> unsafe_chr)) [`Ctrl][39m
     [38;5;2m4130[39m: [38;5;2m      745:     | C1 x -> key (`ASCII x) [`Meta][39m
     [38;5;2m4131[39m: [38;5;2m      746: [39m
     [38;5;2m4132[39m: [38;5;2m      747:     | CSI ("",[],'Z') -> key `Tab [`Shift][39m
     [38;5;2m4133[39m: [38;5;2m      748: [39m
     [38;5;2m4134[39m: [38;5;2m      749:     | CSI ("",p,'A') -> mods_xtrm p >>= key (`Arrow `Up)[39m
     [38;5;2m4135[39m: [38;5;2m      750:     | CSI ("",p,'B') -> mods_xtrm p >>= key (`Arrow `Down)[39m
     [38;5;2m4136[39m: [38;5;2m      751:     | CSI ("",p,'C') -> mods_xtrm p >>= key (`Arrow `Right)[39m
     [38;5;2m4137[39m: [38;5;2m      752:     | CSI ("",p,'D') -> mods_xtrm p >>= key (`Arrow `Left)[39m
     [38;5;2m4138[39m: [38;5;2m      753: [39m
     [38;5;2m4139[39m: [38;5;2m      754:     | CSI ("",[],'a') -> key (`Arrow `Up) [`Shift][39m
     [38;5;2m4140[39m: [38;5;2m      755:     | CSI ("",[],'b') -> key (`Arrow `Down) [`Shift][39m
     [38;5;2m4141[39m: [38;5;2m      756:     | CSI ("",[],'c') -> key (`Arrow `Right) [`Shift][39m
     [38;5;2m4142[39m: [38;5;2m      757:     | CSI ("",[],'d') -> key (`Arrow `Left) [`Shift][39m
     [38;5;2m4143[39m: [38;5;2m      758:     | SS2 ('A'|'a') -> key (`Arrow `Up) [`Ctrl][39m
     [38;5;2m4144[39m: [38;5;2m      759:     | SS2 ('B'|'b') -> key (`Arrow `Down) [`Ctrl][39m
     [38;5;2m4145[39m: [38;5;2m      760:     | SS2 ('C'|'c') -> key (`Arrow `Right) [`Ctrl][39m
     [38;5;2m4146[39m: [38;5;2m      761:     | SS2 ('D'|'d') -> key (`Arrow `Left) [`Ctrl][39m
     [38;5;2m4147[39m: [38;5;2m      762: [39m
     [38;5;2m4148[39m: [38;5;2m      763:     | CSI ("",5::p,c) -> mods_common p c >>= key (`Page `Up)[39m
     [38;5;2m4149[39m: [38;5;2m      764:     | CSI ("",6::p,c) -> mods_common p c >>= key (`Page `Down)[39m
     [38;5;2m4150[39m: [38;5;2m      765: [39m
     [38;5;2m4151[39m: [38;5;2m      766:     | CSI ("",2::p,c) -> mods_common p c >>= key `Insert[39m
     [38;5;2m4152[39m: [38;5;2m      767:     | CSI ("",3::p,c) -> mods_common p c >>= key `Delete[39m
     [38;5;2m4153[39m: [38;5;2m      768: [39m
     [38;5;2m4154[39m: [38;5;2m      769:     | CSI ("",[4],'h') -> key `Insert [][39m
     [38;5;2m4155[39m: [38;5;2m      770:     | CSI ("",[],'L')  -> key `Insert [`Ctrl][39m
     [38;5;2m4156[39m: [38;5;2m      771:     | CSI ("",[],'P')  -> key `Delete [][39m
     [38;5;2m4157[39m: [38;5;2m      772:     | CSI ("",[],'M')  -> key `Delete [`Ctrl][39m
     [38;5;2m4158[39m: [38;5;2m      773: [39m
     [38;5;2m4159[39m: [38;5;2m      774:     | CSI ("",p,'H')   -> mods_xtrm p >>= key `Home[39m
     [38;5;2m4160[39m: [38;5;2m      775:     | CSI ("",[7|1],c) -> mods_rxvt c >>= key `Home[39m
     [38;5;2m4161[39m: [38;5;2m      776: [39m
     [38;5;2m4162[39m: [38;5;2m      777:     | CSI ("",p,'F')   -> mods_xtrm p >>= key `End[39m
     [38;5;2m4163[39m: [38;5;2m      778:     | CSI ("",[8|4],c) -> mods_rxvt c >>= key `End[39m
     [38;5;2m4164[39m: [38;5;2m      779:     | CSI ("",[],'J')  -> key `End [`Ctrl][39m
     [38;5;2m4165[39m: [38;5;2m      780: [39m
     [38;5;2m4166[39m: [38;5;2m      781:     | SS2 ('P'..'S' as c) -> key (`Function (Char.code c - 0x4f)) [][39m
     [38;5;2m4167[39m: [38;5;2m      782: [39m
     [38;5;2m4168[39m: [38;5;2m      783:     | CSI ("",p,('P'..'S' as c)) ->[39m
     [38;5;2m4169[39m: [38;5;2m      784:         mods_xtrm p >>= key (`Function (Char.code c - 0x4f))[39m
     [38;5;2m4170[39m: [38;5;2m      785: [39m
     [38;5;2m4171[39m: [38;5;2m      786:     | CSI ("",k::p,c) when btw k 11 15 || btw k 17 21 || btw k 23 26 ->[39m
     [38;5;2m4172[39m: [38;5;2m      787:         mods_common p c >>= key (`Function ((k - 10) - (k - 10) / 6))[39m
     [38;5;2m4173[39m: [38;5;2m      788: [39m
     [38;5;2m4174[39m: [38;5;2m      789:     | CSI ("<",[p;x;y],('M'|'m' as c)) ->[39m
     [38;5;2m4175[39m: [38;5;2m      790:         let (btn, drag, mods) = mouse_p p in[39m
     [38;5;2m4176[39m: [38;5;2m      791:         ( match (c, btn, drag) with[39m
     [38;5;2m4177[39m: [38;5;2m      792:           | ('M', (#button as b), false) -> Some (`Press b)[39m
     [38;5;2m4178[39m: [38;5;2m      793:           | ('M', #button, true)         -> Some `Drag[39m
     [38;5;2m4179[39m: [38;5;2m      794:           | ('m', #button, false)        -> Some `Release[39m
     [38;5;2m4180[39m: [38;5;2m      795:           (* | ('M', `ALL   , true)         -> Some `Move *)[39m
     [38;5;2m4181[39m: [38;5;2m      796:           | _                            -> None[39m
     [38;5;2m4182[39m: [38;5;2m      797:         ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m4183[39m: [38;5;2m      798: [39m
     [38;5;2m4184[39m: [38;5;2m      799:     | CSI ("",[p;x;y],'M') | Esc_M (p,x,y) as evt ->[39m
     [38;5;2m4185[39m: [38;5;2m      800:         let (x, y) = match evt with Esc_M _ -> x - 32, y - 32 | _ -> x, y[39m
     [38;5;2m4186[39m: [38;5;2m      801:         and (btn, drag, mods) = mouse_p (p - 32) in[39m
     [38;5;2m4187[39m: [38;5;2m      802:         ( match (btn, drag) with[39m
     [38;5;2m4188[39m: [38;5;2m      803:           | (#button as b, false) -> Some (`Press b)[39m
     [38;5;2m4189[39m: [38;5;2m      804:           | (#button     , true ) -> Some `Drag[39m
     [38;5;2m4190[39m: [38;5;2m      805:           | (`ALL        , false) -> Some `Release[39m
     [38;5;2m4191[39m: [38;5;2m      806:           (* | (`ALL        , true)  -> Some `Move *)[39m
     [38;5;2m4192[39m: [38;5;2m      807:           | _                     -> None[39m
     [38;5;2m4193[39m: [38;5;2m      808:         ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m4194[39m: [38;5;2m      809: [39m
     [38;5;2m4195[39m: [38;5;2m      810:     | CSI ("",[200],'~') -> Some (`Paste `Start)[39m
     [38;5;2m4196[39m: [38;5;2m      811:     | CSI ("",[201],'~') -> Some (`Paste `End)[39m
     [38;5;2m4197[39m: [38;5;2m      812: [39m
     [38;5;2m4198[39m: [38;5;2m      813:     | CSI _ | SS2 _ -> None[39m
     [38;5;2m4199[39m: [38;5;2m      814: [39m
     [38;5;2m4200[39m: [38;5;2m      815:   let rec events = function[39m
     [38;5;2m4201[39m: [38;5;2m      816:     | C0 '\x1b' :: cc :: ccs ->[39m
     [38;5;2m4202[39m: [38;5;2m      817:       ( match event_of_control_code cc with[39m
     [38;5;2m4203[39m: [38;5;2m      818:         | Some (`Key (k, mods)) -> `Key (k, `Meta :: mods) :: events ccs[39m
     [38;5;2m4204[39m: [38;5;2m      819:         | Some _                -> `Key (`Escape, []) :: events (cc::ccs)[39m
     [38;5;2m4205[39m: [38;5;2m      820:         | None                  -> events ccs )[39m
     [38;5;2m4206[39m: [38;5;2m      821:     | cc::ccs -> (event_of_control_code cc |> Option.to_list) @ events ccs[39m
     [38;5;2m4207[39m: [38;5;2m      822:     | [] -> [][39m
     [38;5;2m4208[39m: [38;5;2m      823: [39m
     [38;5;2m4209[39m: [38;5;2m      824:   let decode = events &. demux &. List.map Uchar.to_int[39m
     [38;5;2m4210[39m: [38;5;2m      825: [39m
     [38;5;2m4211[39m: [38;5;2m      826:   type t = (event list * bool) ref[39m
     [38;5;2m4212[39m: [38;5;2m      827: [39m
     [38;5;2m4213[39m: [38;5;2m      828:   let create () = ref ([], false)[39m
     [38;5;2m4214[39m: [38;5;2m      829: [39m
     [38;5;2m4215[39m: [38;5;2m      830:   let next t = match !t with[39m
     [38;5;2m4216[39m: [38;5;2m      831:     | (#event as e::es, eof) -> t := (es, eof) ; e[39m
     [38;5;2m4217[39m: [38;5;2m      832:     | ([], false) -> `Await[39m
     [38;5;2m4218[39m: [38;5;2m      833:     | _           -> `End[39m
     [38;5;2m4219[39m: [38;5;2m      834: [39m
     [38;5;2m4220[39m: [38;5;2m      835:   let list_of_utf8 buf i l =[39m
     [38;5;2m4221[39m: [38;5;2m      836:     let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m4222[39m: [38;5;2m      837:     String.sub0cp (Bytes.unsafe_to_string buf) i l[39m
     [38;5;2m4223[39m: [38;5;2m      838:     |> Uutf.String.fold_utf_8 f [] |> List.rev[39m
     [38;5;2m4224[39m: [38;5;2m      839: [39m
     [38;5;2m4225[39m: [38;5;2m      840:   let input t buf i l = t := match !t with[39m
     [38;5;2m4226[39m: [38;5;2m      841:     | (es, false) when l > 0 -> (es @ (list_of_utf8 buf i l |> decode), false)[39m
     [38;5;2m4227[39m: [38;5;2m      842:     | (es, _)                -> (es, true)[39m
     [38;5;2m4228[39m: [38;5;2m      843: [39m
     [38;5;2m4229[39m: [38;5;2m      844:   let pending t = match !t with ([], false) -> false | _ -> true[39m
     [38;5;2m4230[39m: [38;5;2m      845: end[39m
     [38;5;2m4231[39m: [38;5;2m      846: [39m
     [38;5;2m4232[39m: [38;5;2m      847: module Tmachine = struct[39m
     [38;5;2m4233[39m: [38;5;2m      848: [39m
     [38;5;2m4234[39m: [38;5;2m      849:   open Cap[39m
     [38;5;2m4235[39m: [38;5;2m      850:   (* XXX This is sad. This should be a composable, stateless transducer. *)[39m
     [38;5;2m4236[39m: [38;5;2m      851: [39m
     [38;5;2m4237[39m: [38;5;2m      852:   type t = {[39m
     [38;5;2m4238[39m: [38;5;2m      853:     cap           : Cap.t[39m
     [38;5;2m4239[39m: [38;5;2m      854:   ; mutable write : Buffer.t -> unit[39m
     [38;5;2m4240[39m: [38;5;2m      855:   ; mutable curs  : (int * int) option[39m
     [38;5;2m4241[39m: [38;5;2m      856:   ; mutable dim   : (int * int)[39m
     [38;5;2m4242[39m: [38;5;2m      857:   ; mutable image : I.t[39m
     [38;5;2m4243[39m: [38;5;2m      858:   ; mutable dead  : bool[39m
     [38;5;2m4244[39m: [38;5;2m      859:   }[39m
     [38;5;2m4245[39m: [38;5;2m      860: [39m
     [38;5;2m4246[39m: [38;5;2m      861:   let emit t op =[39m
     [38;5;2m4247[39m: [38;5;2m      862:     if t.dead then[39m
     [38;5;2m4248[39m: [38;5;2m      863:       invalid_arg "Notty: use of released terminal"[39m
     [38;5;2m4249[39m: [38;5;2m      864:     else t.write <- t.write & op[39m
     [38;5;2m4250[39m: [38;5;2m      865: [39m
     [38;5;2m4251[39m: [38;5;2m      866:   let cursor cap = function[39m
     [38;5;2m4252[39m: [38;5;2m      867:     | None        -> cap.cursvis false[39m
     [38;5;2m4253[39m: [38;5;2m      868:     | Some (w, h) -> cap.cursvis true & cursat0 cap w h[39m
     [38;5;2m4254[39m: [38;5;2m      869: [39m
     [38;5;2m4255[39m: [38;5;2m      870:   let create ~mouse ~bpaste cap = {[39m
     [38;5;2m4256[39m: [38;5;2m      871:       cap[39m
     [38;5;2m4257[39m: [38;5;2m      872:     ; curs  = None[39m
     [38;5;2m4258[39m: [38;5;2m      873:     ; dim   = (0, 0)[39m
     [38;5;2m4259[39m: [38;5;2m      874:     ; image = I.empty[39m
     [38;5;2m4260[39m: [38;5;2m      875:     ; dead  = false[39m
     [38;5;2m4261[39m: [38;5;2m      876:     ; write =[39m
     [38;5;2m4262[39m: [38;5;2m      877:         cap.altscr true & cursor cap None & cap.mouse mouse & cap.bpaste bpaste[39m
     [38;5;2m4263[39m: [38;5;2m      878:     }[39m
     [38;5;2m4264[39m: [38;5;2m      879: [39m
     [38;5;2m4265[39m: [38;5;2m      880:   let release t =[39m
     [38;5;2m4266[39m: [38;5;2m      881:     if t.dead then false else[39m
     [38;5;2m4267[39m: [38;5;2m      882:       ( emit t ( t.cap.altscr false & t.cap.cursvis true &[39m
     [38;5;2m4268[39m: [38;5;2m      883:                  t.cap.mouse false & t.cap.bpaste false );[39m
     [38;5;2m4269[39m: [38;5;2m      884:         t.dead <- true; true )[39m
     [38;5;2m4270[39m: [38;5;2m      885: [39m
     [38;5;2m4271[39m: [38;5;2m      886:   let output t buf = t.write buf; t.write <- ignore[39m
     [38;5;2m4272[39m: [38;5;2m      887: [39m
     [38;5;2m4273[39m: [38;5;2m      888:   let refresh ({ dim; image; _ } as t) =[39m
     [38;5;2m4274[39m: [38;5;2m      889:     emit t ( cursor t.cap None & cursat0 t.cap 0 0 &[39m
     [38;5;2m4275[39m: [38;5;2m      890:              (fun buf -> Render.to_buffer buf t.cap (0, 0) dim image) &[39m
     [38;5;2m4276[39m: [38;5;2m      891:              cursor t.cap t.curs )[39m
     [38;5;2m4277[39m: [38;5;2m      892: [39m
     [38;5;2m4278[39m: [38;5;2m      893:   let set_size t dim = t.dim <- dim[39m
     [38;5;2m4279[39m: [38;5;2m      894:   let image t image = t.image <- image; refresh t[39m
     [38;5;2m4280[39m: [38;5;2m      895:   let cursor t curs = t.curs <- curs; emit t (cursor t.cap curs)[39m
     [38;5;2m4281[39m: [38;5;2m      896: [39m
     [38;5;2m4282[39m: [38;5;2m      897:   let size t = t.dim[39m
     [38;5;2m4283[39m: [38;5;2m      898:   let dead t = t.dead[39m
     [38;5;2m4284[39m: [38;5;2m      899: end[39m
     [38;5;2m4285[39m: [38;5;2m      900: [39m
     [38;5;2m4286[39m: [38;5;2m      901: module Direct = struct[39m
     [38;5;2m4287[39m: [38;5;2m      902:   let show_cursor buf cap x = cap.Cap.cursvis x buf[39m
     [38;5;2m4288[39m: [38;5;2m      903:   and move_cursor buf cap cmd = match cmd with[39m
     [38;5;2m4289[39m: [38;5;2m      904:     | `To (w, h) -> Cap.cursat0 cap w h buf[39m
     [38;5;2m4290[39m: [38;5;2m      905:     | `Home      -> cap.Cap.cr buf[39m
     [38;5;2m4291[39m: [38;5;2m      906:     | `By (x, y) ->[39m
     [38;5;2m4292[39m: [38;5;2m      907:         Cap.(if x <> 0 then cap.cubcuf x buf; if y <> 0 then cap.cuucud y buf)[39m
     [38;5;2m4293[39m: [38;5;2m      908: end[39m
     [38;5;2m4294[39m: [38;5;2m      909: [39m
     [38;5;2m4295[39m: [38;5;2m      910: type attr  = A.t[39m
     [38;5;2m4296[39m: [38;5;2m      911: type image = I.t[39m
     [38;5;2m4297[39m: [38;5;2m      912: [39m
     [38;5;2m4298[39m: [38;5;2m      913: module Infix = struct[39m
     [38;5;2m4299[39m: [38;5;2m      914:   let ((<->), (<|>), (</>)) = I.((<->), (<|>), (</>))[39m
     [38;5;2m4300[39m: [38;5;2m      915:   let (++) = A.(++)[39m
     [38;5;2m4301[39m: [38;5;2m      916: end[39m
     [38;5;2m4302[39m: [38;5;2mAdded regular file ../notty/src/notty.mli:[39m
     [38;5;2m4303[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m4304[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m4305[39m: [38;5;2m        3: [39m
     [38;5;2m4306[39m: [38;5;2m        4: (** Declaring terminals.[39m
     [38;5;2m4307[39m: [38;5;2m        5: [39m
     [38;5;2m4308[39m: [38;5;2m        6:     Notty is a terminal library that revolves around construction and[39m
     [38;5;2m4309[39m: [38;5;2m        7:     composition of displayable images.[39m
     [38;5;2m4310[39m: [38;5;2m        8: [39m
     [38;5;2m4311[39m: [38;5;2m        9:     This module provides the core {{!I}[image]} abstraction, standalone[39m
     [38;5;2m4312[39m: [38;5;2m       10:     {{!Render}rendering}, and escape sequence {{!Unescape}parsing}. It does not[39m
     [38;5;2m4313[39m: [38;5;2m       11:     depend on any platform code, and does not interact with the environment.[39m
     [38;5;2m4314[39m: [38;5;2m       12:     Input and output are provided by {!Notty_unix} and {!Notty_lwt}.[39m
     [38;5;2m4315[39m: [38;5;2m       13: [39m
     [38;5;2m4316[39m: [38;5;2m       14:     Consult the {{!basics}basics}, {{!examples}examples} and[39m
     [38;5;2m4317[39m: [38;5;2m       15:     {{!limitations}limitations}.[39m
     [38;5;2m4318[39m: [38;5;2m       16: [39m
     [38;5;2m4319[39m: [38;5;2m       17:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m4320[39m: [38;5;2m       18: [39m
     [38;5;2m4321[39m: [38;5;2m       19: (** {1 Interface} *)[39m
     [38;5;2m4322[39m: [38;5;2m       20: [39m
     [38;5;2m4323[39m: [38;5;2m       21: type attr[39m
     [38;5;2m4324[39m: [38;5;2m       22: (** Visual characteristics of displayed text. *)[39m
     [38;5;2m4325[39m: [38;5;2m       23: [39m
     [38;5;2m4326[39m: [38;5;2m       24: type image[39m
     [38;5;2m4327[39m: [38;5;2m       25: (** Rectangles of styled characters. *)[39m
     [38;5;2m4328[39m: [38;5;2m       26: [39m
     [38;5;2m4329[39m: [38;5;2m       27: (** [A] is for attribute.[39m
     [38;5;2m4330[39m: [38;5;2m       28: [39m
     [38;5;2m4331[39m: [38;5;2m       29:     Construction and composition of styling characteristics of text.[39m
     [38;5;2m4332[39m: [38;5;2m       30: [39m
     [38;5;2m4333[39m: [38;5;2m       31:     Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m4334[39m: [38;5;2m       32: module A : sig[39m
     [38;5;2m4335[39m: [38;5;2m       33: [39m
     [38;5;2m4336[39m: [38;5;2m       34:   (** {1 Colors} *)[39m
     [38;5;2m4337[39m: [38;5;2m       35: [39m
     [38;5;2m4338[39m: [38;5;2m       36:   type color[39m
     [38;5;2m4339[39m: [38;5;2m       37:   (** An ineffable quality of light.[39m
     [38;5;2m4340[39m: [38;5;2m       38: [39m
     [38;5;2m4341[39m: [38;5;2m       39:       There are three kinds of colors:[39m
     [38;5;2m4342[39m: [38;5;2m       40:       {ul[39m
     [38;5;2m4343[39m: [38;5;2m       41:       {- {e Core 16 colors.}[39m
     [38;5;2m4344[39m: [38;5;2m       42: [39m
     [38;5;2m4345[39m: [38;5;2m       43:          ANSI defines 8 color {e names}, with the actual display colors[39m
     [38;5;2m4346[39m: [38;5;2m       44:          considered an implementation detail. Historically, this palette was[39m
     [38;5;2m4347[39m: [38;5;2m       45:          extended with their light (sometimes {e bright} or {e high-intensity})[39m
     [38;5;2m4348[39m: [38;5;2m       46:          counterparts. Their presentation is undefined too, but typically[39m
     [38;5;2m4349[39m: [38;5;2m       47:          produces a brighter shade. These colors - often called the {e ANSI[39m
     [38;5;2m4350[39m: [38;5;2m       48:          colors} - tend to be unpredictable, but ubiquitously supported.[39m
     [38;5;2m4351[39m: [38;5;2m       49: [39m
     [38;5;2m4352[39m: [38;5;2m       50:          }[39m
     [38;5;2m4353[39m: [38;5;2m       51:       {- {e Extended 256-color palette.}[39m
     [38;5;2m4354[39m: [38;5;2m       52: [39m
     [38;5;2m4355[39m: [38;5;2m       53:          This common feature extends the palette by further 240 colors. They[39m
     [38;5;2m4356[39m: [38;5;2m       54:          come in two groups:[39m
     [38;5;2m4357[39m: [38;5;2m       55: [39m
     [38;5;2m4358[39m: [38;5;2m       56:          {ul[39m
     [38;5;2m4359[39m: [38;5;2m       57:          {- The {e color cube}, a 6*6*6 approximation to the usual 24-bit RGB[39m
     [38;5;2m4360[39m: [38;5;2m       58:             color cube; and}[39m
     [38;5;2m4361[39m: [38;5;2m       59:          {- the {e grayscale ramp}, containing (merely) 24 shades of gray.}}[39m
     [38;5;2m4362[39m: [38;5;2m       60: [39m
     [38;5;2m4363[39m: [38;5;2m       61:          XTerm was the first to support this extension. Many terminals have[39m
     [38;5;2m4364[39m: [38;5;2m       62:          since cloned it, so the support is wide, but not universal.[39m
     [38;5;2m4365[39m: [38;5;2m       63: [39m
     [38;5;2m4366[39m: [38;5;2m       64:          As the extended colors are still palette-driven they do not have a[39m
     [38;5;2m4367[39m: [38;5;2m       65:          fixed presentation, and the presentation can be changed in some[39m
     [38;5;2m4368[39m: [38;5;2m       66:          terminals. Default palette tends to match {{:[39m
     [38;5;2m4369[39m: [38;5;2m       67:          https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg}[39m
     [38;5;2m4370[39m: [38;5;2m       68:          XTerm's}.[39m
     [38;5;2m4371[39m: [38;5;2m       69: [39m
     [38;5;2m4372[39m: [38;5;2m       70:          }[39m
     [38;5;2m4373[39m: [38;5;2m       71:       {- {e True color}[39m
     [38;5;2m4374[39m: [38;5;2m       72: [39m
     [38;5;2m4375[39m: [38;5;2m       73:          A recently established convention allows directly sending 24-bit colors[39m
     [38;5;2m4376[39m: [38;5;2m       74:          to the terminal. This has been adopted by a growing minority of[39m
     [38;5;2m4377[39m: [38;5;2m       75:          terminals. A reasonably up-to-date status document maintained by the[39m
     [38;5;2m4378[39m: [38;5;2m       76:          community can be found {{:https://gist.github.com/XVilka/8346728}here}.}}[39m
     [38;5;2m4379[39m: [38;5;2m       77: [39m
     [38;5;2m4380[39m: [38;5;2m       78:       Some of the technical and historical background can be found in {{:[39m
     [38;5;2m4381[39m: [38;5;2m       79:       http://invisible-island.net/xterm/xterm.faq.html#problems_colors}[39m
     [38;5;2m4382[39m: [38;5;2m       80:       XTerm's FAQ}.[39m
     [38;5;2m4383[39m: [38;5;2m       81: [39m
     [38;5;2m4384[39m: [38;5;2m       82:       {b Note} No attempt is made to remap colors depending on the terminal.[39m
     [38;5;2m4385[39m: [38;5;2m       83:       Terminals might ignore, remap, or completely misinterpret unsupported[39m
     [38;5;2m4386[39m: [38;5;2m       84:       colors. *)[39m
     [38;5;2m4387[39m: [38;5;2m       85: [39m
     [38;5;2m4388[39m: [38;5;2m       86:   (** {2:corecolors Core 16 colors}[39m
     [38;5;2m4389[39m: [38;5;2m       87: [39m
     [38;5;2m4390[39m: [38;5;2m       88:       The first 8 have their standard ANSI names. *)[39m
     [38;5;2m4391[39m: [38;5;2m       89:     val unsafe_color_of_int:int->color[39m
     [38;5;2m4392[39m: [38;5;2m       90: [39m
     [38;5;2m4393[39m: [38;5;2m       91:   val black        : color[39m
     [38;5;2m4394[39m: [38;5;2m       92:   val red          : color[39m
     [38;5;2m4395[39m: [38;5;2m       93:   val green        : color[39m
     [38;5;2m4396[39m: [38;5;2m       94:   val yellow       : color[39m
     [38;5;2m4397[39m: [38;5;2m       95:   val blue         : color[39m
     [38;5;2m4398[39m: [38;5;2m       96:   val magenta      : color[39m
     [38;5;2m4399[39m: [38;5;2m       97:   val cyan         : color[39m
     [38;5;2m4400[39m: [38;5;2m       98:   val white        : color[39m
     [38;5;2m4401[39m: [38;5;2m       99:   val lightblack   : color[39m
     [38;5;2m4402[39m: [38;5;2m      100:   val lightred     : color[39m
     [38;5;2m4403[39m: [38;5;2m      101:   val lightgreen   : color[39m
     [38;5;2m4404[39m: [38;5;2m      102:   val lightyellow  : color[39m
     [38;5;2m4405[39m: [38;5;2m      103:   val lightblue    : color[39m
     [38;5;2m4406[39m: [38;5;2m      104:   val lightmagenta : color[39m
     [38;5;2m4407[39m: [38;5;2m      105:   val lightcyan    : color[39m
     [38;5;2m4408[39m: [38;5;2m      106:   val lightwhite   : color[39m
     [38;5;2m4409[39m: [38;5;2m      107: [39m
     [38;5;2m4410[39m: [38;5;2m      108:   (** {2 Extended 256-color palette} *)[39m
     [38;5;2m4411[39m: [38;5;2m      109: [39m
     [38;5;2m4412[39m: [38;5;2m      110:   val rgb : r:int -> g:int -> b:int -> color[39m
     [38;5;2m4413[39m: [38;5;2m      111:   (** [rgb ~r:red ~g:green ~b:blue] is an extended-palette color from the color cube.[39m
     [38;5;2m4414[39m: [38;5;2m      112: [39m
     [38;5;2m4415[39m: [38;5;2m      113:       All three channels must be in the range [0 - 5]. XTerm default palette maps[39m
     [38;5;2m4416[39m: [38;5;2m      114:       this to [0x00], [0x5f], [0x87], [0xaf], [0xd7], and [0xff] independently[39m
     [38;5;2m4417[39m: [38;5;2m      115:       per channel.[39m
     [38;5;2m4418[39m: [38;5;2m      116: [39m
     [38;5;2m4419[39m: [38;5;2m      117:       @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m4420[39m: [38;5;2m      118: [39m
     [38;5;2m4421[39m: [38;5;2m      119:   val gray : int -> color[39m
     [38;5;2m4422[39m: [38;5;2m      120:   (** [gray level] is an extended-palette color from the grayscale ramp.[39m
     [38;5;2m4423[39m: [38;5;2m      121: [39m
     [38;5;2m4424[39m: [38;5;2m      122:       [level] must be in the range [0 - 23]. XTerm default palette maps this to[39m
     [38;5;2m4425[39m: [38;5;2m      123:       [8 + level * 10] on all three channels.[39m
     [38;5;2m4426[39m: [38;5;2m      124: [39m
     [38;5;2m4427[39m: [38;5;2m      125:       @raise Invalid_argument if the [level] is outside the range. *)[39m
     [38;5;2m4428[39m: [38;5;2m      126: [39m
     [38;5;2m4429[39m: [38;5;2m      127:   (** {2 True Color} *)[39m
     [38;5;2m4430[39m: [38;5;2m      128: [39m
     [38;5;2m4431[39m: [38;5;2m      129:   val rgb_888 : r:int -> g:int -> b:int -> color[39m
     [38;5;2m4432[39m: [38;5;2m      130:   (** [rgb_888 ~r:red ~g:green ~b:blue] is a 24-bit color.[39m
     [38;5;2m4433[39m: [38;5;2m      131: [39m
     [38;5;2m4434[39m: [38;5;2m      132:       All three channels must be in the range [0 - 255].[39m
     [38;5;2m4435[39m: [38;5;2m      133: [39m
     [38;5;2m4436[39m: [38;5;2m      134:       @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m4437[39m: [38;5;2m      135: [39m
     [38;5;2m4438[39m: [38;5;2m      136:   (** {1 Text styles} *)[39m
     [38;5;2m4439[39m: [38;5;2m      137: [39m
     [38;5;2m4440[39m: [38;5;2m      138:   type style[39m
     [38;5;2m4441[39m: [38;5;2m      139:   (** Additional text properties. *)[39m
     [38;5;2m4442[39m: [38;5;2m      140: [39m
     [38;5;2m4443[39m: [38;5;2m      141:   val unsafe_style_of_int: int-> style[39m
     [38;5;2m4444[39m: [38;5;2m      142: [39m
     [38;5;2m4445[39m: [38;5;2m      143:   val bold      : style[39m
     [38;5;2m4446[39m: [38;5;2m      144:   val italic    : style[39m
     [38;5;2m4447[39m: [38;5;2m      145:   val underline : style[39m
     [38;5;2m4448[39m: [38;5;2m      146:   val blink     : style[39m
     [38;5;2m4449[39m: [38;5;2m      147:   val reverse   : style[39m
     [38;5;2m4450[39m: [38;5;2m      148: [39m
     [38;5;2m4451[39m: [38;5;2m      149:   (** {1 Attribute construction and composition} *)[39m
     [38;5;2m4452[39m: [38;5;2m      150: [39m
     [38;5;2m4453[39m: [38;5;2m      151:   type t = attr[39m
     [38;5;2m4454[39m: [38;5;2m      152: [39m
     [38;5;2m4455[39m: [38;5;2m      153:   val equal : t -> t -> bool[39m
     [38;5;2m4456[39m: [38;5;2m      154: [39m
     [38;5;2m4457[39m: [38;5;2m      155:   val empty : attr[39m
     [38;5;2m4458[39m: [38;5;2m      156:   (** [empty] is the attribute with the default foreground and background color[39m
     [38;5;2m4459[39m: [38;5;2m      157:       and empty style set. *)[39m
     [38;5;2m4460[39m: [38;5;2m      158: [39m
     [38;5;2m4461[39m: [38;5;2m      159:   val (++) : attr -> attr -> attr[39m
     [38;5;2m4462[39m: [38;5;2m      160:   (** [a1 ++ a2] is the concatenation of [a1] and [a2], the attribute that has[39m
     [38;5;2m4463[39m: [38;5;2m      161:       [a2]'s foreground (resp. background), unless {e unset}, in which case it[39m
     [38;5;2m4464[39m: [38;5;2m      162:       is [a1]'s, and the union of both style sets.[39m
     [38;5;2m4465[39m: [38;5;2m      163: [39m
     [38;5;2m4466[39m: [38;5;2m      164:       [++] is left-associative, and forms a monoid with [empty]. *)[39m
     [38;5;2m4467[39m: [38;5;2m      165: [39m
     [38;5;2m4468[39m: [38;5;2m      166:   val fg : color -> attr[39m
     [38;5;2m4469[39m: [38;5;2m      167:   (** [fg c] is [empty] with foreground [c]. *)[39m
     [38;5;2m4470[39m: [38;5;2m      168: [39m
     [38;5;2m4471[39m: [38;5;2m      169:   val bg : color -> attr[39m
     [38;5;2m4472[39m: [38;5;2m      170:   (** [bg c] is [empty] with background [c]. *)[39m
     [38;5;2m4473[39m: [38;5;2m      171: [39m
     [38;5;2m4474[39m: [38;5;2m      172:   val st : style -> attr[39m
     [38;5;2m4475[39m: [38;5;2m      173:   (** [st s] is [empty] with style [s]. *)[39m
     [38;5;2m4476[39m: [38;5;2m      174: end[39m
     [38;5;2m4477[39m: [38;5;2m      175: [39m
     [38;5;2m4478[39m: [38;5;2m      176: (** [I] is for image.[39m
     [38;5;2m4479[39m: [38;5;2m      177: [39m
     [38;5;2m4480[39m: [38;5;2m      178:     Construction and composition of images.[39m
     [38;5;2m4481[39m: [38;5;2m      179: [39m
     [38;5;2m4482[39m: [38;5;2m      180:     Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m4483[39m: [38;5;2m      181: module I : sig[39m
     [38;5;2m4484[39m: [38;5;2m      182: [39m
     [38;5;2m4485[39m: [38;5;2m      183:   type t = image[39m
     [38;5;2m4486[39m: [38;5;2m      184: [39m
     [38;5;2m4487[39m: [38;5;2m      185:   val height : image -> int[39m
     [38;5;2m4488[39m: [38;5;2m      186:   val width  : image -> int[39m
     [38;5;2m4489[39m: [38;5;2m      187: [39m
     [38;5;2m4490[39m: [38;5;2m      188:   val equal : t -> t -> bool[39m
     [38;5;2m4491[39m: [38;5;2m      189:   (** [equal t1 t2] is [true] iff [t1] and [t2] are constructed by the same term.[39m
     [38;5;2m4492[39m: [38;5;2m      190: [39m
     [38;5;2m4493[39m: [38;5;2m      191:       {b Note} This is a weak form of equality. Images that are not [equal][39m
     [38;5;2m4494[39m: [38;5;2m      192:       could still render the same. *)[39m
     [38;5;2m4495[39m: [38;5;2m      193: [39m
     [38;5;2m4496[39m: [38;5;2m      194:   (** {1:imgprims Primitives} *)[39m
     [38;5;2m4497[39m: [38;5;2m      195: [39m
     [38;5;2m4498[39m: [38;5;2m      196:   val empty : image[39m
     [38;5;2m4499[39m: [38;5;2m      197:   (** [empty] is a zero-sized image. *)[39m
     [38;5;2m4500[39m: [38;5;2m      198: [39m
     [38;5;2m4501[39m: [38;5;2m      199:   val string : attr -> string -> image[39m
     [38;5;2m4502[39m: [38;5;2m      200:   (** [string attr s] is an image containing text [s], styled with [attr].[39m
     [38;5;2m4503[39m: [38;5;2m      201: [39m
     [38;5;2m4504[39m: [38;5;2m      202:       @raise Invalid_argument if [string] is not a valid UTF-8 sequence, or[39m
     [38;5;2m4505[39m: [38;5;2m      203:       contains {{!ctrls}control characters}. *)[39m
     [38;5;2m4506[39m: [38;5;2m      204: [39m
     [38;5;2m4507[39m: [38;5;2m      205:   val uchars : attr -> Uchar.t array -> image[39m
     [38;5;2m4508[39m: [38;5;2m      206:   (** [uchars attr us] is an image containing text [us], styled with [attr].[39m
     [38;5;2m4509[39m: [38;5;2m      207: [39m
     [38;5;2m4510[39m: [38;5;2m      208:       @raise Invalid_argument if [us] contains {{!ctrls}control characters}. *)[39m
     [38;5;2m4511[39m: [38;5;2m      209: [39m
     [38;5;2m4512[39m: [38;5;2m      210:   val char : attr -> char -> int -> int -> image[39m
     [38;5;2m4513[39m: [38;5;2m      211:   (** [char attr c w h] is a [w * h] grid of [c].[39m
     [38;5;2m4514[39m: [38;5;2m      212: [39m
     [38;5;2m4515[39m: [38;5;2m      213:       @raise Invalid_argument if [c] is a {{!ctrls}control character}. *)[39m
     [38;5;2m4516[39m: [38;5;2m      214: [39m
     [38;5;2m4517[39m: [38;5;2m      215:   val uchar : attr -> Uchar.t -> int -> int -> image[39m
     [38;5;2m4518[39m: [38;5;2m      216:   (** [uchar attr u w h] is a [w * h] grid of [u].[39m
     [38;5;2m4519[39m: [38;5;2m      217: [39m
     [38;5;2m4520[39m: [38;5;2m      218:       @raise Invalid_argument if [u] is a {{!ctrls}control character}. *)[39m
     [38;5;2m4521[39m: [38;5;2m      219: [39m
     [38;5;2m4522[39m: [38;5;2m      220:   val void  : int -> int -> image[39m
     [38;5;2m4523[39m: [38;5;2m      221:   (** [void w h] is a [w * h] rectangle of transparent cells.[39m
     [38;5;2m4524[39m: [38;5;2m      222: [39m
     [38;5;2m4525[39m: [38;5;2m      223:       [void] is magical: it has geometry, but no displayable content. This is[39m
     [38;5;2m4526[39m: [38;5;2m      224:       different, for example, from the space character [U+0020], which renders[39m
     [38;5;2m4527[39m: [38;5;2m      225:       as a cell filled with the background color. This means that [void][39m
     [38;5;2m4528[39m: [38;5;2m      226:       interacts specially with {{!(</>)}overlays}.[39m
     [38;5;2m4529[39m: [38;5;2m      227: [39m
     [38;5;2m4530[39m: [38;5;2m      228:       [void 0 0 = empty].[39m
     [38;5;2m4531[39m: [38;5;2m      229:       [void] with only one dimension [0] acts as a spacing element in the other[39m
     [38;5;2m4532[39m: [38;5;2m      230:       dimension. Negative size is treated as [0]. *)[39m
     [38;5;2m4533[39m: [38;5;2m      231: [39m
     [38;5;2m4534[39m: [38;5;2m      232:   (** {1:imgcomp Image composition}[39m
     [38;5;2m4535[39m: [38;5;2m      233: [39m
     [38;5;2m4536[39m: [38;5;2m      234:       Three basic composition modes allow construction of more complex images[39m
     [38;5;2m4537[39m: [38;5;2m      235:       from simpler ones.[39m
     [38;5;2m4538[39m: [38;5;2m      236: [39m
     [38;5;2m4539[39m: [38;5;2m      237:       Composition operators are left-associative and form a monoid with [void].[39m
     [38;5;2m4540[39m: [38;5;2m      238:       *)[39m
     [38;5;2m4541[39m: [38;5;2m      239: [39m
     [38;5;2m4542[39m: [38;5;2m      240:   val (<|>) : image -> image -> image[39m
     [38;5;2m4543[39m: [38;5;2m      241:   (**  [i1 <|> i2] is the horizontal combination of [i1] and [i2].[39m
     [38;5;2m4544[39m: [38;5;2m      242: [39m
     [38;5;2m4545[39m: [38;5;2m      243:       [width (i1 <|> i2) = width i1 + width i2][39m
     [38;5;2m4546[39m: [38;5;2m      244:       [height (i1 <|> i2) = max (height i1) (height i2)][39m
     [38;5;2m4547[39m: [38;5;2m      245: [39m
     [38;5;2m4548[39m: [38;5;2m      246:       Images are top-aligned. The missing region is implicitly filled with[39m
     [38;5;2m4549[39m: [38;5;2m      247:       {{!void}[void]}.[39m
     [38;5;2m4550[39m: [38;5;2m      248: [39m
     [38;5;2m4551[39m: [38;5;2m      249: {v[39m
     [38;5;2m4552[39m: [38;5;2m      250: [x] <|> [y] = [xy][39m
     [38;5;2m4553[39m: [38;5;2m      251:         [y]   [.y][39m
     [38;5;2m4554[39m: [38;5;2m      252: v}[39m
     [38;5;2m4555[39m: [38;5;2m      253: [39m
     [38;5;2m4556[39m: [38;5;2m      254:       where [.] denotes {{!void}[void]}. *)[39m
     [38;5;2m4557[39m: [38;5;2m      255: [39m
     [38;5;2m4558[39m: [38;5;2m      256:   val (<->) : image -> image -> image[39m
     [38;5;2m4559[39m: [38;5;2m      257:   (** [i1 <-> i2] is the vertical combination of [i1] and [i2].[39m
     [38;5;2m4560[39m: [38;5;2m      258: [39m
     [38;5;2m4561[39m: [38;5;2m      259:       [width (i1 <-> i2) = max (width i1) (width i2)][39m
     [38;5;2m4562[39m: [38;5;2m      260:       [height (i1 <-> i2) = height i1 + height i2][39m
     [38;5;2m4563[39m: [38;5;2m      261: [39m
     [38;5;2m4564[39m: [38;5;2m      262:       Images are left-aligned. The missing region is implicitly filled with[39m
     [38;5;2m4565[39m: [38;5;2m      263:       {{!void}[void]}.[39m
     [38;5;2m4566[39m: [38;5;2m      264: [39m
     [38;5;2m4567[39m: [38;5;2m      265: {v[39m
     [38;5;2m4568[39m: [38;5;2m      266: [xx] <-> [y] = [xx][39m
     [38;5;2m4569[39m: [38;5;2m      267:                [y.][39m
     [38;5;2m4570[39m: [38;5;2m      268: v}[39m
     [38;5;2m4571[39m: [38;5;2m      269:       *)[39m
     [38;5;2m4572[39m: [38;5;2m      270: [39m
     [38;5;2m4573[39m: [38;5;2m      271:   val (</>) : image -> image -> image[39m
     [38;5;2m4574[39m: [38;5;2m      272:   (** [i1 </> i2] is [i1] overlaid over [i2].[39m
     [38;5;2m4575[39m: [38;5;2m      273: [39m
     [38;5;2m4576[39m: [38;5;2m      274:       [width (i1 </> i2) = max (width i1) (width i2)][39m
     [38;5;2m4577[39m: [38;5;2m      275:       [height (i1 </> i2) = max (height i1) (height i2)][39m
     [38;5;2m4578[39m: [38;5;2m      276: [39m
     [38;5;2m4579[39m: [38;5;2m      277:       Images are top-left-aligned. In the region of their overlap, only the[39m
     [38;5;2m4580[39m: [38;5;2m      278:       {{!void}[void]} cells of [i1] show fragments of [i2].[39m
     [38;5;2m4581[39m: [38;5;2m      279: [39m
     [38;5;2m4582[39m: [38;5;2m      280: {v[39m
     [38;5;2m4583[39m: [38;5;2m      281: [x.x] </> [yyyy] = [xyxy][39m
     [38;5;2m4584[39m: [38;5;2m      282: v}[39m
     [38;5;2m4585[39m: [38;5;2m      283:       *)[39m
     [38;5;2m4586[39m: [38;5;2m      284: [39m
     [38;5;2m4587[39m: [38;5;2m      285:   (** {1:imgcrop Cropping and padding} *)[39m
     [38;5;2m4588[39m: [38;5;2m      286: [39m
     [38;5;2m4589[39m: [38;5;2m      287:   val hcrop : int -> int -> image -> image[39m
     [38;5;2m4590[39m: [38;5;2m      288:   (** [hcrop left right i] is [i] with [left] leftmost, and [right][39m
     [38;5;2m4591[39m: [38;5;2m      289:       rightmost columns missing. If [left + right >= width i] the result is[39m
     [38;5;2m4592[39m: [38;5;2m      290:       [empty].[39m
     [38;5;2m4593[39m: [38;5;2m      291: [39m
     [38;5;2m4594[39m: [38;5;2m      292:       If either [left] or [right] is negative, instead of being cropped, the[39m
     [38;5;2m4595[39m: [38;5;2m      293:       image is padded on that side.[39m
     [38;5;2m4596[39m: [38;5;2m      294: [39m
     [38;5;2m4597[39m: [38;5;2m      295:       For example:[39m
     [38;5;2m4598[39m: [38;5;2m      296:       {ul[39m
     [38;5;2m4599[39m: [38;5;2m      297:       {- [hcrop 0 1 [abc]] = [[ab]]}[39m
     [38;5;2m4600[39m: [38;5;2m      298:       {- [hcrop 1 1 [abc]] = [[b]]}[39m
     [38;5;2m4601[39m: [38;5;2m      299:       {- [hcrop (-1) 1 [abc]] = [void 1 1 <|> hcrop 0 1 [abc]] = [[.ab]]}[39m
     [38;5;2m4602[39m: [38;5;2m      300:       {- [hcrop 2 2 [abc]] = [empty]}} *)[39m
     [38;5;2m4603[39m: [38;5;2m      301: [39m
     [38;5;2m4604[39m: [38;5;2m      302:   val vcrop : int -> int -> image -> image[39m
     [38;5;2m4605[39m: [38;5;2m      303:   (** [vcrop top bottom i] is the vertical analogue to {{!hcrop}[hcrop]}. *)[39m
     [38;5;2m4606[39m: [38;5;2m      304: [39m
     [38;5;2m4607[39m: [38;5;2m      305:   val crop : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m4608[39m: [38;5;2m      306:   (** [crop ~l:left ~r:right ~t:top ~b:bottom i] is[39m
     [38;5;2m4609[39m: [38;5;2m      307:       [vcrop left right (hcrop top bottom) i].[39m
     [38;5;2m4610[39m: [38;5;2m      308: [39m
     [38;5;2m4611[39m: [38;5;2m      309:       Missing arguments default to [0]. *)[39m
     [38;5;2m4612[39m: [38;5;2m      310: [39m
     [38;5;2m4613[39m: [38;5;2m      311:   val hpad : int -> int -> image -> image[39m
     [38;5;2m4614[39m: [38;5;2m      312:   (** {{!hcrop}[hcrop]} with margins negated. *)[39m
     [38;5;2m4615[39m: [38;5;2m      313: [39m
     [38;5;2m4616[39m: [38;5;2m      314:   val vpad : int -> int -> image -> image[39m
     [38;5;2m4617[39m: [38;5;2m      315:   (** {{!vcrop}[vcrop]} with margins negated. *)[39m
     [38;5;2m4618[39m: [38;5;2m      316: [39m
     [38;5;2m4619[39m: [38;5;2m      317:   val pad : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m4620[39m: [38;5;2m      318:   (** {{!crop}[crop]} with margins negated. *)[39m
     [38;5;2m4621[39m: [38;5;2m      319: [39m
     [38;5;2m4622[39m: [38;5;2m      320: [39m
     [38;5;2m4623[39m: [38;5;2m      321:   (** {1 Additional combinators} *)[39m
     [38;5;2m4624[39m: [38;5;2m      322: [39m
     [38;5;2m4625[39m: [38;5;2m      323:   val hcat : image list -> image[39m
     [38;5;2m4626[39m: [38;5;2m      324:   (** [hcat xs] horizontally concatenates [xs]. See {{!(<|>)}beside}. *)[39m
     [38;5;2m4627[39m: [38;5;2m      325: [39m
     [38;5;2m4628[39m: [38;5;2m      326:   val vcat : image list -> image[39m
     [38;5;2m4629[39m: [38;5;2m      327:   (** [vcat xs] vertically concatenates [xs]. See {{!(<->)}above}. *)[39m
     [38;5;2m4630[39m: [38;5;2m      328: [39m
     [38;5;2m4631[39m: [38;5;2m      329:   val zcat : image list -> image[39m
     [38;5;2m4632[39m: [38;5;2m      330:   (** [zcat xs] overlays [xs]. See {{!(</>)}over}. *)[39m
     [38;5;2m4633[39m: [38;5;2m      331: [39m
     [38;5;2m4634[39m: [38;5;2m      332:   val tabulate : int -> int -> (int -> int -> image) -> image[39m
     [38;5;2m4635[39m: [38;5;2m      333:   (** [tabulate m n f] is the grid of values [f x y] with [x = 0..m-1][39m
     [38;5;2m4636[39m: [38;5;2m      334:       and [y = 0..n-1], where [x] grows to the right, and [y] growns down.[39m
     [38;5;2m4637[39m: [38;5;2m      335: [39m
     [38;5;2m4638[39m: [38;5;2m      336:       [f a y] is to the left of [f b y] if [a < b], and [f x a] is above [f x b][39m
     [38;5;2m4639[39m: [38;5;2m      337:       if [a < b], but the exact alignment is unspecified if the various [f x y][39m
     [38;5;2m4640[39m: [38;5;2m      338:       have different dimensions. *)[39m
     [38;5;2m4641[39m: [38;5;2m      339: [39m
     [38;5;2m4642[39m: [38;5;2m      340:   val hsnap : ?align:[ `Left | `Middle | `Right ] -> int -> image -> image[39m
     [38;5;2m4643[39m: [38;5;2m      341:   (** [hsnap ~align w i] is an image of width strictly [w] obtained by either[39m
     [38;5;2m4644[39m: [38;5;2m      342:       horizontally padding or cropping [i] and positioning it according to[39m
     [38;5;2m4645[39m: [38;5;2m      343:       [~align].[39m
     [38;5;2m4646[39m: [38;5;2m      344: [39m
     [38;5;2m4647[39m: [38;5;2m      345:       [~align] defaults to [`Middle]. *)[39m
     [38;5;2m4648[39m: [38;5;2m      346: [39m
     [38;5;2m4649[39m: [38;5;2m      347:   val vsnap : ?align:[ `Top | `Middle | `Bottom ] -> int -> image -> image[39m
     [38;5;2m4650[39m: [38;5;2m      348:   (** [vsnap ~align h i] is an image of height strictly [h] obtained by either[39m
     [38;5;2m4651[39m: [38;5;2m      349:       vertically padding or cropping [i] and positioning it according to[39m
     [38;5;2m4652[39m: [38;5;2m      350:       [~align].[39m
     [38;5;2m4653[39m: [38;5;2m      351: [39m
     [38;5;2m4654[39m: [38;5;2m      352:       [~align] defaults to [`Middle]. *)[39m
     [38;5;2m4655[39m: [38;5;2m      353: [39m
     [38;5;2m4656[39m: [38;5;2m      354:   (** {1 [Format] interoperability} *)[39m
     [38;5;2m4657[39m: [38;5;2m      355: [39m
     [38;5;2m4658[39m: [38;5;2m      356:   val strf : ?attr:attr -> ?w:int -> ('a, Format.formatter, unit, image) format4 -> 'a[39m
     [38;5;2m4659[39m: [38;5;2m      357:   (** [strf ?attr ?w:width format ...] pretty-prints like[39m
     [38;5;2m4660[39m: [38;5;2m      358:       [Format.asprintf format ...], but returns an [image].[39m
     [38;5;2m4661[39m: [38;5;2m      359: [39m
     [38;5;2m4662[39m: [38;5;2m      360:       [attr] is the (outermost) attribute. Defaults to {!A.empty}.[39m
     [38;5;2m4663[39m: [38;5;2m      361: [39m
     [38;5;2m4664[39m: [38;5;2m      362:       [width] is used to set the margin on the formatter. This is only a hint,[39m
     [38;5;2m4665[39m: [38;5;2m      363:       and does not guarantee the width of the result. Consult[39m
     [38;5;2m4666[39m: [38;5;2m      364:       {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#VALset_margin}[39m
     [38;5;2m4667[39m: [38;5;2m      365:       [Format.set_margin]} for details. Defaults to an unspecified, large[39m
     [38;5;2m4668[39m: [38;5;2m      366:       number.[39m
     [38;5;2m4669[39m: [38;5;2m      367: [39m
     [38;5;2m4670[39m: [38;5;2m      368:       @raise Invalid_argument if the printing process attempts to directly[39m
     [38;5;2m4671[39m: [38;5;2m      369:       output {{!ctrls}control characters}, by embedding them in [format] or a[39m
     [38;5;2m4672[39m: [38;5;2m      370:       string printed with the [%s] conversion, for example.[39m
     [38;5;2m4673[39m: [38;5;2m      371:       {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#fpp}[39m
     [38;5;2m4674[39m: [38;5;2m      372:       Formatted printing} is allowed. *)[39m
     [38;5;2m4675[39m: [38;5;2m      373: [39m
     [38;5;2m4676[39m: [38;5;2m      374:   val kstrf : ?attr:attr -> ?w:int -> (image -> 'a) -> ('b, Format.formatter, unit, 'a) format4 -> 'b[39m
     [38;5;2m4677[39m: [38;5;2m      375:   (** [kstrf ?attr ?w k format ...] is continuation-based [strf ?attr ?w format ...]. *)[39m
     [38;5;2m4678[39m: [38;5;2m      376: [39m
     [38;5;2m4679[39m: [38;5;2m      377:   val pp_attr : attr -> (Format.formatter -> 'a -> unit) -> Format.formatter -> 'a -> unit[39m
     [38;5;2m4680[39m: [38;5;2m      378:   (** [pp_attr a f] is a pretty-printer like [f], except its output is styled[39m
     [38;5;2m4681[39m: [38;5;2m      379:       with [a]. This applies only outside of any styling [f] itself might embed. *)[39m
     [38;5;2m4682[39m: [38;5;2m      380: end[39m
     [38;5;2m4683[39m: [38;5;2m      381: [39m
     [38;5;2m4684[39m: [38;5;2m      382: (** Operators, repeated. *)[39m
     [38;5;2m4685[39m: [38;5;2m      383: module Infix : sig[39m
     [38;5;2m4686[39m: [38;5;2m      384: [39m
     [38;5;2m4687[39m: [38;5;2m      385:   (** {2 [I]}[39m
     [38;5;2m4688[39m: [38;5;2m      386: [39m
     [38;5;2m4689[39m: [38;5;2m      387:       See {{!I}[I]}. *)[39m
     [38;5;2m4690[39m: [38;5;2m      388: [39m
     [38;5;2m4691[39m: [38;5;2m      389:   val (<->) : image -> image -> image[39m
     [38;5;2m4692[39m: [38;5;2m      390:   val (<|>) : image -> image -> image[39m
     [38;5;2m4693[39m: [38;5;2m      391:   val (</>) : image -> image -> image[39m
     [38;5;2m4694[39m: [38;5;2m      392: [39m
     [38;5;2m4695[39m: [38;5;2m      393:   (** {2 [A]}[39m
     [38;5;2m4696[39m: [38;5;2m      394: [39m
     [38;5;2m4697[39m: [38;5;2m      395:       See {{!A}[A]}. *)[39m
     [38;5;2m4698[39m: [38;5;2m      396: [39m
     [38;5;2m4699[39m: [38;5;2m      397:   val (++)  : attr -> attr -> attr[39m
     [38;5;2m4700[39m: [38;5;2m      398: end[39m
     [38;5;2m4701[39m: [38;5;2m      399: [39m
     [38;5;2m4702[39m: [38;5;2m      400: (** {1 Low-level interface}[39m
     [38;5;2m4703[39m: [38;5;2m      401: [39m
     [38;5;2m4704[39m: [38;5;2m      402:     You can ignore it, unless you are porting [Notty] to a new platform not[39m
     [38;5;2m4705[39m: [38;5;2m      403:     supported by the existing IO backends. *)[39m
     [38;5;2m4706[39m: [38;5;2m      404: [39m
     [38;5;2m4707[39m: [38;5;2m      405: (** Terminal capabilities.[39m
     [38;5;2m4708[39m: [38;5;2m      406: [39m
     [38;5;2m4709[39m: [38;5;2m      407:     This module describes how to output things so that a terminal understands[39m
     [38;5;2m4710[39m: [38;5;2m      408:     them. *)[39m
     [38;5;2m4711[39m: [38;5;2m      409: module Cap : sig[39m
     [38;5;2m4712[39m: [38;5;2m      410: [39m
     [38;5;2m4713[39m: [38;5;2m      411:   type t[39m
     [38;5;2m4714[39m: [38;5;2m      412:   (** A set of capabilities that distinguish terminals from one another.[39m
     [38;5;2m4715[39m: [38;5;2m      413: [39m
     [38;5;2m4716[39m: [38;5;2m      414:       A bundle of magic strings, really. *)[39m
     [38;5;2m4717[39m: [38;5;2m      415: [39m
     [38;5;2m4718[39m: [38;5;2m      416:   val ansi : t[39m
     [38;5;2m4719[39m: [38;5;2m      417:   (** The usual ANSI terminal, with colors, text styles and cursor[39m
     [38;5;2m4720[39m: [38;5;2m      418:       positioning. *)[39m
     [38;5;2m4721[39m: [38;5;2m      419: [39m
     [38;5;2m4722[39m: [38;5;2m      420:   val dumb : t[39m
     [38;5;2m4723[39m: [38;5;2m      421:   (** Pure text output. Text attributes are stripped and positioning is done[39m
     [38;5;2m4724[39m: [38;5;2m      422:       with the character [U+0020], SPACE. *)[39m
     [38;5;2m4725[39m: [38;5;2m      423: end[39m
     [38;5;2m4726[39m: [38;5;2m      424: [39m
     [38;5;2m4727[39m: [38;5;2m      425: (** Dump images to string buffers. *)[39m
     [38;5;2m4728[39m: [38;5;2m      426: module Render : sig[39m
     [38;5;2m4729[39m: [38;5;2m      427: [39m
     [38;5;2m4730[39m: [38;5;2m      428:   val to_buffer : Buffer.t -> Cap.t -> int * int -> int * int -> image -> unit[39m
     [38;5;2m4731[39m: [38;5;2m      429:   (** [to_buffer buf cap (x, y) (w, h) i] writes the string representation of[39m
     [38;5;2m4732[39m: [38;5;2m      430:       [i] to [buf], as interpreted by [cap].[39m
     [38;5;2m4733[39m: [38;5;2m      431: [39m
     [38;5;2m4734[39m: [38;5;2m      432:       It renders the [w * h] rectangle of [i], offset by [(x, y)] from the top[39m
     [38;5;2m4735[39m: [38;5;2m      433:       left. *)[39m
     [38;5;2m4736[39m: [38;5;2m      434: [39m
     [38;5;2m4737[39m: [38;5;2m      435:   val pp : Cap.t -> Format.formatter -> image -> unit[39m
     [38;5;2m4738[39m: [38;5;2m      436:   (** [pp cap ppf i] renders [i] to the pretty-printer [ppf].[39m
     [38;5;2m4739[39m: [38;5;2m      437: [39m
     [38;5;2m4740[39m: [38;5;2m      438:       {b Note} [pp] is generally meant for development and debugging. It tries[39m
     [38;5;2m4741[39m: [38;5;2m      439:       to be reasonable, but dedicated IO modules handle the actual output[39m
     [38;5;2m4742[39m: [38;5;2m      440:       better. *)[39m
     [38;5;2m4743[39m: [38;5;2m      441: [39m
     [38;5;2m4744[39m: [38;5;2m      442:   (**/**)[39m
     [38;5;2m4745[39m: [38;5;2m      443:   (* Toplevel. *)[39m
     [38;5;2m4746[39m: [38;5;2m      444:   val pp_image : Format.formatter -> image -> unit[39m
     [38;5;2m4747[39m: [38;5;2m      445:   val pp_attr : Format.formatter -> attr -> unit[39m
     [38;5;2m4748[39m: [38;5;2m      446:   (**/**)[39m
     [38;5;2m4749[39m: [38;5;2m      447: end[39m
     [38;5;2m4750[39m: [38;5;2m      448: [39m
     [38;5;2m4751[39m: [38;5;2m      449: (** Parse and decode escape sequences in character streams. *)[39m
     [38;5;2m4752[39m: [38;5;2m      450: module Unescape : sig[39m
     [38;5;2m4753[39m: [38;5;2m      451: [39m
     [38;5;2m4754[39m: [38;5;2m      452:   (** {1 Input events} *)[39m
     [38;5;2m4755[39m: [38;5;2m      453: [39m
     [38;5;2m4756[39m: [38;5;2m      454:   type special = [[39m
     [38;5;2m4757[39m: [38;5;2m      455:     `Escape[39m
     [38;5;2m4758[39m: [38;5;2m      456:   | `Enter[39m
     [38;5;2m4759[39m: [38;5;2m      457:   | `Tab[39m
     [38;5;2m4760[39m: [38;5;2m      458:   | `Backspace[39m
     [38;5;2m4761[39m: [38;5;2m      459:   | `Insert[39m
     [38;5;2m4762[39m: [38;5;2m      460:   | `Delete[39m
     [38;5;2m4763[39m: [38;5;2m      461:   | `Home | `End[39m
     [38;5;2m4764[39m: [38;5;2m      462:   | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m4765[39m: [38;5;2m      463:   | `Page of [ `Up | `Down ][39m
     [38;5;2m4766[39m: [38;5;2m      464:   | `Function of int[39m
     [38;5;2m4767[39m: [38;5;2m      465:   ][39m
     [38;5;2m4768[39m: [38;5;2m      466:   (** A selection of extra keys on the keyboard. *)[39m
     [38;5;2m4769[39m: [38;5;2m      467: [39m
     [38;5;2m4770[39m: [38;5;2m      468:   type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m4771[39m: [38;5;2m      469:   (** Mouse buttons. *)[39m
     [38;5;2m4772[39m: [38;5;2m      470: [39m
     [38;5;2m4773[39m: [38;5;2m      471:   type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m4774[39m: [38;5;2m      472:   (** Modifier state. *)[39m
     [38;5;2m4775[39m: [38;5;2m      473: [39m
     [38;5;2m4776[39m: [38;5;2m      474:   type key = [ special | `Uchar of Uchar.t | `ASCII of char ] * mods[39m
     [38;5;2m4777[39m: [38;5;2m      475:   (** Keypress event. *)[39m
     [38;5;2m4778[39m: [38;5;2m      476: [39m
     [38;5;2m4779[39m: [38;5;2m      477:   type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m4780[39m: [38;5;2m      478:   (** Mouse event. *)[39m
     [38;5;2m4781[39m: [38;5;2m      479: [39m
     [38;5;2m4782[39m: [38;5;2m      480:   type paste = [ `Start | `End ][39m
     [38;5;2m4783[39m: [38;5;2m      481:   (** Paste event. *)[39m
     [38;5;2m4784[39m: [38;5;2m      482: [39m
     [38;5;2m4785[39m: [38;5;2m      483:   type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m4786[39m: [38;5;2m      484:   (** Things that terminals say to applications.[39m
     [38;5;2m4787[39m: [38;5;2m      485: [39m
     [38;5;2m4788[39m: [38;5;2m      486:       {ul[39m
     [38;5;2m4789[39m: [38;5;2m      487:       {- [`Key (k, mods)] is keyboard input.[39m
     [38;5;2m4790[39m: [38;5;2m      488: [39m
     [38;5;2m4791[39m: [38;5;2m      489:          [k] is a {{!key}key}, one of:[39m
     [38;5;2m4792[39m: [38;5;2m      490:          {ul[39m
     [38;5;2m4793[39m: [38;5;2m      491:          {- [`ASCII c] where [c] is a [char] in the[39m
     [38;5;2m4794[39m: [38;5;2m      492:             {{: https://tools.ietf.org/html/rfc20}ASCII} range;}[39m
     [38;5;2m4795[39m: [38;5;2m      493:          {- [`Uchar u] where [u] is any other {{!Uchar.t}unicode character}; or}[39m
     [38;5;2m4796[39m: [38;5;2m      494:          {- a {{!special}special key}.}}[39m
     [38;5;2m4797[39m: [38;5;2m      495: [39m
     [38;5;2m4798[39m: [38;5;2m      496:          [`ASCII] and [`Uchar] together represent the textual part of the input.[39m
     [38;5;2m4799[39m: [38;5;2m      497:          These characters are guaranteed not to be {{!ctrls}control[39m
     [38;5;2m4800[39m: [38;5;2m      498:          characters}, and are safe to use when constructing images. ASCII is[39m
     [38;5;2m4801[39m: [38;5;2m      499:          separated from the rest of Unicode for convenient pattern-matching.[39m
     [38;5;2m4802[39m: [38;5;2m      500: [39m
     [38;5;2m4803[39m: [38;5;2m      501:          [mods] are the extra {{!mods}modifier keys}.[39m
     [38;5;2m4804[39m: [38;5;2m      502: [39m
     [38;5;2m4805[39m: [38;5;2m      503:          }[39m
     [38;5;2m4806[39m: [38;5;2m      504:       {- [`Mouse (event, (x, y), mods)] is mouse input.[39m
     [38;5;2m4807[39m: [38;5;2m      505: [39m
     [38;5;2m4808[39m: [38;5;2m      506:          [event] is the actual mouse event: {{!button}[button]} press, release,[39m
     [38;5;2m4809[39m: [38;5;2m      507:          or motion of the mouse with buttons depressed.[39m
     [38;5;2m4810[39m: [38;5;2m      508: [39m
     [38;5;2m4811[39m: [38;5;2m      509:          [(x, y)] are column and row position of the mouse. The origin is[39m
     [38;5;2m4812[39m: [38;5;2m      510:          [(0,0)], the upper-left corner.[39m
     [38;5;2m4813[39m: [38;5;2m      511: [39m
     [38;5;2m4814[39m: [38;5;2m      512:          {b Note} Every [`Press (`Left|`Middle|`Right)] generates a corresponding[39m
     [38;5;2m4815[39m: [38;5;2m      513:          [`Release], but there is no portable way to detect which button was[39m
     [38;5;2m4816[39m: [38;5;2m      514:          released. [`Scroll (`Up|`Down)] presses are not followed by releases.[39m
     [38;5;2m4817[39m: [38;5;2m      515: [39m
     [38;5;2m4818[39m: [38;5;2m      516:          }[39m
     [38;5;2m4819[39m: [38;5;2m      517:       {- [`Paste (`Start|`End)] are {e bracketed paste} events, signalling the[39m
     [38;5;2m4820[39m: [38;5;2m      518:          beginning and end of a sequence of events pasted into the terminal.[39m
     [38;5;2m4821[39m: [38;5;2m      519: [39m
     [38;5;2m4822[39m: [38;5;2m      520:          {b Note} This mechanism is useful, but not reliable. The pasted text[39m
     [38;5;2m4823[39m: [38;5;2m      521:          could contain spurious start-of-paste or end-of-paste markers, or they[39m
     [38;5;2m4824[39m: [38;5;2m      522:          could be entered by hand. }}[39m
     [38;5;2m4825[39m: [38;5;2m      523: [39m
     [38;5;2m4826[39m: [38;5;2m      524:       Terminal input protocols are historical cruft, and heavily overload the[39m
     [38;5;2m4827[39m: [38;5;2m      525:       ASCII range. For instance:[39m
     [38;5;2m4828[39m: [38;5;2m      526:       {ul[39m
     [38;5;2m4829[39m: [38;5;2m      527:       {- It is impossible to distinguish lower- and upper-case ASCII characters[39m
     [38;5;2m4830[39m: [38;5;2m      528:          if {b Ctrl} is pressed;}[39m
     [38;5;2m4831[39m: [38;5;2m      529:       {- several combinations of key-presses are aliased as special keys; and}[39m
     [38;5;2m4832[39m: [38;5;2m      530:       {- in a UTF-8 encoded stream, there is no representation for non-ASCII[39m
     [38;5;2m4833[39m: [38;5;2m      531:          characters with modifier keys.}}[39m
     [38;5;2m4834[39m: [38;5;2m      532: [39m
     [38;5;2m4835[39m: [38;5;2m      533:       This means that many values that inhabit the [event] type are impossible,[39m
     [38;5;2m4836[39m: [38;5;2m      534:       while some reflect multiple different user actions. Limitations include:[39m
     [38;5;2m4837[39m: [38;5;2m      535: [39m
     [38;5;2m4838[39m: [38;5;2m      536:       {ul[39m
     [38;5;2m4839[39m: [38;5;2m      537:       {- [`Shift] is reported only with special keys, and not all of them.}[39m
     [38;5;2m4840[39m: [38;5;2m      538:       {- [`Meta] and [`Control] are reported with mouse events, key events with[39m
     [38;5;2m4841[39m: [38;5;2m      539:          special keys, and key events with values in the ranges [0x40-0x5f][39m
     [38;5;2m4842[39m: [38;5;2m      540:          ([@] to [_]) and [0x60-0x7e] ([`] to [~]). If {b Ctrl} is pressed, the higher[39m
     [38;5;2m4843[39m: [38;5;2m      541:          range is mapped into the lower range.}[39m
     [38;5;2m4844[39m: [38;5;2m      542:       {- Terminals will variously under-report modifier key state.}}[39m
     [38;5;2m4845[39m: [38;5;2m      543: [39m
     [38;5;2m4846[39m: [38;5;2m      544:       Perform own experiments before relying on elaborate key combinations. *)[39m
     [38;5;2m4847[39m: [38;5;2m      545: [39m
     [38;5;2m4848[39m: [38;5;2m      546:   val uchar : [< `Uchar of Uchar.t | `ASCII of char ] -> Uchar.t[39m
     [38;5;2m4849[39m: [38;5;2m      547:   (** [uchar x] is the {!Uchar.t} corresponding to [x]. This operations merges[39m
     [38;5;2m4850[39m: [38;5;2m      548:       the ASCII and Unicode variants of {{!key}key}. *)[39m
     [38;5;2m4851[39m: [38;5;2m      549: [39m
     [38;5;2m4852[39m: [38;5;2m      550:   (** {1 Decoding filter}[39m
     [38;5;2m4853[39m: [38;5;2m      551: [39m
     [38;5;2m4854[39m: [38;5;2m      552:       Simple IO-less terminal input processor. It can be used for building[39m
     [38;5;2m4855[39m: [38;5;2m      553:       custom terminal input abstractions. *)[39m
     [38;5;2m4856[39m: [38;5;2m      554: [39m
     [38;5;2m4857[39m: [38;5;2m      555:   type t[39m
     [38;5;2m4858[39m: [38;5;2m      556:   (** Input decoding filter.[39m
     [38;5;2m4859[39m: [38;5;2m      557: [39m
     [38;5;2m4860[39m: [38;5;2m      558:       The filter should be {{!input}fed} strings, which it first decodes from[39m
     [38;5;2m4861[39m: [38;5;2m      559:       UTF-8, and then extracts the input events.[39m
     [38;5;2m4862[39m: [38;5;2m      560: [39m
     [38;5;2m4863[39m: [38;5;2m      561:       Malformed UTF-8 input bytes and unrecognized escape sequences are silently[39m
     [38;5;2m4864[39m: [38;5;2m      562:       discarded. *)[39m
     [38;5;2m4865[39m: [38;5;2m      563: [39m
     [38;5;2m4866[39m: [38;5;2m      564:   val create : unit -> t[39m
     [38;5;2m4867[39m: [38;5;2m      565:   (** [create ()] is a new, empty filter. *)[39m
     [38;5;2m4868[39m: [38;5;2m      566: [39m
     [38;5;2m4869[39m: [38;5;2m      567:   val input : t -> bytes -> int -> int -> unit[39m
     [38;5;2m4870[39m: [38;5;2m      568:   (** [input t buffer i len] feeds [len] bytes of [string] into [t], starting[39m
     [38;5;2m4871[39m: [38;5;2m      569:       from position [len].[39m
     [38;5;2m4872[39m: [38;5;2m      570: [39m
     [38;5;2m4873[39m: [38;5;2m      571:       [len = 0] signals the end of input.[39m
     [38;5;2m4874[39m: [38;5;2m      572: [39m
     [38;5;2m4875[39m: [38;5;2m      573:       [buffer] is immediately processed and can be reused after the call[39m
     [38;5;2m4876[39m: [38;5;2m      574:       returns. *)[39m
     [38;5;2m4877[39m: [38;5;2m      575: [39m
     [38;5;2m4878[39m: [38;5;2m      576:   val next : t -> [ event | `Await | `End ][39m
     [38;5;2m4879[39m: [38;5;2m      577:   (** [next t] is the next event in the filter's input stream:[39m
     [38;5;2m4880[39m: [38;5;2m      578: [39m
     [38;5;2m4881[39m: [38;5;2m      579:       {ul[39m
     [38;5;2m4882[39m: [38;5;2m      580:       {- [#event], an input {{!event}[event]}.}[39m
     [38;5;2m4883[39m: [38;5;2m      581:       {- [`Await] if the filter needs more {{!input}input}.}[39m
     [38;5;2m4884[39m: [38;5;2m      582:       {- [`End] if the input had ended.}} *)[39m
     [38;5;2m4885[39m: [38;5;2m      583: [39m
     [38;5;2m4886[39m: [38;5;2m      584:   val pending : t -> bool[39m
     [38;5;2m4887[39m: [38;5;2m      585:   (** [pending t] is [true] if a call to [next], without any intervening input,[39m
     [38;5;2m4888[39m: [38;5;2m      586:       would {e not} return [`Await]. *)[39m
     [38;5;2m4889[39m: [38;5;2m      587: [39m
     [38;5;2m4890[39m: [38;5;2m      588:   (** {1 Low-level parsing}[39m
     [38;5;2m4891[39m: [38;5;2m      589: [39m
     [38;5;2m4892[39m: [38;5;2m      590:       {b Warning} The parsing interface is subject to change.[39m
     [38;5;2m4893[39m: [38;5;2m      591: [39m
     [38;5;2m4894[39m: [38;5;2m      592:       Implementation of small parts of[39m
     [38;5;2m4895[39m: [38;5;2m      593:       {{: http://www.ecma-international.org/publications/standards/Ecma-035.htm}ECMA-35}[39m
     [38;5;2m4896[39m: [38;5;2m      594:       and[39m
     [38;5;2m4897[39m: [38;5;2m      595:       {{: http://www.ecma-international.org/publications/standards/Ecma-048.htm}ECMA-48},[39m
     [38;5;2m4898[39m: [38;5;2m      596:       as needed by terminal emulators in common use. *)[39m
     [38;5;2m4899[39m: [38;5;2m      597: [39m
     [38;5;2m4900[39m: [38;5;2m      598:   val decode : Uchar.t list -> event list[39m
     [38;5;2m4901[39m: [38;5;2m      599:   (** [decode us] are the events encoded by [us].[39m
     [38;5;2m4902[39m: [38;5;2m      600: [39m
     [38;5;2m4903[39m: [38;5;2m      601:       [us] are assumed to have been generated in a burst, and the end of the[39m
     [38;5;2m4904[39m: [38;5;2m      602:       list is taken to mean a pause.[39m
     [38;5;2m4905[39m: [38;5;2m      603:       Therefore, [decode us1 @ decode us2 <> decode (us1 @ us2)] if [us1] ends[39m
     [38;5;2m4906[39m: [38;5;2m      604:       with a partial escape sequence, including a lone [\x1b].[39m
     [38;5;2m4907[39m: [38;5;2m      605: [39m
     [38;5;2m4908[39m: [38;5;2m      606:       Unsupported escape sequences are silently discarded. *)[39m
     [38;5;2m4909[39m: [38;5;2m      607: end[39m
     [38;5;2m4910[39m: [38;5;2m      608: [39m
     [38;5;2m4911[39m: [38;5;2m      609: (**/**)[39m
     [38;5;2m4912[39m: [38;5;2m      610: (** {1 Private}[39m
     [38;5;2m4913[39m: [38;5;2m      611: [39m
     [38;5;2m4914[39m: [38;5;2m      612:     These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m4915[39m: [38;5;2m      613: [39m
     [38;5;2m4916[39m: [38;5;2m      614: module Operation : sig[39m
     [38;5;2m4917[39m: [38;5;2m      615:   type t[39m
     [38;5;2m4918[39m: [38;5;2m      616:   val of_image : (int * int) -> int * int -> image -> t list[39m
     [38;5;2m4919[39m: [38;5;2m      617: end[39m
     [38;5;2m4920[39m: [38;5;2m      618: [39m
     [38;5;2m4921[39m: [38;5;2m      619: module Tmachine : sig[39m
     [38;5;2m4922[39m: [38;5;2m      620: [39m
     [38;5;2m4923[39m: [38;5;2m      621:   type t[39m
     [38;5;2m4924[39m: [38;5;2m      622: [39m
     [38;5;2m4925[39m: [38;5;2m      623:   val create  : mouse:bool -> bpaste:bool -> Cap.t -> t[39m
     [38;5;2m4926[39m: [38;5;2m      624:   val release : t -> bool[39m
     [38;5;2m4927[39m: [38;5;2m      625:   val output  : t -> Buffer.t -> unit[39m
     [38;5;2m4928[39m: [38;5;2m      626: [39m
     [38;5;2m4929[39m: [38;5;2m      627:   val refresh  : t -> unit[39m
     [38;5;2m4930[39m: [38;5;2m      628:   val cursor   : t -> (int * int) option -> unit[39m
     [38;5;2m4931[39m: [38;5;2m      629:   val image    : t -> image -> unit[39m
     [38;5;2m4932[39m: [38;5;2m      630: [39m
     [38;5;2m4933[39m: [38;5;2m      631:   val set_size : t -> int * int -> unit[39m
     [38;5;2m4934[39m: [38;5;2m      632: [39m
     [38;5;2m4935[39m: [38;5;2m      633:   val size : t -> int * int[39m
     [38;5;2m4936[39m: [38;5;2m      634:   val dead : t -> bool[39m
     [38;5;2m4937[39m: [38;5;2m      635: end[39m
     [38;5;2m4938[39m: [38;5;2m      636: [39m
     [38;5;2m4939[39m: [38;5;2m      637: module Direct : sig[39m
     [38;5;2m4940[39m: [38;5;2m      638:   val move_cursor : Buffer.t -> Cap.t -> [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m4941[39m: [38;5;2m      639:   val show_cursor : Buffer.t -> Cap.t -> bool -> unit[39m
     [38;5;2m4942[39m: [38;5;2m      640: end[39m
     [38;5;2m4943[39m: [38;5;2m      641: (**/**)[39m
     [38;5;2m4944[39m: [38;5;2m      642: [39m
     [38;5;2m4945[39m: [38;5;2m      643: (** {1:basics Basics}[39m
     [38;5;2m4946[39m: [38;5;2m      644: [39m
     [38;5;2m4947[39m: [38;5;2m      645:     Print a red-on-black ["Wow!"] above its right-shifted copy:[39m
     [38;5;2m4948[39m: [38;5;2m      646: {[[39m
     [38;5;2m4949[39m: [38;5;2m      647: let wow = I.string A.(fg red ++ bg black) "Wow!" in[39m
     [38;5;2m4950[39m: [38;5;2m      648: I.(wow <-> (void 2 0 <|> wow)) |> Notty_unix.output_image[39m
     [38;5;2m4951[39m: [38;5;2m      649: ]}[39m
     [38;5;2m4952[39m: [38;5;2m      650: [39m
     [38;5;2m4953[39m: [38;5;2m      651:     {2:meaning The meaning of images}[39m
     [38;5;2m4954[39m: [38;5;2m      652: [39m
     [38;5;2m4955[39m: [38;5;2m      653:     An {{!image}[image]} value is a rectangle of styled character cells. It has a[39m
     [38;5;2m4956[39m: [38;5;2m      654:     width and height, but is not anchored to an origin. A single character with[39m
     [38;5;2m4957[39m: [38;5;2m      655:     associated display attributes, or a short fragment of text, are simple[39m
     [38;5;2m4958[39m: [38;5;2m      656:     examples of images.[39m
     [38;5;2m4959[39m: [38;5;2m      657: [39m
     [38;5;2m4960[39m: [38;5;2m      658:     Images are created by combining text fragments with {{!attributes}display[39m
     [38;5;2m4961[39m: [38;5;2m      659:     attributes}, and composed by placing them {{!I.(<|>)}beside} each other,[39m
     [38;5;2m4962[39m: [38;5;2m      660:     {{!I.(<->)}above} each other, and {{!I.(</>)}over} each other.[39m
     [38;5;2m4963[39m: [38;5;2m      661: [39m
     [38;5;2m4964[39m: [38;5;2m      662:     Once constructed, an image can be rendered, and only at that point it obtains[39m
     [38;5;2m4965[39m: [38;5;2m      663:     absolute placement.[39m
     [38;5;2m4966[39m: [38;5;2m      664: [39m
     [38;5;2m4967[39m: [38;5;2m      665:     Consult {{!I}[I]} for more details.[39m
     [38;5;2m4968[39m: [38;5;2m      666: [39m
     [38;5;2m4969[39m: [38;5;2m      667:     {2:attributes Display attributes}[39m
     [38;5;2m4970[39m: [38;5;2m      668: [39m
     [38;5;2m4971[39m: [38;5;2m      669:     {{!attr}[attr]} values describe the styling characteristics of fragments of[39m
     [38;5;2m4972[39m: [38;5;2m      670:     text.[39m
     [38;5;2m4973[39m: [38;5;2m      671: [39m
     [38;5;2m4974[39m: [38;5;2m      672:     They combine a foreground and a background {{!A.color}[color]} with a[39m
     [38;5;2m4975[39m: [38;5;2m      673:     set of {{!A.style}[styles]}. Either color can be {e unset}, which corresponds to[39m
     [38;5;2m4976[39m: [38;5;2m      674:     the terminal's default foreground (resp. background) color.[39m
     [38;5;2m4977[39m: [38;5;2m      675: [39m
     [38;5;2m4978[39m: [38;5;2m      676:     Attributes are used to construct primitive images.[39m
     [38;5;2m4979[39m: [38;5;2m      677: [39m
     [38;5;2m4980[39m: [38;5;2m      678:     Consult {{!A}[A]} for more details.[39m
     [38;5;2m4981[39m: [38;5;2m      679: [39m
     [38;5;2m4982[39m: [38;5;2m      680:     {2:ctrls Control characters}[39m
     [38;5;2m4983[39m: [38;5;2m      681: [39m
     [38;5;2m4984[39m: [38;5;2m      682:     These are taken to be characters in the ranges [0x00-0x1f] ({b C0}), [0x7f][39m
     [38;5;2m4985[39m: [38;5;2m      683:     (BACKSPACE), [0x80-0x9f] ({b C1}). This is the[39m
     [38;5;2m4986[39m: [38;5;2m      684:     {{: http://unicode.org/reports/tr44/#General_Category_Values}Unicode[39m
     [38;5;2m4987[39m: [38;5;2m      685:     general category} {b Cc}.[39m
     [38;5;2m4988[39m: [38;5;2m      686: [39m
     [38;5;2m4989[39m: [38;5;2m      687:     As control characters directly influence the cursor positioning, they[39m
     [38;5;2m4990[39m: [38;5;2m      688:     cannot be used to create images.[39m
     [38;5;2m4991[39m: [38;5;2m      689: [39m
     [38;5;2m4992[39m: [38;5;2m      690:     This, in particular, means that images cannot contain [U+000a] (NEWLINE).[39m
     [38;5;2m4993[39m: [38;5;2m      691: [39m
     [38;5;2m4994[39m: [38;5;2m      692:     {1:limitations Limitations}[39m
     [38;5;2m4995[39m: [38;5;2m      693: [39m
     [38;5;2m4996[39m: [38;5;2m      694:     [Notty] does not use Terminfo. If your terminal is particularly[39m
     [38;5;2m4997[39m: [38;5;2m      695:     idiosyncratic, things might fail to work. Get in touch with the author to[39m
     [38;5;2m4998[39m: [38;5;2m      696:     expand support.[39m
     [38;5;2m4999[39m: [38;5;2m      697: [39m
     [38;5;2m5000[39m: [38;5;2m      698:     [Notty] assumes that the terminal is using UTF-8 for input and output.[39m
     [38;5;2m5001[39m: [38;5;2m      699:     Things might break arbitrarily if this is not the case.[39m
     [38;5;2m5002[39m: [38;5;2m      700: [39m
     [38;5;2m5003[39m: [38;5;2m      701:     For performance considerations, consult the {{!perf}performance model}.[39m
     [38;5;2m5004[39m: [38;5;2m      702: [39m
     [38;5;2m5005[39m: [38;5;2m      703:     {2:cwidth Unicode vs. Text geometry}[39m
     [38;5;2m5006[39m: [38;5;2m      704: [39m
     [38;5;2m5007[39m: [38;5;2m      705:     [Notty] uses [Uucp.Break.tty_width_hint] to guess the width of text[39m
     [38;5;2m5008[39m: [38;5;2m      706:     fragments when computing geometry, and it suffers from the same[39m
     [38;5;2m5009[39m: [38;5;2m      707:     shortcomings:[39m
     [38;5;2m5010[39m: [38;5;2m      708: [39m
     [38;5;2m5011[39m: [38;5;2m      709:     {ul[39m
     [38;5;2m5012[39m: [38;5;2m      710:     {- Geometry in general works for alphabets and east Asian scripts, mostly[39m
     [38;5;2m5013[39m: [38;5;2m      711:         works for abjad scripts, and is a matter of luck for abugidas.}[39m
     [38;5;2m5014[39m: [38;5;2m      712:     {- East Asian scripts work better when in[39m
     [38;5;2m5015[39m: [38;5;2m      713:         {{:http://unicode.org/glossary/#normalization_form_c}NFC}.}[39m
     [38;5;2m5016[39m: [38;5;2m      714:     {- For proper emoji display, [Uucp] and the terminal have to agree on the[39m
     [38;5;2m5017[39m: [38;5;2m      715:        Unicode version.}}[39m
     [38;5;2m5018[39m: [38;5;2m      716: [39m
     [38;5;2m5019[39m: [38;5;2m      717:     When in doubt, see[39m
     [38;5;2m5020[39m: [38;5;2m      718:     {{: http://erratique.ch/software/uucp/doc/Uucp.Break.html#VALtty_width_hint}[39m
     [38;5;2m5021[39m: [38;5;2m      719:     [Uucp.Break.tty_width_hint]}.[39m
     [38;5;2m5022[39m: [38;5;2m      720: [39m
     [38;5;2m5023[39m: [38;5;2m      721:     Unicode has special interaction with {{!I.hcrop}horizontal cropping}:[39m
     [38;5;2m5024[39m: [38;5;2m      722:     {ul[39m
     [38;5;2m5025[39m: [38;5;2m      723:     {- Strings within images are cropped at {{:[39m
     [38;5;2m5026[39m: [38;5;2m      724:         http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries}grapheme[39m
     [38;5;2m5027[39m: [38;5;2m      725:         cluster} boundaries. This means that scalar value sequences that are[39m
     [38;5;2m5028[39m: [38;5;2m      726:         rendered combined, or overlaid, stay unbroken.}[39m
     [38;5;2m5029[39m: [38;5;2m      727:     {- When a crop splits a wide character in two, the remaining half is[39m
     [38;5;2m5030[39m: [38;5;2m      728:         replaced by [U+0020] (SPACE). Hence, character-cell-accurate cropping is[39m
     [38;5;2m5031[39m: [38;5;2m      729:         possible even in the presence of characters that horizontally occupy[39m
     [38;5;2m5032[39m: [38;5;2m      730:         more than one cell.}}[39m
     [38;5;2m5033[39m: [38;5;2m      731: [39m
     [38;5;2m5034[39m: [38;5;2m      732:     {1:examples Examples}[39m
     [38;5;2m5035[39m: [38;5;2m      733: [39m
     [38;5;2m5036[39m: [38;5;2m      734:     We assume a toplevel with [Notty] support ([#require "notty.top"]).[39m
     [38;5;2m5037[39m: [38;5;2m      735: [39m
     [38;5;2m5038[39m: [38;5;2m      736:     {2 Hello}[39m
     [38;5;2m5039[39m: [38;5;2m      737: [39m
     [38;5;2m5040[39m: [38;5;2m      738:     ["Rad!"] with default foreground and background:[39m
     [38;5;2m5041[39m: [38;5;2m      739: [39m
     [38;5;2m5042[39m: [38;5;2m      740:     {[I.string A.empty "Rad!"]}[39m
     [38;5;2m5043[39m: [38;5;2m      741: [39m
     [38;5;2m5044[39m: [38;5;2m      742:     Everything has to start somewhere.[39m
     [38;5;2m5045[39m: [38;5;2m      743: [39m
     [38;5;2m5046[39m: [38;5;2m      744:     {2 Colors}[39m
     [38;5;2m5047[39m: [38;5;2m      745: [39m
     [38;5;2m5048[39m: [38;5;2m      746:     ["Rad!"] in rad letters:[39m
     [38;5;2m5049[39m: [38;5;2m      747: [39m
     [38;5;2m5050[39m: [38;5;2m      748:     {[I.string A.(fg lightred) "Rad!"]}[39m
     [38;5;2m5051[39m: [38;5;2m      749: [39m
     [38;5;2m5052[39m: [38;5;2m      750:     {2 Padding and spacing}[39m
     [38;5;2m5053[39m: [38;5;2m      751: [39m
     [38;5;2m5054[39m: [38;5;2m      752: {[[39m
     [38;5;2m5055[39m: [38;5;2m      753: let a1 = A.(fg lightwhite ++ bg red)[39m
     [38;5;2m5056[39m: [38;5;2m      754: and a2 = A.(fg red)[39m
     [38;5;2m5057[39m: [38;5;2m      755: ]}[39m
     [38;5;2m5058[39m: [38;5;2m      756: [39m
     [38;5;2m5059[39m: [38;5;2m      757:     ["Rad"] and [" stuff!"] in different colors:[39m
     [38;5;2m5060[39m: [38;5;2m      758: [39m
     [38;5;2m5061[39m: [38;5;2m      759:     {[I.(string a1 "Rad" <|> string a2 " stuff!")]}[39m
     [38;5;2m5062[39m: [38;5;2m      760: [39m
     [38;5;2m5063[39m: [38;5;2m      761:     The second word hanging on a line below:[39m
     [38;5;2m5064[39m: [38;5;2m      762: [39m
     [38;5;2m5065[39m: [38;5;2m      763:     {[I.(string a1 "Rad" <|> (string a2 "stuff!" |> vpad 1 0))]}[39m
     [38;5;2m5066[39m: [38;5;2m      764: [39m
     [38;5;2m5067[39m: [38;5;2m      765:     {2 More geometry}[39m
     [38;5;2m5068[39m: [38;5;2m      766: [39m
     [38;5;2m5069[39m: [38;5;2m      767:     Sierpinski triangle:[39m
     [38;5;2m5070[39m: [38;5;2m      768: [39m
     [38;5;2m5071[39m: [38;5;2m      769: {[[39m
     [38;5;2m5072[39m: [38;5;2m      770: let square = "\xe2\x96\xaa"[39m
     [38;5;2m5073[39m: [38;5;2m      771: [39m
     [38;5;2m5074[39m: [38;5;2m      772: let rec sierp n =[39m
     [38;5;2m5075[39m: [38;5;2m      773:   if n > 1 then[39m
     [38;5;2m5076[39m: [38;5;2m      774:     let ss = sierp (pred n) in I.(ss <-> (ss <|> ss))[39m
     [38;5;2m5077[39m: [38;5;2m      775:   else I.(string A.(fg magenta) square |> hpad 1 0)[39m
     [38;5;2m5078[39m: [38;5;2m      776: ]}[39m
     [38;5;2m5079[39m: [38;5;2m      777: [39m
     [38;5;2m5080[39m: [38;5;2m      778:     {[sierp 8]}[39m
     [38;5;2m5081[39m: [38;5;2m      779: [39m
     [38;5;2m5082[39m: [38;5;2m      780:     A triangle overlaid over its shifted copy:[39m
     [38;5;2m5083[39m: [38;5;2m      781: [39m
     [38;5;2m5084[39m: [38;5;2m      782:     {[let s = sierp 6 in I.(s </> vpad 1 0 s)]}[39m
     [38;5;2m5085[39m: [38;5;2m      783: [39m
     [38;5;2m5086[39m: [38;5;2m      784:     Blinkenlights:[39m
     [38;5;2m5087[39m: [38;5;2m      785: [39m
     [38;5;2m5088[39m: [38;5;2m      786: {[[39m
     [38;5;2m5089[39m: [38;5;2m      787: let rad n color =[39m
     [38;5;2m5090[39m: [38;5;2m      788:   let a1 = A.fg color in[39m
     [38;5;2m5091[39m: [38;5;2m      789:   let a2 = A.(st blink ++ a1) in[39m
     [38;5;2m5092[39m: [38;5;2m      790:   I.((string a2 "Rad" |> hpad n 0) <->[39m
     [38;5;2m5093[39m: [38;5;2m      791:      (string a1 "(⌐■_■)" |> hpad (n + 7) 0))[39m
     [38;5;2m5094[39m: [38;5;2m      792: [39m
     [38;5;2m5095[39m: [38;5;2m      793: let colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m5096[39m: [38;5;2m      794: ]}[39m
     [38;5;2m5097[39m: [38;5;2m      795: [39m
     [38;5;2m5098[39m: [38;5;2m      796: {[[39m
     [38;5;2m5099[39m: [38;5;2m      797: colors |> List.mapi I.(fun i c -> rad i c |> pad ~t:i ~l:(2 * i))[39m
     [38;5;2m5100[39m: [38;5;2m      798:        |> I.zcat[39m
     [38;5;2m5101[39m: [38;5;2m      799: ]}[39m
     [38;5;2m5102[39m: [38;5;2m      800: [39m
     [38;5;2m5103[39m: [38;5;2m      801:     {b Note} Usage of {{!A.blink}[blink]} might be regulated by law in some[39m
     [38;5;2m5104[39m: [38;5;2m      802:     jurisdictions.[39m
     [38;5;2m5105[39m: [38;5;2m      803: [39m
     [38;5;2m5106[39m: [38;5;2m      804:     {2 Pretty-printing}[39m
     [38;5;2m5107[39m: [38;5;2m      805: [39m
     [38;5;2m5108[39m: [38;5;2m      806:     Images can be pretty-printed into:[39m
     [38;5;2m5109[39m: [38;5;2m      807: [39m
     [38;5;2m5110[39m: [38;5;2m      808:     {[I.strf "(%d)" 42]}[39m
     [38;5;2m5111[39m: [38;5;2m      809: [39m
     [38;5;2m5112[39m: [38;5;2m      810:     Attributes can be applied to the entire format string, or by decorating[39m
     [38;5;2m5113[39m: [38;5;2m      811:     {e user-defined printers} that are supplied with [%a] conversions:[39m
     [38;5;2m5114[39m: [38;5;2m      812: [39m
     [38;5;2m5115[39m: [38;5;2m      813:     {[let pp = Format.pp_print_int]}[39m
     [38;5;2m5116[39m: [38;5;2m      814: [39m
     [38;5;2m5117[39m: [38;5;2m      815:     {[I.strf ~attr:A.(fg lightwhite) "(%a)" (I.pp_attr A.(fg green) pp) 42]}[39m
     [38;5;2m5118[39m: [38;5;2m      816: [39m
     [38;5;2m5119[39m: [38;5;2m      817:     {2 Now with output}[39m
     [38;5;2m5120[39m: [38;5;2m      818: [39m
     [38;5;2m5121[39m: [38;5;2m      819:     The core module has no real IO. Examples above are simple [image]-valued[39m
     [38;5;2m5122[39m: [38;5;2m      820:     expressions, displayed by the pretty-printer that is installed by the[39m
     [38;5;2m5123[39m: [38;5;2m      821:     toplevel support. Self-contained programs need a separate IO module:[39m
     [38;5;2m5124[39m: [38;5;2m      822: [39m
     [38;5;2m5125[39m: [38;5;2m      823:     {[#require "notty.unix"]}[39m
     [38;5;2m5126[39m: [38;5;2m      824: [39m
     [38;5;2m5127[39m: [38;5;2m      825:     {[sierp 8 |> Notty_unix.output_image]}[39m
     [38;5;2m5128[39m: [38;5;2m      826: [39m
     [38;5;2m5129[39m: [38;5;2m      827:     (Note the difference in cropping behavior.)[39m
     [38;5;2m5130[39m: [38;5;2m      828: [39m
     [38;5;2m5131[39m: [38;5;2m      829:     Computations can be adapted to the current terminal size. A line can stretch[39m
     [38;5;2m5132[39m: [38;5;2m      830:     end-to-end:[39m
     [38;5;2m5133[39m: [38;5;2m      831: [39m
     [38;5;2m5134[39m: [38;5;2m      832: {[[39m
     [38;5;2m5135[39m: [38;5;2m      833: Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m5136[39m: [38;5;2m      834:   let i1 = I.string A.(fg green) "very"[39m
     [38;5;2m5137[39m: [38;5;2m      835:   and i2 = I.string A.(fg yellow) "melon" in[39m
     [38;5;2m5138[39m: [38;5;2m      836:   I.(i1 <|> void (w - width i1 - width i2) 1 <|> i2)[39m
     [38;5;2m5139[39m: [38;5;2m      837: ]}[39m
     [38;5;2m5140[39m: [38;5;2m      838: [39m
     [38;5;2m5141[39m: [38;5;2m      839:     The largest triangle that horizontally fits into the terminal:[39m
     [38;5;2m5142[39m: [38;5;2m      840: [39m
     [38;5;2m5143[39m: [38;5;2m      841: {[[39m
     [38;5;2m5144[39m: [38;5;2m      842: Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m5145[39m: [38;5;2m      843:   let steps = int_of_float ((log (float w)) /. log 2.) in[39m
     [38;5;2m5146[39m: [38;5;2m      844:   sierp steps |> I.vpad 0 1[39m
     [38;5;2m5147[39m: [38;5;2m      845: ]}[39m
     [38;5;2m5148[39m: [38;5;2m      846: [39m
     [38;5;2m5149[39m: [38;5;2m      847:     {2 Simple interaction}[39m
     [38;5;2m5150[39m: [38;5;2m      848: [39m
     [38;5;2m5151[39m: [38;5;2m      849:     Interactive Sierpinski:[39m
     [38;5;2m5152[39m: [38;5;2m      850: [39m
     [38;5;2m5153[39m: [38;5;2m      851:     {[open Notty_unix]}[39m
     [38;5;2m5154[39m: [38;5;2m      852: [39m
     [38;5;2m5155[39m: [38;5;2m      853: {[[39m
     [38;5;2m5156[39m: [38;5;2m      854: let img (double, n) =[39m
     [38;5;2m5157[39m: [38;5;2m      855:   let s = sierp n in[39m
     [38;5;2m5158[39m: [38;5;2m      856:   if double then I.(s </> vpad 1 0 s) else s[39m
     [38;5;2m5159[39m: [38;5;2m      857: in[39m
     [38;5;2m5160[39m: [38;5;2m      858: let rec update t state = Term.image t (img state); loop t state[39m
     [38;5;2m5161[39m: [38;5;2m      859: and loop t (double, n as state) =[39m
     [38;5;2m5162[39m: [38;5;2m      860:   match Term.event t with[39m
     [38;5;2m5163[39m: [38;5;2m      861:   | `Key (`Enter,_)        -> ()[39m
     [38;5;2m5164[39m: [38;5;2m      862:   | `Key (`Arrow `Left,_)  -> update t (double, max 1 (n - 1))[39m
     [38;5;2m5165[39m: [38;5;2m      863:   | `Key (`Arrow `Right,_) -> update t (double, min 8 (n + 1))[39m
     [38;5;2m5166[39m: [38;5;2m      864:   | `Key (`ASCII ' ', _)   -> update t (not double, n)[39m
     [38;5;2m5167[39m: [38;5;2m      865:   | `Resize _              -> update t state[39m
     [38;5;2m5168[39m: [38;5;2m      866:   | _                      -> loop t state[39m
     [38;5;2m5169[39m: [38;5;2m      867: in[39m
     [38;5;2m5170[39m: [38;5;2m      868: let t = Term.create ()[39m
     [38;5;2m5171[39m: [38;5;2m      869: in[39m
     [38;5;2m5172[39m: [38;5;2m      870: update t (false, 1); Term.release t[39m
     [38;5;2m5173[39m: [38;5;2m      871: ]}[39m
     [38;5;2m5174[39m: [38;5;2m      872: [39m
     [38;5;2m5175[39m: [38;5;2m      873:     The program uses a fullscreen {{!Notty_unix.Term}terminal} and loops reading[39m
     [38;5;2m5176[39m: [38;5;2m      874:     the {{!Notty_unix.Term.event}input}. LEFT and RIGHT control the iteration[39m
     [38;5;2m5177[39m: [38;5;2m      875:     count, and SPACE toggles double-drawing. Resizing the window causes a[39m
     [38;5;2m5178[39m: [38;5;2m      876:     redraw. When the loop exits on ENTER, the terminal is[39m
     [38;5;2m5179[39m: [38;5;2m      877:     {{!Notty_unix.Term.release}cleaned up}.[39m
     [38;5;2m5180[39m: [38;5;2m      878: [39m
     [38;5;2m5181[39m: [38;5;2m      879:     {1:perf Performance model}[39m
     [38;5;2m5182[39m: [38;5;2m      880: [39m
     [38;5;2m5183[39m: [38;5;2m      881:     This section is only relevant if using [Notty] becomes your bottleneck.[39m
     [38;5;2m5184[39m: [38;5;2m      882: [39m
     [38;5;2m5185[39m: [38;5;2m      883:     {b TL;DR} Shared sub-expressions do not share work, so operators stick with[39m
     [38;5;2m5186[39m: [38;5;2m      884:     you.[39m
     [38;5;2m5187[39m: [38;5;2m      885: [39m
     [38;5;2m5188[39m: [38;5;2m      886:     The main performance parameter is {e image complexity}. This roughly[39m
     [38;5;2m5189[39m: [38;5;2m      887:     corresponds to the number of image {{!I.imgcomp}composition} and[39m
     [38;5;2m5190[39m: [38;5;2m      888:     {{!I.imgcrop}cropping} operators in the fully expanded [image] term,[39m
     [38;5;2m5191[39m: [38;5;2m      889:     {b ignoring all sharing}.[39m
     [38;5;2m5192[39m: [38;5;2m      890: [39m
     [38;5;2m5193[39m: [38;5;2m      891:     Outline numbers:[39m
     [38;5;2m5194[39m: [38;5;2m      892: [39m
     [38;5;2m5195[39m: [38;5;2m      893:     {ul[39m
     [38;5;2m5196[39m: [38;5;2m      894:     {- Highly complex images can be rendered and pushed out to a full-screen[39m
     [38;5;2m5197[39m: [38;5;2m      895:        terminal more than 1000 times per second.}[39m
     [38;5;2m5198[39m: [38;5;2m      896:     {- With more realistic images, this number is closer to 30,000.}[39m
     [38;5;2m5199[39m: [38;5;2m      897:     {- Input processing is somewhere around 50MB/s.}}[39m
     [38;5;2m5200[39m: [38;5;2m      898: [39m
     [38;5;2m5201[39m: [38;5;2m      899: [39m
     [38;5;2m5202[39m: [38;5;2m      900:     Image complexity [cplx] of an image [i] is:[39m
     [38;5;2m5203[39m: [38;5;2m      901:     {ul[39m
     [38;5;2m5204[39m: [38;5;2m      902:     {- For a {{!I.imgprims}primitive} [i], [cplx i = 1].}[39m
     [38;5;2m5205[39m: [38;5;2m      903:     {- For a {{!I.imgcomp}composition} operator [op],[39m
     [38;5;2m5206[39m: [38;5;2m      904:        [cplx (op i1 i2) = 1 + cplx i1 + cplx i2].}[39m
     [38;5;2m5207[39m: [38;5;2m      905:     {- For a {{!I.imgcomp}crop} [cr],[39m
     [38;5;2m5208[39m: [38;5;2m      906:        [cplx (cr i1) = 1 + cplx i1 - k], where [k] is the combined complexity of[39m
     [38;5;2m5209[39m: [38;5;2m      907:        all the {e maximal} sub-terms that do not contribute to the output.}}[39m
     [38;5;2m5210[39m: [38;5;2m      908: [39m
     [38;5;2m5211[39m: [38;5;2m      909:     For example (assuming an image [i]):[39m
     [38;5;2m5212[39m: [38;5;2m      910: [39m
     [38;5;2m5213[39m: [38;5;2m      911: {[[39m
     [38;5;2m5214[39m: [38;5;2m      912:   let img1 = I.((i <|> i) <-> (i <|> i))[39m
     [38;5;2m5215[39m: [38;5;2m      913:   let img2 = I.(let x = i <|> i in x <-> x)[39m
     [38;5;2m5216[39m: [38;5;2m      914:   let img3 = I.(((i <|> i) <|> i) <|> i)[39m
     [38;5;2m5217[39m: [38;5;2m      915: ]}[39m
     [38;5;2m5218[39m: [38;5;2m      916: [39m
     [38;5;2m5219[39m: [38;5;2m      917:     Complexity of each of these is [4 * cplx i + 3]. This might be surprising[39m
     [38;5;2m5220[39m: [38;5;2m      918:     for [img2].[39m
     [38;5;2m5221[39m: [38;5;2m      919: [39m
     [38;5;2m5222[39m: [38;5;2m      920:     If [width i = 1], [cplx (hcrop 1 0 img1) = 3 + 2 * cplx i], and[39m
     [38;5;2m5223[39m: [38;5;2m      921:     [cplx (hcrop 2 0 img3) = 2 + 2 * cplx i].[39m
     [38;5;2m5224[39m: [38;5;2m      922: [39m
     [38;5;2m5225[39m: [38;5;2m      923:     While [Notty] strives to be accommodating to all usage scenarios, these are[39m
     [38;5;2m5226[39m: [38;5;2m      924:     the things to keep in mind if the rendering becomes slow:[39m
     [38;5;2m5227[39m: [38;5;2m      925: [39m
     [38;5;2m5228[39m: [38;5;2m      926:     {ol[39m
     [38;5;2m5229[39m: [38;5;2m      927:     {- Image composition is cheap.[39m
     [38;5;2m5230[39m: [38;5;2m      928: [39m
     [38;5;2m5231[39m: [38;5;2m      929:        Combining images performs a negligible amount of computation.[39m
     [38;5;2m5232[39m: [38;5;2m      930: [39m
     [38;5;2m5233[39m: [38;5;2m      931:        Constructing primitive images that contain scalar values outside of the[39m
     [38;5;2m5234[39m: [38;5;2m      932:        ASCII range does a little more work upfront and is worth holding onto.[39m
     [38;5;2m5235[39m: [38;5;2m      933: [39m
     [38;5;2m5236[39m: [38;5;2m      934:        }[39m
     [38;5;2m5237[39m: [38;5;2m      935:     {- {{!Render}Rendering} depends on image complexity.[39m
     [38;5;2m5238[39m: [38;5;2m      936: [39m
     [38;5;2m5239[39m: [38;5;2m      937:        As a consequence, this real-world example of wrapping renders in time[39m
     [38;5;2m5240[39m: [38;5;2m      938:        O(n{^ 2}) in the number of lines:[39m
     [38;5;2m5241[39m: [38;5;2m      939: [39m
     [38;5;2m5242[39m: [38;5;2m      940: {[[39m
     [38;5;2m5243[39m: [38;5;2m      941: let wrap1 width img =[39m
     [38;5;2m5244[39m: [38;5;2m      942:   let rec go img = img ::[39m
     [38;5;2m5245[39m: [38;5;2m      943:     if I.width img > width then go (I.hcrop width 0 img) else [][39m
     [38;5;2m5246[39m: [38;5;2m      944:   in go img |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m5247[39m: [38;5;2m      945: ]}[39m
     [38;5;2m5248[39m: [38;5;2m      946: [39m
     [38;5;2m5249[39m: [38;5;2m      947:        Although [crop] is applied only [lines] times, the image complexity of[39m
     [38;5;2m5250[39m: [38;5;2m      948:        each line depends on the number of preceding lines.[39m
     [38;5;2m5251[39m: [38;5;2m      949: [39m
     [38;5;2m5252[39m: [38;5;2m      950:        An O(n) version does not iterate [crop]:[39m
     [38;5;2m5253[39m: [38;5;2m      951: [39m
     [38;5;2m5254[39m: [38;5;2m      952: {[[39m
     [38;5;2m5255[39m: [38;5;2m      953: let wrap2 width img =[39m
     [38;5;2m5256[39m: [38;5;2m      954:   let rec go off = I.hcrop off 0 img ::[39m
     [38;5;2m5257[39m: [38;5;2m      955:     if I.width img - off > width then go (off + width) else [][39m
     [38;5;2m5258[39m: [38;5;2m      956:   in go 0 |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m5259[39m: [38;5;2m      957: ]}[39m
     [38;5;2m5260[39m: [38;5;2m      958:        }[39m
     [38;5;2m5261[39m: [38;5;2m      959:     {- Rendering depends on the {e output} dimensions, but not on the {e image}[39m
     [38;5;2m5262[39m: [38;5;2m      960:        dimensions.[39m
     [38;5;2m5263[39m: [38;5;2m      961: [39m
     [38;5;2m5264[39m: [38;5;2m      962:        Rendering an image to [w * h] implicitly crops it to its leftmost [w][39m
     [38;5;2m5265[39m: [38;5;2m      963:        columns and topmost [h] rows. While [w] and [h] will have an impact on[39m
     [38;5;2m5266[39m: [38;5;2m      964:        the rendering performance, the complexity of the (cropped) image tends to[39m
     [38;5;2m5267[39m: [38;5;2m      965:        be more important.}}[39m
     [38;5;2m5268[39m: [38;5;2m      966: [39m
     [38;5;2m5269[39m: [38;5;2m      967: *)[39m
     [38;5;2m5270[39m: [38;5;2mAdded regular file ../notty/src/notty_top.ml:[39m
     [38;5;2m5271[39m: [38;5;2m        1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m5272[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m5273[39m: [38;5;2m        3: [39m
     [38;5;2m5274[39m: [38;5;2m        4: (* Force linking with Notty for e.g. Omod. *)[39m
     [38;5;2m5275[39m: [38;5;2m        5: let _ = Sys.opaque_identity Notty.I.empty[39m
     [38;5;2m5276[39m: [38;5;2m        6: [39m
     [38;5;2m5277[39m: [38;5;2m        7: #if OCAML_VERSION >= (4,14,0)[39m
     [38;5;2m5278[39m: [38;5;2m        8: let _ = Toploop.use_silently Format.err_formatter (Toploop.File "notty_top_init.ml")[39m
     [38;5;2m5279[39m: [38;5;2m        9: #else[39m
     [38;5;2m5280[39m: [38;5;2m       10: let _ = Toploop.use_silently Format.err_formatter "notty_top_init.ml"[39m
     [38;5;2m5281[39m: [38;5;2m       11: #endif[39m
     [38;5;2m5282[39m: [38;5;2mAdded regular file ../notty/src/notty_top_init.ml:[39m
     [38;5;2m5283[39m: [38;5;2m        1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m5284[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m5285[39m: [38;5;2m        3: [39m
     [38;5;2m5286[39m: [38;5;2m        4: open Notty;;[39m
     [38;5;2m5287[39m: [38;5;2m        5: [39m
     [38;5;2m5288[39m: [38;5;2m        6: #install_printer Notty.Render.pp_image;;[39m
     [38;5;2m5289[39m: [38;5;2m        7: #install_printer Notty.Render.pp_attr;;[39m
     [38;5;2m5290[39m: [38;5;2mAdded regular file ../notty/src-lwt/dune:[39m
     [38;5;2m5291[39m: [38;5;2m        1: (library[39m
     [38;5;2m5292[39m: [38;5;2m        2:   (public_name notty.lwt)[39m
     [38;5;2m5293[39m: [38;5;2m        3:   (synopsis "Notty Lwt+Unix IO")[39m
     [38;5;2m5294[39m: [38;5;2m        4:   (name notty_lwt)[39m
     [38;5;2m5295[39m: [38;5;2m        5:   (wrapped false)[39m
     [38;5;2m5296[39m: [38;5;2m        6:   (optional)[39m
     [38;5;2m5297[39m: [38;5;2m        7:   (libraries notty notty.unix lwt lwt.unix))[39m
     [38;5;2m5298[39m: [38;5;2mAdded regular file ../notty/src-lwt/notty_lwt.ml:[39m
     [38;5;2m5299[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m5300[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m5301[39m: [38;5;2m        3: [39m
     [38;5;2m5302[39m: [38;5;2m        4: open Lwt.Infix[39m
     [38;5;2m5303[39m: [38;5;2m        5: [39m
     [38;5;2m5304[39m: [38;5;2m        6: open Notty[39m
     [38;5;2m5305[39m: [38;5;2m        7: open Notty_unix[39m
     [38;5;2m5306[39m: [38;5;2m        8: open Private[39m
     [38;5;2m5307[39m: [38;5;2m        9: [39m
     [38;5;2m5308[39m: [38;5;2m       10: [39m
     [38;5;2m5309[39m: [38;5;2m       11: type ('a, 'b) either = Left of 'a | Right of 'b[39m
     [38;5;2m5310[39m: [38;5;2m       12: let left  x = Left x[39m
     [38;5;2m5311[39m: [38;5;2m       13: let right y = Right y[39m
     [38;5;2m5312[39m: [38;5;2m       14: [39m
     [38;5;2m5313[39m: [38;5;2m       15: let (</>) a b = Lwt.pick [(a >|= left); (b >|= right)][39m
     [38;5;2m5314[39m: [38;5;2m       16: let (<??>) a b = (a >|= left) <?> (b >|= right)[39m
     [38;5;2m5315[39m: [38;5;2m       17: [39m
     [38;5;2m5316[39m: [38;5;2m       18: let whenopt f = function Some x -> f x | None -> ()[39m
     [38;5;2m5317[39m: [38;5;2m       19: [39m
     [38;5;2m5318[39m: [38;5;2m       20: let rec write fd buf off = function[39m
     [38;5;2m5319[39m: [38;5;2m       21:   | 0 -> Lwt.return_unit[39m
     [38;5;2m5320[39m: [38;5;2m       22:   | n -> Lwt_unix.write fd buf off n >>= fun w -> write fd buf (off + w) (n - w)[39m
     [38;5;2m5321[39m: [38;5;2m       23: [39m
     [38;5;2m5322[39m: [38;5;2m       24: module Lwt_condition = struct[39m
     [38;5;2m5323[39m: [38;5;2m       25: [39m
     [38;5;2m5324[39m: [38;5;2m       26:   include Lwt_condition[39m
     [38;5;2m5325[39m: [38;5;2m       27: [39m
     [38;5;2m5326[39m: [38;5;2m       28:   let map f c =[39m
     [38;5;2m5327[39m: [38;5;2m       29:     let d = create () in[39m
     [38;5;2m5328[39m: [38;5;2m       30:     let rec go () = wait c >>= fun x -> broadcast d (f x); go ()[39m
     [38;5;2m5329[39m: [38;5;2m       31:     in (Lwt.async go; d)[39m
     [38;5;2m5330[39m: [38;5;2m       32: [39m
     [38;5;2m5331[39m: [38;5;2m       33:   let unburst ~t c =[39m
     [38;5;2m5332[39m: [38;5;2m       34:     let d = create () in[39m
     [38;5;2m5333[39m: [38;5;2m       35:     let rec delay x = Lwt_unix.sleep t </> wait c >>= function[39m
     [38;5;2m5334[39m: [38;5;2m       36:       | Left () -> broadcast d x; start ()[39m
     [38;5;2m5335[39m: [38;5;2m       37:       | Right x -> delay x[39m
     [38;5;2m5336[39m: [38;5;2m       38:     and start () = wait c >>= delay in[39m
     [38;5;2m5337[39m: [38;5;2m       39:     Lwt.async start; d[39m
     [38;5;2m5338[39m: [38;5;2m       40: end[39m
     [38;5;2m5339[39m: [38;5;2m       41: [39m
     [38;5;2m5340[39m: [38;5;2m       42: module Term = struct[39m
     [38;5;2m5341[39m: [38;5;2m       43: [39m
     [38;5;2m5342[39m: [38;5;2m       44:   let winches = lazy ([39m
     [38;5;2m5343[39m: [38;5;2m       45:     let c = Lwt_condition.create () in[39m
     [38;5;2m5344[39m: [38;5;2m       46:     let `Revert _ = set_winch_handler (Lwt_condition.broadcast c) in[39m
     [38;5;2m5345[39m: [38;5;2m       47:     c[39m
     [38;5;2m5346[39m: [38;5;2m       48:   )[39m
     [38;5;2m5347[39m: [38;5;2m       49: [39m
     [38;5;2m5348[39m: [38;5;2m       50:   let winch () = Lazy.force winches |> Lwt_condition.wait[39m
     [38;5;2m5349[39m: [38;5;2m       51: [39m
     [38;5;2m5350[39m: [38;5;2m       52:   let bsize = 1024[39m
     [38;5;2m5351[39m: [38;5;2m       53: [39m
     [38;5;2m5352[39m: [38;5;2m       54:   let input_stream ~nosig fd stop =[39m
     [38;5;2m5353[39m: [38;5;2m       55:     let `Revert f = setup_tcattr ~nosig (Lwt_unix.unix_file_descr fd) in[39m
     [38;5;2m5354[39m: [38;5;2m       56:     let stream =[39m
     [38;5;2m5355[39m: [38;5;2m       57:       let flt  = Unescape.create ()[39m
     [38;5;2m5356[39m: [38;5;2m       58:       and ibuf = Bytes.create bsize in[39m
     [38;5;2m5357[39m: [38;5;2m       59:       let rec next () =[39m
     [38;5;2m5358[39m: [38;5;2m       60:         match Unescape.next flt with[39m
     [38;5;2m5359[39m: [38;5;2m       61:         | #Unescape.event as r -> Lwt.return_some r[39m
     [38;5;2m5360[39m: [38;5;2m       62:         | `End   -> Lwt.return_none[39m
     [38;5;2m5361[39m: [38;5;2m       63:         | `Await ->[39m
     [38;5;2m5362[39m: [38;5;2m       64:             (Lwt_unix.read fd ibuf 0 bsize <??> stop) >>= function[39m
     [38;5;2m5363[39m: [38;5;2m       65:               | Left n  -> Unescape.input flt ibuf 0 n; next ()[39m
     [38;5;2m5364[39m: [38;5;2m       66:               | Right _ -> Lwt.return_none[39m
     [38;5;2m5365[39m: [38;5;2m       67:       in Lwt_stream.from next in[39m
     [38;5;2m5366[39m: [38;5;2m       68:     Lwt.async (fun () -> Lwt_stream.closed stream >|= f);[39m
     [38;5;2m5367[39m: [38;5;2m       69:     stream[39m
     [38;5;2m5368[39m: [38;5;2m       70: [39m
     [38;5;2m5369[39m: [38;5;2m       71:   type t = {[39m
     [38;5;2m5370[39m: [38;5;2m       72:     ochan  : Lwt_io.output_channel[39m
     [38;5;2m5371[39m: [38;5;2m       73:   ; trm    : Tmachine.t[39m
     [38;5;2m5372[39m: [38;5;2m       74:   ; buf    : Buffer.t[39m
     [38;5;2m5373[39m: [38;5;2m       75:   ; fds    : Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m5374[39m: [38;5;2m       76:   ; events : [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m5375[39m: [38;5;2m       77:   ; stop   : (unit -> unit)[39m
     [38;5;2m5376[39m: [38;5;2m       78:   }[39m
     [38;5;2m5377[39m: [38;5;2m       79: [39m
     [38;5;2m5378[39m: [38;5;2m       80:   let write t =[39m
     [38;5;2m5379[39m: [38;5;2m       81:     Tmachine.output t.trm t.buf;[39m
     [38;5;2m5380[39m: [38;5;2m       82:     let out = Buffer.contents t.buf in (* XXX There goes 0copy. :/ *)[39m
     [38;5;2m5381[39m: [38;5;2m       83:     Buffer.clear t.buf; Lwt_io.write t.ochan out[39m
     [38;5;2m5382[39m: [38;5;2m       84: [39m
     [38;5;2m5383[39m: [38;5;2m       85:   let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m5384[39m: [38;5;2m       86:   let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m5385[39m: [38;5;2m       87:   let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m5386[39m: [38;5;2m       88:   let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m5387[39m: [38;5;2m       89:   let size t         = Tmachine.size t.trm[39m
     [38;5;2m5388[39m: [38;5;2m       90: [39m
     [38;5;2m5389[39m: [38;5;2m       91:   let release t =[39m
     [38;5;2m5390[39m: [38;5;2m       92:     if Tmachine.release t.trm then[39m
     [38;5;2m5391[39m: [38;5;2m       93:       ( t.stop (); write t >>= fun () -> Lwt_io.flush t.ochan )[39m
     [38;5;2m5392[39m: [38;5;2m       94:     else Lwt.return_unit[39m
     [38;5;2m5393[39m: [38;5;2m       95: [39m
     [38;5;2m5394[39m: [38;5;2m       96:   let resizef fd stop on_resize =[39m
     [38;5;2m5395[39m: [38;5;2m       97:     if Unix.isatty fd then[39m
     [38;5;2m5396[39m: [38;5;2m       98:       let rcond = Lwt_condition.([39m
     [38;5;2m5397[39m: [38;5;2m       99:         Lazy.force winches |> unburst ~t:0.1 |> map (fun () -> winsize fd)) in[39m
     [38;5;2m5398[39m: [38;5;2m      100:       let rec monitor () =[39m
     [38;5;2m5399[39m: [38;5;2m      101:         (Lwt_condition.wait rcond <?> stop) >>= function[39m
     [38;5;2m5400[39m: [38;5;2m      102:           | Some dim -> on_resize dim; monitor ()[39m
     [38;5;2m5401[39m: [38;5;2m      103:           | None     -> Lwt.return_unit in[39m
     [38;5;2m5402[39m: [38;5;2m      104:       Lwt.async monitor;[39m
     [38;5;2m5403[39m: [38;5;2m      105:       Lwt_stream.from (fun () -> Lwt_condition.wait rcond <?> stop)[39m
     [38;5;2m5404[39m: [38;5;2m      106:         |> Lwt_stream.map (fun dim -> `Resize dim)[39m
     [38;5;2m5405[39m: [38;5;2m      107:     else Lwt_stream.of_list [][39m
     [38;5;2m5406[39m: [38;5;2m      108: [39m
     [38;5;2m5407[39m: [38;5;2m      109:   let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m5408[39m: [38;5;2m      110:              ?(input=Lwt_unix.stdin) ?(output=Lwt_unix.stdout) () =[39m
     [38;5;2m5409[39m: [38;5;2m      111:     let fd = Lwt_unix.unix_file_descr output in[39m
     [38;5;2m5410[39m: [38;5;2m      112:     let (stop, stopw) = Lwt.wait () in[39m
     [38;5;2m5411[39m: [38;5;2m      113:     let rec t = lazy {[39m
     [38;5;2m5412[39m: [38;5;2m      114:         trm    = Tmachine.create ~mouse ~bpaste (cap_for_fd fd)[39m
     [38;5;2m5413[39m: [38;5;2m      115:       ; ochan  = Lwt_io.(of_fd ~mode:output) output[39m
     [38;5;2m5414[39m: [38;5;2m      116:       ; buf    = Buffer.create 4096[39m
     [38;5;2m5415[39m: [38;5;2m      117:       ; fds    = (input, output)[39m
     [38;5;2m5416[39m: [38;5;2m      118:       ; stop   = (fun () -> Lwt.wakeup stopw None)[39m
     [38;5;2m5417[39m: [38;5;2m      119:       ; events = Lwt_stream.choose[39m
     [38;5;2m5418[39m: [38;5;2m      120:           [ input_stream ~nosig input stop[39m
     [38;5;2m5419[39m: [38;5;2m      121:           ; resizef fd stop @@ fun dim ->[39m
     [38;5;2m5420[39m: [38;5;2m      122:               let t = Lazy.force t in Buffer.reset t.buf; set_size t dim ][39m
     [38;5;2m5421[39m: [38;5;2m      123:       } in[39m
     [38;5;2m5422[39m: [38;5;2m      124:     let t = Lazy.force t in[39m
     [38;5;2m5423[39m: [38;5;2m      125:     winsize fd |> whenopt (set_size t);[39m
     [38;5;2m5424[39m: [38;5;2m      126:     Lwt.async (fun () -> write t); (* XXX async? *)[39m
     [38;5;2m5425[39m: [38;5;2m      127:     if dispose then Lwt_main.at_exit (fun () -> release t);[39m
     [38;5;2m5426[39m: [38;5;2m      128:     t[39m
     [38;5;2m5427[39m: [38;5;2m      129: [39m
     [38;5;2m5428[39m: [38;5;2m      130:   let events t = t.events[39m
     [38;5;2m5429[39m: [38;5;2m      131:   let fds    t = t.fds[39m
     [38;5;2m5430[39m: [38;5;2m      132: end[39m
     [38;5;2m5431[39m: [38;5;2m      133: [39m
     [38;5;2m5432[39m: [38;5;2m      134: let winsize fd = winsize (Lwt_unix.unix_file_descr fd)[39m
     [38;5;2m5433[39m: [38;5;2m      135: [39m
     [38;5;2m5434[39m: [38;5;2m      136: include Gen_output (struct[39m
     [38;5;2m5435[39m: [38;5;2m      137:   type fd = Lwt_unix.file_descr and k = unit Lwt.t[39m
     [38;5;2m5436[39m: [38;5;2m      138:   let (def, to_fd) = Lwt_unix.(stdout, unix_file_descr)[39m
     [38;5;2m5437[39m: [38;5;2m      139:   and write fd buf = Buffer.(write fd (to_bytes buf) 0 (length buf))[39m
     [38;5;2m5438[39m: [38;5;2m      140: end)[39m
     [38;5;2m5439[39m: [38;5;2mAdded regular file ../notty/src-lwt/notty_lwt.mli:[39m
     [38;5;2m5440[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m5441[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m5442[39m: [38;5;2m        3: [39m
     [38;5;2m5443[39m: [38;5;2m        4: (** [Notty] IO [Lwt] on [Unix].[39m
     [38;5;2m5444[39m: [38;5;2m        5: [39m
     [38;5;2m5445[39m: [38;5;2m        6:     This is an IO module for {!Notty}.[39m
     [38;5;2m5446[39m: [38;5;2m        7: [39m
     [38;5;2m5447[39m: [38;5;2m        8:     It mirrors {!Notty_unix} and the corresponding operations behave[39m
     [38;5;2m5448[39m: [38;5;2m        9:     analogously. Consult its documentation for more info.[39m
     [38;5;2m5449[39m: [38;5;2m       10: [39m
     [38;5;2m5450[39m: [38;5;2m       11:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m5451[39m: [38;5;2m       12: [39m
     [38;5;2m5452[39m: [38;5;2m       13: open Notty[39m
     [38;5;2m5453[39m: [38;5;2m       14: [39m
     [38;5;2m5454[39m: [38;5;2m       15: (** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m5455[39m: [38;5;2m       16: [39m
     [38;5;2m5456[39m: [38;5;2m       17: (** Terminal IO with concurrency.[39m
     [38;5;2m5457[39m: [38;5;2m       18: [39m
     [38;5;2m5458[39m: [38;5;2m       19:     For more info, see {!Notty_unix.Term}. *)[39m
     [38;5;2m5459[39m: [38;5;2m       20: module Term : sig[39m
     [38;5;2m5460[39m: [38;5;2m       21: [39m
     [38;5;2m5461[39m: [38;5;2m       22:   type t[39m
     [38;5;2m5462[39m: [38;5;2m       23: [39m
     [38;5;2m5463[39m: [38;5;2m       24:   (** {1 Construction and destruction} *)[39m
     [38;5;2m5464[39m: [38;5;2m       25: [39m
     [38;5;2m5465[39m: [38;5;2m       26:   val create : ?dispose:bool ->[39m
     [38;5;2m5466[39m: [38;5;2m       27:                ?nosig:bool ->[39m
     [38;5;2m5467[39m: [38;5;2m       28:                ?mouse:bool ->[39m
     [38;5;2m5468[39m: [38;5;2m       29:                ?bpaste:bool ->[39m
     [38;5;2m5469[39m: [38;5;2m       30:                ?input:Lwt_unix.file_descr ->[39m
     [38;5;2m5470[39m: [38;5;2m       31:                ?output:Lwt_unix.file_descr ->[39m
     [38;5;2m5471[39m: [38;5;2m       32:                unit -> t[39m
     [38;5;2m5472[39m: [38;5;2m       33:   (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a new[39m
     [38;5;2m5473[39m: [38;5;2m       34:       {{!t}terminal}.[39m
     [38;5;2m5474[39m: [38;5;2m       35: [39m
     [38;5;2m5475[39m: [38;5;2m       36:       {b Note} [~dispose] arranges for the terminal to be disposed of at the end[39m
     [38;5;2m5476[39m: [38;5;2m       37:       of the [Lwt] main loop, and not at process exit.[39m
     [38;5;2m5477[39m: [38;5;2m       38: [39m
     [38;5;2m5478[39m: [38;5;2m       39:       See {!Notty_unix.Term.create}. *)[39m
     [38;5;2m5479[39m: [38;5;2m       40: [39m
     [38;5;2m5480[39m: [38;5;2m       41:   val release : t -> unit Lwt.t[39m
     [38;5;2m5481[39m: [38;5;2m       42: [39m
     [38;5;2m5482[39m: [38;5;2m       43:   (** {1 Commands} *)[39m
     [38;5;2m5483[39m: [38;5;2m       44: [39m
     [38;5;2m5484[39m: [38;5;2m       45:   val image   : t -> image -> unit Lwt.t[39m
     [38;5;2m5485[39m: [38;5;2m       46:   val refresh : t -> unit Lwt.t[39m
     [38;5;2m5486[39m: [38;5;2m       47:   val cursor  : t -> (int * int) option -> unit Lwt.t[39m
     [38;5;2m5487[39m: [38;5;2m       48: [39m
     [38;5;2m5488[39m: [38;5;2m       49:   (** {1 Events} *)[39m
     [38;5;2m5489[39m: [38;5;2m       50: [39m
     [38;5;2m5490[39m: [38;5;2m       51:   val events : t -> [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m5491[39m: [38;5;2m       52:   (** [events t] is the stream of incoming events.[39m
     [38;5;2m5492[39m: [38;5;2m       53: [39m
     [38;5;2m5493[39m: [38;5;2m       54:       Invoking {{!release}release} will terminate this stream.[39m
     [38;5;2m5494[39m: [38;5;2m       55: [39m
     [38;5;2m5495[39m: [38;5;2m       56:       Events are:[39m
     [38;5;2m5496[39m: [38;5;2m       57:       {ul[39m
     [38;5;2m5497[39m: [38;5;2m       58:       {- [#Unescape.event], an {{!Notty.Unescape.event}event} from the input[39m
     [38;5;2m5498[39m: [38;5;2m       59:          fd; or}[39m
     [38;5;2m5499[39m: [38;5;2m       60:       {- [`Resize (cols, rows)] whenever the terminal size changes.}}[39m
     [38;5;2m5500[39m: [38;5;2m       61: [39m
     [38;5;2m5501[39m: [38;5;2m       62:       {b Note} This stream is unique; for the same [t], [events t] always[39m
     [38;5;2m5502[39m: [38;5;2m       63:       returns the same stream. *)[39m
     [38;5;2m5503[39m: [38;5;2m       64: [39m
     [38;5;2m5504[39m: [38;5;2m       65:   (** {1 Properties} *)[39m
     [38;5;2m5505[39m: [38;5;2m       66: [39m
     [38;5;2m5506[39m: [38;5;2m       67:   val size : t -> int * int[39m
     [38;5;2m5507[39m: [38;5;2m       68: [39m
     [38;5;2m5508[39m: [38;5;2m       69:   val fds : t -> Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m5509[39m: [38;5;2m       70: [39m
     [38;5;2m5510[39m: [38;5;2m       71:   (** {1 Window size change notifications}[39m
     [38;5;2m5511[39m: [38;5;2m       72: [39m
     [38;5;2m5512[39m: [38;5;2m       73:       {{!create}Creating} a terminal will install a [SIGWINCH] handler.[39m
     [38;5;2m5513[39m: [38;5;2m       74:       The handler should not be replaced directly. This API allows the user to[39m
     [38;5;2m5514[39m: [38;5;2m       75:       monitor deliveries of the signal.[39m
     [38;5;2m5515[39m: [38;5;2m       76: [39m
     [38;5;2m5516[39m: [38;5;2m       77:       See {!Notty_unix.Term.Winch}. *)[39m
     [38;5;2m5517[39m: [38;5;2m       78: [39m
     [38;5;2m5518[39m: [38;5;2m       79:   val winch : unit -> unit Lwt.t[39m
     [38;5;2m5519[39m: [38;5;2m       80:   (** [winch ()] is a thread completing after the next [SIGWINCH]. A single[39m
     [38;5;2m5520[39m: [38;5;2m       81:       signal delivery will cause the completion of all waiting [winch] threads. *)[39m
     [38;5;2m5521[39m: [38;5;2m       82: end[39m
     [38;5;2m5522[39m: [38;5;2m       83: [39m
     [38;5;2m5523[39m: [38;5;2m       84: (** {1:inline Inline output} *)[39m
     [38;5;2m5524[39m: [38;5;2m       85: [39m
     [38;5;2m5525[39m: [38;5;2m       86: val winsize : Lwt_unix.file_descr -> (int * int) option[39m
     [38;5;2m5526[39m: [38;5;2m       87: [39m
     [38;5;2m5527[39m: [38;5;2m       88: val eol : image -> image[39m
     [38;5;2m5528[39m: [38;5;2m       89: [39m
     [38;5;2m5529[39m: [38;5;2m       90: val output_image :[39m
     [38;5;2m5530[39m: [38;5;2m       91:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> image -> unit Lwt.t[39m
     [38;5;2m5531[39m: [38;5;2m       92: [39m
     [38;5;2m5532[39m: [38;5;2m       93: val output_image_size :[39m
     [38;5;2m5533[39m: [38;5;2m       94:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> (int * int -> image) -> unit Lwt.t[39m
     [38;5;2m5534[39m: [38;5;2m       95: [39m
     [38;5;2m5535[39m: [38;5;2m       96: val show_cursor : ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> bool -> unit Lwt.t[39m
     [38;5;2m5536[39m: [38;5;2m       97: [39m
     [38;5;2m5537[39m: [38;5;2m       98: val move_cursor :[39m
     [38;5;2m5538[39m: [38;5;2m       99:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr ->[39m
     [38;5;2m5539[39m: [38;5;2m      100:     [ `Home | `By of int * int | `To of int * int ] -> unit Lwt.t[39m
     [38;5;2m5540[39m: [38;5;2mAdded regular file ../notty/src-unix/dune:[39m
     [38;5;2m5541[39m: [38;5;2m        1: (library[39m
     [38;5;2m5542[39m: [38;5;2m        2:   (public_name notty.unix)[39m
     [38;5;2m5543[39m: [38;5;2m        3:   (synopsis "Notty Unix IO")[39m
     [38;5;2m5544[39m: [38;5;2m        4:   (name notty_unix)[39m
     [38;5;2m5545[39m: [38;5;2m        5:   (wrapped false)[39m
     [38;5;2m5546[39m: [38;5;2m        6:   (c_names winsize)[39m
     [38;5;2m5547[39m: [38;5;2m        7:   (c_flags (-Wall -Wextra -O3))[39m
     [38;5;2m5548[39m: [38;5;2m        8:   (optional)[39m
     [38;5;2m5549[39m: [38;5;2m        9:   (libraries notty unix))[39m
     [38;5;2m5550[39m: [38;5;2m       10: [39m
     [38;5;2m5551[39m: [38;5;2m       11: (include_subdirs unqualified)[39m
     [38;5;2m5552[39m: [38;5;2mAdded regular file ../notty/src-unix/native/winsize.c:[39m
     [38;5;2m5553[39m: [38;5;2m        1: #include <sys/ioctl.h>[39m
     [38;5;2m5554[39m: [38;5;2m        2: #include <signal.h>[39m
     [38;5;2m5555[39m: [38;5;2m        3: #include <caml/mlvalues.h>[39m
     [38;5;2m5556[39m: [38;5;2m        4: [39m
     [38;5;2m5557[39m: [38;5;2m        5: CAMLprim value caml_notty_winsize (value vfd) {[39m
     [38;5;2m5558[39m: [38;5;2m        6:   int fd = Int_val (vfd);[39m
     [38;5;2m5559[39m: [38;5;2m        7:   struct winsize w;[39m
     [38;5;2m5560[39m: [38;5;2m        8:   if (ioctl (fd, TIOCGWINSZ, &w) >= 0)[39m
     [38;5;2m5561[39m: [38;5;2m        9:     return Val_int ((w.ws_col << 16) + ((w.ws_row & 0x7fff) << 1));[39m
     [38;5;2m5562[39m: [38;5;2m       10:   return Val_int (0);[39m
     [38;5;2m5563[39m: [38;5;2m       11: }[39m
     [38;5;2m5564[39m: [38;5;2m       12: [39m
     [38;5;2m5565[39m: [38;5;2m       13: #define __unit() value unit __attribute__((unused))[39m
     [38;5;2m5566[39m: [38;5;2m       14: [39m
     [38;5;2m5567[39m: [38;5;2m       15: CAMLprim value caml_notty_winch_number (__unit()) {[39m
     [38;5;2m5568[39m: [38;5;2m       16:   return Val_int (SIGWINCH);[39m
     [38;5;2m5569[39m: [38;5;2m       17: }[39m
     [38;5;2m5570[39m: [38;5;2mAdded regular file ../notty/src-unix/notty_unix.ml:[39m
     [38;5;2m5571[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m5572[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m5573[39m: [38;5;2m        3: [39m
     [38;5;2m5574[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m5575[39m: [38;5;2m        5: [39m
     [38;5;2m5576[39m: [38;5;2m        6: external c_winsize : Unix.file_descr -> int = "caml_notty_winsize" [@@noalloc][39m
     [38;5;2m5577[39m: [38;5;2m        7: external winch_number : unit -> int = "caml_notty_winch_number" [@@noalloc][39m
     [38;5;2m5578[39m: [38;5;2m        8: [39m
     [38;5;2m5579[39m: [38;5;2m        9: let iter f = function Some x -> f x | _ -> ()[39m
     [38;5;2m5580[39m: [38;5;2m       10: let value x = function Some a -> a | _ -> x[39m
     [38;5;2m5581[39m: [38;5;2m       11: [39m
     [38;5;2m5582[39m: [38;5;2m       12: let winsize fd = match c_winsize fd with[39m
     [38;5;2m5583[39m: [38;5;2m       13:   | 0  -> None[39m
     [38;5;2m5584[39m: [38;5;2m       14:   | wh -> Some (wh lsr 16, wh lsr 1 land 0x7fff)[39m
     [38;5;2m5585[39m: [38;5;2m       15: [39m
     [38;5;2m5586[39m: [38;5;2m       16: module Private = struct[39m
     [38;5;2m5587[39m: [38;5;2m       17: [39m
     [38;5;2m5588[39m: [38;5;2m       18:   let once f = let v = lazy (f ()) in fun () -> Lazy.force v[39m
     [38;5;2m5589[39m: [38;5;2m       19: [39m
     [38;5;2m5590[39m: [38;5;2m       20:   let cap_for_fd =[39m
     [38;5;2m5591[39m: [38;5;2m       21:     let open Cap in[39m
     [38;5;2m5592[39m: [38;5;2m       22:     match Sys.getenv "TERM" with[39m
     [38;5;2m5593[39m: [38;5;2m       23:     | exception Not_found -> fun _ -> dumb[39m
     [38;5;2m5594[39m: [38;5;2m       24:     | (""|"dumb")         -> fun _ -> dumb[39m
     [38;5;2m5595[39m: [38;5;2m       25:     | _                   -> fun fd -> if Unix.isatty fd then ansi else dumb[39m
     [38;5;2m5596[39m: [38;5;2m       26: [39m
     [38;5;2m5597[39m: [38;5;2m       27:   let setup_tcattr ~nosig fd =[39m
     [38;5;2m5598[39m: [38;5;2m       28:     let open Unix in try[39m
     [38;5;2m5599[39m: [38;5;2m       29:       let tc = tcgetattr fd in[39m
     [38;5;2m5600[39m: [38;5;2m       30:       let tc1 = { tc with c_icanon = false; c_echo = false } in[39m
     [38;5;2m5601[39m: [38;5;2m       31:       tcsetattr fd TCSANOW[39m
     [38;5;2m5602[39m: [38;5;2m       32:         ( if nosig then { tc1 with c_isig = false; c_ixon = false } else tc1 );[39m
     [38;5;2m5603[39m: [38;5;2m       33:       `Revert (once @@ fun _ -> tcsetattr fd TCSANOW tc)[39m
     [38;5;2m5604[39m: [38;5;2m       34:     with Unix_error (ENOTTY, _, _) -> `Revert ignore[39m
     [38;5;2m5605[39m: [38;5;2m       35: [39m
     [38;5;2m5606[39m: [38;5;2m       36:   let set_winch_handler f =[39m
     [38;5;2m5607[39m: [38;5;2m       37:     let signum = winch_number () in[39m
     [38;5;2m5608[39m: [38;5;2m       38:     let old_hdl = Sys.(signal signum (Signal_handle (fun _ -> f ()))) in[39m
     [38;5;2m5609[39m: [38;5;2m       39:     `Revert (once @@ fun () -> Sys.set_signal signum old_hdl)[39m
     [38;5;2m5610[39m: [38;5;2m       40: [39m
     [38;5;2m5611[39m: [38;5;2m       41:   module Gen_output (O : sig[39m
     [38;5;2m5612[39m: [38;5;2m       42:     type fd[39m
     [38;5;2m5613[39m: [38;5;2m       43:     type k[39m
     [38;5;2m5614[39m: [38;5;2m       44:     val def   : fd[39m
     [38;5;2m5615[39m: [38;5;2m       45:     val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m5616[39m: [38;5;2m       46:     val write : fd -> Buffer.t -> k[39m
     [38;5;2m5617[39m: [38;5;2m       47:   end) = struct[39m
     [38;5;2m5618[39m: [38;5;2m       48: [39m
     [38;5;2m5619[39m: [38;5;2m       49:     let scratch = lazy (Buffer.create 4096)[39m
     [38;5;2m5620[39m: [38;5;2m       50: [39m
     [38;5;2m5621[39m: [38;5;2m       51:     let output ?cap ?(fd = O.def) f =[39m
     [38;5;2m5622[39m: [38;5;2m       52:       let cap = cap |> value (cap_for_fd (O.to_fd fd)) in[39m
     [38;5;2m5623[39m: [38;5;2m       53:       let buf = Lazy.force scratch in[39m
     [38;5;2m5624[39m: [38;5;2m       54:       Buffer.reset buf; f buf cap fd; O.write fd buf[39m
     [38;5;2m5625[39m: [38;5;2m       55: [39m
     [38;5;2m5626[39m: [38;5;2m       56:     let output_image_size ?cap ?fd f =[39m
     [38;5;2m5627[39m: [38;5;2m       57:       output ?cap ?fd @@ fun buf cap fd ->[39m
     [38;5;2m5628[39m: [38;5;2m       58:         let size = winsize (O.to_fd fd) in[39m
     [38;5;2m5629[39m: [38;5;2m       59:         let i = f (value (80, 24) size) in[39m
     [38;5;2m5630[39m: [38;5;2m       60:         let dim = match size with[39m
     [38;5;2m5631[39m: [38;5;2m       61:           | Some (w, _) -> I.(w, height i)[39m
     [38;5;2m5632[39m: [38;5;2m       62:           | None        -> I.(width i, height i) in[39m
     [38;5;2m5633[39m: [38;5;2m       63:         Render.to_buffer buf cap (0, 0) dim i[39m
     [38;5;2m5634[39m: [38;5;2m       64: [39m
     [38;5;2m5635[39m: [38;5;2m       65:     let show_cursor ?cap ?fd x =[39m
     [38;5;2m5636[39m: [38;5;2m       66:       output ?cap ?fd @@ fun buf cap _ -> Direct.show_cursor buf cap x[39m
     [38;5;2m5637[39m: [38;5;2m       67: [39m
     [38;5;2m5638[39m: [38;5;2m       68:     let move_cursor ?cap ?fd x =[39m
     [38;5;2m5639[39m: [38;5;2m       69:       output ?cap ?fd @@ fun buf cap _ -> Direct.move_cursor buf cap x[39m
     [38;5;2m5640[39m: [38;5;2m       70: [39m
     [38;5;2m5641[39m: [38;5;2m       71:     let output_image ?cap ?fd i = output_image_size ?cap ?fd (fun _ -> i)[39m
     [38;5;2m5642[39m: [38;5;2m       72: [39m
     [38;5;2m5643[39m: [38;5;2m       73:     let eol i = I.(i <-> void 0 1)[39m
     [38;5;2m5644[39m: [38;5;2m       74:   end[39m
     [38;5;2m5645[39m: [38;5;2m       75: end[39m
     [38;5;2m5646[39m: [38;5;2m       76: [39m
     [38;5;2m5647[39m: [38;5;2m       77: open Private[39m
     [38;5;2m5648[39m: [38;5;2m       78: [39m
     [38;5;2m5649[39m: [38;5;2m       79: module Term = struct[39m
     [38;5;2m5650[39m: [38;5;2m       80: [39m
     [38;5;2m5651[39m: [38;5;2m       81:   module Winch = struct[39m
     [38;5;2m5652[39m: [38;5;2m       82: [39m
     [38;5;2m5653[39m: [38;5;2m       83:     let h  = Hashtbl.create 3[39m
     [38;5;2m5654[39m: [38;5;2m       84:     and id = ref 0[39m
     [38;5;2m5655[39m: [38;5;2m       85: [39m
     [38;5;2m5656[39m: [38;5;2m       86:     let add fd f =[39m
     [38;5;2m5657[39m: [38;5;2m       87:       let n = !id in[39m
     [38;5;2m5658[39m: [38;5;2m       88:       set_winch_handler (fun () -> Hashtbl.iter (fun _ f -> f ()) h) |> ignore;[39m
     [38;5;2m5659[39m: [38;5;2m       89:       Hashtbl.add h n (fun () -> winsize fd |> iter f); incr id;[39m
     [38;5;2m5660[39m: [38;5;2m       90:       `Revert (fun () -> Hashtbl.remove h n)[39m
     [38;5;2m5661[39m: [38;5;2m       91:   end[39m
     [38;5;2m5662[39m: [38;5;2m       92: [39m
     [38;5;2m5663[39m: [38;5;2m       93:   module Input = struct[39m
     [38;5;2m5664[39m: [38;5;2m       94: [39m
     [38;5;2m5665[39m: [38;5;2m       95:     type t = {[39m
     [38;5;2m5666[39m: [38;5;2m       96:       fd      : Unix.file_descr[39m
     [38;5;2m5667[39m: [38;5;2m       97:     ; flt     : Unescape.t[39m
     [38;5;2m5668[39m: [38;5;2m       98:     ; ibuf    : bytes[39m
     [38;5;2m5669[39m: [38;5;2m       99:     ; cleanup : unit -> unit[39m
     [38;5;2m5670[39m: [38;5;2m      100:     }[39m
     [38;5;2m5671[39m: [38;5;2m      101: [39m
     [38;5;2m5672[39m: [38;5;2m      102:     let bsize = 1024[39m
     [38;5;2m5673[39m: [38;5;2m      103: [39m
     [38;5;2m5674[39m: [38;5;2m      104:     let create ~nosig fd =[39m
     [38;5;2m5675[39m: [38;5;2m      105:       let flt  = Unescape.create ()[39m
     [38;5;2m5676[39m: [38;5;2m      106:       and ibuf = Bytes.create bsize[39m
     [38;5;2m5677[39m: [38;5;2m      107:       and `Revert cleanup = setup_tcattr ~nosig fd in[39m
     [38;5;2m5678[39m: [38;5;2m      108:       { fd; flt; ibuf; cleanup }[39m
     [38;5;2m5679[39m: [38;5;2m      109: [39m
     [38;5;2m5680[39m: [38;5;2m      110:     let rec event t =[39m
     [38;5;2m5681[39m: [38;5;2m      111:       match Unescape.next t.flt with[39m
     [38;5;2m5682[39m: [38;5;2m      112:       | #Unescape.event | `End as r -> r[39m
     [38;5;2m5683[39m: [38;5;2m      113:       | `Await ->[39m
     [38;5;2m5684[39m: [38;5;2m      114:           let n = Unix.read t.fd t.ibuf 0 bsize in[39m
     [38;5;2m5685[39m: [38;5;2m      115:           Unescape.input t.flt t.ibuf 0 n; event t[39m
     [38;5;2m5686[39m: [38;5;2m      116:   end[39m
     [38;5;2m5687[39m: [38;5;2m      117: [39m
     [38;5;2m5688[39m: [38;5;2m      118:   type t = {[39m
     [38;5;2m5689[39m: [38;5;2m      119:     output   : out_channel[39m
     [38;5;2m5690[39m: [38;5;2m      120:   ; trm      : Tmachine.t[39m
     [38;5;2m5691[39m: [38;5;2m      121:   ; buf      : Buffer.t[39m
     [38;5;2m5692[39m: [38;5;2m      122:   ; input    : Input.t[39m
     [38;5;2m5693[39m: [38;5;2m      123:   ; fds      : Unix.file_descr * Unix.file_descr[39m
     [38;5;2m5694[39m: [38;5;2m      124:   ; unwinch  : (unit -> unit) Lazy.t[39m
     [38;5;2m5695[39m: [38;5;2m      125:   ; mutable winched : bool[39m
     [38;5;2m5696[39m: [38;5;2m      126:   }[39m
     [38;5;2m5697[39m: [38;5;2m      127: [39m
     [38;5;2m5698[39m: [38;5;2m      128:   let write t =[39m
     [38;5;2m5699[39m: [38;5;2m      129:     Buffer.clear t.buf;[39m
     [38;5;2m5700[39m: [38;5;2m      130:     Tmachine.output t.trm t.buf;[39m
     [38;5;2m5701[39m: [38;5;2m      131:     Buffer.output_buffer t.output t.buf; flush t.output[39m
     [38;5;2m5702[39m: [38;5;2m      132: [39m
     [38;5;2m5703[39m: [38;5;2m      133:   let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m5704[39m: [38;5;2m      134:   let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m5705[39m: [38;5;2m      135:   let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m5706[39m: [38;5;2m      136:   let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m5707[39m: [38;5;2m      137:   let size t         = Tmachine.size t.trm[39m
     [38;5;2m5708[39m: [38;5;2m      138: [39m
     [38;5;2m5709[39m: [38;5;2m      139:   let release t =[39m
     [38;5;2m5710[39m: [38;5;2m      140:     if Tmachine.release t.trm then[39m
     [38;5;2m5711[39m: [38;5;2m      141:       ( Lazy.force t.unwinch ();[39m
     [38;5;2m5712[39m: [38;5;2m      142:         t.input.Input.cleanup ();[39m
     [38;5;2m5713[39m: [38;5;2m      143:         write t )[39m
     [38;5;2m5714[39m: [38;5;2m      144: [39m
     [38;5;2m5715[39m: [38;5;2m      145:   let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m5716[39m: [38;5;2m      146:              ?(input=Unix.stdin) ?(output=Unix.stdout) () =[39m
     [38;5;2m5717[39m: [38;5;2m      147:     let rec t = {[39m
     [38;5;2m5718[39m: [38;5;2m      148:         output  = Unix.out_channel_of_descr output[39m
     [38;5;2m5719[39m: [38;5;2m      149:       ; trm     = Tmachine.create ~mouse ~bpaste (cap_for_fd input)[39m
     [38;5;2m5720[39m: [38;5;2m      150:       ; buf     = Buffer.create 4096[39m
     [38;5;2m5721[39m: [38;5;2m      151:       ; input   = Input.create ~nosig input[39m
     [38;5;2m5722[39m: [38;5;2m      152:       ; fds     = (input, output)[39m
     [38;5;2m5723[39m: [38;5;2m      153:       ; winched = false[39m
     [38;5;2m5724[39m: [38;5;2m      154:       ; unwinch = lazy ([39m
     [38;5;2m5725[39m: [38;5;2m      155:           let `Revert f = Winch.add output @@ fun dim ->[39m
     [38;5;2m5726[39m: [38;5;2m      156:             Buffer.reset t.buf; t.winched <- true; set_size t dim in f)[39m
     [38;5;2m5727[39m: [38;5;2m      157:     } in[39m
     [38;5;2m5728[39m: [38;5;2m      158:     winsize output |> iter (set_size t);[39m
     [38;5;2m5729[39m: [38;5;2m      159:     (Lazy.force t.unwinch |> ignore) [@ocaml.warning "-5"];[39m
     [38;5;2m5730[39m: [38;5;2m      160:     if dispose then at_exit (fun () -> release t);[39m
     [38;5;2m5731[39m: [38;5;2m      161:     write t;[39m
     [38;5;2m5732[39m: [38;5;2m      162:     t[39m
     [38;5;2m5733[39m: [38;5;2m      163: [39m
     [38;5;2m5734[39m: [38;5;2m      164:   let rec event = function[39m
     [38;5;2m5735[39m: [38;5;2m      165:     | t when Tmachine.dead t.trm -> `End[39m
     [38;5;2m5736[39m: [38;5;2m      166:     | t when t.winched -> t.winched <- false; `Resize (size t)[39m
     [38;5;2m5737[39m: [38;5;2m      167:     | t -> Unix.(try Input.event t.input with Unix_error (EINTR, _, _) -> event t)[39m
     [38;5;2m5738[39m: [38;5;2m      168: [39m
     [38;5;2m5739[39m: [38;5;2m      169:   let pending t =[39m
     [38;5;2m5740[39m: [38;5;2m      170:     not (Tmachine.dead t.trm) &&[39m
     [38;5;2m5741[39m: [38;5;2m      171:     (t.winched || Unescape.pending t.input.Input.flt)[39m
     [38;5;2m5742[39m: [38;5;2m      172: [39m
     [38;5;2m5743[39m: [38;5;2m      173:   let fds t = t.fds[39m
     [38;5;2m5744[39m: [38;5;2m      174: end[39m
     [38;5;2m5745[39m: [38;5;2m      175: [39m
     [38;5;2m5746[39m: [38;5;2m      176: include Gen_output (struct[39m
     [38;5;2m5747[39m: [38;5;2m      177:   type fd = out_channel and k = unit[39m
     [38;5;2m5748[39m: [38;5;2m      178:   let def   = stdout[39m
     [38;5;2m5749[39m: [38;5;2m      179:   and to_fd = Unix.descr_of_out_channel[39m
     [38;5;2m5750[39m: [38;5;2m      180:   and write = Buffer.output_buffer[39m
     [38;5;2m5751[39m: [38;5;2m      181: end)[39m
     [38;5;2m5752[39m: [38;5;2mAdded regular file ../notty/src-unix/notty_unix.mli:[39m
     [38;5;2m5753[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m5754[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m5755[39m: [38;5;2m        3: [39m
     [38;5;2m5756[39m: [38;5;2m        4: (** [Notty] IO for pure [Unix].[39m
     [38;5;2m5757[39m: [38;5;2m        5: [39m
     [38;5;2m5758[39m: [38;5;2m        6:     This is an IO module for {!Notty}.[39m
     [38;5;2m5759[39m: [38;5;2m        7: [39m
     [38;5;2m5760[39m: [38;5;2m        8:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m5761[39m: [38;5;2m        9: [39m
     [38;5;2m5762[39m: [38;5;2m       10: open Notty[39m
     [38;5;2m5763[39m: [38;5;2m       11: [39m
     [38;5;2m5764[39m: [38;5;2m       12: (** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m5765[39m: [38;5;2m       13: [39m
     [38;5;2m5766[39m: [38;5;2m       14: (** Terminal IO abstraction for fullscreen, interactive applications.[39m
     [38;5;2m5767[39m: [38;5;2m       15: [39m
     [38;5;2m5768[39m: [38;5;2m       16:     This module provides both input and output. It assumes exclusive ownership of[39m
     [38;5;2m5769[39m: [38;5;2m       17:     the IO streams between {{!create}initialization} and {{!release}shutdown}. *)[39m
     [38;5;2m5770[39m: [38;5;2m       18: module Term : sig[39m
     [38;5;2m5771[39m: [38;5;2m       19: [39m
     [38;5;2m5772[39m: [38;5;2m       20:   type t[39m
     [38;5;2m5773[39m: [38;5;2m       21:   (** Representation of the terminal, giving structured access to IO. *)[39m
     [38;5;2m5774[39m: [38;5;2m       22: [39m
     [38;5;2m5775[39m: [38;5;2m       23:   (** {1 Construction and destruction} *)[39m
     [38;5;2m5776[39m: [38;5;2m       24: [39m
     [38;5;2m5777[39m: [38;5;2m       25:   val create : ?dispose:bool ->[39m
     [38;5;2m5778[39m: [38;5;2m       26:                ?nosig:bool ->[39m
     [38;5;2m5779[39m: [38;5;2m       27:                ?mouse:bool ->[39m
     [38;5;2m5780[39m: [38;5;2m       28:                ?bpaste:bool ->[39m
     [38;5;2m5781[39m: [38;5;2m       29:                ?input:Unix.file_descr ->[39m
     [38;5;2m5782[39m: [38;5;2m       30:                ?output:Unix.file_descr ->[39m
     [38;5;2m5783[39m: [38;5;2m       31:                unit -> t[39m
     [38;5;2m5784[39m: [38;5;2m       32:   (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a fresh[39m
     [38;5;2m5785[39m: [38;5;2m       33:       {{!t}terminal}. It has the following side effects:[39m
     [38;5;2m5786[39m: [38;5;2m       34:       {ul[39m
     [38;5;2m5787[39m: [38;5;2m       35:       {- [Unix.tcsetattr] is applied to [input] to disable {e echo} and[39m
     [38;5;2m5788[39m: [38;5;2m       36:          {e canonical mode}.}[39m
     [38;5;2m5789[39m: [38;5;2m       37:       {- [output] is set to {e alternate screen mode}, and the cursor is[39m
     [38;5;2m5790[39m: [38;5;2m       38:          hidden. Mouse and {e bracketed paste} reporting are (optionally)[39m
     [38;5;2m5791[39m: [38;5;2m       39:          enabled.}[39m
     [38;5;2m5792[39m: [38;5;2m       40:       {- [SIGWINCH] signal, normally ignored, is handled.}}[39m
     [38;5;2m5793[39m: [38;5;2m       41: [39m
     [38;5;2m5794[39m: [38;5;2m       42:       [~dispose] arranges for automatic {{!release}cleanup} of the terminal[39m
     [38;5;2m5795[39m: [38;5;2m       43:       before the process terminates. The downside is that a reference to this[39m
     [38;5;2m5796[39m: [38;5;2m       44:       terminal is retained until the program exits. Defaults to [true].[39m
     [38;5;2m5797[39m: [38;5;2m       45: [39m
     [38;5;2m5798[39m: [38;5;2m       46:       [~nosig] additionally turns off signal delivery and flow control[39m
     [38;5;2m5799[39m: [38;5;2m       47:       ({e isig} and {e ixon}) on input. Inhibits automatic handling of[39m
     [38;5;2m5800[39m: [38;5;2m       48:       {e CTRL-\{C,Z,\,S,Q\}}. Defaults to [true].[39m
     [38;5;2m5801[39m: [38;5;2m       49: [39m
     [38;5;2m5802[39m: [38;5;2m       50:       [~mouse] activates mouse reporting. Defaults to [true].[39m
     [38;5;2m5803[39m: [38;5;2m       51: [39m
     [38;5;2m5804[39m: [38;5;2m       52:       [~bpaste] activates bracketed paste reporting. Defaults to [true].[39m
     [38;5;2m5805[39m: [38;5;2m       53: [39m
     [38;5;2m5806[39m: [38;5;2m       54:       [~input] is the input file descriptor. Defaults to [stdin].[39m
     [38;5;2m5807[39m: [38;5;2m       55: [39m
     [38;5;2m5808[39m: [38;5;2m       56:       [~output] is the output file descriptor. Defaults to [stdout]. *)[39m
     [38;5;2m5809[39m: [38;5;2m       57: [39m
     [38;5;2m5810[39m: [38;5;2m       58:   val release : t -> unit[39m
     [38;5;2m5811[39m: [38;5;2m       59:   (** Dispose of this terminal. Original behavior of input fd is reinstated,[39m
     [38;5;2m5812[39m: [38;5;2m       60:       cursor is restored, mouse reporting disabled, and alternate mode is[39m
     [38;5;2m5813[39m: [38;5;2m       61:       terminated.[39m
     [38;5;2m5814[39m: [38;5;2m       62: [39m
     [38;5;2m5815[39m: [38;5;2m       63:       It is an error to use the {{!cmds}commands} on a released terminal, and[39m
     [38;5;2m5816[39m: [38;5;2m       64:       will raise [Invalid_argument], while [release] itself is idempotent. *)[39m
     [38;5;2m5817[39m: [38;5;2m       65: [39m
     [38;5;2m5818[39m: [38;5;2m       66:   (** {1:cmds Commands} *)[39m
     [38;5;2m5819[39m: [38;5;2m       67: [39m
     [38;5;2m5820[39m: [38;5;2m       68:   val image : t -> image -> unit[39m
     [38;5;2m5821[39m: [38;5;2m       69:   (** [image t i] sets [i] as [t]'s current image and redraws the terminal. *)[39m
     [38;5;2m5822[39m: [38;5;2m       70: [39m
     [38;5;2m5823[39m: [38;5;2m       71:   val refresh : t -> unit[39m
     [38;5;2m5824[39m: [38;5;2m       72:   (** [refresh t] redraws the terminal using the current image.[39m
     [38;5;2m5825[39m: [38;5;2m       73: [39m
     [38;5;2m5826[39m: [38;5;2m       74:       Useful if the output might have become garbled. *)[39m
     [38;5;2m5827[39m: [38;5;2m       75: [39m
     [38;5;2m5828[39m: [38;5;2m       76:   val cursor : t -> (int * int) option -> unit[39m
     [38;5;2m5829[39m: [38;5;2m       77:   (** [cursor t pos] sets and redraws the cursor.[39m
     [38;5;2m5830[39m: [38;5;2m       78: [39m
     [38;5;2m5831[39m: [38;5;2m       79:       [None] hides it. [Some (x, y)] places it at column [x] and row [y], with[39m
     [38;5;2m5832[39m: [38;5;2m       80:       the origin at [(0, 0)], mapping to the upper-left corner. *)[39m
     [38;5;2m5833[39m: [38;5;2m       81: [39m
     [38;5;2m5834[39m: [38;5;2m       82:   (** {1 Events} *)[39m
     [38;5;2m5835[39m: [38;5;2m       83: [39m
     [38;5;2m5836[39m: [38;5;2m       84:   val event : t -> [ Unescape.event | `Resize of (int * int) | `End ][39m
     [38;5;2m5837[39m: [38;5;2m       85:   (** Wait for a new event. [event t] can be:[39m
     [38;5;2m5838[39m: [38;5;2m       86:       {ul[39m
     [38;5;2m5839[39m: [38;5;2m       87:       {- [#Unescape.event], an {{!Notty.Unescape.event}[event]} from the input fd;}[39m
     [38;5;2m5840[39m: [38;5;2m       88:       {- [`End] if the input fd is closed, or the terminal was released; or}[39m
     [38;5;2m5841[39m: [38;5;2m       89:       {- [`Resize (cols, rows)] giving the current size of the output tty, if a[39m
     [38;5;2m5842[39m: [38;5;2m       90:          [SIGWINCH] was delivered before or during this call to [event].}}[39m
     [38;5;2m5843[39m: [38;5;2m       91: [39m
     [38;5;2m5844[39m: [38;5;2m       92:       {b Note} [event] is buffered. Calls can either block or immediately[39m
     [38;5;2m5845[39m: [38;5;2m       93:       return. Use {{!pending}[pending]} to detect when the next call would not[39m
     [38;5;2m5846[39m: [38;5;2m       94:       block. *)[39m
     [38;5;2m5847[39m: [38;5;2m       95: [39m
     [38;5;2m5848[39m: [38;5;2m       96:   val pending : t -> bool[39m
     [38;5;2m5849[39m: [38;5;2m       97:   (** [pending t] is [true] if the next call to {{!event}[event]} would not[39m
     [38;5;2m5850[39m: [38;5;2m       98:       block and the terminal has not yet been released. *)[39m
     [38;5;2m5851[39m: [38;5;2m       99: [39m
     [38;5;2m5852[39m: [38;5;2m      100:   (** {1 Properties} *)[39m
     [38;5;2m5853[39m: [38;5;2m      101: [39m
     [38;5;2m5854[39m: [38;5;2m      102:   val size : t -> int * int[39m
     [38;5;2m5855[39m: [38;5;2m      103:   (** [size t] is the current size of the terminal's output tty. *)[39m
     [38;5;2m5856[39m: [38;5;2m      104: [39m
     [38;5;2m5857[39m: [38;5;2m      105:   val fds : t -> Unix.file_descr * Unix.file_descr[39m
     [38;5;2m5858[39m: [38;5;2m      106:   (** [fds t] are [t]'s input and output file descriptors. *)[39m
     [38;5;2m5859[39m: [38;5;2m      107: [39m
     [38;5;2m5860[39m: [38;5;2m      108:   (** {1 Window size change notifications} *)[39m
     [38;5;2m5861[39m: [38;5;2m      109: [39m
     [38;5;2m5862[39m: [38;5;2m      110:   (** Manual [SIGWINCH] handling.[39m
     [38;5;2m5863[39m: [38;5;2m      111: [39m
     [38;5;2m5864[39m: [38;5;2m      112:       Unix delivers notifications about tty size changes through the [SIGWINCH][39m
     [38;5;2m5865[39m: [38;5;2m      113:       signal. A handler for this signal is installed as soon as a new terminal[39m
     [38;5;2m5866[39m: [38;5;2m      114:       is {{!create}created}. Replacing the global [SIGWINCH] handler using[39m
     [38;5;2m5867[39m: [38;5;2m      115:       the [Sys] module will cause this module to malfunction, as the size change[39m
     [38;5;2m5868[39m: [38;5;2m      116:       notifications will no longer be delivered.[39m
     [38;5;2m5869[39m: [38;5;2m      117: [39m
     [38;5;2m5870[39m: [38;5;2m      118:       You might still want to ignore resizes reported by {{!event}[event]} and[39m
     [38;5;2m5871[39m: [38;5;2m      119:       directly listen to [SIGWINCH]. This module allows installing such[39m
     [38;5;2m5872[39m: [38;5;2m      120:       listeners without conflicting with the rest of the machinery. *)[39m
     [38;5;2m5873[39m: [38;5;2m      121:   module Winch : sig[39m
     [38;5;2m5874[39m: [38;5;2m      122: [39m
     [38;5;2m5875[39m: [38;5;2m      123:     val add : Unix.file_descr -> ((int * int) -> unit) -> [`Revert of unit -> unit][39m
     [38;5;2m5876[39m: [38;5;2m      124:     (** [add fd f] registers a [SIGWINCH] handler. Every time the signal is[39m
     [38;5;2m5877[39m: [38;5;2m      125:         delivered, [f] is called with the current size of the tty backing [fd].[39m
     [38;5;2m5878[39m: [38;5;2m      126:         If [fd] is not a tty, [f] is never called.[39m
     [38;5;2m5879[39m: [38;5;2m      127: [39m
     [38;5;2m5880[39m: [38;5;2m      128:         Return value is a function that removes the handler [f].[39m
     [38;5;2m5881[39m: [38;5;2m      129: [39m
     [38;5;2m5882[39m: [38;5;2m      130:         Handlers are called in an unspecified order. *)[39m
     [38;5;2m5883[39m: [38;5;2m      131: [39m
     [38;5;2m5884[39m: [38;5;2m      132:   end[39m
     [38;5;2m5885[39m: [38;5;2m      133: end[39m
     [38;5;2m5886[39m: [38;5;2m      134: [39m
     [38;5;2m5887[39m: [38;5;2m      135: (** {1:inline Inline output}[39m
     [38;5;2m5888[39m: [38;5;2m      136: [39m
     [38;5;2m5889[39m: [38;5;2m      137:     These operations do not assume exclusive access to the output. This means[39m
     [38;5;2m5890[39m: [38;5;2m      138:     that they can be combined with other means of producing output. At the same[39m
     [38;5;2m5891[39m: [38;5;2m      139:     time, it means that they are affected by the current terminal state, and[39m
     [38;5;2m5892[39m: [38;5;2m      140:     that this state is not tracked. *)[39m
     [38;5;2m5893[39m: [38;5;2m      141: [39m
     [38;5;2m5894[39m: [38;5;2m      142: val winsize : Unix.file_descr -> (int * int) option[39m
     [38;5;2m5895[39m: [38;5;2m      143: (** [winsize fd] is [Some (columns, rows)], the current dimensions of [fd]'s[39m
     [38;5;2m5896[39m: [38;5;2m      144:     backing tty, or [None], when [fd] is not backed by a tty. *)[39m
     [38;5;2m5897[39m: [38;5;2m      145: [39m
     [38;5;2m5898[39m: [38;5;2m      146: val eol : image -> image[39m
     [38;5;2m5899[39m: [38;5;2m      147: (** [eol image] is [image], producing an extra newline when printed. *)[39m
     [38;5;2m5900[39m: [38;5;2m      148: [39m
     [38;5;2m5901[39m: [38;5;2m      149: val output_image :[39m
     [38;5;2m5902[39m: [38;5;2m      150:   ?cap:Cap.t -> ?fd:out_channel -> image -> unit[39m
     [38;5;2m5903[39m: [38;5;2m      151: (** [output_image ?cap ?fd image] writes [image] to [fd].[39m
     [38;5;2m5904[39m: [38;5;2m      152: [39m
     [38;5;2m5905[39m: [38;5;2m      153:     The image is displayed in its full height. If the output is a tty, image[39m
     [38;5;2m5906[39m: [38;5;2m      154:     width is clipped to the output width. Otherwise, full width is used.[39m
     [38;5;2m5907[39m: [38;5;2m      155: [39m
     [38;5;2m5908[39m: [38;5;2m      156:     [~cap] is the {{!caps}optional} terminal capability set.[39m
     [38;5;2m5909[39m: [38;5;2m      157: [39m
     [38;5;2m5910[39m: [38;5;2m      158:     [~fd] defaults to [stdout]. *)[39m
     [38;5;2m5911[39m: [38;5;2m      159: [39m
     [38;5;2m5912[39m: [38;5;2m      160: val output_image_size : ?cap:Cap.t -> ?fd:out_channel -> (int * int -> image) -> unit[39m
     [38;5;2m5913[39m: [38;5;2m      161: (** [output_image_size ?cap ?fd f] is[39m
     [38;5;2m5914[39m: [38;5;2m      162:     [output_image ?cap ?fd (f size)] where [size] are [fd]'s current[39m
     [38;5;2m5915[39m: [38;5;2m      163:     {{!winsize}output dimensions}.[39m
     [38;5;2m5916[39m: [38;5;2m      164: [39m
     [38;5;2m5917[39m: [38;5;2m      165:     If [fd] is not backed by a tty, as a matter of convenience, [f] is applied[39m
     [38;5;2m5918[39m: [38;5;2m      166:     to [(80, 24)]. Use {!Unix.isatty} or {{!winsize}[winsize]} to detect whether[39m
     [38;5;2m5919[39m: [38;5;2m      167:     the output has a well-defined size. *)[39m
     [38;5;2m5920[39m: [38;5;2m      168: [39m
     [38;5;2m5921[39m: [38;5;2m      169: val show_cursor : ?cap:Cap.t -> ?fd:out_channel -> bool -> unit[39m
     [38;5;2m5922[39m: [38;5;2m      170: (** [show_cursor ?cap ?fd visible] toggles the cursor visibility on [fd]. *)[39m
     [38;5;2m5923[39m: [38;5;2m      171: [39m
     [38;5;2m5924[39m: [38;5;2m      172: val move_cursor :[39m
     [38;5;2m5925[39m: [38;5;2m      173:   ?cap:Cap.t -> ?fd:out_channel ->[39m
     [38;5;2m5926[39m: [38;5;2m      174:     [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m5927[39m: [38;5;2m      175: (** [move_cursor ?cap ?fd motion] moves the cursor on [fd].[39m
     [38;5;2m5928[39m: [38;5;2m      176: [39m
     [38;5;2m5929[39m: [38;5;2m      177:     [motion] is one of:[39m
     [38;5;2m5930[39m: [38;5;2m      178:     {ul[39m
     [38;5;2m5931[39m: [38;5;2m      179:     {- [`To (column, line)], positioning the cursor to [(column, line)]. Origin[39m
     [38;5;2m5932[39m: [38;5;2m      180:        is [(0, 0)], the upper-left corner of the screen.}[39m
     [38;5;2m5933[39m: [38;5;2m      181:     {- [`Home], moving the cursor the beginning of line.}[39m
     [38;5;2m5934[39m: [38;5;2m      182:     {- [`By (columns, lines)], moving the cursor [columns] to the right (left if[39m
     [38;5;2m5935[39m: [38;5;2m      183:        negative) and [lines] down (up if negative).[39m
     [38;5;2m5936[39m: [38;5;2m      184: [39m
     [38;5;2m5937[39m: [38;5;2m      185:        {b Note} Behavior is terminal dependent if the movement overshoots the[39m
     [38;5;2m5938[39m: [38;5;2m      186:        output size.}} *)[39m
     [38;5;2m5939[39m: [38;5;2m      187: [39m
     [38;5;2m5940[39m: [38;5;2m      188: (** {1:caps Capability detection}[39m
     [38;5;2m5941[39m: [38;5;2m      189: [39m
     [38;5;2m5942[39m: [38;5;2m      190:     All [image] output requires {{!Notty.Cap.t}terminal capabilities}.[39m
     [38;5;2m5943[39m: [38;5;2m      191: [39m
     [38;5;2m5944[39m: [38;5;2m      192:     When not provided, capabilities are auto-detected, by checking that the[39m
     [38;5;2m5945[39m: [38;5;2m      193:     output is a tty, that the environment variable [$TERM] is set, and that it[39m
     [38;5;2m5946[39m: [38;5;2m      194:     is not set to either [""] or ["dumb"]. If these conditions hold,[39m
     [38;5;2m5947[39m: [38;5;2m      195:     {{!Notty.Cap.ansi}ANSI} escapes are used. Otherwise, {{!Notty.Cap.dumb}no}[39m
     [38;5;2m5948[39m: [38;5;2m      196:     escapes are used. *)[39m
     [38;5;2m5949[39m: [38;5;2m      197: [39m
     [38;5;2m5950[39m: [38;5;2m      198: (**/**)[39m
     [38;5;2m5951[39m: [38;5;2m      199: (** {1 Private}[39m
     [38;5;2m5952[39m: [38;5;2m      200: [39m
     [38;5;2m5953[39m: [38;5;2m      201:     These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m5954[39m: [38;5;2m      202: module Private : sig[39m
     [38;5;2m5955[39m: [38;5;2m      203: [39m
     [38;5;2m5956[39m: [38;5;2m      204:   val cap_for_fd        : Unix.file_descr -> Cap.t[39m
     [38;5;2m5957[39m: [38;5;2m      205:   val setup_tcattr      : nosig:bool -> Unix.file_descr -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m5958[39m: [38;5;2m      206:   val set_winch_handler : (unit -> unit) -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m5959[39m: [38;5;2m      207: [39m
     [38;5;2m5960[39m: [38;5;2m      208:   module Gen_output (O : sig[39m
     [38;5;2m5961[39m: [38;5;2m      209:     type fd[39m
     [38;5;2m5962[39m: [38;5;2m      210:     type k[39m
     [38;5;2m5963[39m: [38;5;2m      211:     val def   : fd[39m
     [38;5;2m5964[39m: [38;5;2m      212:     val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m5965[39m: [38;5;2m      213:     val write : fd -> Buffer.t -> k[39m
     [38;5;2m5966[39m: [38;5;2m      214:   end ) : sig[39m
     [38;5;2m5967[39m: [38;5;2m      215:     val output_image : ?cap:Cap.t -> ?fd:O.fd -> image -> O.k[39m
     [38;5;2m5968[39m: [38;5;2m      216:     val output_image_size : ?cap:Cap.t -> ?fd:O.fd -> (int * int -> image) -> O.k[39m
     [38;5;2m5969[39m: [38;5;2m      217:     val show_cursor : ?cap:Cap.t -> ?fd:O.fd -> bool -> O.k[39m
     [38;5;2m5970[39m: [38;5;2m      218:     val move_cursor : ?cap:Cap.t -> ?fd:O.fd -> [ `Home | `By of int * int | `To of int * int ] -> O.k[39m
     [38;5;2m5971[39m: [38;5;2m      219:     val eol : image -> image[39m
     [38;5;2m5972[39m: [38;5;2m      220:   end[39m
     [38;5;2m5973[39m: [38;5;2m      221: end[39m
     [38;5;2m5974[39m: [38;5;2m      222: (**/**)[39m
     [38;5;2m5975[39m: [38;5;2mAdded executable file ../notty/support/gen_unicode_props.ml:[39m
     [38;5;2m5976[39m: [38;5;2m        1: #!/usr/bin/env ocaml[39m
     [38;5;2m5977[39m: [38;5;2m        2: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m5978[39m: [38;5;2m        3:    See LICENSE.md. *)[39m
     [38;5;2m5979[39m: [38;5;2m        4: [39m
     [38;5;2m5980[39m: [38;5;2m        5: #use "topfind"[39m
     [38;5;2m5981[39m: [38;5;2m        6: #require "uucp"[39m
     [38;5;2m5982[39m: [38;5;2m        7: [39m
     [38;5;2m5983[39m: [38;5;2m        8: let filter p seq i = seq (fun x -> if p x then i x)[39m
     [38;5;2m5984[39m: [38;5;2m        9: let map f seq i = seq (fun x -> i (f x))[39m
     [38;5;2m5985[39m: [38;5;2m       10: let uchars it =[39m
     [38;5;2m5986[39m: [38;5;2m       11:   let rec go it u = it u; go it (Uchar.succ u) in[39m
     [38;5;2m5987[39m: [38;5;2m       12:   try go it Uchar.min with Invalid_argument _ -> ()[39m
     [38;5;2m5988[39m: [38;5;2m       13: let to_list seq =[39m
     [38;5;2m5989[39m: [38;5;2m       14:   let xs = ref [] in[39m
     [38;5;2m5990[39m: [38;5;2m       15:   seq (fun x -> xs := x :: !xs);[39m
     [38;5;2m5991[39m: [38;5;2m       16:   List.rev !xs[39m
     [38;5;2m5992[39m: [38;5;2m       17: [39m
     [38;5;2m5993[39m: [38;5;2m       18: let intervals_kv seq i =[39m
     [38;5;2m5994[39m: [38;5;2m       19:   let s = ref None in[39m
     [38;5;2m5995[39m: [38;5;2m       20:   let f (x, v) = match !s with[39m
     [38;5;2m5996[39m: [38;5;2m       21:   | None -> s := Some (x, x, v)[39m
     [38;5;2m5997[39m: [38;5;2m       22:   | Some (a, b, v0) when v = v0 && x = Uchar.succ b -> s := Some (a, x, v0)[39m
     [38;5;2m5998[39m: [38;5;2m       23:   | Some e -> i e; s := Some (x, x, v) in[39m
     [38;5;2m5999[39m: [38;5;2m       24:   seq f;[39m
     [38;5;2m6000[39m: [38;5;2m       25:   match !s with Some e -> i e | _ -> ()[39m
     [38;5;2m6001[39m: [38;5;2m       26: [39m
     [38;5;2m6002[39m: [38;5;2m       27: let intervals_p seq =[39m
     [38;5;2m6003[39m: [38;5;2m       28:   map (fun x -> x, ()) seq |> intervals_kv |> map (fun (a, b, _) -> a, b)[39m
     [38;5;2m6004[39m: [38;5;2m       29: [39m
     [38;5;2m6005[39m: [38;5;2m       30: (* Condenses code points into continuous range. *)[39m
     [38;5;2m6006[39m: [38;5;2m       31: let pack_u u = let i = Uchar.to_int u in if i > 0xd7ff then i - 0x800 else i[39m
     [38;5;2m6007[39m: [38;5;2m       32: let unpack_u i = Uchar.of_int (if i < 0xd800 then i else i + 0x800)[39m
     [38;5;2m6008[39m: [38;5;2m       33: [39m
     [38;5;2m6009[39m: [38;5;2m       34: (* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m6010[39m: [38;5;2m       35:    Root is variable; lower levels are either empty or complete.[39m
     [38;5;2m6011[39m: [38;5;2m       36: [39m
     [38;5;2m6012[39m: [38;5;2m       37:    At the moment, packed Uchar.max is 0x10f7ff; this can map up to 0xffffff[39m
     [38;5;2m6013[39m: [38;5;2m       38:    distinct code points.  *)[39m
     [38;5;2m6014[39m: [38;5;2m       39: let trie ~default f =[39m
     [38;5;2m6015[39m: [38;5;2m       40:   let xs = List.init ((pack_u Uchar.max lsr 12) + 1) @@ fun b0 ->[39m
     [38;5;2m6016[39m: [38;5;2m       41:     let mask = b0 lsl 12 in[39m
     [38;5;2m6017[39m: [38;5;2m       42:     let arr = Array.init 0x40 @@ fun b1 ->[39m
     [38;5;2m6018[39m: [38;5;2m       43:       let mask = mask lor (b1 lsl 6) in[39m
     [38;5;2m6019[39m: [38;5;2m       44:       let v b2 = match unpack_u (mask lor b2) with[39m
     [38;5;2m6020[39m: [38;5;2m       45:       | x -> f x[39m
     [38;5;2m6021[39m: [38;5;2m       46:       | exception Invalid_argument _ -> default in[39m
     [38;5;2m6022[39m: [38;5;2m       47:       match (for b2 = 0 to 0x3f do if v b2 <> default then raise Exit done) with[39m
     [38;5;2m6023[39m: [38;5;2m       48:       | exception Exit -> String.init 0x40 (fun b2 -> Char.chr (v b2))[39m
     [38;5;2m6024[39m: [38;5;2m       49:       | () -> ""[39m
     [38;5;2m6025[39m: [38;5;2m       50:     in[39m
     [38;5;2m6026[39m: [38;5;2m       51:     if Array.for_all ((=) "") arr then [||] else arr[39m
     [38;5;2m6027[39m: [38;5;2m       52:   in[39m
     [38;5;2m6028[39m: [38;5;2m       53:   let rec trim = function [||]::xs -> trim xs | xs -> xs in[39m
     [38;5;2m6029[39m: [38;5;2m       54:   List.rev (trim (List.rev xs)) |> Array.of_list[39m
     [38;5;2m6030[39m: [38;5;2m       55: [39m
     [38;5;2m6031[39m: [38;5;2m       56: let pf = Format.fprintf[39m
     [38;5;2m6032[39m: [38;5;2m       57: let strf = Format.sprintf[39m
     [38;5;2m6033[39m: [38;5;2m       58: let pp_iter ?(sep = fun _ _ -> ()) iter pp ppf x =[39m
     [38;5;2m6034[39m: [38;5;2m       59:   let fst = ref true in[39m
     [38;5;2m6035[39m: [38;5;2m       60:   let f x = (if !fst then fst := false else sep ppf ()); pp ppf x in[39m
     [38;5;2m6036[39m: [38;5;2m       61:   iter f x[39m
     [38;5;2m6037[39m: [38;5;2m       62: let pp_u ppf u = pf ppf "0x%04x" (Uchar.to_int u)[39m
     [38;5;2m6038[39m: [38;5;2m       63: let pp_as_array iter pp ppf x =[39m
     [38;5;2m6039[39m: [38;5;2m       64:   let sep ppf () = pf ppf ";@ " in[39m
     [38;5;2m6040[39m: [38;5;2m       65:   pf ppf "@[<2>[|%a|]@]" (pp_iter ~sep iter pp) x[39m
     [38;5;2m6041[39m: [38;5;2m       66: [39m
     [38;5;2m6042[39m: [38;5;2m       67: let intern ppf_ml iter =[39m
     [38;5;2m6043[39m: [38;5;2m       68:   let t = Hashtbl.create 16 in[39m
     [38;5;2m6044[39m: [38;5;2m       69:   let n = ref 0 in[39m
     [38;5;2m6045[39m: [38;5;2m       70:   iter (fun s -> if not (Hashtbl.mem t s) then begin[39m
     [38;5;2m6046[39m: [38;5;2m       71:     let name = strf "s%03d" !n in[39m
     [38;5;2m6047[39m: [38;5;2m       72:     Hashtbl.add t s name; incr n;[39m
     [38;5;2m6048[39m: [38;5;2m       73:     pf ppf_ml "let %s = %S@." name s[39m
     [38;5;2m6049[39m: [38;5;2m       74:   end);[39m
     [38;5;2m6050[39m: [38;5;2m       75:   pf ppf_ml "@.";[39m
     [38;5;2m6051[39m: [38;5;2m       76:   (fun ppf s -> match Hashtbl.find_opt t s with[39m
     [38;5;2m6052[39m: [38;5;2m       77:    | Some name -> pf ppf "%s" name[39m
     [38;5;2m6053[39m: [38;5;2m       78:    | None -> pf ppf "%S" s)[39m
     [38;5;2m6054[39m: [38;5;2m       79: [39m
     [38;5;2m6055[39m: [38;5;2m       80: let dump_interval_map (ppf_mli, ppf_ml) ~name ~desc seq =[39m
     [38;5;2m6056[39m: [38;5;2m       81:   pf ppf_mli "(* %s *)@.val %s: int array * int array * int array@.@." desc name;[39m
     [38;5;2m6057[39m: [38;5;2m       82:   let xs = to_list (intervals_kv seq) in[39m
     [38;5;2m6058[39m: [38;5;2m       83:   let aa = List.map (fun (a, _, _) -> a) xs[39m
     [38;5;2m6059[39m: [38;5;2m       84:   and bb = List.map (fun (_, b, _) -> b) xs[39m
     [38;5;2m6060[39m: [38;5;2m       85:   and cc = List.map (fun (_, _, c) -> c) xs in[39m
     [38;5;2m6061[39m: [38;5;2m       86:   let pp_arr pp = pp_as_array List.iter pp in[39m
     [38;5;2m6062[39m: [38;5;2m       87:   let pp_arr_u = pp_arr pp_u and pp_arr_i = pp_arr Format.pp_print_int in[39m
     [38;5;2m6063[39m: [38;5;2m       88:   pf ppf_ml "@[<2>let %s =@ @[<1>(%a,@ %a,@ %a)@]@]@.@."[39m
     [38;5;2m6064[39m: [38;5;2m       89:      name pp_arr_u aa pp_arr_u bb pp_arr_i cc[39m
     [38;5;2m6065[39m: [38;5;2m       90: [39m
     [38;5;2m6066[39m: [38;5;2m       91: let dump_trie_map (ppf_mli, ppf_ml) ~name ~desc ~default f =[39m
     [38;5;2m6067[39m: [38;5;2m       92:   pf ppf_mli "(* %s *)@.val %s: string array array@.@." desc name;[39m
     [38;5;2m6068[39m: [38;5;2m       93:   let xs = trie ~default f in[39m
     [38;5;2m6069[39m: [38;5;2m       94:   let pp_s = intern ppf_ml Array.(fun i -> i ""; iter (iter i) xs) in[39m
     [38;5;2m6070[39m: [38;5;2m       95:   pf ppf_ml "@[<2>let %s =@ %a@]" name[39m
     [38;5;2m6071[39m: [38;5;2m       96:     Array.(pp_as_array iter (pp_as_array iter pp_s)) xs[39m
     [38;5;2m6072[39m: [38;5;2m       97: [39m
     [38;5;2m6073[39m: [38;5;2m       98: let pp_header ppf = Format.fprintf ppf[39m
     [38;5;2m6074[39m: [38;5;2m       99: "(* Do not edit.[39m
     [38;5;2m6075[39m: [38;5;2m      100:  *[39m
     [38;5;2m6076[39m: [38;5;2m      101:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m6077[39m: [38;5;2m      102:  * using `%s`.[39m
     [38;5;2m6078[39m: [38;5;2m      103:  *[39m
     [38;5;2m6079[39m: [38;5;2m      104:  * Unicode version %s.[39m
     [38;5;2m6080[39m: [38;5;2m      105:  *)[39m
     [38;5;2m6081[39m: [38;5;2m      106: [39m
     [38;5;2m6082[39m: [38;5;2m      107: " Sys.argv.(0) Uucp.unicode_version[39m
     [38;5;2m6083[39m: [38;5;2m      108: [39m
     [38;5;2m6084[39m: [38;5;2m      109: let extract (ppmli, ppml as ppfs) =[39m
     [38;5;2m6085[39m: [38;5;2m      110: [39m
     [38;5;2m6086[39m: [38;5;2m      111:   pp_header ppmli; pp_header ppml;[39m
     [38;5;2m6087[39m: [38;5;2m      112: [39m
     [38;5;2m6088[39m: [38;5;2m      113:   dump_interval_map ppfs[39m
     [38;5;2m6089[39m: [38;5;2m      114:     ~name:"tty_width_hint"[39m
     [38;5;2m6090[39m: [38;5;2m      115:     ~desc:"Uucp.Break.tty_width_hint"[39m
     [38;5;2m6091[39m: [38;5;2m      116:     (* w = -1 is easy to detect.[39m
     [38;5;2m6092[39m: [38;5;2m      117:        w = 1 covers the most intervals, so we default it. *)[39m
     [38;5;2m6093[39m: [38;5;2m      118:     (uchars |> map (fun u -> u, Uucp.Break.tty_width_hint u)[39m
     [38;5;2m6094[39m: [38;5;2m      119:             |> filter (fun (_, w) -> w <> -1 && w <> 1));[39m
     [38;5;2m6095[39m: [38;5;2m      120: [39m
     [38;5;2m6096[39m: [38;5;2m      121:   (* dump_interval_map ppfs *)[39m
     [38;5;2m6097[39m: [38;5;2m      122:   (*   ~name:"grapheme_cluster_boundary" *)[39m
     [38;5;2m6098[39m: [38;5;2m      123:   (*   ~desc:"Uucp.Break.Low.grapheme_cluster." *)[39m
     [38;5;2m6099[39m: [38;5;2m      124:   (*   (1* No single value dominates the histogram. *1) *)[39m
     [38;5;2m6100[39m: [38;5;2m      125:   (*   (uchars |> map (fun u -> u, Uucp.Break.Low.grapheme_cluster u)); *)[39m
     [38;5;2m6101[39m: [38;5;2m      126: [39m
     [38;5;2m6102[39m: [38;5;2m      127:   dump_trie_map ppfs[39m
     [38;5;2m6103[39m: [38;5;2m      128:     ~name:"grapheme_cluster_boundary"[39m
     [38;5;2m6104[39m: [38;5;2m      129:     ~desc:"Uucp.Break.Low.grapheme_cluster."[39m
     [38;5;2m6105[39m: [38;5;2m      130:     ~default:16 (* 16 - `XX - is by far the most prevalent value *)[39m
     [38;5;2m6106[39m: [38;5;2m      131:     Uucp.Break.Low.grapheme_cluster;[39m
     [38;5;2m6107[39m: [38;5;2m      132: [39m
     [38;5;2m6108[39m: [38;5;2m      133:   ()[39m
     [38;5;2m6109[39m: [38;5;2m      134: [39m
     [38;5;2m6110[39m: [38;5;2m      135: let file = "src/no-uucp/notty_uucp_data"[39m
     [38;5;2m6111[39m: [38;5;2m      136: [39m
     [38;5;2m6112[39m: [38;5;2m      137: let with_new name f =[39m
     [38;5;2m6113[39m: [38;5;2m      138:   let o = open_out_gen [Open_trunc; Open_creat; Open_wronly] 0o664 name in[39m
     [38;5;2m6114[39m: [38;5;2m      139:   let ppf = Format.formatter_of_out_channel o in[39m
     [38;5;2m6115[39m: [38;5;2m      140:   f ppf; Format.pp_print_flush ppf (); close_out o[39m
     [38;5;2m6116[39m: [38;5;2m      141: [39m
     [38;5;2m6117[39m: [38;5;2m      142: let () =[39m
     [38;5;2m6118[39m: [38;5;2m      143:   Format.printf "Dumping Unicode v%s data to %s.@." Uucp.unicode_version file;[39m
     [38;5;2m6119[39m: [38;5;2m      144:   with_new (file ^ ".mli") @@ fun ppmli ->[39m
     [38;5;2m6120[39m: [38;5;2m      145:     with_new (file ^ ".ml") @@ fun ppml ->[39m
     [38;5;2m6121[39m: [38;5;2m      146:       extract (ppmli, ppml)[39m
     [38;5;2m6122[39m: [38;5;2mRemoved regular file ../test/dune:[39m
     [38;5;2m6123[39m: [38;5;2m   1     : (test[39m
     [38;5;2m6124[39m: [38;5;2m   2     :  (name jj_tui))[39m
     [38;5;2m6125[39m: [38;5;2mRemoved regular file ../test/jj_tui.ml:[39m
     [38;5;2m6126[39m: [38;5;2m    (empty)[39m
     [38;5;2m6127[39m: [38;5;2mCommit ID: 0ec773d56287bb2e110a67e496feec0ad1ecde27[39m
     [38;5;2m6128[39m: [38;5;2mChange ID: kszkuqqsvpknsnosxyxmnunnqvrzmpvq[39m
     [38;5;2m6129[39m: [38;5;2mAuthor: Eli Dowling <eli.jambu@gmail.com> (2024-05-08 01:20:28)[39m
     [38;5;2m6130[39m: [38;5;2mCommitter: Eli Dowling <eli.jambu@gmail.com> (2024-05-09 00:02:25)[39m
     [38;5;2m6131[39m: [38;5;2m[39m
     [38;5;2m6132[39m: [38;5;2m    coloured output is working[39m
     [38;5;2m6133[39m: [38;5;2m[39m
     [38;5;2m6134[39m: [38;5;2mAdded regular file ../.ocamlformat:[39m
     [38;5;2m6135[39m: [38;5;2m        1: version=0.24.1[39m
     [38;5;2m6136[39m: [38;5;2m        2: profile=conventional[39m
     [38;5;2m6137[39m: [38;5;2mRemoved regular file ../bin/dune:[39m
     [38;5;2m6138[39m: [38;5;2m   1     : (executable[39m
     [38;5;2m6139[39m: [38;5;2m   2     :  (public_name jj_tui)[39m
     [38;5;2m6140[39m: [38;5;2m   3     :  (name main)[39m
     [38;5;2m6141[39m: [38;5;2m   4     :  (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
     [38;5;2m6142[39m: [38;5;2m   5     :  )[39m
     [38;5;2m6143[39m: [38;5;2mRemoved regular file ../bin/main.ml:[39m
     [38;5;2m6144[39m: [38;5;2m   1     : open Nottui;;[39m
     [38;5;2m6145[39m: [38;5;2m   2     : open Feather;;[39m
     [38;5;2m6146[39m: [38;5;2m   3     : open Lwd_infix;;[39m
     [38;5;2m6147[39m: [38;5;2m   4     : module W = Nottui_widgets;;[39m
     [38;5;2m6148[39m: [38;5;2m   5     : [39m
     [38;5;2m6149[39m: [38;5;2m   6     : [39m
     [38;5;2m6150[39m: [38;5;2m   7     : (* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
     [38;5;2m6151[39m: [38;5;2m   8     : [39m
     [38;5;2m6152[39m: [38;5;2m   9     : let cmdArgs cmd args=[39m
     [38;5;2m6153[39m: [38;5;2m  10     :   let (stdout,stderr)=Feather.process cmd args|>Feather.collect stdout_and_stderr in[39m
     [38;5;2m6154[39m: [38;5;2m  11     :   stdout^stderr[39m
     [38;5;2m6155[39m: [38;5;2m  12     : ;;[39m
     [38;5;2m6156[39m: [38;5;2m  13     : let cmd cmd =[39m
     [38;5;2m6157[39m: [38;5;2m  14     :   let (stdout,stderr)=Feather.process cmd []|>Feather.collect stdout_and_stderr in[39m
     [38;5;2m6158[39m: [38;5;2m  15     :   stdout^stderr[39m
     [38;5;2m6159[39m: [38;5;2m  16     : [39m
     [38;5;2m6160[39m: [38;5;2m  17     : ;;[39m
     [38;5;2m6161[39m: [38;5;2m  18     : [39m
     [38;5;2m6162[39m: [38;5;2m  19     : [39m
     [38;5;2m6163[39m: [38;5;2m  20     : let vcount = Lwd.var "";;[39m
     [38;5;2m6164[39m: [38;5;2m  21     : [39m
     [38;5;2m6165[39m: [38;5;2m  22     : let button = [39m
     [38;5;2m6166[39m: [38;5;2m  23     :   W.button (Printf.sprintf "run jj" )[39m
     [38;5;2m6167[39m: [38;5;2m  24     :            (fun () ->  vcount $= (cmd"jj"))[39m
     [38;5;2m6168[39m: [38;5;2m  25     :   |>Lwd.pure[39m
     [38;5;2m6169[39m: [38;5;2m  26     :          ;;[39m
     [38;5;2m6170[39m: [38;5;2m  27     : let vQuit=Lwd.var false;;[39m
     [38;5;2m6171[39m: [38;5;2m  28     : [39m
     [38;5;2m6172[39m: [38;5;2m  29     : let quitButton  = [39m
     [38;5;2m6173[39m: [38;5;2m  30     :   W.button (Printf.sprintf "quit " )[39m
     [38;5;2m6174[39m: [38;5;2m  31     :            (fun () ->  vQuit $= true)[39m
     [38;5;2m6175[39m: [38;5;2m  32     :   |>Lwd.pure[39m
     [38;5;2m6176[39m: [38;5;2m  33     :          ;;[39m
     [38;5;2m6177[39m: [38;5;2m  34     : [39m
     [38;5;2m6178[39m: [38;5;2m  35     : [39m
     [38;5;2m6179[39m: [38;5;2m  36     : let (<-$) f v=Lwd.map ~f (Lwd.get v);; [39m
     [38;5;2m6180[39m: [38;5;2m  37     : let vShowStatus= Lwd.var "";;[39m
     [38;5;2m6181[39m: [38;5;2m  38     : let inputs ui=[39m
     [38;5;2m6182[39m: [38;5;2m  39     :   Ui.event_filter (fun event->[39m
     [38;5;2m6183[39m: [38;5;2m  40     :     match event with[39m
     [38;5;2m6184[39m: [38;5;2m  41     :     |`Key (`ASCII 'l',_)-> [39m
     [38;5;2m6185[39m: [38;5;2m  42     :         let res=cmd "jj"in[39m
     [38;5;2m6186[39m: [38;5;2m  43     :         vcount$=res;[39m
     [38;5;2m6187[39m: [38;5;2m  44     : [39m
     [38;5;2m6188[39m: [38;5;2m  45     :         `Handled[39m
     [38;5;2m6189[39m: [38;5;2m  46     :     |`Key (`ASCII 's',_)-> [39m
     [38;5;2m6190[39m: [38;5;2m  47     :         let res=cmdArgs "jj" ["show"]in[39m
     [38;5;2m6191[39m: [38;5;2m  48     :         vShowStatus$=res;[39m
     [38;5;2m6192[39m: [38;5;2m  49     : [39m
     [38;5;2m6193[39m: [38;5;2m  50     :         `Handled[39m
     [38;5;2m6194[39m: [38;5;2m  51     :     |`Key (`ASCII 'p',_)-> [39m
     [38;5;2m6195[39m: [38;5;2m  52     :         let _=cmdArgs "jj"["prev"]in[39m
     [38;5;2m6196[39m: [38;5;2m  53     : [39m
     [38;5;2m6197[39m: [38;5;2m  54     :         `Handled[39m
     [38;5;2m6198[39m: [38;5;2m  55     :     |`Key (`ASCII 'n',_)-> [39m
     [38;5;2m6199[39m: [38;5;2m  56     :         let _=cmdArgs "jj"["next"]in[39m
     [38;5;2m6200[39m: [38;5;2m  57     : [39m
     [38;5;2m6201[39m: [38;5;2m  58     :         `Handled[39m
     [38;5;2m6202[39m: [38;5;2m  59     :     |_->`Unhandled[39m
     [38;5;2m6203[39m: [38;5;2m  60     :       ) ui[39m
     [38;5;2m6204[39m: [38;5;2m  61     :   ;;[39m
     [38;5;2m6205[39m: [38;5;2m  62     : let mainUi= [39m
     [38;5;2m6206[39m: [38;5;2m  63     :   Lwd.map ~f:inputs @@[39m
     [38;5;2m6207[39m: [38;5;2m  64     :   W.h_pane[39m
     [38;5;2m6208[39m: [38;5;2m  65     :   (Nottui_widgets.vbox [[39m
     [38;5;2m6209[39m: [38;5;2m  66     :     button;[39m
     [38;5;2m6210[39m: [38;5;2m  67     :     W.string <-$ vcount;[39m
     [38;5;2m6211[39m: [38;5;2m  68     :     quitButton])[39m
     [38;5;2m6212[39m: [38;5;2m  69     :   (W.string <-$ vShowStatus)[39m
     [38;5;2m6213[39m: [38;5;2m  70     : ;;[39m
     [38;5;2m6214[39m: [38;5;2m  71     :       [39m
     [38;5;2m6215[39m: [38;5;2m  72     : [39m
     [38;5;2m6216[39m: [38;5;2m  73     : Ui_loop.run ~quit:vQuit (mainUi);;[39m
     [38;5;2m6217[39m: [38;5;2m  74     : [39m
     [38;5;2m6218[39m: [38;5;2m  75     : (*[39m
     [38;5;2m6219[39m: [38;5;2m  76     : type tree = Tree of string * (unit -> tree list)[39m
     [38;5;2m6220[39m: [38;5;2m  77     : [39m
     [38;5;2m6221[39m: [38;5;2m  78     : let rec tree_ui (Tree (label, child)) =[39m
     [38;5;2m6222[39m: [38;5;2m  79     :   let opened = Lwd.var false in[39m
     [38;5;2m6223[39m: [38;5;2m  80     :   let render is_opened =[39m
     [38;5;2m6224[39m: [38;5;2m  81     :     let btn_text = if is_opened then "[-] " else "[+] " in[39m
     [38;5;2m6225[39m: [38;5;2m  82     :     let btn_action () = Lwd.set opened (not is_opened) in[39m
     [38;5;2m6226[39m: [38;5;2m  83     :     let btn = W.button (btn_text ^ label) btn_action in[39m
     [38;5;2m6227[39m: [38;5;2m  84     :     let layout node forest =[39m
     [38;5;2m6228[39m: [38;5;2m  85     :       Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
     [38;5;2m6229[39m: [38;5;2m  86     :     in[39m
     [38;5;2m6230[39m: [38;5;2m  87     :     if is_opened [39m
     [38;5;2m6231[39m: [38;5;2m  88     :     then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
     [38;5;2m6232[39m: [38;5;2m  89     :     else Lwd.pure btn[39m
     [38;5;2m6233[39m: [38;5;2m  90     :   in[39m
     [38;5;2m6234[39m: [38;5;2m  91     :   Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
     [38;5;2m6235[39m: [38;5;2m  92     :   [39m
     [38;5;2m6236[39m: [38;5;2m  93     : and forest_ui nodes = [39m
     [38;5;2m6237[39m: [38;5;2m  94     :   Lwd_utils.pack Ui.pack_y [39m
     [38;5;2m6238[39m: [38;5;2m  95     :     (List.map tree_ui nodes)[39m
     [38;5;2m6239[39m: [38;5;2m  96     : ;;[39m
     [38;5;2m6240[39m: [38;5;2m  97     : [39m
     [38;5;2m6241[39m: [38;5;2m  98     : let rec fake_fs () = [[39m
     [38;5;2m6242[39m: [38;5;2m  99     :   Tree ("bin", fake_fs);[39m
     [38;5;2m6243[39m: [38;5;2m 100     :   Tree ("home", fake_fs);[39m
     [38;5;2m6244[39m: [38;5;2m 101     :   Tree ("usr", fake_fs);[39m
     [38;5;2m6245[39m: [38;5;2m 102     : ] in[39m
     [38;5;2m6246[39m: [38;5;2m 103     : [39m
     [38;5;2m6247[39m: [38;5;2m 104     : Ui_loop.run (forest_ui (fake_fs ()));;[39m
     [38;5;2m6248[39m: [38;5;2m 105     : *)[39m
     [38;5;2m6249[39m: [38;5;2mRemoved regular file ../dune-project:[39m
     [38;5;2m6250[39m: [38;5;2m   1     : (lang dune 3.9)[39m
     [38;5;2m6251[39m: [38;5;2m   2     : [39m
     [38;5;2m6252[39m: [38;5;2m   3     : (name jj_tui)[39m
     [38;5;2m6253[39m: [38;5;2m   4     : [39m
     [38;5;2m6254[39m: [38;5;2m   5     : (generate_opam_files true)[39m
     [38;5;2m6255[39m: [38;5;2m   6     : [39m
     [38;5;2m6256[39m: [38;5;2m   7     : (source[39m
     [38;5;2m6257[39m: [38;5;2m   8     :  (github username/reponame))[39m
     [38;5;2m6258[39m: [38;5;2m   9     : [39m
     [38;5;2m6259[39m: [38;5;2m  10     : (authors "Author Name")[39m
     [38;5;2m6260[39m: [38;5;2m  11     : [39m
     [38;5;2m6261[39m: [38;5;2m  12     : (maintainers "Maintainer Name")[39m
     [38;5;2m6262[39m: [38;5;2m  13     : [39m
     [38;5;2m6263[39m: [38;5;2m  14     : (license LICENSE)[39m
     [38;5;2m6264[39m: [38;5;2m  15     : [39m
     [38;5;2m6265[39m: [38;5;2m  16     : (documentation https://url/to/documentation)[39m
     [38;5;2m6266[39m: [38;5;2m  17     : [39m
     [38;5;2m6267[39m: [38;5;2m  18     : (package[39m
     [38;5;2m6268[39m: [38;5;2m  19     :  (name jj_tui)[39m
     [38;5;2m6269[39m: [38;5;2m  20     :  (synopsis "A short synopsis")[39m
     [38;5;2m6270[39m: [38;5;2m  21     :  (description "A longer description")[39m
     [38;5;2m6271[39m: [38;5;2m  22     :  (depends ocaml dune)[39m
     [38;5;2m6272[39m: [38;5;2m  23     :  (tags[39m
     [38;5;2m6273[39m: [38;5;2m  24     :   (topics "to describe" your project)))[39m
     [38;5;2m6274[39m: [38;5;2m  25     : [39m
     [38;5;2m6275[39m: [38;5;2m  26     : ; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
     [38;5;2m6276[39m: [38;5;2mRemoved regular file ../flake.lock:[39m
     [38;5;2m6277[39m: [38;5;2m   1     : {[39m
     [38;5;2m6278[39m: [38;5;2m   2     :   "nodes": {[39m
     [38;5;2m6279[39m: [38;5;2m   3     :     "nixpkgs": {[39m
     [38;5;2m6280[39m: [38;5;2m   4     :       "locked": {[39m
     [38;5;2m6281[39m: [38;5;2m   5     :         "lastModified": 1713344939,[39m
     [38;5;2m6282[39m: [38;5;2m   6     :         "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
     [38;5;2m6283[39m: [38;5;2m   7     :         "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
     [38;5;2m6284[39m: [38;5;2m   8     :         "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
     [38;5;2m6285[39m: [38;5;2m   9     :         "type": "path"[39m
     [38;5;2m6286[39m: [38;5;2m  10     :       },[39m
     [38;5;2m6287[39m: [38;5;2m  11     :       "original": {[39m
     [38;5;2m6288[39m: [38;5;2m  12     :         "id": "nixpkgs",[39m
     [38;5;2m6289[39m: [38;5;2m  13     :         "type": "indirect"[39m
     [38;5;2m6290[39m: [38;5;2m  14     :       }[39m
     [38;5;2m6291[39m: [38;5;2m  15     :     },[39m
     [38;5;2m6292[39m: [38;5;2m  16     :     "root": {[39m
     [38;5;2m6293[39m: [38;5;2m  17     :       "inputs": {[39m
     [38;5;2m6294[39m: [38;5;2m  18     :         "nixpkgs": "nixpkgs"[39m
     [38;5;2m6295[39m: [38;5;2m  19     :       }[39m
     [38;5;2m6296[39m: [38;5;2m  20     :     }[39m
     [38;5;2m6297[39m: [38;5;2m  21     :   },[39m
     [38;5;2m6298[39m: [38;5;2m  22     :   "root": "root",[39m
     [38;5;2m6299[39m: [38;5;2m  23     :   "version": 7[39m
     [38;5;2m6300[39m: [38;5;2m  24     : }[39m
     [38;5;2m6301[39m: [38;5;2mRemoved regular file ../flake.nix:[39m
     [38;5;2m6302[39m: [38;5;2m   1     : {[39m
     [38;5;2m6303[39m: [38;5;2m   2     :   description = "Example JavaScript development environment for Zero to Nix";[39m
     [38;5;2m6304[39m: [38;5;2m   3     : [39m
     [38;5;2m6305[39m: [38;5;2m   4     :   # Flake inputs[39m
     [38;5;2m6306[39m: [38;5;2m   5     :   inputs = {[39m
     [38;5;2m6307[39m: [38;5;2m   6     : [39m
     [38;5;2m6308[39m: [38;5;2m   7     :     # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
     [38;5;2m6309[39m: [38;5;2m   8     :     nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
     [38;5;2m6310[39m: [38;5;2m   9     : [39m
     [38;5;2m6311[39m: [38;5;2m  10     :     # roc={[39m
     [38;5;2m6312[39m: [38;5;2m  11     :     #   url="github:roc-lang/roc";[39m
     [38;5;2m6313[39m: [38;5;2m  12     :     # inputs.nixpkgs.follows="nixpkgs";[39m
     [38;5;2m6314[39m: [38;5;2m  13     : [39m
     [38;5;2m6315[39m: [38;5;2m  14     :     # };[39m
     [38;5;2m6316[39m: [38;5;2m  15     : [39m
     [38;5;2m6317[39m: [38;5;2m  16     :   };[39m
     [38;5;2m6318[39m: [38;5;2m  17     :   # Flake outputs[39m
     [38;5;2m6319[39m: [38;5;2m  18     :   outputs = { self, nixpkgs, ... }@inputs:[39m
     [38;5;2m6320[39m: [38;5;2m  19     :     let[39m
     [38;5;2m6321[39m: [38;5;2m  20     :       # Systems supported[39m
     [38;5;2m6322[39m: [38;5;2m  21     :       allSystems = [[39m
     [38;5;2m6323[39m: [38;5;2m  22     :         "x86_64-linux" # 64-bit Intel/AMD Linux[39m
     [38;5;2m6324[39m: [38;5;2m  23     :       ];[39m
     [38;5;2m6325[39m: [38;5;2m  24     : [39m
     [38;5;2m6326[39m: [38;5;2m  25     :       # Helper to provide system-specific attributes[39m
     [38;5;2m6327[39m: [38;5;2m  26     :       forAllSystems = f:[39m
     [38;5;2m6328[39m: [38;5;2m  27     :         nixpkgs.lib.genAttrs allSystems (system:[39m
     [38;5;2m6329[39m: [38;5;2m  28     :           f {[39m
     [38;5;2m6330[39m: [38;5;2m  29     :             pkgs = import nixpkgs { inherit system; };[39m
     [38;5;2m6331[39m: [38;5;2m  30     : [39m
     [38;5;2m6332[39m: [38;5;2m  31     :           });[39m
     [38;5;2m6333[39m: [38;5;2m  32     :     in {[39m
     [38;5;2m6334[39m: [38;5;2m  33     :       # Development environment output[39m
     [38;5;2m6335[39m: [38;5;2m  34     :       devShells = forAllSystems ({ pkgs }: {[39m
     [38;5;2m6336[39m: [38;5;2m  35     :         default =[39m
     [38;5;2m6337[39m: [38;5;2m  36     : [39m
     [38;5;2m6338[39m: [38;5;2m  37     :           pkgs.mkShell {[39m
     [38;5;2m6339[39m: [38;5;2m  38     :             packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
     [38;5;2m6340[39m: [38;5;2m  39     :             shellHook = let[39m
     [38;5;2m6341[39m: [38;5;2m  40     :               libPath =[39m
     [38;5;2m6342[39m: [38;5;2m  41     :                 pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
     [38;5;2m6343[39m: [38;5;2m  42     :             in ''[39m
     [38;5;2m6344[39m: [38;5;2m  43     :               # yolo[39m
     [38;5;2m6345[39m: [38;5;2m  44     :               export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
     [38;5;2m6346[39m: [38;5;2m  45     :               export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
     [38;5;2m6347[39m: [38;5;2m  46     :             '';[39m
     [38;5;2m6348[39m: [38;5;2m  47     :           };[39m
     [38;5;2m6349[39m: [38;5;2m  48     : [39m
     [38;5;2m6350[39m: [38;5;2m  49     :       });[39m
     [38;5;2m6351[39m: [38;5;2m  50     : [39m
     [38;5;2m6352[39m: [38;5;2m  51     :     };[39m
     [38;5;2m6353[39m: [38;5;2m  52     : }[39m
     [38;5;2m6354[39m: [38;5;2mAdded regular file .ocamlformat:[39m
     [38;5;2m6355[39m: [38;5;2m        1: [39m
     [38;5;2m6356[39m: [38;5;2m        2: profile=conventional[39m
     [38;5;2m6357[39m: [38;5;2mAdded regular file .ocmalformat:[39m
     [38;5;2m6358[39m: [38;5;2m        1: version=0.24.1[39m
     [38;5;2m6359[39m: [38;5;2m        2: profile=conventional[39m
     [38;5;2m6360[39m: [38;5;2mAdded regular file bin/dune:[39m
     [38;5;2m6361[39m: [38;5;2m        1: (executable[39m
     [38;5;2m6362[39m: [38;5;2m        2:  (public_name jj_tui)[39m
     [38;5;2m6363[39m: [38;5;2m        3:  (name main)[39m
     [38;5;2m6364[39m: [38;5;2m        4:  (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
     [38;5;2m6365[39m: [38;5;2m        5:  )[39m
     [38;5;2m6366[39m: [38;5;2mAdded regular file bin/main.ml:[39m
     [38;5;2m6367[39m: [38;5;2m        1: open Nottui[39m
     [38;5;2m6368[39m: [38;5;2m        2: open Feather[39m
     [38;5;2m6369[39m: [38;5;2m        3: open Lwd_infix[39m
     [38;5;2m6370[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m6371[39m: [38;5;2m        5: module W = Nottui_widgets[39m
     [38;5;2m6372[39m: [38;5;2m        6: [39m
     [38;5;2m6373[39m: [38;5;2m        7: let colored_string = Jj_tui.AnsiReverse.colored_string[39m
     [38;5;2m6374[39m: [38;5;2m        8: [39m
     [38;5;2m6375[39m: [38;5;2m        9: (* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
     [38;5;2m6376[39m: [38;5;2m       10: let cmdArgs cmd args =[39m
     [38;5;2m6377[39m: [38;5;2m       11:   let stdout, stderr =[39m
     [38;5;2m6378[39m: [38;5;2m       12:     Feather.process cmd args |> Feather.collect stdout_and_stderr[39m
     [38;5;2m6379[39m: [38;5;2m       13:   in[39m
     [38;5;2m6380[39m: [38;5;2m       14:   stdout ^ stderr[39m
     [38;5;2m6381[39m: [38;5;2m       15: [39m
     [38;5;2m6382[39m: [38;5;2m       16: let jj args = cmdArgs "jj" (List.concat [ args; [ "--color"; "always" ] ])[39m
     [38;5;2m6383[39m: [38;5;2m       17: let vcount = Lwd.var I.empty[39m
     [38;5;2m6384[39m: [38;5;2m       18: [39m
     [38;5;2m6385[39m: [38;5;2m       19: let _button =[39m
     [38;5;2m6386[39m: [38;5;2m       20:   W.button (Printf.sprintf "run jj") (fun () ->[39m
     [38;5;2m6387[39m: [38;5;2m       21:       vcount $= (cmdArgs "jj" [ "log"; "--color"; "always" ] |> colored_string))[39m
     [38;5;2m6388[39m: [38;5;2m       22:   |> Lwd.pure[39m
     [38;5;2m6389[39m: [38;5;2m       23: [39m
     [38;5;2m6390[39m: [38;5;2m       24: let vQuit = Lwd.var false[39m
     [38;5;2m6391[39m: [38;5;2m       25: [39m
     [38;5;2m6392[39m: [38;5;2m       26: let _quitButton =[39m
     [38;5;2m6393[39m: [38;5;2m       27:   W.button (Printf.sprintf "quit ") (fun () -> vQuit $= true) |> Lwd.pure[39m
     [38;5;2m6394[39m: [38;5;2m       28: [39m
     [38;5;2m6395[39m: [38;5;2m       29: let ( <-$ ) f v = Lwd.map ~f (Lwd.get v)[39m
     [38;5;2m6396[39m: [38;5;2m       30: [39m
     [38;5;2m6397[39m: [38;5;2m       31: (* let ( let<- ) v f = Lwd.map ~f (Lwd.get v) *)[39m
     [38;5;2m6398[39m: [38;5;2m       32: let vShowStatus = Lwd.var I.empty[39m
     [38;5;2m6399[39m: [38;5;2m       33: let vother = Lwd.var ""[39m
     [38;5;2m6400[39m: [38;5;2m       34: [39m
     [38;5;2m6401[39m: [38;5;2m       35: let onChange () =[39m
     [38;5;2m6402[39m: [38;5;2m       36:   let res = jj [ "show" ] |> colored_string in[39m
     [38;5;2m6403[39m: [38;5;2m       37:   vShowStatus $= res;[39m
     [38;5;2m6404[39m: [38;5;2m       38:   let res = jj [] in[39m
     [38;5;2m6405[39m: [38;5;2m       39:   vcount $= colored_string res[39m
     [38;5;2m6406[39m: [38;5;2m       40: [39m
     [38;5;2m6407[39m: [38;5;2m       41: let changeInputs key =[39m
     [38;5;2m6408[39m: [38;5;2m       42:   let noOut args =[39m
     [38;5;2m6409[39m: [38;5;2m       43:     let _ = jj args in[39m
     [38;5;2m6410[39m: [38;5;2m       44:     `Handled[39m
     [38;5;2m6411[39m: [38;5;2m       45:   in[39m
     [38;5;2m6412[39m: [38;5;2m       46:   match key with[39m
     [38;5;2m6413[39m: [38;5;2m       47:   | 'P' -> noOut [ "prev" ][39m
     [38;5;2m6414[39m: [38;5;2m       48:   | 'p' -> noOut [ "prev"; "--edit" ][39m
     [38;5;2m6415[39m: [38;5;2m       49:   | 'N' -> noOut [ "next" ][39m
     [38;5;2m6416[39m: [38;5;2m       50:   | 'n' -> noOut [ "next"; "--edit" ][39m
     [38;5;2m6417[39m: [38;5;2m       51:   | 'S' -> noOut [ "unsquash"; "-i"; "--tool"; "sublime_merge" ][39m
     [38;5;2m6418[39m: [38;5;2m       52:   | _ -> `Unhandled[39m
     [38;5;2m6419[39m: [38;5;2m       53: [39m
     [38;5;2m6420[39m: [38;5;2m       54: let inputs ui =[39m
     [38;5;2m6421[39m: [38;5;2m       55:   Ui.event_filter[39m
     [38;5;2m6422[39m: [38;5;2m       56:     (fun event ->[39m
     [38;5;2m6423[39m: [38;5;2m       57:       match event with[39m
     [38;5;2m6424[39m: [38;5;2m       58:       | `Key (`ASCII 's', _) ->[39m
     [38;5;2m6425[39m: [38;5;2m       59:           let res = jj [ "show" ] in[39m
     [38;5;2m6426[39m: [38;5;2m       60:           vShowStatus $= (res |> colored_string);[39m
     [38;5;2m6427[39m: [38;5;2m       61: [39m
     [38;5;2m6428[39m: [38;5;2m       62:           `Handled[39m
     [38;5;2m6429[39m: [38;5;2m       63:       | `Key (`ASCII 'l', _) ->[39m
     [38;5;2m6430[39m: [38;5;2m       64:           let res = jj [] in[39m
     [38;5;2m6431[39m: [38;5;2m       65:           vcount $= colored_string res;[39m
     [38;5;2m6432[39m: [38;5;2m       66:           vother $= res;[39m
     [38;5;2m6433[39m: [38;5;2m       67: [39m
     [38;5;2m6434[39m: [38;5;2m       68:           `Handled[39m
     [38;5;2m6435[39m: [38;5;2m       69:       | `Key (`ASCII 'q', _) ->[39m
     [38;5;2m6436[39m: [38;5;2m       70:           vQuit $= true;[39m
     [38;5;2m6437[39m: [38;5;2m       71: [39m
     [38;5;2m6438[39m: [38;5;2m       72:           `Handled[39m
     [38;5;2m6439[39m: [38;5;2m       73:       | `Key (`ASCII key, _) -> ([39m
     [38;5;2m6440[39m: [38;5;2m       74:           match changeInputs key with[39m
     [38;5;2m6441[39m: [38;5;2m       75:           | `Handled ->[39m
     [38;5;2m6442[39m: [38;5;2m       76:               onChange ();[39m
     [38;5;2m6443[39m: [38;5;2m       77:               `Handled[39m
     [38;5;2m6444[39m: [38;5;2m       78:           | `Unhandled -> `Unhandled)[39m
     [38;5;2m6445[39m: [38;5;2m       79:       | _ -> `Unhandled)[39m
     [38;5;2m6446[39m: [38;5;2m       80:     ui[39m
     [38;5;2m6447[39m: [38;5;2m       81: [39m
     [38;5;2m6448[39m: [38;5;2m       82: let mainUi =[39m
     [38;5;2m6449[39m: [38;5;2m       83:   let$ pane =[39m
     [38;5;2m6450[39m: [38;5;2m       84:     W.h_pane[39m
     [38;5;2m6451[39m: [38;5;2m       85:       (Nottui_widgets.vbox[39m
     [38;5;2m6452[39m: [38;5;2m       86:          [ (* button;  *) Ui.atom <-$ vcount (* quitButton  *) ])[39m
     [38;5;2m6453[39m: [38;5;2m       87:       (Ui.atom <-$ vShowStatus)[39m
     [38;5;2m6454[39m: [38;5;2m       88:   in[39m
     [38;5;2m6455[39m: [38;5;2m       89:   inputs pane[39m
     [38;5;2m6456[39m: [38;5;2m       90: ;;[39m
     [38;5;2m6457[39m: [38;5;2m       91: [39m
     [38;5;2m6458[39m: [38;5;2m       92: (*TODO:For hosting a subprocess i should look into using EIO and Ui_loop.step like some of the other libraries built with nottui*)[39m
     [38;5;2m6459[39m: [38;5;2m       93: Ui_loop.run ~quit:vQuit mainUi[39m
     [38;5;2m6460[39m: [38;5;2m       94: (* let my_image=(Notty.I.string Notty.A.empty "\027[32mThis is in green %s\027[0m" ) in *)[39m
     [38;5;2m6461[39m: [38;5;2m       95: (* let my_image =[39m
     [38;5;2m6462[39m: [38;5;2m       96:      Jj_tui.AnsiReverse.Cap.parse_ansi_escape_codes[39m
     [38;5;2m6463[39m: [38;5;2m       97:        "\027[32mThis is in green %s\027[0m "[39m
     [38;5;2m6464[39m: [38;5;2m       98:      |> List.map (fun (x, str) -> Notty.I.string x str)[39m
     [38;5;2m6465[39m: [38;5;2m       99:    ;;[39m
     [38;5;2m6466[39m: [38;5;2m      100: [39m
     [38;5;2m6467[39m: [38;5;2m      101:    Notty_unix.output_image (my_image |> List.hd) *)[39m
     [38;5;2m6468[39m: [38;5;2m      102: [39m
     [38;5;2m6469[39m: [38;5;2m      103: (*[39m
     [38;5;2m6470[39m: [38;5;2m      104: type tree = Tree of string * (unit -> tree list)[39m
     [38;5;2m6471[39m: [38;5;2m      105: [39m
     [38;5;2m6472[39m: [38;5;2m      106: let rec tree_ui (Tree (label, child)) =[39m
     [38;5;2m6473[39m: [38;5;2m      107:   let opened = Lwd.var false in[39m
     [38;5;2m6474[39m: [38;5;2m      108:   let render is_opened =[39m
     [38;5;2m6475[39m: [38;5;2m      109:     let btn_text = if is_opened then "[-] " else "[+] " in[39m
     [38;5;2m6476[39m: [38;5;2m      110:     let btn_action () = Lwd.set opened (not is_opened) in[39m
     [38;5;2m6477[39m: [38;5;2m      111:     let btn = W.button (btn_text ^ label) btn_action in[39m
     [38;5;2m6478[39m: [38;5;2m      112:     let layout node forest =[39m
     [38;5;2m6479[39m: [38;5;2m      113:       Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
     [38;5;2m6480[39m: [38;5;2m      114:     in[39m
     [38;5;2m6481[39m: [38;5;2m      115:     if is_opened [39m
     [38;5;2m6482[39m: [38;5;2m      116:     then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
     [38;5;2m6483[39m: [38;5;2m      117:     else Lwd.pure btn[39m
     [38;5;2m6484[39m: [38;5;2m      118:   in[39m
     [38;5;2m6485[39m: [38;5;2m      119:   Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
     [38;5;2m6486[39m: [38;5;2m      120:   [39m
     [38;5;2m6487[39m: [38;5;2m      121: and forest_ui nodes = [39m
     [38;5;2m6488[39m: [38;5;2m      122:   Lwd_utils.pack Ui.pack_y [39m
     [38;5;2m6489[39m: [38;5;2m      123:     (List.map tree_ui nodes)[39m
     [38;5;2m6490[39m: [38;5;2m      124: ;;[39m
     [38;5;2m6491[39m: [38;5;2m      125: [39m
     [38;5;2m6492[39m: [38;5;2m      126: let rec fake_fs () = [[39m
     [38;5;2m6493[39m: [38;5;2m      127:   Tree ("bin", fake_fs);[39m
     [38;5;2m6494[39m: [38;5;2m      128:   Tree ("home", fake_fs);[39m
     [38;5;2m6495[39m: [38;5;2m      129:   Tree ("usr", fake_fs);[39m
     [38;5;2m6496[39m: [38;5;2m      130: ] in[39m
     [38;5;2m6497[39m: [38;5;2m      131: [39m
     [38;5;2m6498[39m: [38;5;2m      132: Ui_loop.run (forest_ui (fake_fs ()));;[39m
     [38;5;2m6499[39m: [38;5;2m      133: *)[39m
     [38;5;2m6500[39m: [38;5;2mAdded regular file dune-project:[39m
     [38;5;2m6501[39m: [38;5;2m        1: (lang dune 3.9)[39m
     [38;5;2m6502[39m: [38;5;2m        2: [39m
     [38;5;2m6503[39m: [38;5;2m        3: (name jj_tui)[39m
     [38;5;2m6504[39m: [38;5;2m        4: [39m
     [38;5;2m6505[39m: [38;5;2m        5: (generate_opam_files true)[39m
     [38;5;2m6506[39m: [38;5;2m        6: [39m
     [38;5;2m6507[39m: [38;5;2m        7: (source[39m
     [38;5;2m6508[39m: [38;5;2m        8:  (github username/reponame))[39m
     [38;5;2m6509[39m: [38;5;2m        9: [39m
     [38;5;2m6510[39m: [38;5;2m       10: (authors "Author Name")[39m
     [38;5;2m6511[39m: [38;5;2m       11: [39m
     [38;5;2m6512[39m: [38;5;2m       12: (maintainers "Maintainer Name")[39m
     [38;5;2m6513[39m: [38;5;2m       13: [39m
     [38;5;2m6514[39m: [38;5;2m       14: (license LICENSE)[39m
     [38;5;2m6515[39m: [38;5;2m       15: [39m
     [38;5;2m6516[39m: [38;5;2m       16: (documentation https://url/to/documentation)[39m
     [38;5;2m6517[39m: [38;5;2m       17: [39m
     [38;5;2m6518[39m: [38;5;2m       18: (package[39m
     [38;5;2m6519[39m: [38;5;2m       19:  (name jj_tui)[39m
     [38;5;2m6520[39m: [38;5;2m       20:  (synopsis "A short synopsis")[39m
     [38;5;2m6521[39m: [38;5;2m       21:  (description "A longer description")[39m
     [38;5;2m6522[39m: [38;5;2m       22:  (depends ocaml dune)[39m
     [38;5;2m6523[39m: [38;5;2m       23:  (tags[39m
     [38;5;2m6524[39m: [38;5;2m       24:   (topics "to describe" your project)))[39m
     [38;5;2m6525[39m: [38;5;2m       25: [39m
     [38;5;2m6526[39m: [38;5;2m       26: ; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
     [38;5;2m6527[39m: [38;5;2mAdded regular file flake.lock:[39m
     [38;5;2m6528[39m: [38;5;2m        1: {[39m
     [38;5;2m6529[39m: [38;5;2m        2:   "nodes": {[39m
     [38;5;2m6530[39m: [38;5;2m        3:     "nixpkgs": {[39m
     [38;5;2m6531[39m: [38;5;2m        4:       "locked": {[39m
     [38;5;2m6532[39m: [38;5;2m        5:         "lastModified": 1713344939,[39m
     [38;5;2m6533[39m: [38;5;2m        6:         "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
     [38;5;2m6534[39m: [38;5;2m        7:         "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
     [38;5;2m6535[39m: [38;5;2m        8:         "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
     [38;5;2m6536[39m: [38;5;2m        9:         "type": "path"[39m
     [38;5;2m6537[39m: [38;5;2m       10:       },[39m
     [38;5;2m6538[39m: [38;5;2m       11:       "original": {[39m
     [38;5;2m6539[39m: [38;5;2m       12:         "id": "nixpkgs",[39m
     [38;5;2m6540[39m: [38;5;2m       13:         "type": "indirect"[39m
     [38;5;2m6541[39m: [38;5;2m       14:       }[39m
     [38;5;2m6542[39m: [38;5;2m       15:     },[39m
     [38;5;2m6543[39m: [38;5;2m       16:     "root": {[39m
     [38;5;2m6544[39m: [38;5;2m       17:       "inputs": {[39m
     [38;5;2m6545[39m: [38;5;2m       18:         "nixpkgs": "nixpkgs"[39m
     [38;5;2m6546[39m: [38;5;2m       19:       }[39m
     [38;5;2m6547[39m: [38;5;2m       20:     }[39m
     [38;5;2m6548[39m: [38;5;2m       21:   },[39m
     [38;5;2m6549[39m: [38;5;2m       22:   "root": "root",[39m
     [38;5;2m6550[39m: [38;5;2m       23:   "version": 7[39m
     [38;5;2m6551[39m: [38;5;2m       24: }[39m
     [38;5;2m6552[39m: [38;5;2mAdded regular file flake.nix:[39m
     [38;5;2m6553[39m: [38;5;2m        1: {[39m
     [38;5;2m6554[39m: [38;5;2m        2:   description = "Example JavaScript development environment for Zero to Nix";[39m
     [38;5;2m6555[39m: [38;5;2m        3: [39m
     [38;5;2m6556[39m: [38;5;2m        4:   # Flake inputs[39m
     [38;5;2m6557[39m: [38;5;2m        5:   inputs = {[39m
     [38;5;2m6558[39m: [38;5;2m        6: [39m
     [38;5;2m6559[39m: [38;5;2m        7:     # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
     [38;5;2m6560[39m: [38;5;2m        8:     nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
     [38;5;2m6561[39m: [38;5;2m        9: [39m
     [38;5;2m6562[39m: [38;5;2m       10:     # roc={[39m
     [38;5;2m6563[39m: [38;5;2m       11:     #   url="github:roc-lang/roc";[39m
     [38;5;2m6564[39m: [38;5;2m       12:     # inputs.nixpkgs.follows="nixpkgs";[39m
     [38;5;2m6565[39m: [38;5;2m       13: [39m
     [38;5;2m6566[39m: [38;5;2m       14:     # };[39m
     [38;5;2m6567[39m: [38;5;2m       15: [39m
     [38;5;2m6568[39m: [38;5;2m       16:   };[39m
     [38;5;2m6569[39m: [38;5;2m       17:   # Flake outputs[39m
     [38;5;2m6570[39m: [38;5;2m       18:   outputs = { self, nixpkgs, ... }@inputs:[39m
     [38;5;2m6571[39m: [38;5;2m       19:     let[39m
     [38;5;2m6572[39m: [38;5;2m       20:       # Systems supported[39m
     [38;5;2m6573[39m: [38;5;2m       21:       allSystems = [[39m
     [38;5;2m6574[39m: [38;5;2m       22:         "x86_64-linux" # 64-bit Intel/AMD Linux[39m
     [38;5;2m6575[39m: [38;5;2m       23:       ];[39m
     [38;5;2m6576[39m: [38;5;2m       24: [39m
     [38;5;2m6577[39m: [38;5;2m       25:       # Helper to provide system-specific attributes[39m
     [38;5;2m6578[39m: [38;5;2m       26:       forAllSystems = f:[39m
     [38;5;2m6579[39m: [38;5;2m       27:         nixpkgs.lib.genAttrs allSystems (system:[39m
     [38;5;2m6580[39m: [38;5;2m       28:           f {[39m
     [38;5;2m6581[39m: [38;5;2m       29:             pkgs = import nixpkgs { inherit system; };[39m
     [38;5;2m6582[39m: [38;5;2m       30: [39m
     [38;5;2m6583[39m: [38;5;2m       31:           });[39m
     [38;5;2m6584[39m: [38;5;2m       32:     in {[39m
     [38;5;2m6585[39m: [38;5;2m       33:       # Development environment output[39m
     [38;5;2m6586[39m: [38;5;2m       34:       devShells = forAllSystems ({ pkgs }: {[39m
     [38;5;2m6587[39m: [38;5;2m       35:         default =[39m
     [38;5;2m6588[39m: [38;5;2m       36: [39m
     [38;5;2m6589[39m: [38;5;2m       37:           pkgs.mkShell {[39m
     [38;5;2m6590[39m: [38;5;2m       38:             packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
     [38;5;2m6591[39m: [38;5;2m       39:             shellHook = let[39m
     [38;5;2m6592[39m: [38;5;2m       40:               libPath =[39m
     [38;5;2m6593[39m: [38;5;2m       41:                 pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
     [38;5;2m6594[39m: [38;5;2m       42:             in ''[39m
     [38;5;2m6595[39m: [38;5;2m       43:               # yolo[39m
     [38;5;2m6596[39m: [38;5;2m       44:               export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
     [38;5;2m6597[39m: [38;5;2m       45:               export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
     [38;5;2m6598[39m: [38;5;2m       46:             '';[39m
     [38;5;2m6599[39m: [38;5;2m       47:           };[39m
     [38;5;2m6600[39m: [38;5;2m       48: [39m
     [38;5;2m6601[39m: [38;5;2m       49:       });[39m
     [38;5;2m6602[39m: [38;5;2m       50: [39m
     [38;5;2m6603[39m: [38;5;2m       51:     };[39m
     [38;5;2m6604[39m: [38;5;2m       52: }[39m
     [38;5;2m6605[39m: [38;5;2mAdded regular file jj_tui.opam:[39m
     [38;5;2m6606[39m: [38;5;2m        1: # This file is generated by dune, edit dune-project instead[39m
     [38;5;2m6607[39m: [38;5;2m        2: opam-version: "2.0"[39m
     [38;5;2m6608[39m: [38;5;2m        3: synopsis: "A short synopsis"[39m
     [38;5;2m6609[39m: [38;5;2m        4: description: "A longer description"[39m
     [38;5;2m6610[39m: [38;5;2m        5: maintainer: ["Maintainer Name"][39m
     [38;5;2m6611[39m: [38;5;2m        6: authors: ["Author Name"][39m
     [38;5;2m6612[39m: [38;5;2m        7: license: "LICENSE"[39m
     [38;5;2m6613[39m: [38;5;2m        8: tags: ["topics" "to describe" "your" "project"][39m
     [38;5;2m6614[39m: [38;5;2m        9: homepage: "https://github.com/username/reponame"[39m
     [38;5;2m6615[39m: [38;5;2m       10: doc: "https://url/to/documentation"[39m
     [38;5;2m6616[39m: [38;5;2m       11: bug-reports: "https://github.com/username/reponame/issues"[39m
     [38;5;2m6617[39m: [38;5;2m       12: depends: [[39m
     [38;5;2m6618[39m: [38;5;2m       13:   "ocaml"[39m
     [38;5;2m6619[39m: [38;5;2m       14:   "dune" {>= "3.9"}[39m
     [38;5;2m6620[39m: [38;5;2m       15:   "odoc" {with-doc}[39m
     [38;5;2m6621[39m: [38;5;2m       16: ][39m
     [38;5;2m6622[39m: [38;5;2m       17: build: [[39m
     [38;5;2m6623[39m: [38;5;2m       18:   ["dune" "subst"] {dev}[39m
     [38;5;2m6624[39m: [38;5;2m       19:   [[39m
     [38;5;2m6625[39m: [38;5;2m       20:     "dune"[39m
     [38;5;2m6626[39m: [38;5;2m       21:     "build"[39m
     [38;5;2m6627[39m: [38;5;2m       22:     "-p"[39m
     [38;5;2m6628[39m: [38;5;2m       23:     name[39m
     [38;5;2m6629[39m: [38;5;2m       24:     "-j"[39m
     [38;5;2m6630[39m: [38;5;2m       25:     jobs[39m
     [38;5;2m6631[39m: [38;5;2m       26:     "@install"[39m
     [38;5;2m6632[39m: [38;5;2m       27:     "@runtest" {with-test}[39m
     [38;5;2m6633[39m: [38;5;2m       28:     "@doc" {with-doc}[39m
     [38;5;2m6634[39m: [38;5;2m       29:   ][39m
     [38;5;2m6635[39m: [38;5;2m       30: ][39m
     [38;5;2m6636[39m: [38;5;2m       31: dev-repo: "git+https://github.com/username/reponame.git"[39m
     [38;5;2m6637[39m: [38;5;2mAdded regular file lib/ansiReverse.ml:[39m
     [38;5;2m6638[39m: [38;5;2m        1: open Notty[39m
     [38;5;2m6639[39m: [38;5;2m        2: [39m
     [38;5;2m6640[39m: [38;5;2m        3: type op = Buffer.t -> unit[39m
     [38;5;2m6641[39m: [38;5;2m        4: [39m
     [38;5;2m6642[39m: [38;5;2m        5: (* let ( & ) op1 op2 buf =[39m
     [38;5;2m6643[39m: [38;5;2m        6:      op1 buf;[39m
     [38;5;2m6644[39m: [38;5;2m        7:      op2 buf[39m
     [38;5;2m6645[39m: [38;5;2m        8: [39m
     [38;5;2m6646[39m: [38;5;2m        9: [39m
     [38;5;2m6647[39m: [38;5;2m       10:    let ( <| ), ( <. ), ( <! ) = Buffer.(add_string, add_char, add_decimal) *)[39m
     [38;5;2m6648[39m: [38;5;2m       11: let invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m6649[39m: [38;5;2m       12: [39m
     [38;5;2m6650[39m: [38;5;2m       13: let rgb ~r ~g ~b =[39m
     [38;5;2m6651[39m: [38;5;2m       14:   if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m6652[39m: [38;5;2m       15:     invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m6653[39m: [38;5;2m       16:   else 0x01000000 lor ((r * 36) + (g * 6) + b + 16)[39m
     [38;5;2m6654[39m: [38;5;2m       17: [39m
     [38;5;2m6655[39m: [38;5;2m       18: let gray level =[39m
     [38;5;2m6656[39m: [38;5;2m       19:   if level < 0 || level > 23 then[39m
     [38;5;2m6657[39m: [38;5;2m       20:     invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m6658[39m: [38;5;2m       21:   else 0x01000000 lor (level + 232)[39m
     [38;5;2m6659[39m: [38;5;2m       22: [39m
     [38;5;2m6660[39m: [38;5;2m       23: let rgb_888 ~r ~g ~b =[39m
     [38;5;2m6661[39m: [38;5;2m       24:   if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m6662[39m: [38;5;2m       25:     invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m6663[39m: [38;5;2m       26:   else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m6664[39m: [38;5;2m       27: [39m
     [38;5;2m6665[39m: [38;5;2m       28: let sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m6666[39m: [38;5;2m       29: [39m
     [38;5;2m6667[39m: [38;5;2m       30: let attr_of_ints fg bg st =[39m
     [38;5;2m6668[39m: [38;5;2m       31:   A.fg @@ A.unsafe_color_of_int fg[39m
     [38;5;2m6669[39m: [38;5;2m       32:   |> A.( ++ ) (A.bg @@ A.unsafe_color_of_int bg)[39m
     [38;5;2m6670[39m: [38;5;2m       33:   |> A.( ++ ) (A.st @@ A.unsafe_style_of_int st)[39m
     [38;5;2m6671[39m: [38;5;2m       34: [39m
     [38;5;2m6672[39m: [38;5;2m       35: let fg_int i = A.fg @@ A.unsafe_color_of_int i[39m
     [38;5;2m6673[39m: [38;5;2m       36: let bg_int i = A.bg @@ A.unsafe_color_of_int i[39m
     [38;5;2m6674[39m: [38;5;2m       37: [39m
     [38;5;2m6675[39m: [38;5;2m       38: let print_image img =[39m
     [38;5;2m6676[39m: [38;5;2m       39:   print_endline "image:";[39m
     [38;5;2m6677[39m: [38;5;2m       40:   img |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m6678[39m: [38;5;2m       41:   print_endline (Format.flush_str_formatter () |> String.escaped)[39m
     [38;5;2m6679[39m: [38;5;2m       42: [39m
     [38;5;2m6680[39m: [38;5;2m       43: let parse_ansi_escape_codes (input : string) : (A.t * string) list =[39m
     [38;5;2m6681[39m: [38;5;2m       44:   let len = String.length input in[39m
     [38;5;2m6682[39m: [38;5;2m       45:   let rec parse_codes acc i =[39m
     [38;5;2m6683[39m: [38;5;2m       46:     if i >= len then List.rev acc[39m
     [38;5;2m6684[39m: [38;5;2m       47:     else[39m
     [38;5;2m6685[39m: [38;5;2m       48:       let attr, j =[39m
     [38;5;2m6686[39m: [38;5;2m       49:         if i + 1 < len && input.[i] = '\027' && input.[i + 1] = '[' then ([39m
     [38;5;2m6687[39m: [38;5;2m       50:           let params = ref [] in[39m
     [38;5;2m6688[39m: [38;5;2m       51:           let j = ref (i + 2) in[39m
     [38;5;2m6689[39m: [38;5;2m       52:           while !j < len && input.[!j] <> 'm' do[39m
     [38;5;2m6690[39m: [38;5;2m       53:             let start = !j in[39m
     [38;5;2m6691[39m: [38;5;2m       54:             while !j < len && input.[!j] <> ';' && input.[!j] <> 'm' do[39m
     [38;5;2m6692[39m: [38;5;2m       55:               incr j[39m
     [38;5;2m6693[39m: [38;5;2m       56:             done;[39m
     [38;5;2m6694[39m: [38;5;2m       57:             let param = String.sub input start (!j - start) in[39m
     [38;5;2m6695[39m: [38;5;2m       58:             params := int_of_string param :: !params;[39m
     [38;5;2m6696[39m: [38;5;2m       59:             if !j < len && input.[!j] = ';' then incr j[39m
     [38;5;2m6697[39m: [38;5;2m       60:           done;[39m
     [38;5;2m6698[39m: [38;5;2m       61:           if !j < len && input.[!j] = 'm' then[39m
     [38;5;2m6699[39m: [38;5;2m       62:             let params = List.rev !params in[39m
     [38;5;2m6700[39m: [38;5;2m       63:             let attr =[39m
     [38;5;2m6701[39m: [38;5;2m       64:               match params with[39m
     [38;5;2m6702[39m: [38;5;2m       65:               | [] -> A.empty[39m
     [38;5;2m6703[39m: [38;5;2m       66:               | 0 :: _ -> A.empty[39m
     [38;5;2m6704[39m: [38;5;2m       67:               | 1 :: _ -> A.st A.bold[39m
     [38;5;2m6705[39m: [38;5;2m       68:               | 2 :: _ -> A.st A.italic[39m
     [38;5;2m6706[39m: [38;5;2m       69:               | 4 :: _ -> A.st A.underline[39m
     [38;5;2m6707[39m: [38;5;2m       70:               | 5 :: _ -> A.st A.blink[39m
     [38;5;2m6708[39m: [38;5;2m       71:               | 7 :: _ -> A.st A.reverse[39m
     [38;5;2m6709[39m: [38;5;2m       72:               | 30 :: _ -> A.fg A.black[39m
     [38;5;2m6710[39m: [38;5;2m       73:               | 31 :: _ -> A.fg A.red[39m
     [38;5;2m6711[39m: [38;5;2m       74:               | 32 :: _ -> A.fg A.green[39m
     [38;5;2m6712[39m: [38;5;2m       75:               | 33 :: _ -> A.fg A.yellow[39m
     [38;5;2m6713[39m: [38;5;2m       76:               | 34 :: _ -> A.fg A.blue[39m
     [38;5;2m6714[39m: [38;5;2m       77:               | 35 :: _ -> A.fg A.magenta[39m
     [38;5;2m6715[39m: [38;5;2m       78:               | 36 :: _ -> A.fg A.cyan[39m
     [38;5;2m6716[39m: [38;5;2m       79:               | 37 :: _ -> A.fg A.white[39m
     [38;5;2m6717[39m: [38;5;2m       80:               | 38 :: 5 :: color :: _ ->[39m
     [38;5;2m6718[39m: [38;5;2m       81:                   A.fg (A.unsafe_color_of_int (0x01000000 lor color))[39m
     [38;5;2m6719[39m: [38;5;2m       82:               | 40 :: _ -> A.bg A.black[39m
     [38;5;2m6720[39m: [38;5;2m       83:               | 41 :: _ -> A.bg A.red[39m
     [38;5;2m6721[39m: [38;5;2m       84:               | 42 :: _ -> A.bg A.green[39m
     [38;5;2m6722[39m: [38;5;2m       85:               | 43 :: _ -> A.bg A.yellow[39m
     [38;5;2m6723[39m: [38;5;2m       86:               | 44 :: _ -> A.bg A.blue[39m
     [38;5;2m6724[39m: [38;5;2m       87:               | 45 :: _ -> A.bg A.magenta[39m
     [38;5;2m6725[39m: [38;5;2m       88:               | 46 :: _ -> A.bg A.cyan[39m
     [38;5;2m6726[39m: [38;5;2m       89:               | 47 :: _ -> A.bg A.white[39m
     [38;5;2m6727[39m: [38;5;2m       90:               | 48 :: 5 :: color :: _ ->[39m
     [38;5;2m6728[39m: [38;5;2m       91:                   A.bg (A.unsafe_color_of_int (0x02000000 lor color))[39m
     [38;5;2m6729[39m: [38;5;2m       92:               | _ -> A.empty[39m
     [38;5;2m6730[39m: [38;5;2m       93:             in[39m
     [38;5;2m6731[39m: [38;5;2m       94:             (attr, !j + 1)[39m
     [38;5;2m6732[39m: [38;5;2m       95:           else (A.empty, i))[39m
     [38;5;2m6733[39m: [38;5;2m       96:         else (A.empty, i)[39m
     [38;5;2m6734[39m: [38;5;2m       97:       in[39m
     [38;5;2m6735[39m: [38;5;2m       98:       let k = ref j in[39m
     [38;5;2m6736[39m: [38;5;2m       99:       while !k < len && input.[!k] <> '\027' do[39m
     [38;5;2m6737[39m: [38;5;2m      100:         incr k[39m
     [38;5;2m6738[39m: [38;5;2m      101:       done;[39m
     [38;5;2m6739[39m: [38;5;2m      102:       let substring = String.sub input j (!k - j) in[39m
     [38;5;2m6740[39m: [38;5;2m      103:       parse_codes ((attr, substring) :: acc) !k[39m
     [38;5;2m6741[39m: [38;5;2m      104:   in[39m
     [38;5;2m6742[39m: [38;5;2m      105:   parse_codes [] 0[39m
     [38;5;2m6743[39m: [38;5;2m      106: [39m
     [38;5;2m6744[39m: [38;5;2m      107: (** Like fold left except we run the first element through init to get the state*)[39m
     [38;5;2m6745[39m: [38;5;2m      108: let fold_left_pre (f : 'acc -> 'a -> 'acc) (init : 'a -> 'acc) (input : 'a list)[39m
     [38;5;2m6746[39m: [38;5;2m      109:     =[39m
     [38;5;2m6747[39m: [38;5;2m      110:   match input with[39m
     [38;5;2m6748[39m: [38;5;2m      111:   | [] -> invalid_arg "empty list"[39m
     [38;5;2m6749[39m: [38;5;2m      112:   | x :: xs ->[39m
     [38;5;2m6750[39m: [38;5;2m      113:       let state = init x in[39m
     [38;5;2m6751[39m: [38;5;2m      114:       xs |> List.fold_left f state[39m
     [38;5;2m6752[39m: [38;5;2m      115: [39m
     [38;5;2m6753[39m: [38;5;2m      116: let string_to_image str =[39m
     [38;5;2m6754[39m: [38;5;2m      117:   let coded_strs = parse_ansi_escape_codes str in[39m
     [38;5;2m6755[39m: [38;5;2m      118:   let locate_newlines codes =[39m
     [38;5;2m6756[39m: [38;5;2m      119:     codes[39m
     [38;5;2m6757[39m: [38;5;2m      120:     |> List.concat_map (fun (attr, str) ->[39m
     [38;5;2m6758[39m: [38;5;2m      121:            str |> String.split_on_char '\n'[39m
     [38;5;2m6759[39m: [38;5;2m      122:            |> List.map (fun x -> `Image (I.string attr x))[39m
     [38;5;2m6760[39m: [38;5;2m      123:            |> Base.List.intersperse ~sep:`Newline)[39m
     [38;5;2m6761[39m: [38;5;2m      124:   in[39m
     [38;5;2m6762[39m: [38;5;2m      125:   let newline_seperated = locate_newlines coded_strs in[39m
     [38;5;2m6763[39m: [38;5;2m      126:   (* Printf.printf "len:%d" (List.length newline_seperated); *)[39m
     [38;5;2m6764[39m: [38;5;2m      127:   let lines =[39m
     [38;5;2m6765[39m: [38;5;2m      128:     let open I in[39m
     [38;5;2m6766[39m: [38;5;2m      129:     (* newline_seperated[39m
     [38;5;2m6767[39m: [38;5;2m      130:        |> List.iter (fun x -> match x with `Imarge i -> print_image i | _ -> ()); *)[39m
     [38;5;2m6768[39m: [38;5;2m      131:     newline_seperated[39m
     [38;5;2m6769[39m: [38;5;2m      132:     |> Base.List.fold ~init:([], I.empty) ~f:(fun (images, image) x ->[39m
     [38;5;2m6770[39m: [38;5;2m      133:            match x with[39m
     [38;5;2m6771[39m: [38;5;2m      134:            | `Newline -> (image :: images, I.empty)[39m
     [38;5;2m6772[39m: [38;5;2m      135:            | `Image nextImage -> (images, image <|> nextImage))[39m
     [38;5;2m6773[39m: [38;5;2m      136:     |> fst[39m
     [38;5;2m6774[39m: [38;5;2m      137:     (* |> List.map (fun x ->[39m
     [38;5;2m6775[39m: [38;5;2m      138:            x |> print_image;[39m
     [38;5;2m6776[39m: [38;5;2m      139:            x) *)[39m
     [38;5;2m6777[39m: [38;5;2m      140:     |> Base.List.reduce_exn ~f:(fun bottom top -> top <-> bottom)[39m
     [38;5;2m6778[39m: [38;5;2m      141:   in[39m
     [38;5;2m6779[39m: [38;5;2m      142:   let image =[39m
     [38;5;2m6780[39m: [38;5;2m      143:     lines[39m
     [38;5;2m6781[39m: [38;5;2m      144:     (* |> fold_left_pre[39m
     [38;5;2m6782[39m: [38;5;2m      145:          (fun image (attr, str) ->[39m
     [38;5;2m6783[39m: [38;5;2m      146:            let parts = str |> String.split_on_char '\n' in[39m
     [38;5;2m6784[39m: [38;5;2m      147:            let nextImage =[39m
     [38;5;2m6785[39m: [38;5;2m      148:              parts[39m
     [38;5;2m6786[39m: [38;5;2m      149:              |> fold_left_pre[39m
     [38;5;2m6787[39m: [38;5;2m      150:                   (fun image str -> I.( <-> ) image (I.string attr str))[39m
     [38;5;2m6788[39m: [38;5;2m      151:                   (I.string attr)[39m
     [38;5;2m6789[39m: [38;5;2m      152:            in[39m
     [38;5;2m6790[39m: [38;5;2m      153:            I.( <|> ) image nextImage)[39m
     [38;5;2m6791[39m: [38;5;2m      154:          (fun (attr, str) -> I.string attr str) *)[39m
     [38;5;2m6792[39m: [38;5;2m      155:   in[39m
     [38;5;2m6793[39m: [38;5;2m      156:   image[39m
     [38;5;2m6794[39m: [38;5;2m      157: [39m
     [38;5;2m6795[39m: [38;5;2m      158: let escaped_string ?(attr = A.empty) str =[39m
     [38;5;2m6796[39m: [38;5;2m      159:   let control_character_index str i =[39m
     [38;5;2m6797[39m: [38;5;2m      160:     let len = String.length str in[39m
     [38;5;2m6798[39m: [38;5;2m      161:     let i = ref i in[39m
     [38;5;2m6799[39m: [38;5;2m      162:     while[39m
     [38;5;2m6800[39m: [38;5;2m      163:       let i = !i in[39m
     [38;5;2m6801[39m: [38;5;2m      164:       i < len && str.[i] >= ' '[39m
     [38;5;2m6802[39m: [38;5;2m      165:     do[39m
     [38;5;2m6803[39m: [38;5;2m      166:       incr i[39m
     [38;5;2m6804[39m: [38;5;2m      167:     done;[39m
     [38;5;2m6805[39m: [38;5;2m      168:     if !i = len then raise Not_found;[39m
     [38;5;2m6806[39m: [38;5;2m      169:     !i[39m
     [38;5;2m6807[39m: [38;5;2m      170:   in[39m
     [38;5;2m6808[39m: [38;5;2m      171:   let rec split str i =[39m
     [38;5;2m6809[39m: [38;5;2m      172:     match control_character_index str i with[39m
     [38;5;2m6810[39m: [38;5;2m      173:     | j ->[39m
     [38;5;2m6811[39m: [38;5;2m      174:         let img = I.string attr (String.sub str i (j - i)) in[39m
     [38;5;2m6812[39m: [38;5;2m      175:         img :: split str (j + 1)[39m
     [38;5;2m6813[39m: [38;5;2m      176:     | exception Not_found ->[39m
     [38;5;2m6814[39m: [38;5;2m      177:         [[39m
     [38;5;2m6815[39m: [38;5;2m      178:           I.string attr[39m
     [38;5;2m6816[39m: [38;5;2m      179:             (if i = 0 then str else String.sub str i (String.length str - i));[39m
     [38;5;2m6817[39m: [38;5;2m      180:         ][39m
     [38;5;2m6818[39m: [38;5;2m      181:   in[39m
     [38;5;2m6819[39m: [38;5;2m      182:   I.vcat (split str 0)[39m
     [38;5;2m6820[39m: [38;5;2m      183: [39m
     [38;5;2m6821[39m: [38;5;2m      184: (* let colored_string s =[39m
     [38;5;2m6822[39m: [38;5;2m      185:    s |> parse_ansi_escape_codes[39m
     [38;5;2m6823[39m: [38;5;2m      186:    |> List.map (fun (x, str) -> escaped_string ~attr:x str)[39m
     [38;5;2m6824[39m: [38;5;2m      187:    |> I.vcat *)[39m
     [38;5;2m6825[39m: [38;5;2m      188: let colored_string s = s |> string_to_image[39m
     [38;5;2m6826[39m: [38;5;2m      189: [39m
     [38;5;2m6827[39m: [38;5;2m      190: let%expect_test "string_to_image" =[39m
     [38;5;2m6828[39m: [38;5;2m      191:   string_to_image[39m
     [38;5;2m6829[39m: [38;5;2m      192:     "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m6830[39m: [38;5;2m      193:   |> print_image;[39m
     [38;5;2m6831[39m: [38;5;2m      194:   [%expect.unreachable][39m
     [38;5;2m6832[39m: [38;5;2m      195: [@@expect.uncaught_exn[39m
     [38;5;2m6833[39m: [38;5;2m      196:   {|[39m
     [38;5;2m6834[39m: [38;5;2m      197:   (* CR expect_test_collector: This test expectation appears to contain a backtrace.[39m
     [38;5;2m6835[39m: [38;5;2m      198:      This is strongly discouraged as backtraces are fragile.[39m
     [38;5;2m6836[39m: [38;5;2m      199:      Please change this test to not include a backtrace. *)[39m
     [38;5;2m6837[39m: [38;5;2m      200: [39m
     [38;5;2m6838[39m: [38;5;2m      201:   (Invalid_argument List.reduce_exn)[39m
     [38;5;2m6839[39m: [38;5;2m      202:   Raised at Stdlib.invalid_arg in file "stdlib.ml", line 30, characters 20-45[39m
     [38;5;2m6840[39m: [38;5;2m      203:   Called from Jj_tui__AnsiReverse.(fun) in file "lib/ansiReverse.ml", line 197, characters 2-88[39m
     [38;5;2m6841[39m: [38;5;2m      204:   Called from Expect_test_collector.Make.Instance_io.exec in file "collector/expect_test_collector.ml", line 234, characters 12-19[39m
     [38;5;2m6842[39m: [38;5;2m      205: [39m
     [38;5;2m6843[39m: [38;5;2m      206:   Trailing output[39m
     [38;5;2m6844[39m: [38;5;2m      207:   ---------------[39m
     [38;5;2m6845[39m: [38;5;2m      208:   params 32[39m
     [38;5;2m6846[39m: [38;5;2m      209:   params 0[39m
     [38;5;2m6847[39m: [38;5;2m      210:   params 30[39m
     [38;5;2m6848[39m: [38;5;2m      211:   params 0[39m
     [38;5;2m6849[39m: [38;5;2m      212:   len:4 |}][39m
     [38;5;2m6850[39m: [38;5;2m      213: [39m
     [38;5;2m6851[39m: [38;5;2m      214: let%expect_test "hello" =[39m
     [38;5;2m6852[39m: [38;5;2m      215:   let outBuf = Buffer.create 100 in[39m
     [38;5;2m6853[39m: [38;5;2m      216:   let _fmt = Format.formatter_of_buffer outBuf in[39m
     [38;5;2m6854[39m: [38;5;2m      217:   let res =[39m
     [38;5;2m6855[39m: [38;5;2m      218:     parse_ansi_escape_codes[39m
     [38;5;2m6856[39m: [38;5;2m      219:       "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m6857[39m: [38;5;2m      220:   in[39m
     [38;5;2m6858[39m: [38;5;2m      221:   res[39m
     [38;5;2m6859[39m: [38;5;2m      222:   |> List.iter (fun (x, str) ->[39m
     [38;5;2m6860[39m: [38;5;2m      223:          Notty.I.string x str |> Notty.Render.pp_image @@ Format.str_formatter);[39m
     [38;5;2m6861[39m: [38;5;2m      224:   print_endline (Format.flush_str_formatter () |> String.escaped);[39m
     [38;5;2m6862[39m: [38;5;2m      225:   print_endline (Buffer.contents outBuf);[39m
     [38;5;2m6863[39m: [38;5;2m      226:   [%expect[39m
     [38;5;2m6864[39m: [38;5;2m      227:     {|[39m
     [38;5;2m6865[39m: [38;5;2m      228:       params 32[39m
     [38;5;2m6866[39m: [38;5;2m      229:       params 0[39m
     [38;5;2m6867[39m: [38;5;2m      230:       params 30[39m
     [38;5;2m6868[39m: [38;5;2m      231:       params 0[39m
     [38;5;2m6869[39m: [38;5;2m      232:       \027[0m\027[K\027[0;32mThis is in green %s\027[0m\027[0m\027[K\027[0m \027[0m\027[0m\027[K\027[0;30mThisisnotGreen\027[0m\027[0m\027[K\027[0m|}][39m
     [38;5;2m6870[39m: [38;5;2m      233: [39m
     [38;5;2m6871[39m: [38;5;2m      234: let jjtest =[39m
     [38;5;2m6872[39m: [38;5;2m      235:   {|[39m
     [38;5;2m6873[39m: [38;5;2m      236:   @  ␛[1m␛[38;5;13mm␛[38;5;8mtxzlotn␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 12:19:37␛[39m ␛[38;5;12mb␛[38;5;8mb87f772␛[39m␛[0m[39m
     [38;5;2m6874[39m: [38;5;2m      237:   │  ␛[1m␛[38;5;3m(no description set)␛[39m␛[0m[39m
     [38;5;2m6875[39m: [38;5;2m      238: |}[39m
     [38;5;2m6876[39m: [38;5;2m      239: [39m
     [38;5;2m6877[39m: [38;5;2m      240: let%expect_test "jj_test" =[39m
     [38;5;2m6878[39m: [38;5;2m      241:   jjtest |> string_to_image |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m6879[39m: [38;5;2m      242:   let res = Format.flush_str_formatter () in[39m
     [38;5;2m6880[39m: [38;5;2m      243:   print_endline "====== input=====";[39m
     [38;5;2m6881[39m: [38;5;2m      244:   print_endline (jjtest |> String.escaped);[39m
     [38;5;2m6882[39m: [38;5;2m      245:   print_endline "====== output escaped=====";[39m
     [38;5;2m6883[39m: [38;5;2m      246:   print_endline (res |> String.escaped);[39m
     [38;5;2m6884[39m: [38;5;2m      247:   print_endline "=====output====";[39m
     [38;5;2m6885[39m: [38;5;2m      248:   print_endline res;[39m
     [38;5;2m6886[39m: [38;5;2m      249:   [%expect[39m
     [38;5;2m6887[39m: [38;5;2m      250:     {|[39m
     [38;5;2m6888[39m: [38;5;2m      251:       params 1[39m
     [38;5;2m6889[39m: [38;5;2m      252:       params 38;5;13[39m
     [38;5;2m6890[39m: [38;5;2m      253:       nfg ␛[0m<␛[0;95mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m6891[39m: [38;5;2m      254:       params 38;5;8[39m
     [38;5;2m6892[39m: [38;5;2m      255:       nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m6893[39m: [38;5;2m      256:       params 39[39m
     [38;5;2m6894[39m: [38;5;2m      257:       params 38;5;3[39m
     [38;5;2m6895[39m: [38;5;2m      258:       nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m6896[39m: [38;5;2m      259:       params 39[39m
     [38;5;2m6897[39m: [38;5;2m      260:       params 38;5;14[39m
     [38;5;2m6898[39m: [38;5;2m      261:       nfg ␛[0m<␛[0;96mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m6899[39m: [38;5;2m      262:       params 39[39m
     [38;5;2m6900[39m: [38;5;2m      263:       params 38;5;12[39m
     [38;5;2m6901[39m: [38;5;2m      264:       nfg ␛[0m<␛[0;94mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m6902[39m: [38;5;2m      265:       params 38;5;8[39m
     [38;5;2m6903[39m: [38;5;2m      266:       nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m6904[39m: [38;5;2m      267:       params 39[39m
     [38;5;2m6905[39m: [38;5;2m      268:       params 0[39m
     [38;5;2m6906[39m: [38;5;2m      269:       params 1[39m
     [38;5;2m6907[39m: [38;5;2m      270:       params 38;5;3[39m
     [38;5;2m6908[39m: [38;5;2m      271:       nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m6909[39m: [38;5;2m      272:       params 39[39m
     [38;5;2m6910[39m: [38;5;2m      273:       params 0[39m
     [38;5;2m6911[39m: [38;5;2m      274:       len:23image:[39m
     [38;5;2m6912[39m: [38;5;2m      275:       \027[0m  \226\148\130  \027[0m\027[K\027[0;33m(no description set)\027[0m[39m
     [38;5;2m6913[39m: [38;5;2m      276:       image:[39m
     [38;5;2m6914[39m: [38;5;2m      277:       \027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m[39m
     [38;5;2m6915[39m: [38;5;2m      278:       image:[39m
     [38;5;2m6916[39m: [38;5;2m      279:       \027[0m\027[K\027[0m[39m
     [38;5;2m6917[39m: [38;5;2m      280:       ====== input=====[39m
     [38;5;2m6918[39m: [38;5;2m      281:       \n  @  \027[1m\027[38;5;13mm\027[38;5;8mtxzlotn\027[39m \027[38;5;3meli.jambu@gmail.com\027[39m \027[38;5;14m2024-05-08 12:19:37\027[39m \027[38;5;12mb\027[38;5;8mb87f772\027[39m\027[0m\n  \226\148\130  \027[1m\027[38;5;3m(no description set)\027[39m\027[0m\n[39m
     [38;5;2m6919[39m: [38;5;2m      282:       ====== output escaped=====[39m
     [38;5;2m6920[39m: [38;5;2m      283:       \027[0m\027[K\027[0m\n\027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m\n\027[0m  \226\148\130  \027[0;33m(no description set)\027[0m\027[K\027[0m                                     \027[0m[39m
     [38;5;2m6921[39m: [38;5;2m      284:       =====output====[39m
     [38;5;2m6922[39m: [38;5;2m      285:       ␛[0m␛[K␛[0m[39m
     [38;5;2m6923[39m: [38;5;2m      286:       ␛[0m  @  ␛[0;95mm␛[0;90mtxzlotn␛[0m ␛[0;33meli.jambu@gmail.com␛[0m ␛[0;96m2024-05-08 12:19:37␛[0m ␛[0;94mb␛[0m␛[K␛[0;90mb87f772␛[0m[39m
     [38;5;2m6924[39m: [38;5;2m      287:       ␛[0m  │  ␛[0;33m(no description set)␛[0m␛[K␛[0m                                     ␛[0m|}][39m
     [38;5;2m6925[39m: [38;5;2m      288: [39m
     [38;5;2m6926[39m: [38;5;2m      289: (* let ansi =[39m
     [38;5;2m6927[39m: [38;5;2m      290:    {[39m
     [38;5;2m6928[39m: [38;5;2m      291:      skip =[39m
     [38;5;2m6929[39m: [38;5;2m      292:        (fun (b : Buffer.t) ->[39m
     [38;5;2m6930[39m: [38;5;2m      293:          let n = int_of_string (Buffer.contents b) in[39m
     [38;5;2m6931[39m: [38;5;2m      294:          Buffer.clear b;[39m
     [38;5;2m6932[39m: [38;5;2m      295:          n);[39m
     [38;5;2m6933[39m: [38;5;2m      296:      newline = (fun _ -> ());[39m
     [38;5;2m6934[39m: [38;5;2m      297:      altscr =[39m
     [38;5;2m6935[39m: [38;5;2m      298:        (fun b ->[39m
     [38;5;2m6936[39m: [38;5;2m      299:          Buffer.clear b;[39m
     [38;5;2m6937[39m: [38;5;2m      300:          String.equal (Buffer.contents b) "\x1b[?1049h");[39m
     [38;5;2m6938[39m: [38;5;2m      301:      cursat =[39m
     [38;5;2m6939[39m: [38;5;2m      302:        (fun b ->[39m
     [38;5;2m6940[39m: [38;5;2m      303:          let h = int_of_string (Buffer.contents b) in[39m
     [38;5;2m6941[39m: [38;5;2m      304:          Buffer.clear b;[39m
     [38;5;2m6942[39m: [38;5;2m      305:          Buffer.clear b;[39m
     [38;5;2m6943[39m: [38;5;2m      306:          (* skip ';' *)[39m
     [38;5;2m6944[39m: [38;5;2m      307:          let w = int_of_string (Buffer.contents b) in[39m
     [38;5;2m6945[39m: [38;5;2m      308:          Buffer.clear b;[39m
     [38;5;2m6946[39m: [38;5;2m      309:          (w - 1, h - 1));[39m
     [38;5;2m6947[39m: [38;5;2m      310:      cubcuf =[39m
     [38;5;2m6948[39m: [38;5;2m      311:        (fun b ->[39m
     [38;5;2m6949[39m: [38;5;2m      312:          let x = int_of_string (Buffer.contents b) in[39m
     [38;5;2m6950[39m: [38;5;2m      313:          Buffer.clear b;[39m
     [38;5;2m6951[39m: [38;5;2m      314:          if Buffer.nth b 0 = 'D' then -x else x);[39m
     [38;5;2m6952[39m: [38;5;2m      315:      cuucud =[39m
     [38;5;2m6953[39m: [38;5;2m      316:        (fun b ->[39m
     [38;5;2m6954[39m: [38;5;2m      317:          let y = int_of_string (Buffer.contents b) in[39m
     [38;5;2m6955[39m: [38;5;2m      318:          Buffer.clear b;[39m
     [38;5;2m6956[39m: [38;5;2m      319:          if Buffer.nth b 0 = 'A' then -y else y);[39m
     [38;5;2m6957[39m: [38;5;2m      320:      cr = (fun _ -> ());[39m
     [38;5;2m6958[39m: [38;5;2m      321:      clreol = (fun _ -> ());[39m
     [38;5;2m6959[39m: [38;5;2m      322:      cursvis =[39m
     [38;5;2m6960[39m: [38;5;2m      323:        (fun b ->[39m
     [38;5;2m6961[39m: [38;5;2m      324:          Buffer.clear b;[39m
     [38;5;2m6962[39m: [38;5;2m      325:          String.equal (Buffer.contents b) "\x1b[34h\x1b[?25h");[39m
     [38;5;2m6963[39m: [38;5;2m      326:      mouse =[39m
     [38;5;2m6964[39m: [38;5;2m      327:        (fun b ->[39m
     [38;5;2m6965[39m: [38;5;2m      328:          Buffer.clear b;[39m
     [38;5;2m6966[39m: [38;5;2m      329:          String.equal (Buffer.contents b) "\x1b[?1000;1002;1005;1015;1006h");[39m
     [38;5;2m6967[39m: [38;5;2m      330:      bpaste =[39m
     [38;5;2m6968[39m: [38;5;2m      331:        (fun b ->[39m
     [38;5;2m6969[39m: [38;5;2m      332:          Buffer.clear b;[39m
     [38;5;2m6970[39m: [38;5;2m      333:          String.equal (Buffer.contents b) "\x1b[?2004h");[39m
     [38;5;2m6971[39m: [38;5;2m      334:      sgr;[39m
     [38;5;2m6972[39m: [38;5;2m      335:    } *)[39m
     [38;5;2m6973[39m: [38;5;2m      336: (*[39m
     [38;5;2m6974[39m: [38;5;2m      337:      let no0 _ = ()[39m
     [38;5;2m6975[39m: [38;5;2m      338:      and no1 _ _ = ()[39m
     [38;5;2m6976[39m: [38;5;2m      339:      and no2 _ _ _ = ()[39m
     [38;5;2m6977[39m: [38;5;2m      340: [39m
     [38;5;2m6978[39m: [38;5;2m      341:      let dumb =[39m
     [38;5;2m6979[39m: [38;5;2m      342:        {[39m
     [38;5;2m6980[39m: [38;5;2m      343:          skip = (fun b -> String.length (Buffer.contents b));[39m
     [38;5;2m6981[39m: [38;5;2m      344:          newline = (fun _ -> ());[39m
     [38;5;2m6982[39m: [38;5;2m      345:          altscr = no1;[39m
     [38;5;2m6983[39m: [38;5;2m      346:          cursat = (fun _ -> (0, 0));[39m
     [38;5;2m6984[39m: [38;5;2m      347:          cubcuf = (fun _ -> 0);[39m
     [38;5;2m6985[39m: [38;5;2m      348:          cuucud = (fun _ -> 0);[39m
     [38;5;2m6986[39m: [38;5;2m      349:          cr = no0;[39m
     [38;5;2m6987[39m: [38;5;2m      350:          clreol = no0;[39m
     [38;5;2m6988[39m: [38;5;2m      351:          cursvis = (fun _ -> false);[39m
     [38;5;2m6989[39m: [38;5;2m      352:          sgr = (fun _ -> A.empty);[39m
     [38;5;2m6990[39m: [38;5;2m      353:          mouse = (fun _ -> false);[39m
     [38;5;2m6991[39m: [38;5;2m      354:          bpaste = (fun _ -> false);[39m
     [38;5;2m6992[39m: [38;5;2m      355:        } *)[39m
     [38;5;2m6993[39m: [38;5;2m      356: (*[39m
     [38;5;2m6994[39m: [38;5;2m      357:      let erase cap buf = Buffer.clear buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m6995[39m: [38;5;2m      358: [39m
     [38;5;2m6996[39m: [38;5;2m      359:      let cursat0 cap b =[39m
     [38;5;2m6997[39m: [38;5;2m      360:        let w, h = cap.cursat b in[39m
     [38;5;2m6998[39m: [38;5;2m      361:        (max 0 (w - 1), max 0 (h - 1)) *)[39m
     [38;5;2m6999[39m: [38;5;2mAdded regular file lib/dune:[39m
     [38;5;2m7000[39m: [38;5;2m        1: (library[39m
     [38;5;2m7001[39m: [38;5;2m        2:  (name jj_tui)[39m
     [38;5;2m7002[39m: [38;5;2m        3:  (inline_tests)[39m
     [38;5;2m7003[39m: [38;5;2m        4:  (libraries core stdio core_unix.command_unix notty nottui angstrom)[39m
     [38;5;2m7004[39m: [38;5;2m        5:  (preprocess[39m
     [38;5;2m7005[39m: [38;5;2m        6:   (pps ppx_expect)))[39m
     [38;5;2m7006[39m: [38;5;2mAdded regular file lib/process.ml:[39m
     [38;5;2m7007[39m: [38;5;2m        1: [39m
     [38;5;2m7008[39m: [38;5;2m        2: let mk_home_cmd cmd =[39m
     [38;5;2m7009[39m: [38;5;2m        3:   let home_dir = Unix.getenv "HOME" in[39m
     [38;5;2m7010[39m: [38;5;2m        4:   Printf.sprintf "HOME=%s %s" home_dir cmd[39m
     [38;5;2m7011[39m: [38;5;2m        5: [39m
     [38;5;2m7012[39m: [38;5;2m        6: let proc_silent cmd =[39m
     [38;5;2m7013[39m: [38;5;2m        7:   let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
     [38;5;2m7014[39m: [38;5;2m        8:   ()[39m
     [38;5;2m7015[39m: [38;5;2m        9: [39m
     [38;5;2m7016[39m: [38;5;2m       10: let proc cmd =[39m
     [38;5;2m7017[39m: [38;5;2m       11:   Printf.eprintf "🐚  %s\n%!" cmd;[39m
     [38;5;2m7018[39m: [38;5;2m       12:   proc_silent cmd[39m
     [38;5;2m7019[39m: [38;5;2m       13: [39m
     [38;5;2m7020[39m: [38;5;2m       14: let collect_chan (channel : in_channel) : string =[39m
     [38;5;2m7021[39m: [38;5;2m       15:   let rec loop acc =[39m
     [38;5;2m7022[39m: [38;5;2m       16:     match input_line channel with[39m
     [38;5;2m7023[39m: [38;5;2m       17:     | exception End_of_file -> acc[39m
     [38;5;2m7024[39m: [38;5;2m       18:     | line -> loop (acc ^ line ^ "\n")[39m
     [38;5;2m7025[39m: [38;5;2m       19:   in[39m
     [38;5;2m7026[39m: [38;5;2m       20:   loop ""[39m
     [38;5;2m7027[39m: [38;5;2m       21: [39m
     [38;5;2m7028[39m: [38;5;2m       22: let proc_stdout cmd =[39m
     [38;5;2m7029[39m: [38;5;2m       23:   let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
     [38;5;2m7030[39m: [38;5;2m       24:     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m7031[39m: [38;5;2m       25:   in[39m
     [38;5;2m7032[39m: [38;5;2m       26:   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m7033[39m: [38;5;2m       27:   let _ = Unix.close_process_full process in[39m
     [38;5;2m7034[39m: [38;5;2m       28:   String.trim stdout_result[39m
     [38;5;2m7035[39m: [38;5;2m       29: [39m
     [38;5;2m7036[39m: [38;5;2m       30: let proc_stdOutAndErr cmd =[39m
     [38;5;2m7037[39m: [38;5;2m       31:   let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
     [38;5;2m7038[39m: [38;5;2m       32:     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m7039[39m: [38;5;2m       33:   in[39m
     [38;5;2m7040[39m: [38;5;2m       34:   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m7041[39m: [38;5;2m       35:   let stderr_result = collect_chan proc_stderr in[39m
     [38;5;2m7042[39m: [38;5;2m       36:   let _ = Unix.close_process_full process in[39m
     [38;5;2m7043[39m: [38;5;2m       37:   String.trim (stdout_result^stderr_result)[39m
     [38;5;2m7044[39m: [38;5;2mAdded regular file log:[39m
     [38;5;2m7045[39m: [38;5;2m        1: ◉  ␛[1m␛[38;5;5mv␛[0m␛[38;5;8myzuqwnl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m7␛[0m␛[38;5;8maf062fc␛[39m[39m
     [38;5;2m7046[39m: [38;5;2m        2: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7047[39m: [38;5;2m        3: ◉  ␛[1m␛[38;5;5mxn␛[0m␛[38;5;8mvoukwm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m9␛[0m␛[38;5;8m50e51d4␛[39m[39m
     [38;5;2m7048[39m: [38;5;2m        4: │  using angstrom parser[39m
     [38;5;2m7049[39m: [38;5;2m        5: ◉  ␛[1m␛[38;5;5mu␛[0m␛[38;5;8mwwzzulo␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m4a␛[0m␛[38;5;8md3ac96␛[39m[39m
     [38;5;2m7050[39m: [38;5;2m        6: │  progress on ui, added boxes[39m
     [38;5;2m7051[39m: [38;5;2m        7: @  ␛[1m␛[38;5;13mkszk␛[38;5;8muqqs␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 23:57:08␛[39m ␛[38;5;12mf␛[38;5;8mc74c4ed␛[39m␛[0m[39m
     [38;5;2m7052[39m: [38;5;2m        8: │  ␛[1mcoloured output is working␛[0m[39m
     [38;5;2m7053[39m: [38;5;2m        9: ◉  ␛[1m␛[38;5;5my␛[0m␛[38;5;8msrpqsvq␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:18:11␛[39m ␛[38;5;2mHEAD@git␛[39m ␛[1m␛[38;5;4me␛[0m␛[38;5;8mc72cc90␛[39m[39m
     [38;5;2m7054[39m: [38;5;2m       10: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7055[39m: [38;5;2m       11: ◉  ␛[1m␛[38;5;5mn␛[0m␛[38;5;8mulnswsm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:17:05␛[39m ␛[1m␛[38;5;4mb␛[0m␛[38;5;8mfaef69b␛[39m[39m
     [38;5;2m7056[39m: [38;5;2m       12: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7057[39m: [38;5;2m       13: ◉  ␛[1m␛[38;5;5mxw␛[0m␛[38;5;8msmkxpt␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m2␛[0m␛[38;5;8m12a26e4␛[39m[39m
     [38;5;2m7058[39m: [38;5;2m       14: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7059[39m: [38;5;2m       15: ◉  ␛[1m␛[38;5;5mkszy␛[0m␛[38;5;8mtrtu␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m8␛[0m␛[38;5;8m754ef74␛[39m[39m
     [38;5;2m7060[39m: [38;5;2m       16: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7061[39m: [38;5;2m       17: ◉  ␛[1m␛[38;5;5mp␛[0m␛[38;5;8msnrvlsv␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:02:28␛[39m ␛[1m␛[38;5;4md␛[0m␛[38;5;8m09f7fd4␛[39m[39m
     [38;5;2m7062[39m: [38;5;2m       18: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7063[39m: [38;5;2m       19: │ ◉  ␛[1m␛[38;5;5mt␛[0m␛[38;5;8mooppyyl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:19:58␛[39m ␛[1m␛[38;5;4m49␛[0m␛[38;5;8m125832␛[39m[39m
     [38;5;2m7064[39m: [38;5;2m       20: ├─╯  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7065[39m: [38;5;2m       21: ◉  ␛[1m␛[38;5;5mz␛[0m␛[38;5;8mzzzzzzz␛[39m ␛[38;5;2mroot()␛[39m ␛[1m␛[38;5;4m0␛[0m␛[38;5;8m0000000␛[39m[39m
     [38;5;2m7066[39m: [38;5;2mAdded regular file log2:[39m
     [38;5;2m7067[39m: [38;5;2m        1: Commit ID: 0dff1f977d48f4537fa8c357b8fe08c1910e4ac4[39m
     [38;5;2m7068[39m: [38;5;2m        2: Change ID: kszkuqqsvpknsnosxyxmnunnqvrzmpvq[39m
     [38;5;2m7069[39m: [38;5;2m        3: Author: Eli Dowling <eli.jambu@gmail.com> (2024-05-08 01:20:28)[39m
     [38;5;2m7070[39m: [38;5;2m        4: Committer: Eli Dowling <eli.jambu@gmail.com> (2024-05-09 00:02:20)[39m
     [38;5;2m7071[39m: [38;5;2m        5: [39m
     [38;5;2m7072[39m: [38;5;2m        6:     coloured output is working[39m
     [38;5;2m7073[39m: [38;5;2m        7: [39m
     [38;5;2m7074[39m: [38;5;2m        8: Added regular file ../.ocamlformat:[39m
     [38;5;2m7075[39m: [38;5;2m        9:         1: version=0.24.1[39m
     [38;5;2m7076[39m: [38;5;2m       10:         2: profile=conventional[39m
     [38;5;2m7077[39m: [38;5;2m       11: Removed regular file ../bin/dune:[39m
     [38;5;2m7078[39m: [38;5;2m       12:    1     : (executable[39m
     [38;5;2m7079[39m: [38;5;2m       13:    2     :  (public_name jj_tui)[39m
     [38;5;2m7080[39m: [38;5;2m       14:    3     :  (name main)[39m
     [38;5;2m7081[39m: [38;5;2m       15:    4     :  (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
     [38;5;2m7082[39m: [38;5;2m       16:    5     :  )[39m
     [38;5;2m7083[39m: [38;5;2m       17: Removed regular file ../bin/main.ml:[39m
     [38;5;2m7084[39m: [38;5;2m       18:    1     : open Nottui;;[39m
     [38;5;2m7085[39m: [38;5;2m       19:    2     : open Feather;;[39m
     [38;5;2m7086[39m: [38;5;2m       20:    3     : open Lwd_infix;;[39m
     [38;5;2m7087[39m: [38;5;2m       21:    4     : module W = Nottui_widgets;;[39m
     [38;5;2m7088[39m: [38;5;2m       22:    5     : [39m
     [38;5;2m7089[39m: [38;5;2m       23:    6     : [39m
     [38;5;2m7090[39m: [38;5;2m       24:    7     : (* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
     [38;5;2m7091[39m: [38;5;2m       25:    8     : [39m
     [38;5;2m7092[39m: [38;5;2m       26:    9     : let cmdArgs cmd args=[39m
     [38;5;2m7093[39m: [38;5;2m       27:   10     :   let (stdout,stderr)=Feather.process cmd args|>Feather.collect stdout_and_stderr in[39m
     [38;5;2m7094[39m: [38;5;2m       28:   11     :   stdout^stderr[39m
     [38;5;2m7095[39m: [38;5;2m       29:   12     : ;;[39m
     [38;5;2m7096[39m: [38;5;2m       30:   13     : let cmd cmd =[39m
     [38;5;2m7097[39m: [38;5;2m       31:   14     :   let (stdout,stderr)=Feather.process cmd []|>Feather.collect stdout_and_stderr in[39m
     [38;5;2m7098[39m: [38;5;2m       32:   15     :   stdout^stderr[39m
     [38;5;2m7099[39m: [38;5;2m       33:   16     : [39m
     [38;5;2m7100[39m: [38;5;2m       34:   17     : ;;[39m
     [38;5;2m7101[39m: [38;5;2m       35:   18     : [39m
     [38;5;2m7102[39m: [38;5;2m       36:   19     : [39m
     [38;5;2m7103[39m: [38;5;2m       37:   20     : let vcount = Lwd.var "";;[39m
     [38;5;2m7104[39m: [38;5;2m       38:   21     : [39m
     [38;5;2m7105[39m: [38;5;2m       39:   22     : let button = [39m
     [38;5;2m7106[39m: [38;5;2m       40:   23     :   W.button (Printf.sprintf "run jj" )[39m
     [38;5;2m7107[39m: [38;5;2m       41:   24     :            (fun () ->  vcount $= (cmd"jj"))[39m
     [38;5;2m7108[39m: [38;5;2m       42:   25     :   |>Lwd.pure[39m
     [38;5;2m7109[39m: [38;5;2m       43:   26     :          ;;[39m
     [38;5;2m7110[39m: [38;5;2m       44:   27     : let vQuit=Lwd.var false;;[39m
     [38;5;2m7111[39m: [38;5;2m       45:   28     : [39m
     [38;5;2m7112[39m: [38;5;2m       46:   29     : let quitButton  = [39m
     [38;5;2m7113[39m: [38;5;2m       47:   30     :   W.button (Printf.sprintf "quit " )[39m
     [38;5;2m7114[39m: [38;5;2m       48:   31     :            (fun () ->  vQuit $= true)[39m
     [38;5;2m7115[39m: [38;5;2m       49:   32     :   |>Lwd.pure[39m
     [38;5;2m7116[39m: [38;5;2m       50:   33     :          ;;[39m
     [38;5;2m7117[39m: [38;5;2m       51:   34     : [39m
     [38;5;2m7118[39m: [38;5;2m       52:   35     : [39m
     [38;5;2m7119[39m: [38;5;2m       53:   36     : let (<-$) f v=Lwd.map ~f (Lwd.get v);; [39m
     [38;5;2m7120[39m: [38;5;2m       54:   37     : let vShowStatus= Lwd.var "";;[39m
     [38;5;2m7121[39m: [38;5;2m       55:   38     : let inputs ui=[39m
     [38;5;2m7122[39m: [38;5;2m       56:   39     :   Ui.event_filter (fun event->[39m
     [38;5;2m7123[39m: [38;5;2m       57:   40     :     match event with[39m
     [38;5;2m7124[39m: [38;5;2m       58:   41     :     |`Key (`ASCII 'l',_)-> [39m
     [38;5;2m7125[39m: [38;5;2m       59:   42     :         let res=cmd "jj"in[39m
     [38;5;2m7126[39m: [38;5;2m       60:   43     :         vcount$=res;[39m
     [38;5;2m7127[39m: [38;5;2m       61:   44     : [39m
     [38;5;2m7128[39m: [38;5;2m       62:   45     :         `Handled[39m
     [38;5;2m7129[39m: [38;5;2m       63:   46     :     |`Key (`ASCII 's',_)-> [39m
     [38;5;2m7130[39m: [38;5;2m       64:   47     :         let res=cmdArgs "jj" ["show"]in[39m
     [38;5;2m7131[39m: [38;5;2m       65:   48     :         vShowStatus$=res;[39m
     [38;5;2m7132[39m: [38;5;2m       66:   49     : [39m
     [38;5;2m7133[39m: [38;5;2m       67:   50     :         `Handled[39m
     [38;5;2m7134[39m: [38;5;2m       68:   51     :     |`Key (`ASCII 'p',_)-> [39m
     [38;5;2m7135[39m: [38;5;2m       69:   52     :         let _=cmdArgs "jj"["prev"]in[39m
     [38;5;2m7136[39m: [38;5;2m       70:   53     : [39m
     [38;5;2m7137[39m: [38;5;2m       71:   54     :         `Handled[39m
     [38;5;2m7138[39m: [38;5;2m       72:   55     :     |`Key (`ASCII 'n',_)-> [39m
     [38;5;2m7139[39m: [38;5;2m       73:   56     :         let _=cmdArgs "jj"["next"]in[39m
     [38;5;2m7140[39m: [38;5;2m       74:   57     : [39m
     [38;5;2m7141[39m: [38;5;2m       75:   58     :         `Handled[39m
     [38;5;2m7142[39m: [38;5;2m       76:   59     :     |_->`Unhandled[39m
     [38;5;2m7143[39m: [38;5;2m       77:   60     :       ) ui[39m
     [38;5;2m7144[39m: [38;5;2m       78:   61     :   ;;[39m
     [38;5;2m7145[39m: [38;5;2m       79:   62     : let mainUi= [39m
     [38;5;2m7146[39m: [38;5;2m       80:   63     :   Lwd.map ~f:inputs @@[39m
     [38;5;2m7147[39m: [38;5;2m       81:   64     :   W.h_pane[39m
     [38;5;2m7148[39m: [38;5;2m       82:   65     :   (Nottui_widgets.vbox [[39m
     [38;5;2m7149[39m: [38;5;2m       83:   66     :     button;[39m
     [38;5;2m7150[39m: [38;5;2m       84:   67     :     W.string <-$ vcount;[39m
     [38;5;2m7151[39m: [38;5;2m       85:   68     :     quitButton])[39m
     [38;5;2m7152[39m: [38;5;2m       86:   69     :   (W.string <-$ vShowStatus)[39m
     [38;5;2m7153[39m: [38;5;2m       87:   70     : ;;[39m
     [38;5;2m7154[39m: [38;5;2m       88:   71     :       [39m
     [38;5;2m7155[39m: [38;5;2m       89:   72     : [39m
     [38;5;2m7156[39m: [38;5;2m       90:   73     : Ui_loop.run ~quit:vQuit (mainUi);;[39m
     [38;5;2m7157[39m: [38;5;2m       91:   74     : [39m
     [38;5;2m7158[39m: [38;5;2m       92:   75     : (*[39m
     [38;5;2m7159[39m: [38;5;2m       93:   76     : type tree = Tree of string * (unit -> tree list)[39m
     [38;5;2m7160[39m: [38;5;2m       94:   77     : [39m
     [38;5;2m7161[39m: [38;5;2m       95:   78     : let rec tree_ui (Tree (label, child)) =[39m
     [38;5;2m7162[39m: [38;5;2m       96:   79     :   let opened = Lwd.var false in[39m
     [38;5;2m7163[39m: [38;5;2m       97:   80     :   let render is_opened =[39m
     [38;5;2m7164[39m: [38;5;2m       98:   81     :     let btn_text = if is_opened then "[-] " else "[+] " in[39m
     [38;5;2m7165[39m: [38;5;2m       99:   82     :     let btn_action () = Lwd.set opened (not is_opened) in[39m
     [38;5;2m7166[39m: [38;5;2m      100:   83     :     let btn = W.button (btn_text ^ label) btn_action in[39m
     [38;5;2m7167[39m: [38;5;2m      101:   84     :     let layout node forest =[39m
     [38;5;2m7168[39m: [38;5;2m      102:   85     :       Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
     [38;5;2m7169[39m: [38;5;2m      103:   86     :     in[39m
     [38;5;2m7170[39m: [38;5;2m      104:   87     :     if is_opened [39m
     [38;5;2m7171[39m: [38;5;2m      105:   88     :     then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
     [38;5;2m7172[39m: [38;5;2m      106:   89     :     else Lwd.pure btn[39m
     [38;5;2m7173[39m: [38;5;2m      107:   90     :   in[39m
     [38;5;2m7174[39m: [38;5;2m      108:   91     :   Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
     [38;5;2m7175[39m: [38;5;2m      109:   92     :   [39m
     [38;5;2m7176[39m: [38;5;2m      110:   93     : and forest_ui nodes = [39m
     [38;5;2m7177[39m: [38;5;2m      111:   94     :   Lwd_utils.pack Ui.pack_y [39m
     [38;5;2m7178[39m: [38;5;2m      112:   95     :     (List.map tree_ui nodes)[39m
     [38;5;2m7179[39m: [38;5;2m      113:   96     : ;;[39m
     [38;5;2m7180[39m: [38;5;2m      114:   97     : [39m
     [38;5;2m7181[39m: [38;5;2m      115:   98     : let rec fake_fs () = [[39m
     [38;5;2m7182[39m: [38;5;2m      116:   99     :   Tree ("bin", fake_fs);[39m
     [38;5;2m7183[39m: [38;5;2m      117:  100     :   Tree ("home", fake_fs);[39m
     [38;5;2m7184[39m: [38;5;2m      118:  101     :   Tree ("usr", fake_fs);[39m
     [38;5;2m7185[39m: [38;5;2m      119:  102     : ] in[39m
     [38;5;2m7186[39m: [38;5;2m      120:  103     : [39m
     [38;5;2m7187[39m: [38;5;2m      121:  104     : Ui_loop.run (forest_ui (fake_fs ()));;[39m
     [38;5;2m7188[39m: [38;5;2m      122:  105     : *)[39m
     [38;5;2m7189[39m: [38;5;2m      123: Removed regular file ../dune-project:[39m
     [38;5;2m7190[39m: [38;5;2m      124:    1     : (lang dune 3.9)[39m
     [38;5;2m7191[39m: [38;5;2m      125:    2     : [39m
     [38;5;2m7192[39m: [38;5;2m      126:    3     : (name jj_tui)[39m
     [38;5;2m7193[39m: [38;5;2m      127:    4     : [39m
     [38;5;2m7194[39m: [38;5;2m      128:    5     : (generate_opam_files true)[39m
     [38;5;2m7195[39m: [38;5;2m      129:    6     : [39m
     [38;5;2m7196[39m: [38;5;2m      130:    7     : (source[39m
     [38;5;2m7197[39m: [38;5;2m      131:    8     :  (github username/reponame))[39m
     [38;5;2m7198[39m: [38;5;2m      132:    9     : [39m
     [38;5;2m7199[39m: [38;5;2m      133:   10     : (authors "Author Name")[39m
     [38;5;2m7200[39m: [38;5;2m      134:   11     : [39m
     [38;5;2m7201[39m: [38;5;2m      135:   12     : (maintainers "Maintainer Name")[39m
     [38;5;2m7202[39m: [38;5;2m      136:   13     : [39m
     [38;5;2m7203[39m: [38;5;2m      137:   14     : (license LICENSE)[39m
     [38;5;2m7204[39m: [38;5;2m      138:   15     : [39m
     [38;5;2m7205[39m: [38;5;2m      139:   16     : (documentation https://url/to/documentation)[39m
     [38;5;2m7206[39m: [38;5;2m      140:   17     : [39m
     [38;5;2m7207[39m: [38;5;2m      141:   18     : (package[39m
     [38;5;2m7208[39m: [38;5;2m      142:   19     :  (name jj_tui)[39m
     [38;5;2m7209[39m: [38;5;2m      143:   20     :  (synopsis "A short synopsis")[39m
     [38;5;2m7210[39m: [38;5;2m      144:   21     :  (description "A longer description")[39m
     [38;5;2m7211[39m: [38;5;2m      145:   22     :  (depends ocaml dune)[39m
     [38;5;2m7212[39m: [38;5;2m      146:   23     :  (tags[39m
     [38;5;2m7213[39m: [38;5;2m      147:   24     :   (topics "to describe" your project)))[39m
     [38;5;2m7214[39m: [38;5;2m      148:   25     : [39m
     [38;5;2m7215[39m: [38;5;2m      149:   26     : ; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
     [38;5;2m7216[39m: [38;5;2m      150: Removed regular file ../flake.lock:[39m
     [38;5;2m7217[39m: [38;5;2m      151:    1     : {[39m
     [38;5;2m7218[39m: [38;5;2m      152:    2     :   "nodes": {[39m
     [38;5;2m7219[39m: [38;5;2m      153:    3     :     "nixpkgs": {[39m
     [38;5;2m7220[39m: [38;5;2m      154:    4     :       "locked": {[39m
     [38;5;2m7221[39m: [38;5;2m      155:    5     :         "lastModified": 1713344939,[39m
     [38;5;2m7222[39m: [38;5;2m      156:    6     :         "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
     [38;5;2m7223[39m: [38;5;2m      157:    7     :         "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
     [38;5;2m7224[39m: [38;5;2m      158:    8     :         "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
     [38;5;2m7225[39m: [38;5;2m      159:    9     :         "type": "path"[39m
     [38;5;2m7226[39m: [38;5;2m      160:   10     :       },[39m
     [38;5;2m7227[39m: [38;5;2m      161:   11     :       "original": {[39m
     [38;5;2m7228[39m: [38;5;2m      162:   12     :         "id": "nixpkgs",[39m
     [38;5;2m7229[39m: [38;5;2m      163:   13     :         "type": "indirect"[39m
     [38;5;2m7230[39m: [38;5;2m      164:   14     :       }[39m
     [38;5;2m7231[39m: [38;5;2m      165:   15     :     },[39m
     [38;5;2m7232[39m: [38;5;2m      166:   16     :     "root": {[39m
     [38;5;2m7233[39m: [38;5;2m      167:   17     :       "inputs": {[39m
     [38;5;2m7234[39m: [38;5;2m      168:   18     :         "nixpkgs": "nixpkgs"[39m
     [38;5;2m7235[39m: [38;5;2m      169:   19     :       }[39m
     [38;5;2m7236[39m: [38;5;2m      170:   20     :     }[39m
     [38;5;2m7237[39m: [38;5;2m      171:   21     :   },[39m
     [38;5;2m7238[39m: [38;5;2m      172:   22     :   "root": "root",[39m
     [38;5;2m7239[39m: [38;5;2m      173:   23     :   "version": 7[39m
     [38;5;2m7240[39m: [38;5;2m      174:   24     : }[39m
     [38;5;2m7241[39m: [38;5;2m      175: Removed regular file ../flake.nix:[39m
     [38;5;2m7242[39m: [38;5;2m      176:    1     : {[39m
     [38;5;2m7243[39m: [38;5;2m      177:    2     :   description = "Example JavaScript development environment for Zero to Nix";[39m
     [38;5;2m7244[39m: [38;5;2m      178:    3     : [39m
     [38;5;2m7245[39m: [38;5;2m      179:    4     :   # Flake inputs[39m
     [38;5;2m7246[39m: [38;5;2m      180:    5     :   inputs = {[39m
     [38;5;2m7247[39m: [38;5;2m      181:    6     : [39m
     [38;5;2m7248[39m: [38;5;2m      182:    7     :     # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
     [38;5;2m7249[39m: [38;5;2m      183:    8     :     nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
     [38;5;2m7250[39m: [38;5;2m      184:    9     : [39m
     [38;5;2m7251[39m: [38;5;2m      185:   10     :     # roc={[39m
     [38;5;2m7252[39m: [38;5;2m      186:   11     :     #   url="github:roc-lang/roc";[39m
     [38;5;2m7253[39m: [38;5;2m      187:   12     :     # inputs.nixpkgs.follows="nixpkgs";[39m
     [38;5;2m7254[39m: [38;5;2m      188:   13     : [39m
     [38;5;2m7255[39m: [38;5;2m      189:   14     :     # };[39m
     [38;5;2m7256[39m: [38;5;2m      190:   15     : [39m
     [38;5;2m7257[39m: [38;5;2m      191:   16     :   };[39m
     [38;5;2m7258[39m: [38;5;2m      192:   17     :   # Flake outputs[39m
     [38;5;2m7259[39m: [38;5;2m      193:   18     :   outputs = { self, nixpkgs, ... }@inputs:[39m
     [38;5;2m7260[39m: [38;5;2m      194:   19     :     let[39m
     [38;5;2m7261[39m: [38;5;2m      195:   20     :       # Systems supported[39m
     [38;5;2m7262[39m: [38;5;2m      196:   21     :       allSystems = [[39m
     [38;5;2m7263[39m: [38;5;2m      197:   22     :         "x86_64-linux" # 64-bit Intel/AMD Linux[39m
     [38;5;2m7264[39m: [38;5;2m      198:   23     :       ];[39m
     [38;5;2m7265[39m: [38;5;2m      199:   24     : [39m
     [38;5;2m7266[39m: [38;5;2m      200:   25     :       # Helper to provide system-specific attributes[39m
     [38;5;2m7267[39m: [38;5;2m      201:   26     :       forAllSystems = f:[39m
     [38;5;2m7268[39m: [38;5;2m      202:   27     :         nixpkgs.lib.genAttrs allSystems (system:[39m
     [38;5;2m7269[39m: [38;5;2m      203:   28     :           f {[39m
     [38;5;2m7270[39m: [38;5;2m      204:   29     :             pkgs = import nixpkgs { inherit system; };[39m
     [38;5;2m7271[39m: [38;5;2m      205:   30     : [39m
     [38;5;2m7272[39m: [38;5;2m      206:   31     :           });[39m
     [38;5;2m7273[39m: [38;5;2m      207:   32     :     in {[39m
     [38;5;2m7274[39m: [38;5;2m      208:   33     :       # Development environment output[39m
     [38;5;2m7275[39m: [38;5;2m      209:   34     :       devShells = forAllSystems ({ pkgs }: {[39m
     [38;5;2m7276[39m: [38;5;2m      210:   35     :         default =[39m
     [38;5;2m7277[39m: [38;5;2m      211:   36     : [39m
     [38;5;2m7278[39m: [38;5;2m      212:   37     :           pkgs.mkShell {[39m
     [38;5;2m7279[39m: [38;5;2m      213:   38     :             packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
     [38;5;2m7280[39m: [38;5;2m      214:   39     :             shellHook = let[39m
     [38;5;2m7281[39m: [38;5;2m      215:   40     :               libPath =[39m
     [38;5;2m7282[39m: [38;5;2m      216:   41     :                 pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
     [38;5;2m7283[39m: [38;5;2m      217:   42     :             in ''[39m
     [38;5;2m7284[39m: [38;5;2m      218:   43     :               # yolo[39m
     [38;5;2m7285[39m: [38;5;2m      219:   44     :               export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
     [38;5;2m7286[39m: [38;5;2m      220:   45     :               export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
     [38;5;2m7287[39m: [38;5;2m      221:   46     :             '';[39m
     [38;5;2m7288[39m: [38;5;2m      222:   47     :           };[39m
     [38;5;2m7289[39m: [38;5;2m      223:   48     : [39m
     [38;5;2m7290[39m: [38;5;2m      224:   49     :       });[39m
     [38;5;2m7291[39m: [38;5;2m      225:   50     : [39m
     [38;5;2m7292[39m: [38;5;2m      226:   51     :     };[39m
     [38;5;2m7293[39m: [38;5;2m      227:   52     : }[39m
     [38;5;2m7294[39m: [38;5;2m      228: Added regular file .ocamlformat:[39m
     [38;5;2m7295[39m: [38;5;2m      229:         1: [39m
     [38;5;2m7296[39m: [38;5;2m      230:         2: profile=conventional[39m
     [38;5;2m7297[39m: [38;5;2m      231: Added regular file .ocmalformat:[39m
     [38;5;2m7298[39m: [38;5;2m      232:         1: version=0.24.1[39m
     [38;5;2m7299[39m: [38;5;2m      233:         2: profile=conventional[39m
     [38;5;2m7300[39m: [38;5;2m      234: Added regular file bin/dune:[39m
     [38;5;2m7301[39m: [38;5;2m      235:         1: (executable[39m
     [38;5;2m7302[39m: [38;5;2m      236:         2:  (public_name jj_tui)[39m
     [38;5;2m7303[39m: [38;5;2m      237:         3:  (name main)[39m
     [38;5;2m7304[39m: [38;5;2m      238:         4:  (libraries jj_tui feather lwd nottui base core stdio core_unix.command_unix )[39m
     [38;5;2m7305[39m: [38;5;2m      239:         5:  )[39m
     [38;5;2m7306[39m: [38;5;2m      240: Added regular file bin/main.ml:[39m
     [38;5;2m7307[39m: [38;5;2m      241:         1: open Nottui[39m
     [38;5;2m7308[39m: [38;5;2m      242:         2: open Feather[39m
     [38;5;2m7309[39m: [38;5;2m      243:         3: open Lwd_infix[39m
     [38;5;2m7310[39m: [38;5;2m      244:         4: open Notty[39m
     [38;5;2m7311[39m: [38;5;2m      245:         5: module W = Nottui_widgets[39m
     [38;5;2m7312[39m: [38;5;2m      246:         6: [39m
     [38;5;2m7313[39m: [38;5;2m      247:         7: let colored_string = Jj_tui.AnsiReverse.colored_string[39m
     [38;5;2m7314[39m: [38;5;2m      248:         8: [39m
     [38;5;2m7315[39m: [38;5;2m      249:         9: (* Ui_loop.run (Lwd.pure (W.printf "Hello world"));; *)[39m
     [38;5;2m7316[39m: [38;5;2m      250:        10: let cmdArgs cmd args =[39m
     [38;5;2m7317[39m: [38;5;2m      251:        11:   let stdout, stderr =[39m
     [38;5;2m7318[39m: [38;5;2m      252:        12:     Feather.process cmd args |> Feather.collect stdout_and_stderr[39m
     [38;5;2m7319[39m: [38;5;2m      253:        13:   in[39m
     [38;5;2m7320[39m: [38;5;2m      254:        14:   stdout ^ stderr[39m
     [38;5;2m7321[39m: [38;5;2m      255:        15: [39m
     [38;5;2m7322[39m: [38;5;2m      256:        16: let jj args = cmdArgs "jj" (List.concat [ args; [ "--color"; "always" ] ])[39m
     [38;5;2m7323[39m: [38;5;2m      257:        17: let vcount = Lwd.var I.empty[39m
     [38;5;2m7324[39m: [38;5;2m      258:        18: [39m
     [38;5;2m7325[39m: [38;5;2m      259:        19: let _button =[39m
     [38;5;2m7326[39m: [38;5;2m      260:        20:   W.button (Printf.sprintf "run jj") (fun () ->[39m
     [38;5;2m7327[39m: [38;5;2m      261:        21:       vcount $= (cmdArgs "jj" [ "log"; "--color"; "always" ] |> colored_string))[39m
     [38;5;2m7328[39m: [38;5;2m      262:        22:   |> Lwd.pure[39m
     [38;5;2m7329[39m: [38;5;2m      263:        23: [39m
     [38;5;2m7330[39m: [38;5;2m      264:        24: let vQuit = Lwd.var false[39m
     [38;5;2m7331[39m: [38;5;2m      265:        25: [39m
     [38;5;2m7332[39m: [38;5;2m      266:        26: let _quitButton =[39m
     [38;5;2m7333[39m: [38;5;2m      267:        27:   W.button (Printf.sprintf "quit ") (fun () -> vQuit $= true) |> Lwd.pure[39m
     [38;5;2m7334[39m: [38;5;2m      268:        28: [39m
     [38;5;2m7335[39m: [38;5;2m      269:        29: let ( <-$ ) f v = Lwd.map ~f (Lwd.get v)[39m
     [38;5;2m7336[39m: [38;5;2m      270:        30: [39m
     [38;5;2m7337[39m: [38;5;2m      271:        31: (* let ( let<- ) v f = Lwd.map ~f (Lwd.get v) *)[39m
     [38;5;2m7338[39m: [38;5;2m      272:        32: let vShowStatus = Lwd.var I.empty[39m
     [38;5;2m7339[39m: [38;5;2m      273:        33: let vother = Lwd.var ""[39m
     [38;5;2m7340[39m: [38;5;2m      274:        34: [39m
     [38;5;2m7341[39m: [38;5;2m      275:        35: let onChange () =[39m
     [38;5;2m7342[39m: [38;5;2m      276:        36:   let res = jj [ "show" ] |> colored_string in[39m
     [38;5;2m7343[39m: [38;5;2m      277:        37:   vShowStatus $= res;[39m
     [38;5;2m7344[39m: [38;5;2m      278:        38:   let res = jj [] in[39m
     [38;5;2m7345[39m: [38;5;2m      279:        39:   vcount $= colored_string res[39m
     [38;5;2m7346[39m: [38;5;2m      280:        40: [39m
     [38;5;2m7347[39m: [38;5;2m      281:        41: let changeInputs key =[39m
     [38;5;2m7348[39m: [38;5;2m      282:        42:   let noOut args =[39m
     [38;5;2m7349[39m: [38;5;2m      283:        43:     let _ = jj args in[39m
     [38;5;2m7350[39m: [38;5;2m      284:        44:     `Handled[39m
     [38;5;2m7351[39m: [38;5;2m      285:        45:   in[39m
     [38;5;2m7352[39m: [38;5;2m      286:        46:   match key with[39m
     [38;5;2m7353[39m: [38;5;2m      287:        47:   | 'P' -> noOut [ "prev" ][39m
     [38;5;2m7354[39m: [38;5;2m      288:        48:   | 'p' -> noOut [ "prev"; "--edit" ][39m
     [38;5;2m7355[39m: [38;5;2m      289:        49:   | 'N' -> noOut [ "next" ][39m
     [38;5;2m7356[39m: [38;5;2m      290:        50:   | 'n' -> noOut [ "next"; "--edit" ][39m
     [38;5;2m7357[39m: [38;5;2m      291:        51:   | 'S' -> noOut [ "unsquash"; "-i"; "--tool"; "sublime_merge" ][39m
     [38;5;2m7358[39m: [38;5;2m      292:        52:   | _ -> `Unhandled[39m
     [38;5;2m7359[39m: [38;5;2m      293:        53: [39m
     [38;5;2m7360[39m: [38;5;2m      294:        54: let inputs ui =[39m
     [38;5;2m7361[39m: [38;5;2m      295:        55:   Ui.event_filter[39m
     [38;5;2m7362[39m: [38;5;2m      296:        56:     (fun event ->[39m
     [38;5;2m7363[39m: [38;5;2m      297:        57:       match event with[39m
     [38;5;2m7364[39m: [38;5;2m      298:        58:       | `Key (`ASCII 's', _) ->[39m
     [38;5;2m7365[39m: [38;5;2m      299:        59:           let res = jj [ "show" ] in[39m
     [38;5;2m7366[39m: [38;5;2m      300:        60:           vShowStatus $= (res |> colored_string);[39m
     [38;5;2m7367[39m: [38;5;2m      301:        61: [39m
     [38;5;2m7368[39m: [38;5;2m      302:        62:           `Handled[39m
     [38;5;2m7369[39m: [38;5;2m      303:        63:       | `Key (`ASCII 'l', _) ->[39m
     [38;5;2m7370[39m: [38;5;2m      304:        64:           let res = jj [] in[39m
     [38;5;2m7371[39m: [38;5;2m      305:        65:           vcount $= colored_string res;[39m
     [38;5;2m7372[39m: [38;5;2m      306:        66:           vother $= res;[39m
     [38;5;2m7373[39m: [38;5;2m      307:        67: [39m
     [38;5;2m7374[39m: [38;5;2m      308:        68:           `Handled[39m
     [38;5;2m7375[39m: [38;5;2m      309:        69:       | `Key (`ASCII 'q', _) ->[39m
     [38;5;2m7376[39m: [38;5;2m      310:        70:           vQuit $= true;[39m
     [38;5;2m7377[39m: [38;5;2m      311:        71: [39m
     [38;5;2m7378[39m: [38;5;2m      312:        72:           `Handled[39m
     [38;5;2m7379[39m: [38;5;2m      313:        73:       | `Key (`ASCII key, _) -> ([39m
     [38;5;2m7380[39m: [38;5;2m      314:        74:           match changeInputs key with[39m
     [38;5;2m7381[39m: [38;5;2m      315:        75:           | `Handled ->[39m
     [38;5;2m7382[39m: [38;5;2m      316:        76:               onChange ();[39m
     [38;5;2m7383[39m: [38;5;2m      317:        77:               `Handled[39m
     [38;5;2m7384[39m: [38;5;2m      318:        78:           | `Unhandled -> `Unhandled)[39m
     [38;5;2m7385[39m: [38;5;2m      319:        79:       | _ -> `Unhandled)[39m
     [38;5;2m7386[39m: [38;5;2m      320:        80:     ui[39m
     [38;5;2m7387[39m: [38;5;2m      321:        81: [39m
     [38;5;2m7388[39m: [38;5;2m      322:        82: let mainUi =[39m
     [38;5;2m7389[39m: [38;5;2m      323:        83:   let$ pane =[39m
     [38;5;2m7390[39m: [38;5;2m      324:        84:     W.h_pane[39m
     [38;5;2m7391[39m: [38;5;2m      325:        85:       (Nottui_widgets.vbox[39m
     [38;5;2m7392[39m: [38;5;2m      326:        86:          [ (* button;  *) Ui.atom <-$ vcount (* quitButton  *) ])[39m
     [38;5;2m7393[39m: [38;5;2m      327:        87:       (Ui.atom <-$ vShowStatus)[39m
     [38;5;2m7394[39m: [38;5;2m      328:        88:   in[39m
     [38;5;2m7395[39m: [38;5;2m      329:        89:   inputs pane[39m
     [38;5;2m7396[39m: [38;5;2m      330:        90: ;;[39m
     [38;5;2m7397[39m: [38;5;2m      331:        91: [39m
     [38;5;2m7398[39m: [38;5;2m      332:        92: (*TODO:For hosting a subprocess i should look into using EIO and Ui_loop.step like some of the other libraries built with nottui*)[39m
     [38;5;2m7399[39m: [38;5;2m      333:        93: Ui_loop.run ~quit:vQuit mainUi[39m
     [38;5;2m7400[39m: [38;5;2m      334:        94: (* let my_image=(Notty.I.string Notty.A.empty "\027[32mThis is in green %s\027[0m" ) in *)[39m
     [38;5;2m7401[39m: [38;5;2m      335:        95: (* let my_image =[39m
     [38;5;2m7402[39m: [38;5;2m      336:        96:      Jj_tui.AnsiReverse.Cap.parse_ansi_escape_codes[39m
     [38;5;2m7403[39m: [38;5;2m      337:        97:        "\027[32mThis is in green %s\027[0m "[39m
     [38;5;2m7404[39m: [38;5;2m      338:        98:      |> List.map (fun (x, str) -> Notty.I.string x str)[39m
     [38;5;2m7405[39m: [38;5;2m      339:        99:    ;;[39m
     [38;5;2m7406[39m: [38;5;2m      340:       100: [39m
     [38;5;2m7407[39m: [38;5;2m      341:       101:    Notty_unix.output_image (my_image |> List.hd) *)[39m
     [38;5;2m7408[39m: [38;5;2m      342:       102: [39m
     [38;5;2m7409[39m: [38;5;2m      343:       103: (*[39m
     [38;5;2m7410[39m: [38;5;2m      344:       104: type tree = Tree of string * (unit -> tree list)[39m
     [38;5;2m7411[39m: [38;5;2m      345:       105: [39m
     [38;5;2m7412[39m: [38;5;2m      346:       106: let rec tree_ui (Tree (label, child)) =[39m
     [38;5;2m7413[39m: [38;5;2m      347:       107:   let opened = Lwd.var false in[39m
     [38;5;2m7414[39m: [38;5;2m      348:       108:   let render is_opened =[39m
     [38;5;2m7415[39m: [38;5;2m      349:       109:     let btn_text = if is_opened then "[-] " else "[+] " in[39m
     [38;5;2m7416[39m: [38;5;2m      350:       110:     let btn_action () = Lwd.set opened (not is_opened) in[39m
     [38;5;2m7417[39m: [38;5;2m      351:       111:     let btn = W.button (btn_text ^ label) btn_action in[39m
     [38;5;2m7418[39m: [38;5;2m      352:       112:     let layout node forest =[39m
     [38;5;2m7419[39m: [38;5;2m      353:       113:       Ui.join_y node (Ui.join_x (Ui.space 2 0) forest) [39m
     [38;5;2m7420[39m: [38;5;2m      354:       114:     in[39m
     [38;5;2m7421[39m: [38;5;2m      355:       115:     if is_opened [39m
     [38;5;2m7422[39m: [38;5;2m      356:       116:     then Lwd.map ~f:(layout btn) (forest_ui (child ()))[39m
     [38;5;2m7423[39m: [38;5;2m      357:       117:     else Lwd.pure btn[39m
     [38;5;2m7424[39m: [38;5;2m      358:       118:   in[39m
     [38;5;2m7425[39m: [38;5;2m      359:       119:   Lwd.join (Lwd.map ~f:render (Lwd.get opened))[39m
     [38;5;2m7426[39m: [38;5;2m      360:       120:   [39m
     [38;5;2m7427[39m: [38;5;2m      361:       121: and forest_ui nodes = [39m
     [38;5;2m7428[39m: [38;5;2m      362:       122:   Lwd_utils.pack Ui.pack_y [39m
     [38;5;2m7429[39m: [38;5;2m      363:       123:     (List.map tree_ui nodes)[39m
     [38;5;2m7430[39m: [38;5;2m      364:       124: ;;[39m
     [38;5;2m7431[39m: [38;5;2m      365:       125: [39m
     [38;5;2m7432[39m: [38;5;2m      366:       126: let rec fake_fs () = [[39m
     [38;5;2m7433[39m: [38;5;2m      367:       127:   Tree ("bin", fake_fs);[39m
     [38;5;2m7434[39m: [38;5;2m      368:       128:   Tree ("home", fake_fs);[39m
     [38;5;2m7435[39m: [38;5;2m      369:       129:   Tree ("usr", fake_fs);[39m
     [38;5;2m7436[39m: [38;5;2m      370:       130: ] in[39m
     [38;5;2m7437[39m: [38;5;2m      371:       131: [39m
     [38;5;2m7438[39m: [38;5;2m      372:       132: Ui_loop.run (forest_ui (fake_fs ()));;[39m
     [38;5;2m7439[39m: [38;5;2m      373:       133: *)[39m
     [38;5;2m7440[39m: [38;5;2m      374: Added regular file dune-project:[39m
     [38;5;2m7441[39m: [38;5;2m      375:         1: (lang dune 3.9)[39m
     [38;5;2m7442[39m: [38;5;2m      376:         2: [39m
     [38;5;2m7443[39m: [38;5;2m      377:         3: (name jj_tui)[39m
     [38;5;2m7444[39m: [38;5;2m      378:         4: [39m
     [38;5;2m7445[39m: [38;5;2m      379:         5: (generate_opam_files true)[39m
     [38;5;2m7446[39m: [38;5;2m      380:         6: [39m
     [38;5;2m7447[39m: [38;5;2m      381:         7: (source[39m
     [38;5;2m7448[39m: [38;5;2m      382:         8:  (github username/reponame))[39m
     [38;5;2m7449[39m: [38;5;2m      383:         9: [39m
     [38;5;2m7450[39m: [38;5;2m      384:        10: (authors "Author Name")[39m
     [38;5;2m7451[39m: [38;5;2m      385:        11: [39m
     [38;5;2m7452[39m: [38;5;2m      386:        12: (maintainers "Maintainer Name")[39m
     [38;5;2m7453[39m: [38;5;2m      387:        13: [39m
     [38;5;2m7454[39m: [38;5;2m      388:        14: (license LICENSE)[39m
     [38;5;2m7455[39m: [38;5;2m      389:        15: [39m
     [38;5;2m7456[39m: [38;5;2m      390:        16: (documentation https://url/to/documentation)[39m
     [38;5;2m7457[39m: [38;5;2m      391:        17: [39m
     [38;5;2m7458[39m: [38;5;2m      392:        18: (package[39m
     [38;5;2m7459[39m: [38;5;2m      393:        19:  (name jj_tui)[39m
     [38;5;2m7460[39m: [38;5;2m      394:        20:  (synopsis "A short synopsis")[39m
     [38;5;2m7461[39m: [38;5;2m      395:        21:  (description "A longer description")[39m
     [38;5;2m7462[39m: [38;5;2m      396:        22:  (depends ocaml dune)[39m
     [38;5;2m7463[39m: [38;5;2m      397:        23:  (tags[39m
     [38;5;2m7464[39m: [38;5;2m      398:        24:   (topics "to describe" your project)))[39m
     [38;5;2m7465[39m: [38;5;2m      399:        25: [39m
     [38;5;2m7466[39m: [38;5;2m      400:        26: ; See the complete stanza docs at https://dune.readthedocs.io/en/stable/dune-files.html#dune-project[39m
     [38;5;2m7467[39m: [38;5;2m      401: Added regular file flake.lock:[39m
     [38;5;2m7468[39m: [38;5;2m      402:         1: {[39m
     [38;5;2m7469[39m: [38;5;2m      403:         2:   "nodes": {[39m
     [38;5;2m7470[39m: [38;5;2m      404:         3:     "nixpkgs": {[39m
     [38;5;2m7471[39m: [38;5;2m      405:         4:       "locked": {[39m
     [38;5;2m7472[39m: [38;5;2m      406:         5:         "lastModified": 1713344939,[39m
     [38;5;2m7473[39m: [38;5;2m      407:         6:         "narHash": "sha256-jpHkAt0sG2/J7ueKnG7VvLLkBYUMQbXQ2L8OBpVG53s=",[39m
     [38;5;2m7474[39m: [38;5;2m      408:         7:         "path": "/nix/store/ngm8a5avsnfk266jha4j5xy93xfhjasf-source",[39m
     [38;5;2m7475[39m: [38;5;2m      409:         8:         "rev": "e402c3eb6d88384ca6c52ef1c53e61bdc9b84ddd",[39m
     [38;5;2m7476[39m: [38;5;2m      410:         9:         "type": "path"[39m
     [38;5;2m7477[39m: [38;5;2m      411:        10:       },[39m
     [38;5;2m7478[39m: [38;5;2m      412:        11:       "original": {[39m
     [38;5;2m7479[39m: [38;5;2m      413:        12:         "id": "nixpkgs",[39m
     [38;5;2m7480[39m: [38;5;2m      414:        13:         "type": "indirect"[39m
     [38;5;2m7481[39m: [38;5;2m      415:        14:       }[39m
     [38;5;2m7482[39m: [38;5;2m      416:        15:     },[39m
     [38;5;2m7483[39m: [38;5;2m      417:        16:     "root": {[39m
     [38;5;2m7484[39m: [38;5;2m      418:        17:       "inputs": {[39m
     [38;5;2m7485[39m: [38;5;2m      419:        18:         "nixpkgs": "nixpkgs"[39m
     [38;5;2m7486[39m: [38;5;2m      420:        19:       }[39m
     [38;5;2m7487[39m: [38;5;2m      421:        20:     }[39m
     [38;5;2m7488[39m: [38;5;2m      422:        21:   },[39m
     [38;5;2m7489[39m: [38;5;2m      423:        22:   "root": "root",[39m
     [38;5;2m7490[39m: [38;5;2m      424:        23:   "version": 7[39m
     [38;5;2m7491[39m: [38;5;2m      425:        24: }[39m
     [38;5;2m7492[39m: [38;5;2m      426: Added regular file flake.nix:[39m
     [38;5;2m7493[39m: [38;5;2m      427:         1: {[39m
     [38;5;2m7494[39m: [38;5;2m      428:         2:   description = "Example JavaScript development environment for Zero to Nix";[39m
     [38;5;2m7495[39m: [38;5;2m      429:         3: [39m
     [38;5;2m7496[39m: [38;5;2m      430:         4:   # Flake inputs[39m
     [38;5;2m7497[39m: [38;5;2m      431:         5:   inputs = {[39m
     [38;5;2m7498[39m: [38;5;2m      432:         6: [39m
     [38;5;2m7499[39m: [38;5;2m      433:         7:     # nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";[39m
     [38;5;2m7500[39m: [38;5;2m      434:         8:     nixpkgs.url = "nixpkgs"; # also valid: "nixpkgs"[39m
     [38;5;2m7501[39m: [38;5;2m      435:         9: [39m
     [38;5;2m7502[39m: [38;5;2m      436:        10:     # roc={[39m
     [38;5;2m7503[39m: [38;5;2m      437:        11:     #   url="github:roc-lang/roc";[39m
     [38;5;2m7504[39m: [38;5;2m      438:        12:     # inputs.nixpkgs.follows="nixpkgs";[39m
     [38;5;2m7505[39m: [38;5;2m      439:        13: [39m
     [38;5;2m7506[39m: [38;5;2m      440:        14:     # };[39m
     [38;5;2m7507[39m: [38;5;2m      441:        15: [39m
     [38;5;2m7508[39m: [38;5;2m      442:        16:   };[39m
     [38;5;2m7509[39m: [38;5;2m      443:        17:   # Flake outputs[39m
     [38;5;2m7510[39m: [38;5;2m      444:        18:   outputs = { self, nixpkgs, ... }@inputs:[39m
     [38;5;2m7511[39m: [38;5;2m      445:        19:     let[39m
     [38;5;2m7512[39m: [38;5;2m      446:        20:       # Systems supported[39m
     [38;5;2m7513[39m: [38;5;2m      447:        21:       allSystems = [[39m
     [38;5;2m7514[39m: [38;5;2m      448:        22:         "x86_64-linux" # 64-bit Intel/AMD Linux[39m
     [38;5;2m7515[39m: [38;5;2m      449:        23:       ];[39m
     [38;5;2m7516[39m: [38;5;2m      450:        24: [39m
     [38;5;2m7517[39m: [38;5;2m      451:        25:       # Helper to provide system-specific attributes[39m
     [38;5;2m7518[39m: [38;5;2m      452:        26:       forAllSystems = f:[39m
     [38;5;2m7519[39m: [38;5;2m      453:        27:         nixpkgs.lib.genAttrs allSystems (system:[39m
     [38;5;2m7520[39m: [38;5;2m      454:        28:           f {[39m
     [38;5;2m7521[39m: [38;5;2m      455:        29:             pkgs = import nixpkgs { inherit system; };[39m
     [38;5;2m7522[39m: [38;5;2m      456:        30: [39m
     [38;5;2m7523[39m: [38;5;2m      457:        31:           });[39m
     [38;5;2m7524[39m: [38;5;2m      458:        32:     in {[39m
     [38;5;2m7525[39m: [38;5;2m      459:        33:       # Development environment output[39m
     [38;5;2m7526[39m: [38;5;2m      460:        34:       devShells = forAllSystems ({ pkgs }: {[39m
     [38;5;2m7527[39m: [38;5;2m      461:        35:         default =[39m
     [38;5;2m7528[39m: [38;5;2m      462:        36: [39m
     [38;5;2m7529[39m: [38;5;2m      463:        37:           pkgs.mkShell {[39m
     [38;5;2m7530[39m: [38;5;2m      464:        38:             packages = with pkgs; [ pkgs.pkg-config gmp stdenv.cc.cc.lib ];[39m
     [38;5;2m7531[39m: [38;5;2m      465:        39:             shellHook = let[39m
     [38;5;2m7532[39m: [38;5;2m      466:        40:               libPath =[39m
     [38;5;2m7533[39m: [38;5;2m      467:        41:                 pkgs.lib.makeLibraryPath [ pkgs.stdenv.cc.cc.lib pkgs.gmp ];[39m
     [38;5;2m7534[39m: [38;5;2m      468:        42:             in ''[39m
     [38;5;2m7535[39m: [38;5;2m      469:        43:               # yolo[39m
     [38;5;2m7536[39m: [38;5;2m      470:        44:               export CFLAGS="$CFLAGS -I${pkgs.stdenv.cc.cc.lib}/include -I${pkgs.gmp}/include"[39m
     [38;5;2m7537[39m: [38;5;2m      471:        45:               export LIBS="$LIBS -L${pkgs.stdenv.cc.cc.lib}/lib -L${pkgs.gmp}/lib"[39m
     [38;5;2m7538[39m: [38;5;2m      472:        46:             '';[39m
     [38;5;2m7539[39m: [38;5;2m      473:        47:           };[39m
     [38;5;2m7540[39m: [38;5;2m      474:        48: [39m
     [38;5;2m7541[39m: [38;5;2m      475:        49:       });[39m
     [38;5;2m7542[39m: [38;5;2m      476:        50: [39m
     [38;5;2m7543[39m: [38;5;2m      477:        51:     };[39m
     [38;5;2m7544[39m: [38;5;2m      478:        52: }[39m
     [38;5;2m7545[39m: [38;5;2m      479: Added regular file jj_tui.opam:[39m
     [38;5;2m7546[39m: [38;5;2m      480:         1: # This file is generated by dune, edit dune-project instead[39m
     [38;5;2m7547[39m: [38;5;2m      481:         2: opam-version: "2.0"[39m
     [38;5;2m7548[39m: [38;5;2m      482:         3: synopsis: "A short synopsis"[39m
     [38;5;2m7549[39m: [38;5;2m      483:         4: description: "A longer description"[39m
     [38;5;2m7550[39m: [38;5;2m      484:         5: maintainer: ["Maintainer Name"][39m
     [38;5;2m7551[39m: [38;5;2m      485:         6: authors: ["Author Name"][39m
     [38;5;2m7552[39m: [38;5;2m      486:         7: license: "LICENSE"[39m
     [38;5;2m7553[39m: [38;5;2m      487:         8: tags: ["topics" "to describe" "your" "project"][39m
     [38;5;2m7554[39m: [38;5;2m      488:         9: homepage: "https://github.com/username/reponame"[39m
     [38;5;2m7555[39m: [38;5;2m      489:        10: doc: "https://url/to/documentation"[39m
     [38;5;2m7556[39m: [38;5;2m      490:        11: bug-reports: "https://github.com/username/reponame/issues"[39m
     [38;5;2m7557[39m: [38;5;2m      491:        12: depends: [[39m
     [38;5;2m7558[39m: [38;5;2m      492:        13:   "ocaml"[39m
     [38;5;2m7559[39m: [38;5;2m      493:        14:   "dune" {>= "3.9"}[39m
     [38;5;2m7560[39m: [38;5;2m      494:        15:   "odoc" {with-doc}[39m
     [38;5;2m7561[39m: [38;5;2m      495:        16: ][39m
     [38;5;2m7562[39m: [38;5;2m      496:        17: build: [[39m
     [38;5;2m7563[39m: [38;5;2m      497:        18:   ["dune" "subst"] {dev}[39m
     [38;5;2m7564[39m: [38;5;2m      498:        19:   [[39m
     [38;5;2m7565[39m: [38;5;2m      499:        20:     "dune"[39m
     [38;5;2m7566[39m: [38;5;2m      500:        21:     "build"[39m
     [38;5;2m7567[39m: [38;5;2m      501:        22:     "-p"[39m
     [38;5;2m7568[39m: [38;5;2m      502:        23:     name[39m
     [38;5;2m7569[39m: [38;5;2m      503:        24:     "-j"[39m
     [38;5;2m7570[39m: [38;5;2m      504:        25:     jobs[39m
     [38;5;2m7571[39m: [38;5;2m      505:        26:     "@install"[39m
     [38;5;2m7572[39m: [38;5;2m      506:        27:     "@runtest" {with-test}[39m
     [38;5;2m7573[39m: [38;5;2m      507:        28:     "@doc" {with-doc}[39m
     [38;5;2m7574[39m: [38;5;2m      508:        29:   ][39m
     [38;5;2m7575[39m: [38;5;2m      509:        30: ][39m
     [38;5;2m7576[39m: [38;5;2m      510:        31: dev-repo: "git+https://github.com/username/reponame.git"[39m
     [38;5;2m7577[39m: [38;5;2m      511: Added regular file lib/ansiReverse.ml:[39m
     [38;5;2m7578[39m: [38;5;2m      512:         1: open Notty[39m
     [38;5;2m7579[39m: [38;5;2m      513:         2: [39m
     [38;5;2m7580[39m: [38;5;2m      514:         3: type op = Buffer.t -> unit[39m
     [38;5;2m7581[39m: [38;5;2m      515:         4: [39m
     [38;5;2m7582[39m: [38;5;2m      516:         5: (* let ( & ) op1 op2 buf =[39m
     [38;5;2m7583[39m: [38;5;2m      517:         6:      op1 buf;[39m
     [38;5;2m7584[39m: [38;5;2m      518:         7:      op2 buf[39m
     [38;5;2m7585[39m: [38;5;2m      519:         8: [39m
     [38;5;2m7586[39m: [38;5;2m      520:         9: [39m
     [38;5;2m7587[39m: [38;5;2m      521:        10:    let ( <| ), ( <. ), ( <! ) = Buffer.(add_string, add_char, add_decimal) *)[39m
     [38;5;2m7588[39m: [38;5;2m      522:        11: let invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m7589[39m: [38;5;2m      523:        12: [39m
     [38;5;2m7590[39m: [38;5;2m      524:        13: let rgb ~r ~g ~b =[39m
     [38;5;2m7591[39m: [38;5;2m      525:        14:   if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m7592[39m: [38;5;2m      526:        15:     invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m7593[39m: [38;5;2m      527:        16:   else 0x01000000 lor ((r * 36) + (g * 6) + b + 16)[39m
     [38;5;2m7594[39m: [38;5;2m      528:        17: [39m
     [38;5;2m7595[39m: [38;5;2m      529:        18: let gray level =[39m
     [38;5;2m7596[39m: [38;5;2m      530:        19:   if level < 0 || level > 23 then[39m
     [38;5;2m7597[39m: [38;5;2m      531:        20:     invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m7598[39m: [38;5;2m      532:        21:   else 0x01000000 lor (level + 232)[39m
     [38;5;2m7599[39m: [38;5;2m      533:        22: [39m
     [38;5;2m7600[39m: [38;5;2m      534:        23: let rgb_888 ~r ~g ~b =[39m
     [38;5;2m7601[39m: [38;5;2m      535:        24:   if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m7602[39m: [38;5;2m      536:        25:     invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m7603[39m: [38;5;2m      537:        26:   else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m7604[39m: [38;5;2m      538:        27: [39m
     [38;5;2m7605[39m: [38;5;2m      539:        28: let sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m7606[39m: [38;5;2m      540:        29: [39m
     [38;5;2m7607[39m: [38;5;2m      541:        30: let attr_of_ints fg bg st =[39m
     [38;5;2m7608[39m: [38;5;2m      542:        31:   A.fg @@ A.unsafe_color_of_int fg[39m
     [38;5;2m7609[39m: [38;5;2m      543:        32:   |> A.( ++ ) (A.bg @@ A.unsafe_color_of_int bg)[39m
     [38;5;2m7610[39m: [38;5;2m      544:        33:   |> A.( ++ ) (A.st @@ A.unsafe_style_of_int st)[39m
     [38;5;2m7611[39m: [38;5;2m      545:        34: [39m
     [38;5;2m7612[39m: [38;5;2m      546:        35: let fg_int i = A.fg @@ A.unsafe_color_of_int i[39m
     [38;5;2m7613[39m: [38;5;2m      547:        36: let bg_int i = A.bg @@ A.unsafe_color_of_int i[39m
     [38;5;2m7614[39m: [38;5;2m      548:        37: [39m
     [38;5;2m7615[39m: [38;5;2m      549:        38: let print_image img =[39m
     [38;5;2m7616[39m: [38;5;2m      550:        39:   print_endline "image:";[39m
     [38;5;2m7617[39m: [38;5;2m      551:        40:   img |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m7618[39m: [38;5;2m      552:        41:   print_endline (Format.flush_str_formatter () |> String.escaped)[39m
     [38;5;2m7619[39m: [38;5;2m      553:        42: [39m
     [38;5;2m7620[39m: [38;5;2m      554:        43: let parse_ansi_escape_codes (input : string) : (A.t * string) list =[39m
     [38;5;2m7621[39m: [38;5;2m      555:        44:   let len = String.length input in[39m
     [38;5;2m7622[39m: [38;5;2m      556:        45:   let rec parse_codes acc i =[39m
     [38;5;2m7623[39m: [38;5;2m      557:        46:     if i >= len then List.rev acc[39m
     [38;5;2m7624[39m: [38;5;2m      558:        47:     else[39m
     [38;5;2m7625[39m: [38;5;2m      559:        48:       let attr, j =[39m
     [38;5;2m7626[39m: [38;5;2m      560:        49:         if i + 1 < len && input.[i] = '\027' && input.[i + 1] = '[' then ([39m
     [38;5;2m7627[39m: [38;5;2m      561:        50:           let params = ref [] in[39m
     [38;5;2m7628[39m: [38;5;2m      562:        51:           let j = ref (i + 2) in[39m
     [38;5;2m7629[39m: [38;5;2m      563:        52:           while !j < len && input.[!j] <> 'm' do[39m
     [38;5;2m7630[39m: [38;5;2m      564:        53:             let start = !j in[39m
     [38;5;2m7631[39m: [38;5;2m      565:        54:             while !j < len && input.[!j] <> ';' && input.[!j] <> 'm' do[39m
     [38;5;2m7632[39m: [38;5;2m      566:        55:               incr j[39m
     [38;5;2m7633[39m: [38;5;2m      567:        56:             done;[39m
     [38;5;2m7634[39m: [38;5;2m      568:        57:             let param = String.sub input start (!j - start) in[39m
     [38;5;2m7635[39m: [38;5;2m      569:        58:             params := int_of_string param :: !params;[39m
     [38;5;2m7636[39m: [38;5;2m      570:        59:             if !j < len && input.[!j] = ';' then incr j[39m
     [38;5;2m7637[39m: [38;5;2m      571:        60:           done;[39m
     [38;5;2m7638[39m: [38;5;2m      572:        61:           if !j < len && input.[!j] = 'm' then[39m
     [38;5;2m7639[39m: [38;5;2m      573:        62:             let params = List.rev !params in[39m
     [38;5;2m7640[39m: [38;5;2m      574:        63:             let attr =[39m
     [38;5;2m7641[39m: [38;5;2m      575:        64:               match params with[39m
     [38;5;2m7642[39m: [38;5;2m      576:        65:               | [] -> A.empty[39m
     [38;5;2m7643[39m: [38;5;2m      577:        66:               | 0 :: _ -> A.empty[39m
     [38;5;2m7644[39m: [38;5;2m      578:        67:               | 1 :: _ -> A.st A.bold[39m
     [38;5;2m7645[39m: [38;5;2m      579:        68:               | 2 :: _ -> A.st A.italic[39m
     [38;5;2m7646[39m: [38;5;2m      580:        69:               | 4 :: _ -> A.st A.underline[39m
     [38;5;2m7647[39m: [38;5;2m      581:        70:               | 5 :: _ -> A.st A.blink[39m
     [38;5;2m7648[39m: [38;5;2m      582:        71:               | 7 :: _ -> A.st A.reverse[39m
     [38;5;2m7649[39m: [38;5;2m      583:        72:               | 30 :: _ -> A.fg A.black[39m
     [38;5;2m7650[39m: [38;5;2m      584:        73:               | 31 :: _ -> A.fg A.red[39m
     [38;5;2m7651[39m: [38;5;2m      585:        74:               | 32 :: _ -> A.fg A.green[39m
     [38;5;2m7652[39m: [38;5;2m      586:        75:               | 33 :: _ -> A.fg A.yellow[39m
     [38;5;2m7653[39m: [38;5;2m      587:        76:               | 34 :: _ -> A.fg A.blue[39m
     [38;5;2m7654[39m: [38;5;2m      588:        77:               | 35 :: _ -> A.fg A.magenta[39m
     [38;5;2m7655[39m: [38;5;2m      589:        78:               | 36 :: _ -> A.fg A.cyan[39m
     [38;5;2m7656[39m: [38;5;2m      590:        79:               | 37 :: _ -> A.fg A.white[39m
     [38;5;2m7657[39m: [38;5;2m      591:        80:               | 38 :: 5 :: color :: _ ->[39m
     [38;5;2m7658[39m: [38;5;2m      592:        81:                   A.fg (A.unsafe_color_of_int (0x01000000 lor color))[39m
     [38;5;2m7659[39m: [38;5;2m      593:        82:               | 40 :: _ -> A.bg A.black[39m
     [38;5;2m7660[39m: [38;5;2m      594:        83:               | 41 :: _ -> A.bg A.red[39m
     [38;5;2m7661[39m: [38;5;2m      595:        84:               | 42 :: _ -> A.bg A.green[39m
     [38;5;2m7662[39m: [38;5;2m      596:        85:               | 43 :: _ -> A.bg A.yellow[39m
     [38;5;2m7663[39m: [38;5;2m      597:        86:               | 44 :: _ -> A.bg A.blue[39m
     [38;5;2m7664[39m: [38;5;2m      598:        87:               | 45 :: _ -> A.bg A.magenta[39m
     [38;5;2m7665[39m: [38;5;2m      599:        88:               | 46 :: _ -> A.bg A.cyan[39m
     [38;5;2m7666[39m: [38;5;2m      600:        89:               | 47 :: _ -> A.bg A.white[39m
     [38;5;2m7667[39m: [38;5;2m      601:        90:               | 48 :: 5 :: color :: _ ->[39m
     [38;5;2m7668[39m: [38;5;2m      602:        91:                   A.bg (A.unsafe_color_of_int (0x02000000 lor color))[39m
     [38;5;2m7669[39m: [38;5;2m      603:        92:               | _ -> A.empty[39m
     [38;5;2m7670[39m: [38;5;2m      604:        93:             in[39m
     [38;5;2m7671[39m: [38;5;2m      605:        94:             (attr, !j + 1)[39m
     [38;5;2m7672[39m: [38;5;2m      606:        95:           else (A.empty, i))[39m
     [38;5;2m7673[39m: [38;5;2m      607:        96:         else (A.empty, i)[39m
     [38;5;2m7674[39m: [38;5;2m      608:        97:       in[39m
     [38;5;2m7675[39m: [38;5;2m      609:        98:       let k = ref j in[39m
     [38;5;2m7676[39m: [38;5;2m      610:        99:       while !k < len && input.[!k] <> '\027' do[39m
     [38;5;2m7677[39m: [38;5;2m      611:       100:         incr k[39m
     [38;5;2m7678[39m: [38;5;2m      612:       101:       done;[39m
     [38;5;2m7679[39m: [38;5;2m      613:       102:       let substring = String.sub input j (!k - j) in[39m
     [38;5;2m7680[39m: [38;5;2m      614:       103:       parse_codes ((attr, substring) :: acc) !k[39m
     [38;5;2m7681[39m: [38;5;2m      615:       104:   in[39m
     [38;5;2m7682[39m: [38;5;2m      616:       105:   parse_codes [] 0[39m
     [38;5;2m7683[39m: [38;5;2m      617:       106: [39m
     [38;5;2m7684[39m: [38;5;2m      618:       107: (** Like fold left except we run the first element through init to get the state*)[39m
     [38;5;2m7685[39m: [38;5;2m      619:       108: let fold_left_pre (f : 'acc -> 'a -> 'acc) (init : 'a -> 'acc) (input : 'a list)[39m
     [38;5;2m7686[39m: [38;5;2m      620:       109:     =[39m
     [38;5;2m7687[39m: [38;5;2m      621:       110:   match input with[39m
     [38;5;2m7688[39m: [38;5;2m      622:       111:   | [] -> invalid_arg "empty list"[39m
     [38;5;2m7689[39m: [38;5;2m      623:       112:   | x :: xs ->[39m
     [38;5;2m7690[39m: [38;5;2m      624:       113:       let state = init x in[39m
     [38;5;2m7691[39m: [38;5;2m      625:       114:       xs |> List.fold_left f state[39m
     [38;5;2m7692[39m: [38;5;2m      626:       115: [39m
     [38;5;2m7693[39m: [38;5;2m      627:       116: let string_to_image str =[39m
     [38;5;2m7694[39m: [38;5;2m      628:       117:   let coded_strs = parse_ansi_escape_codes str in[39m
     [38;5;2m7695[39m: [38;5;2m      629:       118:   let locate_newlines codes =[39m
     [38;5;2m7696[39m: [38;5;2m      630:       119:     codes[39m
     [38;5;2m7697[39m: [38;5;2m      631:       120:     |> List.concat_map (fun (attr, str) ->[39m
     [38;5;2m7698[39m: [38;5;2m      632:       121:            str |> String.split_on_char '\n'[39m
     [38;5;2m7699[39m: [38;5;2m      633:       122:            |> List.map (fun x -> `Image (I.string attr x))[39m
     [38;5;2m7700[39m: [38;5;2m      634:       123:            |> Base.List.intersperse ~sep:`Newline)[39m
     [38;5;2m7701[39m: [38;5;2m      635:       124:   in[39m
     [38;5;2m7702[39m: [38;5;2m      636:       125:   let newline_seperated = locate_newlines coded_strs in[39m
     [38;5;2m7703[39m: [38;5;2m      637:       126:   (* Printf.printf "len:%d" (List.length newline_seperated); *)[39m
     [38;5;2m7704[39m: [38;5;2m      638:       127:   let lines =[39m
     [38;5;2m7705[39m: [38;5;2m      639:       128:     let open I in[39m
     [38;5;2m7706[39m: [38;5;2m      640:       129:     (* newline_seperated[39m
     [38;5;2m7707[39m: [38;5;2m      641:       130:        |> List.iter (fun x -> match x with `Imarge i -> print_image i | _ -> ()); *)[39m
     [38;5;2m7708[39m: [38;5;2m      642:       131:     newline_seperated[39m
     [38;5;2m7709[39m: [38;5;2m      643:       132:     |> Base.List.fold ~init:([], I.empty) ~f:(fun (images, image) x ->[39m
     [38;5;2m7710[39m: [38;5;2m      644:       133:            match x with[39m
     [38;5;2m7711[39m: [38;5;2m      645:       134:            | `Newline -> (image :: images, I.empty)[39m
     [38;5;2m7712[39m: [38;5;2m      646:       135:            | `Image nextImage -> (images, image <|> nextImage))[39m
     [38;5;2m7713[39m: [38;5;2m      647:       136:     |> fst[39m
     [38;5;2m7714[39m: [38;5;2m      648:       137:     (* |> List.map (fun x ->[39m
     [38;5;2m7715[39m: [38;5;2m      649:       138:            x |> print_image;[39m
     [38;5;2m7716[39m: [38;5;2m      650:       139:            x) *)[39m
     [38;5;2m7717[39m: [38;5;2m      651:       140:     |> Base.List.reduce_exn ~f:(fun bottom top -> top <-> bottom)[39m
     [38;5;2m7718[39m: [38;5;2m      652:       141:   in[39m
     [38;5;2m7719[39m: [38;5;2m      653:       142:   let image =[39m
     [38;5;2m7720[39m: [38;5;2m      654:       143:     lines[39m
     [38;5;2m7721[39m: [38;5;2m      655:       144:     (* |> fold_left_pre[39m
     [38;5;2m7722[39m: [38;5;2m      656:       145:          (fun image (attr, str) ->[39m
     [38;5;2m7723[39m: [38;5;2m      657:       146:            let parts = str |> String.split_on_char '\n' in[39m
     [38;5;2m7724[39m: [38;5;2m      658:       147:            let nextImage =[39m
     [38;5;2m7725[39m: [38;5;2m      659:       148:              parts[39m
     [38;5;2m7726[39m: [38;5;2m      660:       149:              |> fold_left_pre[39m
     [38;5;2m7727[39m: [38;5;2m      661:       150:                   (fun image str -> I.( <-> ) image (I.string attr str))[39m
     [38;5;2m7728[39m: [38;5;2m      662:       151:                   (I.string attr)[39m
     [38;5;2m7729[39m: [38;5;2m      663:       152:            in[39m
     [38;5;2m7730[39m: [38;5;2m      664:       153:            I.( <|> ) image nextImage)[39m
     [38;5;2m7731[39m: [38;5;2m      665:       154:          (fun (attr, str) -> I.string attr str) *)[39m
     [38;5;2m7732[39m: [38;5;2m      666:       155:   in[39m
     [38;5;2m7733[39m: [38;5;2m      667:       156:   image[39m
     [38;5;2m7734[39m: [38;5;2m      668:       157: [39m
     [38;5;2m7735[39m: [38;5;2m      669:       158: let escaped_string ?(attr = A.empty) str =[39m
     [38;5;2m7736[39m: [38;5;2m      670:       159:   let control_character_index str i =[39m
     [38;5;2m7737[39m: [38;5;2m      671:       160:     let len = String.length str in[39m
     [38;5;2m7738[39m: [38;5;2m      672:       161:     let i = ref i in[39m
     [38;5;2m7739[39m: [38;5;2m      673:       162:     while[39m
     [38;5;2m7740[39m: [38;5;2m      674:       163:       let i = !i in[39m
     [38;5;2m7741[39m: [38;5;2m      675:       164:       i < len && str.[i] >= ' '[39m
     [38;5;2m7742[39m: [38;5;2m      676:       165:     do[39m
     [38;5;2m7743[39m: [38;5;2m      677:       166:       incr i[39m
     [38;5;2m7744[39m: [38;5;2m      678:       167:     done;[39m
     [38;5;2m7745[39m: [38;5;2m      679:       168:     if !i = len then raise Not_found;[39m
     [38;5;2m7746[39m: [38;5;2m      680:       169:     !i[39m
     [38;5;2m7747[39m: [38;5;2m      681:       170:   in[39m
     [38;5;2m7748[39m: [38;5;2m      682:       171:   let rec split str i =[39m
     [38;5;2m7749[39m: [38;5;2m      683:       172:     match control_character_index str i with[39m
     [38;5;2m7750[39m: [38;5;2m      684:       173:     | j ->[39m
     [38;5;2m7751[39m: [38;5;2m      685:       174:         let img = I.string attr (String.sub str i (j - i)) in[39m
     [38;5;2m7752[39m: [38;5;2m      686:       175:         img :: split str (j + 1)[39m
     [38;5;2m7753[39m: [38;5;2m      687:       176:     | exception Not_found ->[39m
     [38;5;2m7754[39m: [38;5;2m      688:       177:         [[39m
     [38;5;2m7755[39m: [38;5;2m      689:       178:           I.string attr[39m
     [38;5;2m7756[39m: [38;5;2m      690:       179:             (if i = 0 then str else String.sub str i (String.length str - i));[39m
     [38;5;2m7757[39m: [38;5;2m      691:       180:         ][39m
     [38;5;2m7758[39m: [38;5;2m      692:       181:   in[39m
     [38;5;2m7759[39m: [38;5;2m      693:       182:   I.vcat (split str 0)[39m
     [38;5;2m7760[39m: [38;5;2m      694:       183: [39m
     [38;5;2m7761[39m: [38;5;2m      695:       184: (* let colored_string s =[39m
     [38;5;2m7762[39m: [38;5;2m      696:       185:    s |> parse_ansi_escape_codes[39m
     [38;5;2m7763[39m: [38;5;2m      697:       186:    |> List.map (fun (x, str) -> escaped_string ~attr:x str)[39m
     [38;5;2m7764[39m: [38;5;2m      698:       187:    |> I.vcat *)[39m
     [38;5;2m7765[39m: [38;5;2m      699:       188: let colored_string s = s |> string_to_image[39m
     [38;5;2m7766[39m: [38;5;2m      700:       189: [39m
     [38;5;2m7767[39m: [38;5;2m      701:       190: let%expect_test "string_to_image" =[39m
     [38;5;2m7768[39m: [38;5;2m      702:       191:   string_to_image[39m
     [38;5;2m7769[39m: [38;5;2m      703:       192:     "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m7770[39m: [38;5;2m      704:       193:   |> print_image;[39m
     [38;5;2m7771[39m: [38;5;2m      705:       194:   [%expect.unreachable][39m
     [38;5;2m7772[39m: [38;5;2m      706:       195: [@@expect.uncaught_exn[39m
     [38;5;2m7773[39m: [38;5;2m      707:       196:   {|[39m
     [38;5;2m7774[39m: [38;5;2m      708:       197:   (* CR expect_test_collector: This test expectation appears to contain a backtrace.[39m
     [38;5;2m7775[39m: [38;5;2m      709:       198:      This is strongly discouraged as backtraces are fragile.[39m
     [38;5;2m7776[39m: [38;5;2m      710:       199:      Please change this test to not include a backtrace. *)[39m
     [38;5;2m7777[39m: [38;5;2m      711:       200: [39m
     [38;5;2m7778[39m: [38;5;2m      712:       201:   (Invalid_argument List.reduce_exn)[39m
     [38;5;2m7779[39m: [38;5;2m      713:       202:   Raised at Stdlib.invalid_arg in file "stdlib.ml", line 30, characters 20-45[39m
     [38;5;2m7780[39m: [38;5;2m      714:       203:   Called from Jj_tui__AnsiReverse.(fun) in file "lib/ansiReverse.ml", line 197, characters 2-88[39m
     [38;5;2m7781[39m: [38;5;2m      715:       204:   Called from Expect_test_collector.Make.Instance_io.exec in file "collector/expect_test_collector.ml", line 234, characters 12-19[39m
     [38;5;2m7782[39m: [38;5;2m      716:       205: [39m
     [38;5;2m7783[39m: [38;5;2m      717:       206:   Trailing output[39m
     [38;5;2m7784[39m: [38;5;2m      718:       207:   ---------------[39m
     [38;5;2m7785[39m: [38;5;2m      719:       208:   params 32[39m
     [38;5;2m7786[39m: [38;5;2m      720:       209:   params 0[39m
     [38;5;2m7787[39m: [38;5;2m      721:       210:   params 30[39m
     [38;5;2m7788[39m: [38;5;2m      722:       211:   params 0[39m
     [38;5;2m7789[39m: [38;5;2m      723:       212:   len:4 |}][39m
     [38;5;2m7790[39m: [38;5;2m      724:       213: [39m
     [38;5;2m7791[39m: [38;5;2m      725:       214: let%expect_test "hello" =[39m
     [38;5;2m7792[39m: [38;5;2m      726:       215:   let outBuf = Buffer.create 100 in[39m
     [38;5;2m7793[39m: [38;5;2m      727:       216:   let _fmt = Format.formatter_of_buffer outBuf in[39m
     [38;5;2m7794[39m: [38;5;2m      728:       217:   let res =[39m
     [38;5;2m7795[39m: [38;5;2m      729:       218:     parse_ansi_escape_codes[39m
     [38;5;2m7796[39m: [38;5;2m      730:       219:       "\027[32mThis is in green %s\027[0m \027[30mThisisnotGreen\027[0m"[39m
     [38;5;2m7797[39m: [38;5;2m      731:       220:   in[39m
     [38;5;2m7798[39m: [38;5;2m      732:       221:   res[39m
     [38;5;2m7799[39m: [38;5;2m      733:       222:   |> List.iter (fun (x, str) ->[39m
     [38;5;2m7800[39m: [38;5;2m      734:       223:          Notty.I.string x str |> Notty.Render.pp_image @@ Format.str_formatter);[39m
     [38;5;2m7801[39m: [38;5;2m      735:       224:   print_endline (Format.flush_str_formatter () |> String.escaped);[39m
     [38;5;2m7802[39m: [38;5;2m      736:       225:   print_endline (Buffer.contents outBuf);[39m
     [38;5;2m7803[39m: [38;5;2m      737:       226:   [%expect[39m
     [38;5;2m7804[39m: [38;5;2m      738:       227:     {|[39m
     [38;5;2m7805[39m: [38;5;2m      739:       228:       params 32[39m
     [38;5;2m7806[39m: [38;5;2m      740:       229:       params 0[39m
     [38;5;2m7807[39m: [38;5;2m      741:       230:       params 30[39m
     [38;5;2m7808[39m: [38;5;2m      742:       231:       params 0[39m
     [38;5;2m7809[39m: [38;5;2m      743:       232:       \027[0m\027[K\027[0;32mThis is in green %s\027[0m\027[0m\027[K\027[0m \027[0m\027[0m\027[K\027[0;30mThisisnotGreen\027[0m\027[0m\027[K\027[0m|}][39m
     [38;5;2m7810[39m: [38;5;2m      744:       233: [39m
     [38;5;2m7811[39m: [38;5;2m      745:       234: let jjtest =[39m
     [38;5;2m7812[39m: [38;5;2m      746:       235:   {|[39m
     [38;5;2m7813[39m: [38;5;2m      747:       236:   @  ␛[1m␛[38;5;13mm␛[38;5;8mtxzlotn␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 12:19:37␛[39m ␛[38;5;12mb␛[38;5;8mb87f772␛[39m␛[0m[39m
     [38;5;2m7814[39m: [38;5;2m      748:       237:   │  ␛[1m␛[38;5;3m(no description set)␛[39m␛[0m[39m
     [38;5;2m7815[39m: [38;5;2m      749:       238: |}[39m
     [38;5;2m7816[39m: [38;5;2m      750:       239: [39m
     [38;5;2m7817[39m: [38;5;2m      751:       240: let%expect_test "jj_test" =[39m
     [38;5;2m7818[39m: [38;5;2m      752:       241:   jjtest |> string_to_image |> Notty.Render.pp_image @@ Format.str_formatter;[39m
     [38;5;2m7819[39m: [38;5;2m      753:       242:   let res = Format.flush_str_formatter () in[39m
     [38;5;2m7820[39m: [38;5;2m      754:       243:   print_endline "====== input=====";[39m
     [38;5;2m7821[39m: [38;5;2m      755:       244:   print_endline (jjtest |> String.escaped);[39m
     [38;5;2m7822[39m: [38;5;2m      756:       245:   print_endline "====== output escaped=====";[39m
     [38;5;2m7823[39m: [38;5;2m      757:       246:   print_endline (res |> String.escaped);[39m
     [38;5;2m7824[39m: [38;5;2m      758:       247:   print_endline "=====output====";[39m
     [38;5;2m7825[39m: [38;5;2m      759:       248:   print_endline res;[39m
     [38;5;2m7826[39m: [38;5;2m      760:       249:   [%expect[39m
     [38;5;2m7827[39m: [38;5;2m      761:       250:     {|[39m
     [38;5;2m7828[39m: [38;5;2m      762:       251:       params 1[39m
     [38;5;2m7829[39m: [38;5;2m      763:       252:       params 38;5;13[39m
     [38;5;2m7830[39m: [38;5;2m      764:       253:       nfg ␛[0m<␛[0;95mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m7831[39m: [38;5;2m      765:       254:       params 38;5;8[39m
     [38;5;2m7832[39m: [38;5;2m      766:       255:       nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m7833[39m: [38;5;2m      767:       256:       params 39[39m
     [38;5;2m7834[39m: [38;5;2m      768:       257:       params 38;5;3[39m
     [38;5;2m7835[39m: [38;5;2m      769:       258:       nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m7836[39m: [38;5;2m      770:       259:       params 39[39m
     [38;5;2m7837[39m: [38;5;2m      771:       260:       params 38;5;14[39m
     [38;5;2m7838[39m: [38;5;2m      772:       261:       nfg ␛[0m<␛[0;96mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m7839[39m: [38;5;2m      773:       262:       params 39[39m
     [38;5;2m7840[39m: [38;5;2m      774:       263:       params 38;5;12[39m
     [38;5;2m7841[39m: [38;5;2m      775:       264:       nfg ␛[0m<␛[0;94mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m7842[39m: [38;5;2m      776:       265:       params 38;5;8[39m
     [38;5;2m7843[39m: [38;5;2m      777:       266:       nfg ␛[0m<␛[0;90mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m7844[39m: [38;5;2m      778:       267:       params 39[39m
     [38;5;2m7845[39m: [38;5;2m      779:       268:       params 0[39m
     [38;5;2m7846[39m: [38;5;2m      780:       269:       params 1[39m
     [38;5;2m7847[39m: [38;5;2m      781:       270:       params 38;5;3[39m
     [38;5;2m7848[39m: [38;5;2m      782:       271:       nfg ␛[0m<␛[0;33mATTR␛[0m␛[K␛[0m>␛[0m[39m
     [38;5;2m7849[39m: [38;5;2m      783:       272:       params 39[39m
     [38;5;2m7850[39m: [38;5;2m      784:       273:       params 0[39m
     [38;5;2m7851[39m: [38;5;2m      785:       274:       len:23image:[39m
     [38;5;2m7852[39m: [38;5;2m      786:       275:       \027[0m  \226\148\130  \027[0m\027[K\027[0;33m(no description set)\027[0m[39m
     [38;5;2m7853[39m: [38;5;2m      787:       276:       image:[39m
     [38;5;2m7854[39m: [38;5;2m      788:       277:       \027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m[39m
     [38;5;2m7855[39m: [38;5;2m      789:       278:       image:[39m
     [38;5;2m7856[39m: [38;5;2m      790:       279:       \027[0m\027[K\027[0m[39m
     [38;5;2m7857[39m: [38;5;2m      791:       280:       ====== input=====[39m
     [38;5;2m7858[39m: [38;5;2m      792:       281:       \n  @  \027[1m\027[38;5;13mm\027[38;5;8mtxzlotn\027[39m \027[38;5;3meli.jambu@gmail.com\027[39m \027[38;5;14m2024-05-08 12:19:37\027[39m \027[38;5;12mb\027[38;5;8mb87f772\027[39m\027[0m\n  \226\148\130  \027[1m\027[38;5;3m(no description set)\027[39m\027[0m\n[39m
     [38;5;2m7859[39m: [38;5;2m      793:       282:       ====== output escaped=====[39m
     [38;5;2m7860[39m: [38;5;2m      794:       283:       \027[0m\027[K\027[0m\n\027[0m  @  \027[0;95mm\027[0;90mtxzlotn\027[0m \027[0;33meli.jambu@gmail.com\027[0m \027[0;96m2024-05-08 12:19:37\027[0m \027[0;94mb\027[0m\027[K\027[0;90mb87f772\027[0m\n\027[0m  \226\148\130  \027[0;33m(no description set)\027[0m\027[K\027[0m                                     \027[0m[39m
     [38;5;2m7861[39m: [38;5;2m      795:       284:       =====output====[39m
     [38;5;2m7862[39m: [38;5;2m      796:       285:       ␛[0m␛[K␛[0m[39m
     [38;5;2m7863[39m: [38;5;2m      797:       286:       ␛[0m  @  ␛[0;95mm␛[0;90mtxzlotn␛[0m ␛[0;33meli.jambu@gmail.com␛[0m ␛[0;96m2024-05-08 12:19:37␛[0m ␛[0;94mb␛[0m␛[K␛[0;90mb87f772␛[0m[39m
     [38;5;2m7864[39m: [38;5;2m      798:       287:       ␛[0m  │  ␛[0;33m(no description set)␛[0m␛[K␛[0m                                     ␛[0m|}][39m
     [38;5;2m7865[39m: [38;5;2m      799:       288: [39m
     [38;5;2m7866[39m: [38;5;2m      800:       289: (* let ansi =[39m
     [38;5;2m7867[39m: [38;5;2m      801:       290:    {[39m
     [38;5;2m7868[39m: [38;5;2m      802:       291:      skip =[39m
     [38;5;2m7869[39m: [38;5;2m      803:       292:        (fun (b : Buffer.t) ->[39m
     [38;5;2m7870[39m: [38;5;2m      804:       293:          let n = int_of_string (Buffer.contents b) in[39m
     [38;5;2m7871[39m: [38;5;2m      805:       294:          Buffer.clear b;[39m
     [38;5;2m7872[39m: [38;5;2m      806:       295:          n);[39m
     [38;5;2m7873[39m: [38;5;2m      807:       296:      newline = (fun _ -> ());[39m
     [38;5;2m7874[39m: [38;5;2m      808:       297:      altscr =[39m
     [38;5;2m7875[39m: [38;5;2m      809:       298:        (fun b ->[39m
     [38;5;2m7876[39m: [38;5;2m      810:       299:          Buffer.clear b;[39m
     [38;5;2m7877[39m: [38;5;2m      811:       300:          String.equal (Buffer.contents b) "\x1b[?1049h");[39m
     [38;5;2m7878[39m: [38;5;2m      812:       301:      cursat =[39m
     [38;5;2m7879[39m: [38;5;2m      813:       302:        (fun b ->[39m
     [38;5;2m7880[39m: [38;5;2m      814:       303:          let h = int_of_string (Buffer.contents b) in[39m
     [38;5;2m7881[39m: [38;5;2m      815:       304:          Buffer.clear b;[39m
     [38;5;2m7882[39m: [38;5;2m      816:       305:          Buffer.clear b;[39m
     [38;5;2m7883[39m: [38;5;2m      817:       306:          (* skip ';' *)[39m
     [38;5;2m7884[39m: [38;5;2m      818:       307:          let w = int_of_string (Buffer.contents b) in[39m
     [38;5;2m7885[39m: [38;5;2m      819:       308:          Buffer.clear b;[39m
     [38;5;2m7886[39m: [38;5;2m      820:       309:          (w - 1, h - 1));[39m
     [38;5;2m7887[39m: [38;5;2m      821:       310:      cubcuf =[39m
     [38;5;2m7888[39m: [38;5;2m      822:       311:        (fun b ->[39m
     [38;5;2m7889[39m: [38;5;2m      823:       312:          let x = int_of_string (Buffer.contents b) in[39m
     [38;5;2m7890[39m: [38;5;2m      824:       313:          Buffer.clear b;[39m
     [38;5;2m7891[39m: [38;5;2m      825:       314:          if Buffer.nth b 0 = 'D' then -x else x);[39m
     [38;5;2m7892[39m: [38;5;2m      826:       315:      cuucud =[39m
     [38;5;2m7893[39m: [38;5;2m      827:       316:        (fun b ->[39m
     [38;5;2m7894[39m: [38;5;2m      828:       317:          let y = int_of_string (Buffer.contents b) in[39m
     [38;5;2m7895[39m: [38;5;2m      829:       318:          Buffer.clear b;[39m
     [38;5;2m7896[39m: [38;5;2m      830:       319:          if Buffer.nth b 0 = 'A' then -y else y);[39m
     [38;5;2m7897[39m: [38;5;2m      831:       320:      cr = (fun _ -> ());[39m
     [38;5;2m7898[39m: [38;5;2m      832:       321:      clreol = (fun _ -> ());[39m
     [38;5;2m7899[39m: [38;5;2m      833:       322:      cursvis =[39m
     [38;5;2m7900[39m: [38;5;2m      834:       323:        (fun b ->[39m
     [38;5;2m7901[39m: [38;5;2m      835:       324:          Buffer.clear b;[39m
     [38;5;2m7902[39m: [38;5;2m      836:       325:          String.equal (Buffer.contents b) "\x1b[34h\x1b[?25h");[39m
     [38;5;2m7903[39m: [38;5;2m      837:       326:      mouse =[39m
     [38;5;2m7904[39m: [38;5;2m      838:       327:        (fun b ->[39m
     [38;5;2m7905[39m: [38;5;2m      839:       328:          Buffer.clear b;[39m
     [38;5;2m7906[39m: [38;5;2m      840:       329:          String.equal (Buffer.contents b) "\x1b[?1000;1002;1005;1015;1006h");[39m
     [38;5;2m7907[39m: [38;5;2m      841:       330:      bpaste =[39m
     [38;5;2m7908[39m: [38;5;2m      842:       331:        (fun b ->[39m
     [38;5;2m7909[39m: [38;5;2m      843:       332:          Buffer.clear b;[39m
     [38;5;2m7910[39m: [38;5;2m      844:       333:          String.equal (Buffer.contents b) "\x1b[?2004h");[39m
     [38;5;2m7911[39m: [38;5;2m      845:       334:      sgr;[39m
     [38;5;2m7912[39m: [38;5;2m      846:       335:    } *)[39m
     [38;5;2m7913[39m: [38;5;2m      847:       336: (*[39m
     [38;5;2m7914[39m: [38;5;2m      848:       337:      let no0 _ = ()[39m
     [38;5;2m7915[39m: [38;5;2m      849:       338:      and no1 _ _ = ()[39m
     [38;5;2m7916[39m: [38;5;2m      850:       339:      and no2 _ _ _ = ()[39m
     [38;5;2m7917[39m: [38;5;2m      851:       340: [39m
     [38;5;2m7918[39m: [38;5;2m      852:       341:      let dumb =[39m
     [38;5;2m7919[39m: [38;5;2m      853:       342:        {[39m
     [38;5;2m7920[39m: [38;5;2m      854:       343:          skip = (fun b -> String.length (Buffer.contents b));[39m
     [38;5;2m7921[39m: [38;5;2m      855:       344:          newline = (fun _ -> ());[39m
     [38;5;2m7922[39m: [38;5;2m      856:       345:          altscr = no1;[39m
     [38;5;2m7923[39m: [38;5;2m      857:       346:          cursat = (fun _ -> (0, 0));[39m
     [38;5;2m7924[39m: [38;5;2m      858:       347:          cubcuf = (fun _ -> 0);[39m
     [38;5;2m7925[39m: [38;5;2m      859:       348:          cuucud = (fun _ -> 0);[39m
     [38;5;2m7926[39m: [38;5;2m      860:       349:          cr = no0;[39m
     [38;5;2m7927[39m: [38;5;2m      861:       350:          clreol = no0;[39m
     [38;5;2m7928[39m: [38;5;2m      862:       351:          cursvis = (fun _ -> false);[39m
     [38;5;2m7929[39m: [38;5;2m      863:       352:          sgr = (fun _ -> A.empty);[39m
     [38;5;2m7930[39m: [38;5;2m      864:       353:          mouse = (fun _ -> false);[39m
     [38;5;2m7931[39m: [38;5;2m      865:       354:          bpaste = (fun _ -> false);[39m
     [38;5;2m7932[39m: [38;5;2m      866:       355:        } *)[39m
     [38;5;2m7933[39m: [38;5;2m      867:       356: (*[39m
     [38;5;2m7934[39m: [38;5;2m      868:       357:      let erase cap buf = Buffer.clear buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m7935[39m: [38;5;2m      869:       358: [39m
     [38;5;2m7936[39m: [38;5;2m      870:       359:      let cursat0 cap b =[39m
     [38;5;2m7937[39m: [38;5;2m      871:       360:        let w, h = cap.cursat b in[39m
     [38;5;2m7938[39m: [38;5;2m      872:       361:        (max 0 (w - 1), max 0 (h - 1)) *)[39m
     [38;5;2m7939[39m: [38;5;2m      873: Added regular file lib/dune:[39m
     [38;5;2m7940[39m: [38;5;2m      874:         1: (library[39m
     [38;5;2m7941[39m: [38;5;2m      875:         2:  (name jj_tui)[39m
     [38;5;2m7942[39m: [38;5;2m      876:         3:  (inline_tests)[39m
     [38;5;2m7943[39m: [38;5;2m      877:         4:  (libraries core stdio core_unix.command_unix notty nottui angstrom)[39m
     [38;5;2m7944[39m: [38;5;2m      878:         5:  (preprocess[39m
     [38;5;2m7945[39m: [38;5;2m      879:         6:   (pps ppx_expect)))[39m
     [38;5;2m7946[39m: [38;5;2m      880: Added regular file lib/process.ml:[39m
     [38;5;2m7947[39m: [38;5;2m      881:         1: [39m
     [38;5;2m7948[39m: [38;5;2m      882:         2: let mk_home_cmd cmd =[39m
     [38;5;2m7949[39m: [38;5;2m      883:         3:   let home_dir = Unix.getenv "HOME" in[39m
     [38;5;2m7950[39m: [38;5;2m      884:         4:   Printf.sprintf "HOME=%s %s" home_dir cmd[39m
     [38;5;2m7951[39m: [38;5;2m      885:         5: [39m
     [38;5;2m7952[39m: [38;5;2m      886:         6: let proc_silent cmd =[39m
     [38;5;2m7953[39m: [38;5;2m      887:         7:   let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
     [38;5;2m7954[39m: [38;5;2m      888:         8:   ()[39m
     [38;5;2m7955[39m: [38;5;2m      889:         9: [39m
     [38;5;2m7956[39m: [38;5;2m      890:        10: let proc cmd =[39m
     [38;5;2m7957[39m: [38;5;2m      891:        11:   Printf.eprintf "🐚  %s\n%!" cmd;[39m
     [38;5;2m7958[39m: [38;5;2m      892:        12:   proc_silent cmd[39m
     [38;5;2m7959[39m: [38;5;2m      893:        13: [39m
     [38;5;2m7960[39m: [38;5;2m      894:        14: let collect_chan (channel : in_channel) : string =[39m
     [38;5;2m7961[39m: [38;5;2m      895:        15:   let rec loop acc =[39m
     [38;5;2m7962[39m: [38;5;2m      896:        16:     match input_line channel with[39m
     [38;5;2m7963[39m: [38;5;2m      897:        17:     | exception End_of_file -> acc[39m
     [38;5;2m7964[39m: [38;5;2m      898:        18:     | line -> loop (acc ^ line ^ "\n")[39m
     [38;5;2m7965[39m: [38;5;2m      899:        19:   in[39m
     [38;5;2m7966[39m: [38;5;2m      900:        20:   loop ""[39m
     [38;5;2m7967[39m: [38;5;2m      901:        21: [39m
     [38;5;2m7968[39m: [38;5;2m      902:        22: let proc_stdout cmd =[39m
     [38;5;2m7969[39m: [38;5;2m      903:        23:   let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
     [38;5;2m7970[39m: [38;5;2m      904:        24:     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m7971[39m: [38;5;2m      905:        25:   in[39m
     [38;5;2m7972[39m: [38;5;2m      906:        26:   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m7973[39m: [38;5;2m      907:        27:   let _ = Unix.close_process_full process in[39m
     [38;5;2m7974[39m: [38;5;2m      908:        28:   String.trim stdout_result[39m
     [38;5;2m7975[39m: [38;5;2m      909:        29: [39m
     [38;5;2m7976[39m: [38;5;2m      910:        30: let proc_stdOutAndErr cmd =[39m
     [38;5;2m7977[39m: [38;5;2m      911:        31:   let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
     [38;5;2m7978[39m: [38;5;2m      912:        32:     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m7979[39m: [38;5;2m      913:        33:   in[39m
     [38;5;2m7980[39m: [38;5;2m      914:        34:   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m7981[39m: [38;5;2m      915:        35:   let stderr_result = collect_chan proc_stderr in[39m
     [38;5;2m7982[39m: [38;5;2m      916:        36:   let _ = Unix.close_process_full process in[39m
     [38;5;2m7983[39m: [38;5;2m      917:        37:   String.trim (stdout_result^stderr_result)[39m
     [38;5;2m7984[39m: [38;5;2m      918: Added regular file log:[39m
     [38;5;2m7985[39m: [38;5;2m      919:         1: ◉  ␛[1m␛[38;5;5mv␛[0m␛[38;5;8myzuqwnl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m7␛[0m␛[38;5;8maf062fc␛[39m[39m
     [38;5;2m7986[39m: [38;5;2m      920:         2: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7987[39m: [38;5;2m      921:         3: ◉  ␛[1m␛[38;5;5mxn␛[0m␛[38;5;8mvoukwm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m9␛[0m␛[38;5;8m50e51d4␛[39m[39m
     [38;5;2m7988[39m: [38;5;2m      922:         4: │  using angstrom parser[39m
     [38;5;2m7989[39m: [38;5;2m      923:         5: ◉  ␛[1m␛[38;5;5mu␛[0m␛[38;5;8mwwzzulo␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 23:57:08␛[39m ␛[1m␛[38;5;4m4a␛[0m␛[38;5;8md3ac96␛[39m[39m
     [38;5;2m7990[39m: [38;5;2m      924:         6: │  progress on ui, added boxes[39m
     [38;5;2m7991[39m: [38;5;2m      925:         7: @  ␛[1m␛[38;5;13mkszk␛[38;5;8muqqs␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;14m2024-05-08 23:57:08␛[39m ␛[38;5;12mf␛[38;5;8mc74c4ed␛[39m␛[0m[39m
     [38;5;2m7992[39m: [38;5;2m      926:         8: │  ␛[1mcoloured output is working␛[0m[39m
     [38;5;2m7993[39m: [38;5;2m      927:         9: ◉  ␛[1m␛[38;5;5my␛[0m␛[38;5;8msrpqsvq␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:18:11␛[39m ␛[38;5;2mHEAD@git␛[39m ␛[1m␛[38;5;4me␛[0m␛[38;5;8mc72cc90␛[39m[39m
     [38;5;2m7994[39m: [38;5;2m      928:        10: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7995[39m: [38;5;2m      929:        11: ◉  ␛[1m␛[38;5;5mn␛[0m␛[38;5;8mulnswsm␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:17:05␛[39m ␛[1m␛[38;5;4mb␛[0m␛[38;5;8mfaef69b␛[39m[39m
     [38;5;2m7996[39m: [38;5;2m      930:        12: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7997[39m: [38;5;2m      931:        13: ◉  ␛[1m␛[38;5;5mxw␛[0m␛[38;5;8msmkxpt␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m2␛[0m␛[38;5;8m12a26e4␛[39m[39m
     [38;5;2m7998[39m: [38;5;2m      932:        14: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m7999[39m: [38;5;2m      933:        15: ◉  ␛[1m␛[38;5;5mkszy␛[0m␛[38;5;8mtrtu␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:08:13␛[39m ␛[1m␛[38;5;4m8␛[0m␛[38;5;8m754ef74␛[39m[39m
     [38;5;2m8000[39m: [38;5;2m      934:        16: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m8001[39m: [38;5;2m      935:        17: ◉  ␛[1m␛[38;5;5mp␛[0m␛[38;5;8msnrvlsv␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:02:28␛[39m ␛[1m␛[38;5;4md␛[0m␛[38;5;8m09f7fd4␛[39m[39m
     [38;5;2m8002[39m: [38;5;2m      936:        18: │  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m8003[39m: [38;5;2m      937:        19: │ ◉  ␛[1m␛[38;5;5mt␛[0m␛[38;5;8mooppyyl␛[39m ␛[38;5;3meli.jambu@gmail.com␛[39m ␛[38;5;6m2024-05-08 01:19:58␛[39m ␛[1m␛[38;5;4m49␛[0m␛[38;5;8m125832␛[39m[39m
     [38;5;2m8004[39m: [38;5;2m      938:        20: ├─╯  ␛[38;5;3m(no description set)␛[39m[39m
     [38;5;2m8005[39m: [38;5;2m      939:        21: ◉  ␛[1m␛[38;5;5mz␛[0m␛[38;5;8mzzzzzzz␛[39m ␛[38;5;2mroot()␛[39m ␛[1m␛[38;5;4m0␛[0m␛[38;5;8m0000000␛[39m[39m
     [38;5;2m8006[39m: [38;5;2m      940: Added regular file log2:[39m
     [38;5;2m8007[39m: [38;5;2m      941:     (empty)[39m
     [38;5;2m8008[39m: [38;5;2m      942: Added regular file test/dune:[39m
     [38;5;2m8009[39m: [38;5;2m      943:         1: (test[39m
     [38;5;2m8010[39m: [38;5;2m      944:         2:  (name jj_tui)[39m
     [38;5;2m8011[39m: [38;5;2m      945:         3:  (libraries jj_tui)[39m
     [38;5;2m8012[39m: [38;5;2m      946:         4:  (preprocess[39m
     [38;5;2m8013[39m: [38;5;2m      947:         5:   (pps ppx_jane ppx_expect)))[39m
     [38;5;2m8014[39m: [38;5;2m      948: Added regular file test/jj_tui.ml:[39m
     [38;5;2m8015[39m: [38;5;2m      949:     (empty)[39m
     [38;5;2m8016[39m: [38;5;2m      950: Added regular file testing/hi:[39m
     [38;5;2m8017[39m: [38;5;2m      951:         1: hiiiiiii[39m
     [38;5;2m8018[39m: [38;5;2m      952:         2: hiiiiiiiiiiii[39m
     [38;5;2m8019[39m: [38;5;2m      953:         3: hiiiiiiiiiiii[39m
     [38;5;2m8020[39m: [38;5;2m      954: Added regular file testing/other/file:[39m
     [38;5;2m8021[39m: [38;5;2m      955:         1: hello Im other[39m
     [38;5;2m8022[39m: [38;5;2m      956: Removed regular file ../jj_tui.install:[39m
     [38;5;2m8023[39m: [38;5;2m      957:    1     : lib: [[39m
     [38;5;2m8024[39m: [38;5;2m      958:    2     :   "_build/install/default/lib/jj_tui/META"[39m
     [38;5;2m8025[39m: [38;5;2m      959:    3     :   "_build/install/default/lib/jj_tui/dune-package"[39m
     [38;5;2m8026[39m: [38;5;2m      960:    4     :   "_build/install/default/lib/jj_tui/opam"[39m
     [38;5;2m8027[39m: [38;5;2m      961:    5     : ][39m
     [38;5;2m8028[39m: [38;5;2m      962:    6     : bin: [[39m
     [38;5;2m8029[39m: [38;5;2m      963:    7     :   "_build/install/default/bin/jj_tui"[39m
     [38;5;2m8030[39m: [38;5;2m      964:    8     : ][39m
     [38;5;2m8031[39m: [38;5;2m      965: Removed regular file ../jj_tui.opam:[39m
     [38;5;2m8032[39m: [38;5;2m      966:    1     : # This file is generated by dune, edit dune-project instead[39m
     [38;5;2m8033[39m: [38;5;2m      967:    2     : opam-version: "2.0"[39m
     [38;5;2m8034[39m: [38;5;2m      968:    3     : synopsis: "A short synopsis"[39m
     [38;5;2m8035[39m: [38;5;2m      969:    4     : description: "A longer description"[39m
     [38;5;2m8036[39m: [38;5;2m      970:    5     : maintainer: ["Maintainer Name"][39m
     [38;5;2m8037[39m: [38;5;2m      971:    6     : authors: ["Author Name"][39m
     [38;5;2m8038[39m: [38;5;2m      972:    7     : license: "LICENSE"[39m
     [38;5;2m8039[39m: [38;5;2m      973:    8     : tags: ["topics" "to describe" "your" "project"][39m
     [38;5;2m8040[39m: [38;5;2m      974:    9     : homepage: "https://github.com/username/reponame"[39m
     [38;5;2m8041[39m: [38;5;2m      975:   10     : doc: "https://url/to/documentation"[39m
     [38;5;2m8042[39m: [38;5;2m      976:   11     : bug-reports: "https://github.com/username/reponame/issues"[39m
     [38;5;2m8043[39m: [38;5;2m      977:   12     : depends: [[39m
     [38;5;2m8044[39m: [38;5;2m      978:   13     :   "ocaml"[39m
     [38;5;2m8045[39m: [38;5;2m      979:   14     :   "dune" {>= "3.9"}[39m
     [38;5;2m8046[39m: [38;5;2m      980:   15     :   "odoc" {with-doc}[39m
     [38;5;2m8047[39m: [38;5;2m      981:   16     : ][39m
     [38;5;2m8048[39m: [38;5;2m      982:   17     : build: [[39m
     [38;5;2m8049[39m: [38;5;2m      983:   18     :   ["dune" "subst"] {dev}[39m
     [38;5;2m8050[39m: [38;5;2m      984:   19     :   [[39m
     [38;5;2m8051[39m: [38;5;2m      985:   20     :     "dune"[39m
     [38;5;2m8052[39m: [38;5;2m      986:   21     :     "build"[39m
     [38;5;2m8053[39m: [38;5;2m      987:   22     :     "-p"[39m
     [38;5;2m8054[39m: [38;5;2m      988:   23     :     name[39m
     [38;5;2m8055[39m: [38;5;2m      989:   24     :     "-j"[39m
     [38;5;2m8056[39m: [38;5;2m      990:   25     :     jobs[39m
     [38;5;2m8057[39m: [38;5;2m      991:   26     :     "@install"[39m
     [38;5;2m8058[39m: [38;5;2m      992:   27     :     "@runtest" {with-test}[39m
     [38;5;2m8059[39m: [38;5;2m      993:   28     :     "@doc" {with-doc}[39m
     [38;5;2m8060[39m: [38;5;2m      994:   29     :   ][39m
     [38;5;2m8061[39m: [38;5;2m      995:   30     : ][39m
     [38;5;2m8062[39m: [38;5;2m      996:   31     : dev-repo: "git+https://github.com/username/reponame.git"[39m
     [38;5;2m8063[39m: [38;5;2m      997: Removed regular file ../lib/dune:[39m
     [38;5;2m8064[39m: [38;5;2m      998:    1     : (library[39m
     [38;5;2m8065[39m: [38;5;2m      999:    2     :  (name jj_tui)[39m
     [38;5;2m8066[39m: [38;5;2m     1000:    3     :  (libraries core stdio core_unix.command_unix )[39m
     [38;5;2m8067[39m: [38;5;2m     1001:    4     :  )[39m
     [38;5;2m8068[39m: [38;5;2m     1002:    5     : [39m
     [38;5;2m8069[39m: [38;5;2m     1003: Removed regular file ../lib/process.ml:[39m
     [38;5;2m8070[39m: [38;5;2m     1004:    1     : [39m
     [38;5;2m8071[39m: [38;5;2m     1005:    2     : let mk_home_cmd cmd =[39m
     [38;5;2m8072[39m: [38;5;2m     1006:    3     :   let home_dir = Unix.getenv "HOME" in[39m
     [38;5;2m8073[39m: [38;5;2m     1007:    4     :   Printf.sprintf "HOME=%s %s" home_dir cmd[39m
     [38;5;2m8074[39m: [38;5;2m     1008:    5     : [39m
     [38;5;2m8075[39m: [38;5;2m     1009:    6     : let proc_silent cmd =[39m
     [38;5;2m8076[39m: [38;5;2m     1010:    7     :   let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
     [38;5;2m8077[39m: [38;5;2m     1011:    8     :   ()[39m
     [38;5;2m8078[39m: [38;5;2m     1012:    9     : [39m
     [38;5;2m8079[39m: [38;5;2m     1013:   10     : let proc cmd =[39m
     [38;5;2m8080[39m: [38;5;2m     1014:   11     :   Printf.eprintf "🐚  %s\n%!" cmd;[39m
     [38;5;2m8081[39m: [38;5;2m     1015:   12     :   proc_silent cmd[39m
     [38;5;2m8082[39m: [38;5;2m     1016:   13     : [39m
     [38;5;2m8083[39m: [38;5;2m     1017:   14     : let collect_chan (channel : in_channel) : string =[39m
     [38;5;2m8084[39m: [38;5;2m     1018:   15     :   let rec loop acc =[39m
     [38;5;2m8085[39m: [38;5;2m     1019:   16     :     match input_line channel with[39m
     [38;5;2m8086[39m: [38;5;2m     1020:   17     :     | exception End_of_file -> acc[39m
     [38;5;2m8087[39m: [38;5;2m     1021:   18     :     | line -> loop (acc ^ line ^ "\n")[39m
     [38;5;2m8088[39m: [38;5;2m     1022:   19     :   in[39m
     [38;5;2m8089[39m: [38;5;2m     1023:   20     :   loop ""[39m
     [38;5;2m8090[39m: [38;5;2m     1024:   21     : [39m
     [38;5;2m8091[39m: [38;5;2m     1025:   22     : let proc_stdout cmd =[39m
     [38;5;2m8092[39m: [38;5;2m     1026:   23     :   let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
     [38;5;2m8093[39m: [38;5;2m     1027:   24     :     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m8094[39m: [38;5;2m     1028:   25     :   in[39m
     [38;5;2m8095[39m: [38;5;2m     1029:   26     :   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m8096[39m: [38;5;2m     1030:   27     :   let _ = Unix.close_process_full process in[39m
     [38;5;2m8097[39m: [38;5;2m     1031:   28     :   String.trim stdout_result[39m
     [38;5;2m8098[39m: [38;5;2m     1032:   29     : [39m
     [38;5;2m8099[39m: [38;5;2m     1033:   30     : let proc_stdOutAndErr cmd =[39m
     [38;5;2m8100[39m: [38;5;2m     1034:   31     :   let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
     [38;5;2m8101[39m: [38;5;2m     1035:   32     :     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m8102[39m: [38;5;2m     1036:   33     :   in[39m
     [38;5;2m8103[39m: [38;5;2m     1037:   34     :   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m8104[39m: [38;5;2m     1038:   35     :   let stderr_result = collect_chan proc_stderr in[39m
     [38;5;2m8105[39m: [38;5;2m     1039:   36     :   let _ = Unix.close_process_full process in[39m
     [38;5;2m8106[39m: [38;5;2m     1040:   37     :   String.trim (stdout_result^stderr_result)[39m
     [38;5;2m8107[39m: [38;5;2m     1041: Removed regular file ../minttea/leaves.install:[39m
     [38;5;2m8108[39m: [38;5;2m     1042:    1     : lib: [[39m
     [38;5;2m8109[39m: [38;5;2m     1043:    2     :   "_build/install/default/lib/leaves/META"[39m
     [38;5;2m8110[39m: [38;5;2m     1044:    3     :   "_build/install/default/lib/leaves/cursor.ml"[39m
     [38;5;2m8111[39m: [38;5;2m     1045:    4     :   "_build/install/default/lib/leaves/cursor.mli"[39m
     [38;5;2m8112[39m: [38;5;2m     1046:    5     :   "_build/install/default/lib/leaves/dune-package"[39m
     [38;5;2m8113[39m: [38;5;2m     1047:    6     :   "_build/install/default/lib/leaves/filtered_list.ml"[39m
     [38;5;2m8114[39m: [38;5;2m     1048:    7     :   "_build/install/default/lib/leaves/filtered_list.mli"[39m
     [38;5;2m8115[39m: [38;5;2m     1049:    8     :   "_build/install/default/lib/leaves/forms.ml"[39m
     [38;5;2m8116[39m: [38;5;2m     1050:    9     :   "_build/install/default/lib/leaves/fps.ml"[39m
     [38;5;2m8117[39m: [38;5;2m     1051:   10     :   "_build/install/default/lib/leaves/fps.mli"[39m
     [38;5;2m8118[39m: [38;5;2m     1052:   11     :   "_build/install/default/lib/leaves/leaves.a"[39m
     [38;5;2m8119[39m: [38;5;2m     1053:   12     :   "_build/install/default/lib/leaves/leaves.cma"[39m
     [38;5;2m8120[39m: [38;5;2m     1054:   13     :   "_build/install/default/lib/leaves/leaves.cmi"[39m
     [38;5;2m8121[39m: [38;5;2m     1055:   14     :   "_build/install/default/lib/leaves/leaves.cmt"[39m
     [38;5;2m8122[39m: [38;5;2m     1056:   15     :   "_build/install/default/lib/leaves/leaves.cmx"[39m
     [38;5;2m8123[39m: [38;5;2m     1057:   16     :   "_build/install/default/lib/leaves/leaves.cmxa"[39m
     [38;5;2m8124[39m: [38;5;2m     1058:   17     :   "_build/install/default/lib/leaves/leaves.ml"[39m
     [38;5;2m8125[39m: [38;5;2m     1059:   18     :   "_build/install/default/lib/leaves/leaves__Cursor.cmi"[39m
     [38;5;2m8126[39m: [38;5;2m     1060:   19     :   "_build/install/default/lib/leaves/leaves__Cursor.cmt"[39m
     [38;5;2m8127[39m: [38;5;2m     1061:   20     :   "_build/install/default/lib/leaves/leaves__Cursor.cmti"[39m
     [38;5;2m8128[39m: [38;5;2m     1062:   21     :   "_build/install/default/lib/leaves/leaves__Cursor.cmx"[39m
     [38;5;2m8129[39m: [38;5;2m     1063:   22     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmi"[39m
     [38;5;2m8130[39m: [38;5;2m     1064:   23     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmt"[39m
     [38;5;2m8131[39m: [38;5;2m     1065:   24     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmti"[39m
     [38;5;2m8132[39m: [38;5;2m     1066:   25     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmx"[39m
     [38;5;2m8133[39m: [38;5;2m     1067:   26     :   "_build/install/default/lib/leaves/leaves__Forms.cmi"[39m
     [38;5;2m8134[39m: [38;5;2m     1068:   27     :   "_build/install/default/lib/leaves/leaves__Forms.cmt"[39m
     [38;5;2m8135[39m: [38;5;2m     1069:   28     :   "_build/install/default/lib/leaves/leaves__Forms.cmx"[39m
     [38;5;2m8136[39m: [38;5;2m     1070:   29     :   "_build/install/default/lib/leaves/leaves__Fps.cmi"[39m
     [38;5;2m8137[39m: [38;5;2m     1071:   30     :   "_build/install/default/lib/leaves/leaves__Fps.cmt"[39m
     [38;5;2m8138[39m: [38;5;2m     1072:   31     :   "_build/install/default/lib/leaves/leaves__Fps.cmti"[39m
     [38;5;2m8139[39m: [38;5;2m     1073:   32     :   "_build/install/default/lib/leaves/leaves__Fps.cmx"[39m
     [38;5;2m8140[39m: [38;5;2m     1074:   33     :   "_build/install/default/lib/leaves/leaves__Paginator.cmi"[39m
     [38;5;2m8141[39m: [38;5;2m     1075:   34     :   "_build/install/default/lib/leaves/leaves__Paginator.cmt"[39m
     [38;5;2m8142[39m: [38;5;2m     1076:   35     :   "_build/install/default/lib/leaves/leaves__Paginator.cmti"[39m
     [38;5;2m8143[39m: [38;5;2m     1077:   36     :   "_build/install/default/lib/leaves/leaves__Paginator.cmx"[39m
     [38;5;2m8144[39m: [38;5;2m     1078:   37     :   "_build/install/default/lib/leaves/leaves__Progress.cmi"[39m
     [38;5;2m8145[39m: [38;5;2m     1079:   38     :   "_build/install/default/lib/leaves/leaves__Progress.cmt"[39m
     [38;5;2m8146[39m: [38;5;2m     1080:   39     :   "_build/install/default/lib/leaves/leaves__Progress.cmti"[39m
     [38;5;2m8147[39m: [38;5;2m     1081:   40     :   "_build/install/default/lib/leaves/leaves__Progress.cmx"[39m
     [38;5;2m8148[39m: [38;5;2m     1082:   41     :   "_build/install/default/lib/leaves/leaves__Spinner.cmi"[39m
     [38;5;2m8149[39m: [38;5;2m     1083:   42     :   "_build/install/default/lib/leaves/leaves__Spinner.cmt"[39m
     [38;5;2m8150[39m: [38;5;2m     1084:   43     :   "_build/install/default/lib/leaves/leaves__Spinner.cmti"[39m
     [38;5;2m8151[39m: [38;5;2m     1085:   44     :   "_build/install/default/lib/leaves/leaves__Spinner.cmx"[39m
     [38;5;2m8152[39m: [38;5;2m     1086:   45     :   "_build/install/default/lib/leaves/leaves__Sprite.cmi"[39m
     [38;5;2m8153[39m: [38;5;2m     1087:   46     :   "_build/install/default/lib/leaves/leaves__Sprite.cmt"[39m
     [38;5;2m8154[39m: [38;5;2m     1088:   47     :   "_build/install/default/lib/leaves/leaves__Sprite.cmti"[39m
     [38;5;2m8155[39m: [38;5;2m     1089:   48     :   "_build/install/default/lib/leaves/leaves__Sprite.cmx"[39m
     [38;5;2m8156[39m: [38;5;2m     1090:   49     :   "_build/install/default/lib/leaves/leaves__Table.cmi"[39m
     [38;5;2m8157[39m: [38;5;2m     1091:   50     :   "_build/install/default/lib/leaves/leaves__Table.cmt"[39m
     [38;5;2m8158[39m: [38;5;2m     1092:   51     :   "_build/install/default/lib/leaves/leaves__Table.cmx"[39m
     [38;5;2m8159[39m: [38;5;2m     1093:   52     :   "_build/install/default/lib/leaves/leaves__Text_input.cmi"[39m
     [38;5;2m8160[39m: [38;5;2m     1094:   53     :   "_build/install/default/lib/leaves/leaves__Text_input.cmt"[39m
     [38;5;2m8161[39m: [38;5;2m     1095:   54     :   "_build/install/default/lib/leaves/leaves__Text_input.cmti"[39m
     [38;5;2m8162[39m: [38;5;2m     1096:   55     :   "_build/install/default/lib/leaves/leaves__Text_input.cmx"[39m
     [38;5;2m8163[39m: [38;5;2m     1097:   56     :   "_build/install/default/lib/leaves/opam"[39m
     [38;5;2m8164[39m: [38;5;2m     1098:   57     :   "_build/install/default/lib/leaves/paginator.ml"[39m
     [38;5;2m8165[39m: [38;5;2m     1099:   58     :   "_build/install/default/lib/leaves/paginator.mli"[39m
     [38;5;2m8166[39m: [38;5;2m     1100:   59     :   "_build/install/default/lib/leaves/progress.ml"[39m
     [38;5;2m8167[39m: [38;5;2m     1101:   60     :   "_build/install/default/lib/leaves/progress.mli"[39m
     [38;5;2m8168[39m: [38;5;2m     1102:   61     :   "_build/install/default/lib/leaves/spinner.ml"[39m
     [38;5;2m8169[39m: [38;5;2m     1103:   62     :   "_build/install/default/lib/leaves/spinner.mli"[39m
     [38;5;2m8170[39m: [38;5;2m     1104:   63     :   "_build/install/default/lib/leaves/sprite.ml"[39m
     [38;5;2m8171[39m: [38;5;2m     1105:   64     :   "_build/install/default/lib/leaves/sprite.mli"[39m
     [38;5;2m8172[39m: [38;5;2m     1106:   65     :   "_build/install/default/lib/leaves/table.ml"[39m
     [38;5;2m8173[39m: [38;5;2m     1107:   66     :   "_build/install/default/lib/leaves/text_input.ml"[39m
     [38;5;2m8174[39m: [38;5;2m     1108:   67     :   "_build/install/default/lib/leaves/text_input.mli"[39m
     [38;5;2m8175[39m: [38;5;2m     1109:   68     : ][39m
     [38;5;2m8176[39m: [38;5;2m     1110:   69     : libexec: [[39m
     [38;5;2m8177[39m: [38;5;2m     1111:   70     :   "_build/install/default/lib/leaves/leaves.cmxs"[39m
     [38;5;2m8178[39m: [38;5;2m     1112:   71     : ][39m
     [38;5;2m8179[39m: [38;5;2m     1113:   72     : doc: [[39m
     [38;5;2m8180[39m: [38;5;2m     1114:   73     :   "_build/install/default/doc/leaves/CHANGES.md"[39m
     [38;5;2m8181[39m: [38;5;2m     1115:   74     :   "_build/install/default/doc/leaves/LICENSE.md"[39m
     [38;5;2m8182[39m: [38;5;2m     1116:   75     :   "_build/install/default/doc/leaves/README.md"[39m
     [38;5;2m8183[39m: [38;5;2m     1117:   76     : ][39m
     [38;5;2m8184[39m: [38;5;2m     1118: Removed regular file ../minttea/minttea.install:[39m
     [38;5;2m8185[39m: [38;5;2m     1119:    1     : lib: [[39m
     [38;5;2m8186[39m: [38;5;2m     1120:    2     :   "_build/install/default/lib/minttea/META"[39m
     [38;5;2m8187[39m: [38;5;2m     1121:    3     :   "_build/install/default/lib/minttea/app.ml"[39m
     [38;5;2m8188[39m: [38;5;2m     1122:    4     :   "_build/install/default/lib/minttea/command.ml"[39m
     [38;5;2m8189[39m: [38;5;2m     1123:    5     :   "_build/install/default/lib/minttea/dune-package"[39m
     [38;5;2m8190[39m: [38;5;2m     1124:    6     :   "_build/install/default/lib/minttea/event.ml"[39m
     [38;5;2m8191[39m: [38;5;2m     1125:    7     :   "_build/install/default/lib/minttea/io_loop.ml"[39m
     [38;5;2m8192[39m: [38;5;2m     1126:    8     :   "_build/install/default/lib/minttea/minttea.a"[39m
     [38;5;2m8193[39m: [38;5;2m     1127:    9     :   "_build/install/default/lib/minttea/minttea.cma"[39m
     [38;5;2m8194[39m: [38;5;2m     1128:   10     :   "_build/install/default/lib/minttea/minttea.cmi"[39m
     [38;5;2m8195[39m: [38;5;2m     1129:   11     :   "_build/install/default/lib/minttea/minttea.cmt"[39m
     [38;5;2m8196[39m: [38;5;2m     1130:   12     :   "_build/install/default/lib/minttea/minttea.cmti"[39m
     [38;5;2m8197[39m: [38;5;2m     1131:   13     :   "_build/install/default/lib/minttea/minttea.cmx"[39m
     [38;5;2m8198[39m: [38;5;2m     1132:   14     :   "_build/install/default/lib/minttea/minttea.cmxa"[39m
     [38;5;2m8199[39m: [38;5;2m     1133:   15     :   "_build/install/default/lib/minttea/minttea.ml"[39m
     [38;5;2m8200[39m: [38;5;2m     1134:   16     :   "_build/install/default/lib/minttea/minttea.mli"[39m
     [38;5;2m8201[39m: [38;5;2m     1135:   17     :   "_build/install/default/lib/minttea/minttea__.cmi"[39m
     [38;5;2m8202[39m: [38;5;2m     1136:   18     :   "_build/install/default/lib/minttea/minttea__.cmt"[39m
     [38;5;2m8203[39m: [38;5;2m     1137:   19     :   "_build/install/default/lib/minttea/minttea__.cmx"[39m
     [38;5;2m8204[39m: [38;5;2m     1138:   20     :   "_build/install/default/lib/minttea/minttea__.ml"[39m
     [38;5;2m8205[39m: [38;5;2m     1139:   21     :   "_build/install/default/lib/minttea/minttea__App.cmi"[39m
     [38;5;2m8206[39m: [38;5;2m     1140:   22     :   "_build/install/default/lib/minttea/minttea__App.cmt"[39m
     [38;5;2m8207[39m: [38;5;2m     1141:   23     :   "_build/install/default/lib/minttea/minttea__App.cmx"[39m
     [38;5;2m8208[39m: [38;5;2m     1142:   24     :   "_build/install/default/lib/minttea/minttea__Command.cmi"[39m
     [38;5;2m8209[39m: [38;5;2m     1143:   25     :   "_build/install/default/lib/minttea/minttea__Command.cmt"[39m
     [38;5;2m8210[39m: [38;5;2m     1144:   26     :   "_build/install/default/lib/minttea/minttea__Command.cmx"[39m
     [38;5;2m8211[39m: [38;5;2m     1145:   27     :   "_build/install/default/lib/minttea/minttea__Event.cmi"[39m
     [38;5;2m8212[39m: [38;5;2m     1146:   28     :   "_build/install/default/lib/minttea/minttea__Event.cmt"[39m
     [38;5;2m8213[39m: [38;5;2m     1147:   29     :   "_build/install/default/lib/minttea/minttea__Event.cmx"[39m
     [38;5;2m8214[39m: [38;5;2m     1148:   30     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmi"[39m
     [38;5;2m8215[39m: [38;5;2m     1149:   31     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmt"[39m
     [38;5;2m8216[39m: [38;5;2m     1150:   32     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmx"[39m
     [38;5;2m8217[39m: [38;5;2m     1151:   33     :   "_build/install/default/lib/minttea/minttea__Program.cmi"[39m
     [38;5;2m8218[39m: [38;5;2m     1152:   34     :   "_build/install/default/lib/minttea/minttea__Program.cmt"[39m
     [38;5;2m8219[39m: [38;5;2m     1153:   35     :   "_build/install/default/lib/minttea/minttea__Program.cmx"[39m
     [38;5;2m8220[39m: [38;5;2m     1154:   36     :   "_build/install/default/lib/minttea/minttea__Renderer.cmi"[39m
     [38;5;2m8221[39m: [38;5;2m     1155:   37     :   "_build/install/default/lib/minttea/minttea__Renderer.cmt"[39m
     [38;5;2m8222[39m: [38;5;2m     1156:   38     :   "_build/install/default/lib/minttea/minttea__Renderer.cmti"[39m
     [38;5;2m8223[39m: [38;5;2m     1157:   39     :   "_build/install/default/lib/minttea/minttea__Renderer.cmx"[39m
     [38;5;2m8224[39m: [38;5;2m     1158:   40     :   "_build/install/default/lib/minttea/opam"[39m
     [38;5;2m8225[39m: [38;5;2m     1159:   41     :   "_build/install/default/lib/minttea/program.ml"[39m
     [38;5;2m8226[39m: [38;5;2m     1160:   42     :   "_build/install/default/lib/minttea/renderer.ml"[39m
     [38;5;2m8227[39m: [38;5;2m     1161:   43     :   "_build/install/default/lib/minttea/renderer.mli"[39m
     [38;5;2m8228[39m: [38;5;2m     1162:   44     : ][39m
     [38;5;2m8229[39m: [38;5;2m     1163:   45     : libexec: [[39m
     [38;5;2m8230[39m: [38;5;2m     1164:   46     :   "_build/install/default/lib/minttea/minttea.cmxs"[39m
     [38;5;2m8231[39m: [38;5;2m     1165:   47     : ][39m
     [38;5;2m8232[39m: [38;5;2m     1166:   48     : doc: [[39m
     [38;5;2m8233[39m: [38;5;2m     1167:   49     :   "_build/install/default/doc/minttea/CHANGES.md"[39m
     [38;5;2m8234[39m: [38;5;2m     1168:   50     :   "_build/install/default/doc/minttea/LICENSE.md"[39m
     [38;5;2m8235[39m: [38;5;2m     1169:   51     :   "_build/install/default/doc/minttea/README.md"[39m
     [38;5;2m8236[39m: [38;5;2m     1170:   52     : ][39m
     [38;5;2m8237[39m: [38;5;2m     1171: Removed regular file ../minttea/spices.install:[39m
     [38;5;2m8238[39m: [38;5;2m     1172:    1     : lib: [[39m
     [38;5;2m8239[39m: [38;5;2m     1173:    2     :   "_build/install/default/lib/spices/META"[39m
     [38;5;2m8240[39m: [38;5;2m     1174:    3     :   "_build/install/default/lib/spices/border.ml"[39m
     [38;5;2m8241[39m: [38;5;2m     1175:    4     :   "_build/install/default/lib/spices/dune-package"[39m
     [38;5;2m8242[39m: [38;5;2m     1176:    5     :   "_build/install/default/lib/spices/formatter.ml"[39m
     [38;5;2m8243[39m: [38;5;2m     1177:    6     :   "_build/install/default/lib/spices/gradient.ml"[39m
     [38;5;2m8244[39m: [38;5;2m     1178:    7     :   "_build/install/default/lib/spices/opam"[39m
     [38;5;2m8245[39m: [38;5;2m     1179:    8     :   "_build/install/default/lib/spices/spices.a"[39m
     [38;5;2m8246[39m: [38;5;2m     1180:    9     :   "_build/install/default/lib/spices/spices.cma"[39m
     [38;5;2m8247[39m: [38;5;2m     1181:   10     :   "_build/install/default/lib/spices/spices.cmi"[39m
     [38;5;2m8248[39m: [38;5;2m     1182:   11     :   "_build/install/default/lib/spices/spices.cmt"[39m
     [38;5;2m8249[39m: [38;5;2m     1183:   12     :   "_build/install/default/lib/spices/spices.cmti"[39m
     [38;5;2m8250[39m: [38;5;2m     1184:   13     :   "_build/install/default/lib/spices/spices.cmx"[39m
     [38;5;2m8251[39m: [38;5;2m     1185:   14     :   "_build/install/default/lib/spices/spices.cmxa"[39m
     [38;5;2m8252[39m: [38;5;2m     1186:   15     :   "_build/install/default/lib/spices/spices.ml"[39m
     [38;5;2m8253[39m: [38;5;2m     1187:   16     :   "_build/install/default/lib/spices/spices.mli"[39m
     [38;5;2m8254[39m: [38;5;2m     1188:   17     :   "_build/install/default/lib/spices/spices__.cmi"[39m
     [38;5;2m8255[39m: [38;5;2m     1189:   18     :   "_build/install/default/lib/spices/spices__.cmt"[39m
     [38;5;2m8256[39m: [38;5;2m     1190:   19     :   "_build/install/default/lib/spices/spices__.cmx"[39m
     [38;5;2m8257[39m: [38;5;2m     1191:   20     :   "_build/install/default/lib/spices/spices__.ml"[39m
     [38;5;2m8258[39m: [38;5;2m     1192:   21     :   "_build/install/default/lib/spices/spices__Border.cmi"[39m
     [38;5;2m8259[39m: [38;5;2m     1193:   22     :   "_build/install/default/lib/spices/spices__Border.cmt"[39m
     [38;5;2m8260[39m: [38;5;2m     1194:   23     :   "_build/install/default/lib/spices/spices__Border.cmx"[39m
     [38;5;2m8261[39m: [38;5;2m     1195:   24     :   "_build/install/default/lib/spices/spices__Formatter.cmi"[39m
     [38;5;2m8262[39m: [38;5;2m     1196:   25     :   "_build/install/default/lib/spices/spices__Formatter.cmt"[39m
     [38;5;2m8263[39m: [38;5;2m     1197:   26     :   "_build/install/default/lib/spices/spices__Formatter.cmx"[39m
     [38;5;2m8264[39m: [38;5;2m     1198:   27     :   "_build/install/default/lib/spices/spices__Gradient.cmi"[39m
     [38;5;2m8265[39m: [38;5;2m     1199:   28     :   "_build/install/default/lib/spices/spices__Gradient.cmt"[39m
     [38;5;2m8266[39m: [38;5;2m     1200:   29     :   "_build/install/default/lib/spices/spices__Gradient.cmx"[39m
     [38;5;2m8267[39m: [38;5;2m     1201:   30     : ][39m
     [38;5;2m8268[39m: [38;5;2m     1202:   31     : libexec: [[39m
     [38;5;2m8269[39m: [38;5;2m     1203:   32     :   "_build/install/default/lib/spices/spices.cmxs"[39m
     [38;5;2m8270[39m: [38;5;2m     1204:   33     : ][39m
     [38;5;2m8271[39m: [38;5;2m     1205:   34     : doc: [[39m
     [38;5;2m8272[39m: [38;5;2m     1206:   35     :   "_build/install/default/doc/spices/CHANGES.md"[39m
     [38;5;2m8273[39m: [38;5;2m     1207:   36     :   "_build/install/default/doc/spices/LICENSE.md"[39m
     [38;5;2m8274[39m: [38;5;2m     1208:   37     :   "_build/install/default/doc/spices/README.md"[39m
     [38;5;2m8275[39m: [38;5;2m     1209:   38     : ][39m
     [38;5;2m8276[39m: [38;5;2m     1210: Added regular file ../notty/.gitignore:[39m
     [38;5;2m8277[39m: [38;5;2m     1211:         1: _build[39m
     [38;5;2m8278[39m: [38;5;2m     1212:         2: *.install[39m
     [38;5;2m8279[39m: [38;5;2m     1213:         3: *.native[39m
     [38;5;2m8280[39m: [38;5;2m     1214:         4: *.byte[39m
     [38;5;2m8281[39m: [38;5;2m     1215:         5: .merlin[39m
     [38;5;2m8282[39m: [38;5;2m     1216:         6: [39m
     [38;5;2m8283[39m: [38;5;2m     1217:         7: tmp[39m
     [38;5;2m8284[39m: [38;5;2m     1218:         8: *~[39m
     [38;5;2m8285[39m: [38;5;2m     1219:         9: \.\#*[39m
     [38;5;2m8286[39m: [38;5;2m     1220:        10: \#*#[39m
     [38;5;2m8287[39m: [38;5;2m     1221:        11: [39m
     [38;5;2m8288[39m: [38;5;2m     1222:        12: *.json[39m
     [38;5;2m8289[39m: [38;5;2m     1223:        13: gmon.out[39m
     [38;5;2m8290[39m: [38;5;2m     1224:        14: rondom[39m
     [38;5;2m8291[39m: [38;5;2m     1225: Added regular file ../notty/.ocamlinit:[39m
     [38;5;2m8292[39m: [38;5;2m     1226:         1: #require "uucp,uuseg,uutf"[39m
     [38;5;2m8293[39m: [38;5;2m     1227:         2: [39m
     [38;5;2m8294[39m: [38;5;2m     1228:         3: #directory "_build/default/src"[39m
     [38;5;2m8295[39m: [38;5;2m     1229:         4: #directory "_build/default/src/.notty.objs/byte"[39m
     [38;5;2m8296[39m: [38;5;2m     1230:         5: #directory "_build/default/src-unix"[39m
     [38;5;2m8297[39m: [38;5;2m     1231:         6: #directory "_build/default/src-unix/.notty_unix.objs/byte"[39m
     [38;5;2m8298[39m: [38;5;2m     1232:         7: #directory "_build/default/src-lwt"[39m
     [38;5;2m8299[39m: [38;5;2m     1233:         8: #directory "_build/default/src-lwt/.notty_lwt.objs/byte"[39m
     [38;5;2m8300[39m: [38;5;2m     1234:         9: [39m
     [38;5;2m8301[39m: [38;5;2m     1235:        10: #load "notty.cma"[39m
     [38;5;2m8302[39m: [38;5;2m     1236:        11: #load "notty_unix.cma"[39m
     [38;5;2m8303[39m: [38;5;2m     1237:        12: #load "notty_lwt.cma"[39m
     [38;5;2m8304[39m: [38;5;2m     1238:        13: [39m
     [38;5;2m8305[39m: [38;5;2m     1239:        14: #use "src/notty_top_init.ml"[39m
     [38;5;2m8306[39m: [38;5;2m     1240: Added regular file ../notty/CHANGES.md:[39m
     [38;5;2m8307[39m: [38;5;2m     1241:         1: ## v0.2.3 (2022-09-02)[39m
     [38;5;2m8308[39m: [38;5;2m     1242:         2: [39m
     [38;5;2m8309[39m: [38;5;2m     1243:         3: * Moved to Dune.[39m
     [38;5;2m8310[39m: [38;5;2m     1244:         4: * Renders faster, uses less memory.[39m
     [38;5;2m8311[39m: [38;5;2m     1245:         5: * Nested uses of `I.pp_attr` within `I.strf` now stack, instead of replacing.[39m
     [38;5;2m8312[39m: [38;5;2m     1246:         6: * Removed dependency on Uucp. Uses internal data instead (Unicode 13).[39m
     [38;5;2m8313[39m: [38;5;2m     1247:         7: * Support OCaml 4.08 - 4.14. Thanks to @kit-ty-kate for the 4.14 fixes.[39m
     [38;5;2m8314[39m: [38;5;2m     1248:         8: [39m
     [38;5;2m8315[39m: [38;5;2m     1249:         9: ## v0.2.2 (2019-02-19)[39m
     [38;5;2m8316[39m: [38;5;2m     1250:        10: [39m
     [38;5;2m8317[39m: [38;5;2m     1251:        11: * Fix a long-standing terminal cleanup bug. Reported by @ttamttam, fix by @cfcs.[39m
     [38;5;2m8318[39m: [38;5;2m     1252:        12: [39m
     [38;5;2m8319[39m: [38;5;2m     1253:        13: ## v0.2.1 (2017-11-06)[39m
     [38;5;2m8320[39m: [38;5;2m     1254:        14: [39m
     [38;5;2m8321[39m: [38;5;2m     1255:        15: * OCaml 4.06 compatible.[39m
     [38;5;2m8322[39m: [38;5;2m     1256:        16: * Cache the internal representation of Unicode strings.[39m
     [38;5;2m8323[39m: [38;5;2m     1257:        17: * Remove `I.ichar`. **breaking**[39m
     [38;5;2m8324[39m: [38;5;2m     1258:        18: [39m
     [38;5;2m8325[39m: [38;5;2m     1259:        19: ## v0.2.0 (2017-10-31)[39m
     [38;5;2m8326[39m: [38;5;2m     1260:        20: [39m
     [38;5;2m8327[39m: [38;5;2m     1261:        21: * All-around speed and memory improvements.[39m
     [38;5;2m8328[39m: [38;5;2m     1262:        22: * Draw over lines cell-by-cell instead of using erase-and-skip.[39m
     [38;5;2m8329[39m: [38;5;2m     1263:        23:   Slower, but flicker-free drawing.[39m
     [38;5;2m8330[39m: [38;5;2m     1264:        24: * `Term.create`: optionally inhibit synthetic TTY signals.[39m
     [38;5;2m8331[39m: [38;5;2m     1265:        25: * Cursor origin moved from `(1, 1)` to `(0, 0)`. **breaking**[39m
     [38;5;2m8332[39m: [38;5;2m     1266:        26: * `#key` renamed to `#special`. **breaking**[39m
     [38;5;2m8333[39m: [38;5;2m     1267:        27: * Added `Term.fds` to get connected file descriptors.[39m
     [38;5;2m8334[39m: [38;5;2m     1268:        28: * Added `A.equal` and `I.equal`.[39m
     [38;5;2m8335[39m: [38;5;2m     1269:        29: * Switched over to `Uchar.t`. **breaking**[39m
     [38;5;2m8336[39m: [38;5;2m     1270:        30: * Separated ASCII from the rest of Unicode input. **breaking**[39m
     [38;5;2m8337[39m: [38;5;2m     1271:        31: * Added image pretty-printer `I.pp`.[39m
     [38;5;2m8338[39m: [38;5;2m     1272:        32: * Added `notty.top` for use in the toplevel.[39m
     [38;5;2m8339[39m: [38;5;2m     1273:        33: * Removed `I.tile`. **breaking**[39m
     [38;5;2m8340[39m: [38;5;2m     1274:        34: * Added `I.tabulate`, generalizing `I.tile`.[39m
     [38;5;2m8341[39m: [38;5;2m     1275:        35: * Added support for 24-bit color.[39m
     [38;5;2m8342[39m: [38;5;2m     1276:        36: * Added `Notty_*.show_cursor` and `Notty_*.move_cursor` for manual cursor[39m
     [38;5;2m8343[39m: [38;5;2m     1277:        37:   positioning in inline mode.[39m
     [38;5;2m8344[39m: [38;5;2m     1278:        38: * Removed `output_image_endline`. Can be replaced by `eol`. **breaking**[39m
     [38;5;2m8345[39m: [38;5;2m     1279:        39: * `Notty_*.output_image` lost the `~clear` parameter. Can be replaced in various[39m
     [38;5;2m8346[39m: [38;5;2m     1280:        40:   ways by cursor positioning.[39m
     [38;5;2m8347[39m: [38;5;2m     1281:        41: * `Notty_unix.output_image ~chan` renamed to `~fd`. **breaking**[39m
     [38;5;2m8348[39m: [38;5;2m     1282:        42: * Added support for bracketed paste.[39m
     [38;5;2m8349[39m: [38;5;2m     1283:        43: * More example programs.[39m
     [38;5;2m8350[39m: [38;5;2m     1284:        44: [39m
     [38;5;2m8351[39m: [38;5;2m     1285:        45: ## v0.1.1 (2016-02-09)[39m
     [38;5;2m8352[39m: [38;5;2m     1286:        46: * `Term.input` -> `Term.event`[39m
     [38;5;2m8353[39m: [38;5;2m     1287:        47: * Option to redraw the line[39m
     [38;5;2m8354[39m: [38;5;2m     1288:        48: [39m
     [38;5;2m8355[39m: [38;5;2m     1289:        49: ## v0.1.0 (2016-02-09)[39m
     [38;5;2m8356[39m: [38;5;2m     1290:        50: * Initial release[39m
     [38;5;2m8357[39m: [38;5;2m     1291: Added regular file ../notty/LICENSE.md:[39m
     [38;5;2m8358[39m: [38;5;2m     1292:         1: Copyright (c) 2016-2017 David Kaloper Meršinjak[39m
     [38;5;2m8359[39m: [38;5;2m     1293:         2: [39m
     [38;5;2m8360[39m: [38;5;2m     1294:         3: Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m8361[39m: [38;5;2m     1295:         4: purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m8362[39m: [38;5;2m     1296:         5: copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m8363[39m: [38;5;2m     1297:         6: [39m
     [38;5;2m8364[39m: [38;5;2m     1298:         7: THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m8365[39m: [38;5;2m     1299:         8: WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m8366[39m: [38;5;2m     1300:         9: MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m8367[39m: [38;5;2m     1301:        10: ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m8368[39m: [38;5;2m     1302:        11: WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m8369[39m: [38;5;2m     1303:        12: ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m8370[39m: [38;5;2m     1304:        13: OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m8371[39m: [38;5;2m     1305: Added regular file ../notty/README.md:[39m
     [38;5;2m8372[39m: [38;5;2m     1306:         1: # Notty — Declaring terminals[39m
     [38;5;2m8373[39m: [38;5;2m     1307:         2: [39m
     [38;5;2m8374[39m: [38;5;2m     1308:         3: <a href="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO" alt="dumper"><img src="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO.png" width="400"/></a>[39m
     [38;5;2m8375[39m: [38;5;2m     1309:         4: <a href="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I" alt="input"><img src="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I.png" width="400"/></a>[39m
     [38;5;2m8376[39m: [38;5;2m     1310:         5: <a href="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc" alt="microdots"><img src="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc.png" width="400"/></a>[39m
     [38;5;2m8377[39m: [38;5;2m     1311:         6: <a href="https://asciinema.org/a/NgpF9Im8qfUICC39GDDAe9Ede" alt="rain"><img src="https://asciinema.org/a/R94gnHTQhCFJAsWpRfVlZWcUB.png" width="400"/></a>[39m
     [38;5;2m8378[39m: [38;5;2m     1312:         7: [39m
     [38;5;2m8379[39m: [38;5;2m     1313:         8: Notty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m8380[39m: [38;5;2m     1314:         9: of composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m8381[39m: [38;5;2m     1315:        10: model, providing something simpler and more expressive.[39m
     [38;5;2m8382[39m: [38;5;2m     1316:        11: [39m
     [38;5;2m8383[39m: [38;5;2m     1317:        12: The core layout engine and IO codecs are pure platform-independent OCaml.[39m
     [38;5;2m8384[39m: [38;5;2m     1318:        13: Distribution includes modules with input and output facilities for Unix, and Lwt[39m
     [38;5;2m8385[39m: [38;5;2m     1319:        14: on Unix.[39m
     [38;5;2m8386[39m: [38;5;2m     1320:        15: [39m
     [38;5;2m8387[39m: [38;5;2m     1321:        16: As an attempt to redefine terminal programming, Notty has to be[39m
     [38;5;2m8388[39m: [38;5;2m     1322:        17: _opinionated_. It assumes Unicode throughout, does not have universal support[39m
     [38;5;2m8389[39m: [38;5;2m     1323:        18: for various terminals out there, and has a peculiar programming and rendering[39m
     [38;5;2m8390[39m: [38;5;2m     1324:        19: model.[39m
     [38;5;2m8391[39m: [38;5;2m     1325:        20: [39m
     [38;5;2m8392[39m: [38;5;2m     1326:        21: Notty's core API was heavily influenced by Haskell's [Vty][vty].[39m
     [38;5;2m8393[39m: [38;5;2m     1327:        22: [39m
     [38;5;2m8394[39m: [38;5;2m     1328:        23: ## Where to start[39m
     [38;5;2m8395[39m: [38;5;2m     1329:        24: [39m
     [38;5;2m8396[39m: [38;5;2m     1330:        25: Check out the [documentation], [examples], or peek directly into the [interface][39m
     [38;5;2m8397[39m: [38;5;2m     1331:        26: file.[39m
     [38;5;2m8398[39m: [38;5;2m     1332:        27: [39m
     [38;5;2m8399[39m: [38;5;2m     1333:        28: Building with `dune build @ex` will produce several little example programs that[39m
     [38;5;2m8400[39m: [38;5;2m     1334:        29: also double as tests.[39m
     [38;5;2m8401[39m: [38;5;2m     1335:        30: [39m
     [38;5;2m8402[39m: [38;5;2m     1336:        31: ```OCaml[39m
     [38;5;2m8403[39m: [38;5;2m     1337:        32: (* Game of Life with ZX Spectrum kitsch. *)[39m
     [38;5;2m8404[39m: [38;5;2m     1338:        33: [39m
     [38;5;2m8405[39m: [38;5;2m     1339:        34: let dot : image = I.uchar A.(fg lightred) (Uchar.of_int 0x25cf) 1 1[39m
     [38;5;2m8406[39m: [38;5;2m     1340:        35: [39m
     [38;5;2m8407[39m: [38;5;2m     1341:        36: let background step (n, m) =[39m
     [38;5;2m8408[39m: [38;5;2m     1342:        37:   let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m8409[39m: [38;5;2m     1343:        38:   if k > 0 then I.char A.(fg (gray k)) '.' 1 1 else I.void 1 1[39m
     [38;5;2m8410[39m: [38;5;2m     1344:        39: [39m
     [38;5;2m8411[39m: [38;5;2m     1345:        40: let render (w, h) step life : image =[39m
     [38;5;2m8412[39m: [38;5;2m     1346:        41:   I.tabulate w (h - 1) @@ fun x y ->[39m
     [38;5;2m8413[39m: [38;5;2m     1347:        42:     let pt = (x, y) in[39m
     [38;5;2m8414[39m: [38;5;2m     1348:        43:     if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m8415[39m: [38;5;2m     1349:        44: ```[39m
     [38;5;2m8416[39m: [38;5;2m     1350:        45: [39m
     [38;5;2m8417[39m: [38;5;2m     1351:        46: [documentation]: https://pqwy.github.io/notty/doc[39m
     [38;5;2m8418[39m: [38;5;2m     1352:        47: [examples]: http://pqwy.github.io/notty/doc/Notty.html#examples[39m
     [38;5;2m8419[39m: [38;5;2m     1353:        48: [interface]: https://github.com/pqwy/notty/blob/master/src/notty.mli[39m
     [38;5;2m8420[39m: [38;5;2m     1354:        49: [vty]: https://hackage.haskell.org/package/vty[39m
     [38;5;2m8421[39m: [38;5;2m     1355:        50: [39m
     [38;5;2m8422[39m: [38;5;2m     1356:        51: ## What?[39m
     [38;5;2m8423[39m: [38;5;2m     1357:        52: [39m
     [38;5;2m8424[39m: [38;5;2m     1358:        53: - _Notty?_[39m
     [38;5;2m8425[39m: [38;5;2m     1359:        54:   [39m
     [38;5;2m8426[39m: [38;5;2m     1360:        55:   Terminals are tedious to program for. Notty tries to abstract the tedium away,[39m
     [38;5;2m8427[39m: [38;5;2m     1361:        56:   leaving you with a more pleasant programming surface that's quite unlike a TTY.[39m
     [38;5;2m8428[39m: [38;5;2m     1362:        57:   Hence, _No-TTY_.[39m
     [38;5;2m8429[39m: [38;5;2m     1363:        58: [39m
     [38;5;2m8430[39m: [38;5;2m     1364:        59: - A new kind of Rust terminal?[39m
     [38;5;2m8431[39m: [38;5;2m     1365:        60: [39m
     [38;5;2m8432[39m: [38;5;2m     1366:        61:   This Notty has no connection to any other body of code named Notty.[39m
     [38;5;2m8433[39m: [38;5;2m     1367:        62: [39m
     [38;5;2m8434[39m: [38;5;2m     1368:        63: - Why make yet another terminal output library?[39m
     [38;5;2m8435[39m: [38;5;2m     1369:        64:   [39m
     [38;5;2m8436[39m: [38;5;2m     1370:        65:   Because:[39m
     [38;5;2m8437[39m: [38;5;2m     1371:        66:   * It allows one to *describe* what should be seen, as opposed to *commanding*[39m
     [38;5;2m8438[39m: [38;5;2m     1372:        67:     a terminal.[39m
     [38;5;2m8439[39m: [38;5;2m     1373:        68:   * It's pretty compact. Both bells and whistles can be implemented separately.[39m
     [38;5;2m8440[39m: [38;5;2m     1374:        69:   * Core is easy to glue onto various IO backends.[39m
     [38;5;2m8441[39m: [38;5;2m     1375:        70:   * Pure platform-independent OCaml.[39m
     [38;5;2m8442[39m: [38;5;2m     1376: Added regular file ../notty/benchmarks/dune:[39m
     [38;5;2m8443[39m: [38;5;2m     1377:         1: (executable[39m
     [38;5;2m8444[39m: [38;5;2m     1378:         2:   (name speed)[39m
     [38;5;2m8445[39m: [38;5;2m     1379:         3:   (libraries notty notty.unix common unmark unmark.cli))[39m
     [38;5;2m8446[39m: [38;5;2m     1380: Added regular file ../notty/benchmarks/speed.ml:[39m
     [38;5;2m8447[39m: [38;5;2m     1381:         1: (* Copyright (c) 2016-2019 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m8448[39m: [38;5;2m     1382:         2:    See LICENSE.md. *)[39m
     [38;5;2m8449[39m: [38;5;2m     1383:         3: [39m
     [38;5;2m8450[39m: [38;5;2m     1384:         4: open Notty[39m
     [38;5;2m8451[39m: [38;5;2m     1385:         5: open Common[39m
     [38;5;2m8452[39m: [38;5;2m     1386:         6: open Common.Images[39m
     [38;5;2m8453[39m: [38;5;2m     1387:         7: [39m
     [38;5;2m8454[39m: [38;5;2m     1388:         8: [39m
     [38;5;2m8455[39m: [38;5;2m     1389:         9: let decode ?(n=1) str =[39m
     [38;5;2m8456[39m: [38;5;2m     1390:        10:   let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m8457[39m: [38;5;2m     1391:        11:   let us = str |> Uutf.String.fold_utf_8 f [] |> List.rev in[39m
     [38;5;2m8458[39m: [38;5;2m     1392:        12:   for _ = 1 to n do Unescape.decode us |> ignore done[39m
     [38;5;2m8459[39m: [38;5;2m     1393:        13: [39m
     [38;5;2m8460[39m: [38;5;2m     1394:        14: let input ?(n=1) str =[39m
     [38;5;2m8461[39m: [38;5;2m     1395:        15:   let buf = Bytes.unsafe_of_string str in[39m
     [38;5;2m8462[39m: [38;5;2m     1396:        16:   let rec go f n = match Unescape.next f with[39m
     [38;5;2m8463[39m: [38;5;2m     1397:        17:     | #Unescape.event -> go f n[39m
     [38;5;2m8464[39m: [38;5;2m     1398:        18:     | `Await when n > 0 ->[39m
     [38;5;2m8465[39m: [38;5;2m     1399:        19:         Unescape.input f buf 0 (Bytes.length buf); go f (pred n)[39m
     [38;5;2m8466[39m: [38;5;2m     1400:        20:     | `Await -> ()[39m
     [38;5;2m8467[39m: [38;5;2m     1401:        21:     | `End   -> assert false in[39m
     [38;5;2m8468[39m: [38;5;2m     1402:        22:   go (Unescape.create ()) n[39m
     [38;5;2m8469[39m: [38;5;2m     1403:        23: [39m
     [38;5;2m8470[39m: [38;5;2m     1404:        24: let escapes =[39m
     [38;5;2m8471[39m: [38;5;2m     1405:        25:   "\027[5~\027[6~\027[1~\027[4~\027OP\027OQ\027OR\027OS\027[15~\027[17~" ^[39m
     [38;5;2m8472[39m: [38;5;2m     1406:        26:   "\027[18~\027[19~\027[20~\027[21~\027[23~\027[24~"[39m
     [38;5;2m8473[39m: [38;5;2m     1407:        27: [39m
     [38;5;2m8474[39m: [38;5;2m     1408:        28: let escapes_m =[39m
     [38;5;2m8475[39m: [38;5;2m     1409:        29:   "\027[<0;59;7M\027[<32;58;7M\027[<32;57;7M\027[<32;56;7M\027[<32;54;7M" ^[39m
     [38;5;2m8476[39m: [38;5;2m     1410:        30:   "\027[<32;53;8M\027[<32;52;8M\027[<32;51;8M\027[<32;50;8M\027[<32;49;8M" ^[39m
     [38;5;2m8477[39m: [38;5;2m     1411:        31:   "\027[<32;47;9M\027[<32;46;9M\027[<32;44;9M\027[<32;42;10M\027[<32;41;10M" ^[39m
     [38;5;2m8478[39m: [38;5;2m     1412:        32:   "\027[<32;41;11M\027[<32;40;11M\027[<32;41;12M\027[<32;42;12M" ^[39m
     [38;5;2m8479[39m: [38;5;2m     1413:        33:   "\027[<32;42;13M\027[<32;43;13M\027[<32;44;13M\027[<0;44;13m"[39m
     [38;5;2m8480[39m: [38;5;2m     1414:        34: [39m
     [38;5;2m8481[39m: [38;5;2m     1415:        35: let chars = String.(make (length escapes) 'x')[39m
     [38;5;2m8482[39m: [38;5;2m     1416:        36: [39m
     [38;5;2m8483[39m: [38;5;2m     1417:        37: let buf = Buffer.create 1024[39m
     [38;5;2m8484[39m: [38;5;2m     1418:        38: let buf_render off dim image =[39m
     [38;5;2m8485[39m: [38;5;2m     1419:        39:   Buffer.clear buf; Render.to_buffer buf Cap.ansi off dim image[39m
     [38;5;2m8486[39m: [38;5;2m     1420:        40: [39m
     [38;5;2m8487[39m: [38;5;2m     1421:        41: [39m
     [38;5;2m8488[39m: [38;5;2m     1422:        42: open Unmark[39m
     [38;5;2m8489[39m: [38;5;2m     1423:        43: [39m
     [38;5;2m8490[39m: [38;5;2m     1424:        44: let strf = Format.asprintf[39m
     [38;5;2m8491[39m: [38;5;2m     1425:        45: let group_of name xs f = group name (List.map f xs)[39m
     [38;5;2m8492[39m: [38;5;2m     1426:        46: let bench_fmt fmt = Format.kasprintf bench fmt[39m
     [38;5;2m8493[39m: [38;5;2m     1427:        47: let group_fmt fmt = Format.kasprintf group fmt[39m
     [38;5;2m8494[39m: [38;5;2m     1428:        48: [39m
     [38;5;2m8495[39m: [38;5;2m     1429:        49: let render =[39m
     [38;5;2m8496[39m: [38;5;2m     1430:        50: [39m
     [38;5;2m8497[39m: [38;5;2m     1431:        51:   let clip i = I.(width i |> min 200, height i |> min 200) in[39m
     [38;5;2m8498[39m: [38;5;2m     1432:        52:   let ops i = Operation.of_image (0, 0) (clip i) i[39m
     [38;5;2m8499[39m: [38;5;2m     1433:        53:   and render i = buf_render (0, 0) (clip i) i in[39m
     [38;5;2m8500[39m: [38;5;2m     1434:        54: [39m
     [38;5;2m8501[39m: [38;5;2m     1435:        55:   group "render" [[39m
     [38;5;2m8502[39m: [38;5;2m     1436:        56:     group "rasterize" [[39m
     [38;5;2m8503[39m: [38;5;2m     1437:        57:       bench "i2" (fun () -> ops i2)[39m
     [38;5;2m8504[39m: [38;5;2m     1438:        58:     ; bench "i3" (fun () -> ops i3)[39m
     [38;5;2m8505[39m: [38;5;2m     1439:        59:     ; bench "i4" (fun () -> ops i4)[39m
     [38;5;2m8506[39m: [38;5;2m     1440:        60:     ; bench "i5" (fun () -> ops i5)[39m
     [38;5;2m8507[39m: [38;5;2m     1441:        61:     ];[39m
     [38;5;2m8508[39m: [38;5;2m     1442:        62:     group "render" [[39m
     [38;5;2m8509[39m: [38;5;2m     1443:        63:       bench "i2" (fun () -> render i2)[39m
     [38;5;2m8510[39m: [38;5;2m     1444:        64:     ; bench "i3" (fun () -> render i3)[39m
     [38;5;2m8511[39m: [38;5;2m     1445:        65:     ; bench "i4" (fun () -> render i4)[39m
     [38;5;2m8512[39m: [38;5;2m     1446:        66:     ; bench "i5" (fun () -> render i5)[39m
     [38;5;2m8513[39m: [38;5;2m     1447:        67:     ];[39m
     [38;5;2m8514[39m: [38;5;2m     1448:        68:     group_f "draw" (fun t -> [[39m
     [38;5;2m8515[39m: [38;5;2m     1449:        69:       bench "i3" (fun () -> Term.image t i3)[39m
     [38;5;2m8516[39m: [38;5;2m     1450:        70:     ; bench "i5" (fun () -> Term.image t i5)[39m
     [38;5;2m8517[39m: [38;5;2m     1451:        71:     ]) ~init:Term.create ~fini:Term.release[39m
     [38;5;2m8518[39m: [38;5;2m     1452:        72: ][39m
     [38;5;2m8519[39m: [38;5;2m     1453:        73: [39m
     [38;5;2m8520[39m: [38;5;2m     1454:        74: let input = group "input" [[39m
     [38;5;2m8521[39m: [38;5;2m     1455:        75:   group "decode" [[39m
     [38;5;2m8522[39m: [38;5;2m     1456:        76:     bench "escapes"     (fun () -> decode ~n:100 escapes);[39m
     [38;5;2m8523[39m: [38;5;2m     1457:        77:     bench "CSI escapes" (fun () -> decode ~n:100 escapes_m);[39m
     [38;5;2m8524[39m: [38;5;2m     1458:        78:     bench "chars"       (fun () -> decode ~n:100 chars);[39m
     [38;5;2m8525[39m: [38;5;2m     1459:        79:   ];[39m
     [38;5;2m8526[39m: [38;5;2m     1460:        80:   group "input" [[39m
     [38;5;2m8527[39m: [38;5;2m     1461:        81:     bench "escapes"     (fun () -> input ~n:100 escapes);[39m
     [38;5;2m8528[39m: [38;5;2m     1462:        82:     bench "CSI escapes" (fun () -> input ~n:100 escapes_m);[39m
     [38;5;2m8529[39m: [38;5;2m     1463:        83:     bench "chars"       (fun () -> input ~n:100 chars);[39m
     [38;5;2m8530[39m: [38;5;2m     1464:        84:   ][39m
     [38;5;2m8531[39m: [38;5;2m     1465:        85: ][39m
     [38;5;2m8532[39m: [38;5;2m     1466:        86: [39m
     [38;5;2m8533[39m: [38;5;2m     1467:        87: let construct =[39m
     [38;5;2m8534[39m: [38;5;2m     1468:        88: [39m
     [38;5;2m8535[39m: [38;5;2m     1469:        89:   let strings = [[39m
     [38;5;2m8536[39m: [38;5;2m     1470:        90:       "s1", "a"[39m
     [38;5;2m8537[39m: [38;5;2m     1471:        91:     ; "s2", "abcdefghij"[39m
     [38;5;2m8538[39m: [38;5;2m     1472:        92:     ; "s3", String.repeat 10 "abcdefghij"[39m
     [38;5;2m8539[39m: [38;5;2m     1473:        93:     ; "s4", String.repeat 100 "abcdefghij"[39m
     [38;5;2m8540[39m: [38;5;2m     1474:        94:     ; "u1", "☭"[39m
     [38;5;2m8541[39m: [38;5;2m     1475:        95:     ; "u2", String.repeat 10 "☭"[39m
     [38;5;2m8542[39m: [38;5;2m     1476:        96:     ; "u3", String.repeat 100 "☭"[39m
     [38;5;2m8543[39m: [38;5;2m     1477:        97:     ; "u4", String.repeat 1000 "☭" ] in[39m
     [38;5;2m8544[39m: [38;5;2m     1478:        98: [39m
     [38;5;2m8545[39m: [38;5;2m     1479:        99:   group "construct" [[39m
     [38;5;2m8546[39m: [38;5;2m     1480:       100: [39m
     [38;5;2m8547[39m: [38;5;2m     1481:       101:     group "make" (strings |> List.map @@ fun (n, s) ->[39m
     [38;5;2m8548[39m: [38;5;2m     1482:       102:       bench n (fun () -> I.string A.empty s))[39m
     [38;5;2m8549[39m: [38;5;2m     1483:       103: [39m
     [38;5;2m8550[39m: [38;5;2m     1484:       104:   ; group "repeat" ([0x40; 0x262d] |> List.map @@ fun x ->[39m
     [38;5;2m8551[39m: [38;5;2m     1485:       105:       let u = Uchar.of_int x in[39m
     [38;5;2m8552[39m: [38;5;2m     1486:       106:       group_fmt "U+%04x" x ([1; 10; 100] |> List.map @@ fun n ->[39m
     [38;5;2m8553[39m: [38;5;2m     1487:       107:         bench_fmt "%dx" n (fun () -> I.uchar A.empty u n 1)))[39m
     [38;5;2m8554[39m: [38;5;2m     1488:       108: [39m
     [38;5;2m8555[39m: [38;5;2m     1489:       109:   ; bench "pxmatrix" (fun () -> pxmatrix 200 200 @@ fun _ _ -> A.black)[39m
     [38;5;2m8556[39m: [38;5;2m     1490:       110:   ][39m
     [38;5;2m8557[39m: [38;5;2m     1491:       111: [39m
     [38;5;2m8558[39m: [38;5;2m     1492:       112: [39m
     [38;5;2m8559[39m: [38;5;2m     1493:       113: let _ = Unmark_cli.main "Notty" [ render; input; construct ][39m
     [38;5;2m8560[39m: [38;5;2m     1494: Added regular file ../notty/dune-project:[39m
     [38;5;2m8561[39m: [38;5;2m     1495:         1: (lang dune 1.7)[39m
     [38;5;2m8562[39m: [38;5;2m     1496:         2: (name notty)[39m
     [38;5;2m8563[39m: [38;5;2m     1497:         3: (version %%VERSION_NUM%%)[39m
     [38;5;2m8564[39m: [38;5;2m     1498: Added regular file ../notty/examples/almondbread.ml:[39m
     [38;5;2m8565[39m: [38;5;2m     1499:         1: open Notty[39m
     [38;5;2m8566[39m: [38;5;2m     1500:         2: open Common[39m
     [38;5;2m8567[39m: [38;5;2m     1501:         3: [39m
     [38;5;2m8568[39m: [38;5;2m     1502:         4: let iter = 200[39m
     [38;5;2m8569[39m: [38;5;2m     1503:         5: [39m
     [38;5;2m8570[39m: [38;5;2m     1504:         6: let member x y =[39m
     [38;5;2m8571[39m: [38;5;2m     1505:         7:   let rec go cx cy x y n =[39m
     [38;5;2m8572[39m: [38;5;2m     1506:         8:     let xx = x *. x and yy = y *. y in[39m
     [38;5;2m8573[39m: [38;5;2m     1507:         9:     if n = 0 || xx +. yy > 4. then n else[39m
     [38;5;2m8574[39m: [38;5;2m     1508:        10:       go cx cy (xx -. yy +. cx) (2. *. x *. y +. cy) (n - 1) in[39m
     [38;5;2m8575[39m: [38;5;2m     1509:        11:   float (iter - go x y 0. 0. iter) /. float iter[39m
     [38;5;2m8576[39m: [38;5;2m     1510:        12: [39m
     [38;5;2m8577[39m: [38;5;2m     1511:        13: let pi2   = 2. *. 3.14159[39m
     [38;5;2m8578[39m: [38;5;2m     1512:        14: let pi2_3 = pi2 /. 3.[39m
     [38;5;2m8579[39m: [38;5;2m     1513:        15: [39m
     [38;5;2m8580[39m: [38;5;2m     1514:        16: let mandelbrot x y =[39m
     [38;5;2m8581[39m: [38;5;2m     1515:        17:   (* let esc = 1. -. member x y in *)[39m
     [38;5;2m8582[39m: [38;5;2m     1516:        18:   (* 23. *. esc *. esc |> truncate |> A.gray *)[39m
     [38;5;2m8583[39m: [38;5;2m     1517:        19:   match member x y with[39m
     [38;5;2m8584[39m: [38;5;2m     1518:        20:   | 1.  -> A.gray 0[39m
     [38;5;2m8585[39m: [38;5;2m     1519:        21:   | esc ->[39m
     [38;5;2m8586[39m: [38;5;2m     1520:        22:       let t = esc *. pi2 in[39m
     [38;5;2m8587[39m: [38;5;2m     1521:        23:       let f d = (sin (t +. d) *. 128. +. 128.) |> truncate in[39m
     [38;5;2m8588[39m: [38;5;2m     1522:        24:       A.rgb_888 ~b:(f (-.pi2_3)) ~g:(f 0.) ~r:(f pi2_3)[39m
     [38;5;2m8589[39m: [38;5;2m     1523:        25: [39m
     [38;5;2m8590[39m: [38;5;2m     1524:        26: let xlate dx dy f x y = f (x -. dx) (y -. dy)[39m
     [38;5;2m8591[39m: [38;5;2m     1525:        27: let scale k f = let k1 = 1./.k in fun x y -> f (x *. k1) (y *. k1)[39m
     [38;5;2m8592[39m: [38;5;2m     1526:        28: let rot a f =[39m
     [38;5;2m8593[39m: [38;5;2m     1527:        29:   let sina = sin a and cosa = cos a in fun x y ->[39m
     [38;5;2m8594[39m: [38;5;2m     1528:        30:     f (x *. cosa -. y *. sina) (x *. sina +. cosa *. y)[39m
     [38;5;2m8595[39m: [38;5;2m     1529:        31: [39m
     [38;5;2m8596[39m: [38;5;2m     1530:        32: let render_unit f (w, h) =[39m
     [38;5;2m8597[39m: [38;5;2m     1531:        33:   let sw = 1. /. float w[39m
     [38;5;2m8598[39m: [38;5;2m     1532:        34:   and sh = 1. /. float (2 * h) in[39m
     [38;5;2m8599[39m: [38;5;2m     1533:        35:   pxmatrix w h (fun x y -> f (float x *. sw) (float y *. sh))[39m
     [38;5;2m8600[39m: [38;5;2m     1534:        36: [39m
     [38;5;2m8601[39m: [38;5;2m     1535:        37: let () =[39m
     [38;5;2m8602[39m: [38;5;2m     1536:        38:   let pix =[39m
     [38;5;2m8603[39m: [38;5;2m     1537:        39:     render_unit @@[39m
     [38;5;2m8604[39m: [38;5;2m     1538:        40:     rot (-1.570795) @@ xlate (1.6) (-0.5) @@[39m
     [38;5;2m8605[39m: [38;5;2m     1539:        41:     mandelbrot in[39m
     [38;5;2m8606[39m: [38;5;2m     1540:        42:   Notty_unix.(output_image_size @@ fun (w, h) -> pix (w, h - 1) |> eol)[39m
     [38;5;2m8607[39m: [38;5;2m     1541: Added regular file ../notty/examples/colors.ml:[39m
     [38;5;2m8608[39m: [38;5;2m     1542:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m8609[39m: [38;5;2m     1543:         2:    See LICENSE.md. *)[39m
     [38;5;2m8610[39m: [38;5;2m     1544:         3: [39m
     [38;5;2m8611[39m: [38;5;2m     1545:         4: (**[39m
     [38;5;2m8612[39m: [38;5;2m     1546:         5:  * Demonstrates text attributes.[39m
     [38;5;2m8613[39m: [38;5;2m     1547:         6:  *)[39m
     [38;5;2m8614[39m: [38;5;2m     1548:         7: open Notty[39m
     [38;5;2m8615[39m: [38;5;2m     1549:         8: open Common[39m
     [38;5;2m8616[39m: [38;5;2m     1550:         9: [39m
     [38;5;2m8617[39m: [38;5;2m     1551:        10: let colors = A.[[39m
     [38;5;2m8618[39m: [38;5;2m     1552:        11:   "black"        , black[39m
     [38;5;2m8619[39m: [38;5;2m     1553:        12: ; "red"          , red[39m
     [38;5;2m8620[39m: [38;5;2m     1554:        13: ; "green"        , green[39m
     [38;5;2m8621[39m: [38;5;2m     1555:        14: ; "yellow"       , yellow[39m
     [38;5;2m8622[39m: [38;5;2m     1556:        15: ; "blue"         , blue[39m
     [38;5;2m8623[39m: [38;5;2m     1557:        16: ; "magenta"      , magenta[39m
     [38;5;2m8624[39m: [38;5;2m     1558:        17: ; "cyan"         , cyan[39m
     [38;5;2m8625[39m: [38;5;2m     1559:        18: ; "white"        , white[39m
     [38;5;2m8626[39m: [38;5;2m     1560:        19: ; "lightblack"   , lightblack[39m
     [38;5;2m8627[39m: [38;5;2m     1561:        20: ; "lightred"     , lightred[39m
     [38;5;2m8628[39m: [38;5;2m     1562:        21: ; "lightgreen"   , lightgreen[39m
     [38;5;2m8629[39m: [38;5;2m     1563:        22: ; "lightyellow"  , lightyellow[39m
     [38;5;2m8630[39m: [38;5;2m     1564:        23: ; "lightblue"    , lightblue[39m
     [38;5;2m8631[39m: [38;5;2m     1565:        24: ; "lightmagenta" , lightmagenta[39m
     [38;5;2m8632[39m: [38;5;2m     1566:        25: ; "lightcyan"    , lightcyan[39m
     [38;5;2m8633[39m: [38;5;2m     1567:        26: ; "lightwhite"   , lightwhite[39m
     [38;5;2m8634[39m: [38;5;2m     1568:        27: ][39m
     [38;5;2m8635[39m: [38;5;2m     1569:        28: [39m
     [38;5;2m8636[39m: [38;5;2m     1570:        29: let styles = A.[[39m
     [38;5;2m8637[39m: [38;5;2m     1571:        30:   "empty"      , empty[39m
     [38;5;2m8638[39m: [38;5;2m     1572:        31: ; "bold"       , st bold[39m
     [38;5;2m8639[39m: [38;5;2m     1573:        32: ; "italic"     , st italic[39m
     [38;5;2m8640[39m: [38;5;2m     1574:        33: ; "underline"  , st underline[39m
     [38;5;2m8641[39m: [38;5;2m     1575:        34: ; "blink"      , st blink[39m
     [38;5;2m8642[39m: [38;5;2m     1576:        35: ; "reverse"    , st reverse[39m
     [38;5;2m8643[39m: [38;5;2m     1577:        36: ; "bold/italic", st bold ++ st italic[39m
     [38;5;2m8644[39m: [38;5;2m     1578:        37: ; "rev/underln", st underline ++ st reverse[39m
     [38;5;2m8645[39m: [38;5;2m     1579:        38: ; "bold/rev"   , st reverse ++ st bold[39m
     [38;5;2m8646[39m: [38;5;2m     1580:        39: ][39m
     [38;5;2m8647[39m: [38;5;2m     1581:        40: [39m
     [38;5;2m8648[39m: [38;5;2m     1582:        41: let image w =[39m
     [38;5;2m8649[39m: [38;5;2m     1583:        42:   let open List in[39m
     [38;5;2m8650[39m: [38;5;2m     1584:        43:   let core16 =[39m
     [38;5;2m8651[39m: [38;5;2m     1585:        44:     let c1  = map (fun (n, c) -> I.string A.(fg c) n) colors[39m
     [38;5;2m8652[39m: [38;5;2m     1586:        45:     and c2  = map (fun (n, c) -> I.string A.(fg black ++ bg c) n) colors[39m
     [38;5;2m8653[39m: [38;5;2m     1587:        46:     in I.(vcat c1 <|> void 1 0 <|> vcat c2)[39m
     [38;5;2m8654[39m: [38;5;2m     1588:        47:   and attr =[39m
     [38;5;2m8655[39m: [38;5;2m     1589:        48:     I.( styles |> map (fun (n, s) -> hpad 0 1 (string s n)) |> hcat) in[39m
     [38;5;2m8656[39m: [38;5;2m     1590:        49:   let combine imgs =[39m
     [38;5;2m8657[39m: [38;5;2m     1591:        50:     List.map I.(fun (n, i) -> string A.empty n <-> i <-> void 0 1) imgs[39m
     [38;5;2m8658[39m: [38;5;2m     1592:        51:     |> I.vcat |> I.pad ~l:1 ~t:1 in[39m
     [38;5;2m8659[39m: [38;5;2m     1593:        52:   combine [[39m
     [38;5;2m8660[39m: [38;5;2m     1594:        53:     "System colors:",     core16;[39m
     [38;5;2m8661[39m: [38;5;2m     1595:        54:     "Color cube, 6x6x6:", Images.c_cube_ix;[39m
     [38;5;2m8662[39m: [38;5;2m     1596:        55:     "Grayscale ramp:",    Images.c_gray_ramp;[39m
     [38;5;2m8663[39m: [38;5;2m     1597:        56:     "24bit:",             Images.c_rainbow (w - 2) 1;[39m
     [38;5;2m8664[39m: [38;5;2m     1598:        57:     "Text styles:",       attr[39m
     [38;5;2m8665[39m: [38;5;2m     1599:        58:   ][39m
     [38;5;2m8666[39m: [38;5;2m     1600:        59: [39m
     [38;5;2m8667[39m: [38;5;2m     1601:        60: let () = Notty_unix.output_image_size @@ fun (w, _) -> image w[39m
     [38;5;2m8668[39m: [38;5;2m     1602: Added regular file ../notty/examples/common.ml:[39m
     [38;5;2m8669[39m: [38;5;2m     1603:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m8670[39m: [38;5;2m     1604:         2:    See LICENSE.md. *)[39m
     [38;5;2m8671[39m: [38;5;2m     1605:         3: [39m
     [38;5;2m8672[39m: [38;5;2m     1606:         4: open Notty[39m
     [38;5;2m8673[39m: [38;5;2m     1607:         5: open Notty.Infix[39m
     [38;5;2m8674[39m: [38;5;2m     1608:         6: [39m
     [38;5;2m8675[39m: [38;5;2m     1609:         7: let pow n e = int_of_float (float n ** float e)[39m
     [38;5;2m8676[39m: [38;5;2m     1610:         8: [39m
     [38;5;2m8677[39m: [38;5;2m     1611:         9: module List = struct[39m
     [38;5;2m8678[39m: [38;5;2m     1612:        10: [39m
     [38;5;2m8679[39m: [38;5;2m     1613:        11:   include List[39m
     [38;5;2m8680[39m: [38;5;2m     1614:        12: [39m
     [38;5;2m8681[39m: [38;5;2m     1615:        13:   let rec replicate n a = if n < 1 then [] else a :: replicate (n - 1) a[39m
     [38;5;2m8682[39m: [38;5;2m     1616:        14: [39m
     [38;5;2m8683[39m: [38;5;2m     1617:        15:   let rec range a b = if a > b then [] else a :: range (a + 1) b[39m
     [38;5;2m8684[39m: [38;5;2m     1618:        16: [39m
     [38;5;2m8685[39m: [38;5;2m     1619:        17:   let rec intersperse a = function[39m
     [38;5;2m8686[39m: [38;5;2m     1620:        18:     | [] | [_] as t -> t[39m
     [38;5;2m8687[39m: [38;5;2m     1621:        19:     | x::xs         -> x :: a :: intersperse a xs[39m
     [38;5;2m8688[39m: [38;5;2m     1622:        20: [39m
     [38;5;2m8689[39m: [38;5;2m     1623:        21:   let rec take n = function[39m
     [38;5;2m8690[39m: [38;5;2m     1624:        22:     | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m8691[39m: [38;5;2m     1625:        23:     | _ -> [][39m
     [38;5;2m8692[39m: [38;5;2m     1626:        24: [39m
     [38;5;2m8693[39m: [38;5;2m     1627:        25:   let rec splitat n = function[39m
     [38;5;2m8694[39m: [38;5;2m     1628:        26:     | x::xs when n > 0 ->[39m
     [38;5;2m8695[39m: [38;5;2m     1629:        27:         let (a, b) = splitat (pred n) xs in (x::a, b)[39m
     [38;5;2m8696[39m: [38;5;2m     1630:        28:     | xs -> ([], xs)[39m
     [38;5;2m8697[39m: [38;5;2m     1631:        29: [39m
     [38;5;2m8698[39m: [38;5;2m     1632:        30:   let rec chunks n xs =[39m
     [38;5;2m8699[39m: [38;5;2m     1633:        31:     match splitat n xs with[39m
     [38;5;2m8700[39m: [38;5;2m     1634:        32:     | (a, []) -> [a][39m
     [38;5;2m8701[39m: [38;5;2m     1635:        33:     | (a, b)  -> a :: chunks n b[39m
     [38;5;2m8702[39m: [38;5;2m     1636:        34: [39m
     [38;5;2m8703[39m: [38;5;2m     1637:        35:   let rec zip xs ys = match (xs, ys) with[39m
     [38;5;2m8704[39m: [38;5;2m     1638:        36:     | ([], _) | (_, []) -> [][39m
     [38;5;2m8705[39m: [38;5;2m     1639:        37:     | (x::xs, y::ys) -> (x, y) :: zip xs ys[39m
     [38;5;2m8706[39m: [38;5;2m     1640:        38: [39m
     [38;5;2m8707[39m: [38;5;2m     1641:        39: end[39m
     [38;5;2m8708[39m: [38;5;2m     1642:        40: [39m
     [38;5;2m8709[39m: [38;5;2m     1643:        41: module String = struct[39m
     [38;5;2m8710[39m: [38;5;2m     1644:        42: [39m
     [38;5;2m8711[39m: [38;5;2m     1645:        43:   include String[39m
     [38;5;2m8712[39m: [38;5;2m     1646:        44: [39m
     [38;5;2m8713[39m: [38;5;2m     1647:        45:   let repeat n str =[39m
     [38;5;2m8714[39m: [38;5;2m     1648:        46:     let b = Buffer.create 16 in[39m
     [38;5;2m8715[39m: [38;5;2m     1649:        47:     for _ = 1 to n do Buffer.add_string b str done;[39m
     [38;5;2m8716[39m: [38;5;2m     1650:        48:     Buffer.contents b[39m
     [38;5;2m8717[39m: [38;5;2m     1651:        49: end[39m
     [38;5;2m8718[39m: [38;5;2m     1652:        50: [39m
     [38;5;2m8719[39m: [38;5;2m     1653:        51: let tile w h i = I.tabulate w h (fun _ _ -> i)[39m
     [38;5;2m8720[39m: [38;5;2m     1654:        52: [39m
     [38;5;2m8721[39m: [38;5;2m     1655:        53: (** A few images used in several places. *)[39m
     [38;5;2m8722[39m: [38;5;2m     1656:        54: module Images = struct[39m
     [38;5;2m8723[39m: [38;5;2m     1657:        55: [39m
     [38;5;2m8724[39m: [38;5;2m     1658:        56:   let i1 =[39m
     [38;5;2m8725[39m: [38;5;2m     1659:        57:     I.(string A.(fg lightblack) "omgbbq" <->[39m
     [38;5;2m8726[39m: [38;5;2m     1660:        58:        string A.(fg white ++ bg red) "@")[39m
     [38;5;2m8727[39m: [38;5;2m     1661:        59:     <|> I.(pad ~t:2 @@ string A.(fg green) "xo")[39m
     [38;5;2m8728[39m: [38;5;2m     1662:        60: [39m
     [38;5;2m8729[39m: [38;5;2m     1663:        61:   let i2 = I.(hpad 1 1 (hcrop 1 1 @@ tile 3 3 i1) <|> i1)[39m
     [38;5;2m8730[39m: [38;5;2m     1664:        62: [39m
     [38;5;2m8731[39m: [38;5;2m     1665:        63:   let i3 = tile 5 5 i2[39m
     [38;5;2m8732[39m: [38;5;2m     1666:        64: [39m
     [38;5;2m8733[39m: [38;5;2m     1667:        65:   let i4 =[39m
     [38;5;2m8734[39m: [38;5;2m     1668:        66:     let i = I.(i3 <|> crop ~t:1 i3 <|> i3) in[39m
     [38;5;2m8735[39m: [38;5;2m     1669:        67:     I.(crop ~l:1 i <-> crop ~r:1 i <-> crop ~b:2 i)[39m
     [38;5;2m8736[39m: [38;5;2m     1670:        68: [39m
     [38;5;2m8737[39m: [38;5;2m     1671:        69:   let i5 =[39m
     [38;5;2m8738[39m: [38;5;2m     1672:        70:     tile 5 1 List.([39m
     [38;5;2m8739[39m: [38;5;2m     1673:        71:       range 0 15 |> map (fun i -> I.pad ~t:i ~l:(i*2) i2) |> I.zcat[39m
     [38;5;2m8740[39m: [38;5;2m     1674:        72:     )[39m
     [38;5;2m8741[39m: [38;5;2m     1675:        73: [39m
     [38;5;2m8742[39m: [38;5;2m     1676:        74:   let c_gray_ramp =[39m
     [38;5;2m8743[39m: [38;5;2m     1677:        75:     I.tabulate 24 1 (fun g _ -> I.string A.(bg (gray g)) " ")[39m
     [38;5;2m8744[39m: [38;5;2m     1678:        76: [39m
     [38;5;2m8745[39m: [38;5;2m     1679:        77:   let c_cube_ix =[39m
     [38;5;2m8746[39m: [38;5;2m     1680:        78:     I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m8747[39m: [38;5;2m     1681:        79:       I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m8748[39m: [38;5;2m     1682:        80:         I.string A.(bg (rgb ~r ~g ~b)) " "[39m
     [38;5;2m8749[39m: [38;5;2m     1683:        81: [39m
     [38;5;2m8750[39m: [38;5;2m     1684:        82:   let c_cube_rgb =[39m
     [38;5;2m8751[39m: [38;5;2m     1685:        83:     let f x = [| 0x00; 0x5f; 0x87; 0xaf; 0xd7; 0xff |].(x) in[39m
     [38;5;2m8752[39m: [38;5;2m     1686:        84:     I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m8753[39m: [38;5;2m     1687:        85:       I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m8754[39m: [38;5;2m     1688:        86:         I.string A.(bg (rgb_888 ~r:(f r) ~g:(f g) ~b:(f b))) " "[39m
     [38;5;2m8755[39m: [38;5;2m     1689:        87: [39m
     [38;5;2m8756[39m: [38;5;2m     1690:        88:   let c_rainbow w h =[39m
     [38;5;2m8757[39m: [38;5;2m     1691:        89:     let pi2     = 2. *. 3.14159 in[39m
     [38;5;2m8758[39m: [38;5;2m     1692:        90:     let pi2_3   = pi2 /. 3.[39m
     [38;5;2m8759[39m: [38;5;2m     1693:        91:     and f t off = sin (t +. off) *. 128. +. 128. |> truncate in[39m
     [38;5;2m8760[39m: [38;5;2m     1694:        92:     let color t = A.rgb_888 ~r:(f t (-.pi2_3)) ~g:(f t 0.) ~b:(f t pi2_3) in[39m
     [38;5;2m8761[39m: [38;5;2m     1695:        93:     I.tabulate (w - 1) 1 @@ fun x _ ->[39m
     [38;5;2m8762[39m: [38;5;2m     1696:        94:       let t = (pi2 *. float x /. float w) +. 3.7 in[39m
     [38;5;2m8763[39m: [38;5;2m     1697:        95:       I.char A.(bg (color t)) ' ' 1 h[39m
     [38;5;2m8764[39m: [38;5;2m     1698:        96: [39m
     [38;5;2m8765[39m: [38;5;2m     1699:        97:   (* U+25CF BLACK CIRCLE *)[39m
     [38;5;2m8766[39m: [38;5;2m     1700:        98:   let dot color = I.string (A.fg color) "●"[39m
     [38;5;2m8767[39m: [38;5;2m     1701:        99:   (* U+25AA BLACK SMALL SQUARE *)[39m
     [38;5;2m8768[39m: [38;5;2m     1702:       100:   let square color = I.string (A.fg color) "▪"[39m
     [38;5;2m8769[39m: [38;5;2m     1703:       101: [39m
     [38;5;2m8770[39m: [38;5;2m     1704:       102:   let rec cantor = function[39m
     [38;5;2m8771[39m: [38;5;2m     1705:       103:     | 0 -> square A.lightblue[39m
     [38;5;2m8772[39m: [38;5;2m     1706:       104:     | n ->[39m
     [38;5;2m8773[39m: [38;5;2m     1707:       105:         let sub = cantor (pred n) in[39m
     [38;5;2m8774[39m: [38;5;2m     1708:       106:         I.hcat (List.replicate (pow 3 n) (square A.lightblue)) <->[39m
     [38;5;2m8775[39m: [38;5;2m     1709:       107:         (sub <|> I.void (pow 3 (n - 1)) 0 <|> sub)[39m
     [38;5;2m8776[39m: [38;5;2m     1710:       108: [39m
     [38;5;2m8777[39m: [38;5;2m     1711:       109:   let checker n m i =[39m
     [38;5;2m8778[39m: [38;5;2m     1712:       110:     let w = I.width i in[39m
     [38;5;2m8779[39m: [38;5;2m     1713:       111:     I.(tile (n/2) (m/2) (hpad 0 w i <-> hpad w 0 i))[39m
     [38;5;2m8780[39m: [38;5;2m     1714:       112: [39m
     [38;5;2m8781[39m: [38;5;2m     1715:       113:   let checker1 = checker 20 20 I.(char A.(bg magenta) ' ' 2 1)[39m
     [38;5;2m8782[39m: [38;5;2m     1716:       114: [39m
     [38;5;2m8783[39m: [38;5;2m     1717:       115:   let rec sierp c n = I.([39m
     [38;5;2m8784[39m: [38;5;2m     1718:       116:     if n > 1 then[39m
     [38;5;2m8785[39m: [38;5;2m     1719:       117:       let ss = sierp c (pred n) in ss <-> (ss <|> ss)[39m
     [38;5;2m8786[39m: [38;5;2m     1720:       118:     else hpad 1 0 (square c)[39m
     [38;5;2m8787[39m: [38;5;2m     1721:       119:   )[39m
     [38;5;2m8788[39m: [38;5;2m     1722:       120: [39m
     [38;5;2m8789[39m: [38;5;2m     1723:       121:   let grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m8790[39m: [38;5;2m     1724:       122: [39m
     [38;5;2m8791[39m: [38;5;2m     1725:       123:   let outline attr i =[39m
     [38;5;2m8792[39m: [38;5;2m     1726:       124:     let (w, h) = I.(width i, height i) in[39m
     [38;5;2m8793[39m: [38;5;2m     1727:       125:     let chr x = I.uchar attr (Uchar.of_int x) 1 1[39m
     [38;5;2m8794[39m: [38;5;2m     1728:       126:     and hbar  = I.uchar attr (Uchar.of_int 0x2500) w 1[39m
     [38;5;2m8795[39m: [38;5;2m     1729:       127:     and vbar  = I.uchar attr (Uchar.of_int 0x2502) 1 h in[39m
     [38;5;2m8796[39m: [38;5;2m     1730:       128:     let (a, b, c, d) = (chr 0x256d, chr 0x256e, chr 0x256f, chr 0x2570) in[39m
     [38;5;2m8797[39m: [38;5;2m     1731:       129:     grid [ [a; hbar; b]; [vbar; i; vbar]; [d; hbar; c] ][39m
     [38;5;2m8798[39m: [38;5;2m     1732:       130: end[39m
     [38;5;2m8799[39m: [38;5;2m     1733:       131: [39m
     [38;5;2m8800[39m: [38;5;2m     1734:       132: let halfblock = "▄"[39m
     [38;5;2m8801[39m: [38;5;2m     1735:       133: [39m
     [38;5;2m8802[39m: [38;5;2m     1736:       134: let pxmatrix w h f = I.tabulate w h @@ fun x y ->[39m
     [38;5;2m8803[39m: [38;5;2m     1737:       135:   let y = y * 2 in[39m
     [38;5;2m8804[39m: [38;5;2m     1738:       136:   I.string A.(bg (f x y) ++ fg (f x (y + 1))) halfblock[39m
     [38;5;2m8805[39m: [38;5;2m     1739:       137: [39m
     [38;5;2m8806[39m: [38;5;2m     1740:       138: module Term = Notty_unix.Term[39m
     [38;5;2m8807[39m: [38;5;2m     1741:       139: [39m
     [38;5;2m8808[39m: [38;5;2m     1742:       140: let simpleterm ~imgf ~f ~s =[39m
     [38;5;2m8809[39m: [38;5;2m     1743:       141:   let term = Term.create () in[39m
     [38;5;2m8810[39m: [38;5;2m     1744:       142:   let imgf (w, h) s =[39m
     [38;5;2m8811[39m: [38;5;2m     1745:       143:     I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m8812[39m: [38;5;2m     1746:       144:   let rec go s =[39m
     [38;5;2m8813[39m: [38;5;2m     1747:       145:     Term.image term (imgf (Term.size term) s);[39m
     [38;5;2m8814[39m: [38;5;2m     1748:       146:     match Term.event term with[39m
     [38;5;2m8815[39m: [38;5;2m     1749:       147:     | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m8816[39m: [38;5;2m     1750:       148:     | `Resize _ -> go s[39m
     [38;5;2m8817[39m: [38;5;2m     1751:       149:     | #Unescape.event as e ->[39m
     [38;5;2m8818[39m: [38;5;2m     1752:       150:         match f s e with Some s -> go s | _ -> ()[39m
     [38;5;2m8819[39m: [38;5;2m     1753:       151:   in go s[39m
     [38;5;2m8820[39m: [38;5;2m     1754: Added regular file ../notty/examples/common_lwt.ml:[39m
     [38;5;2m8821[39m: [38;5;2m     1755:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m8822[39m: [38;5;2m     1756:         2:    See LICENSE.md. *)[39m
     [38;5;2m8823[39m: [38;5;2m     1757:         3: [39m
     [38;5;2m8824[39m: [38;5;2m     1758:         4: open Notty[39m
     [38;5;2m8825[39m: [38;5;2m     1759:         5: open Lwt.Infix[39m
     [38;5;2m8826[39m: [38;5;2m     1760:         6: [39m
     [38;5;2m8827[39m: [38;5;2m     1761:         7: include Common[39m
     [38;5;2m8828[39m: [38;5;2m     1762:         8: [39m
     [38;5;2m8829[39m: [38;5;2m     1763:         9: module T = Notty_lwt.Term[39m
     [38;5;2m8830[39m: [38;5;2m     1764:        10: [39m
     [38;5;2m8831[39m: [38;5;2m     1765:        11: let simpleterm_lwt ~imgf ~f ~s =[39m
     [38;5;2m8832[39m: [38;5;2m     1766:        12:   let term = T.create () in[39m
     [38;5;2m8833[39m: [38;5;2m     1767:        13:   let imgf (w, h) s =[39m
     [38;5;2m8834[39m: [38;5;2m     1768:        14:     I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m8835[39m: [38;5;2m     1769:        15:   let step e s = match e with[39m
     [38;5;2m8836[39m: [38;5;2m     1770:        16:     | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m8837[39m: [38;5;2m     1771:        17:         T.release term >|= fun () -> s[39m
     [38;5;2m8838[39m: [38;5;2m     1772:        18:     | `Resize dim -> T.image term (imgf dim s) >|= fun () -> s[39m
     [38;5;2m8839[39m: [38;5;2m     1773:        19:     | #Unescape.event as e ->[39m
     [38;5;2m8840[39m: [38;5;2m     1774:        20:         match f s e with[39m
     [38;5;2m8841[39m: [38;5;2m     1775:        21:         | Some s -> T.image term (imgf (T.size term) s) >|= fun () -> s[39m
     [38;5;2m8842[39m: [38;5;2m     1776:        22:         | None   -> T.release term >|= fun () -> s[39m
     [38;5;2m8843[39m: [38;5;2m     1777:        23:   in[39m
     [38;5;2m8844[39m: [38;5;2m     1778:        24:   ( T.image term (imgf (T.size term) s)[39m
     [38;5;2m8845[39m: [38;5;2m     1779:        25:     >>= fun () -> Lwt_stream.fold_s step (T.events term) s )[39m
     [38;5;2m8846[39m: [38;5;2m     1780:        26:   |> Lwt_main.run |> ignore[39m
     [38;5;2m8847[39m: [38;5;2m     1781:        27: [39m
     [38;5;2m8848[39m: [38;5;2m     1782:        28: [39m
     [38;5;2m8849[39m: [38;5;2m     1783:        29: let timer = function[39m
     [38;5;2m8850[39m: [38;5;2m     1784:        30:   | None   -> Lwt.wait () |> fst[39m
     [38;5;2m8851[39m: [38;5;2m     1785:        31:   | Some t -> Lwt_unix.sleep t >|= fun _ -> `Timer[39m
     [38;5;2m8852[39m: [38;5;2m     1786:        32: [39m
     [38;5;2m8853[39m: [38;5;2m     1787:        33: let event e = Lwt_stream.get (T.events e) >|= function[39m
     [38;5;2m8854[39m: [38;5;2m     1788:        34:   | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m8855[39m: [38;5;2m     1789:        35:   | None -> `End[39m
     [38;5;2m8856[39m: [38;5;2m     1790:        36: [39m
     [38;5;2m8857[39m: [38;5;2m     1791:        37: let simpleterm_lwt_timed ?delay ~f s0 =[39m
     [38;5;2m8858[39m: [38;5;2m     1792:        38:   let term = T.create () in[39m
     [38;5;2m8859[39m: [38;5;2m     1793:        39:   let rec loop (e, t) dim s =[39m
     [38;5;2m8860[39m: [38;5;2m     1794:        40:     (e <?> t) >>= function[39m
     [38;5;2m8861[39m: [38;5;2m     1795:        41:     | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m8862[39m: [38;5;2m     1796:        42:         Lwt.return_unit[39m
     [38;5;2m8863[39m: [38;5;2m     1797:        43:     | `Resize dim as evt     -> invoke (event term, t) dim s evt[39m
     [38;5;2m8864[39m: [38;5;2m     1798:        44:     | #Unescape.event as evt -> invoke (event term, t) dim s evt[39m
     [38;5;2m8865[39m: [38;5;2m     1799:        45:     | `Timer as evt          -> invoke (e, timer delay) dim s evt[39m
     [38;5;2m8866[39m: [38;5;2m     1800:        46:   and invoke es dim s e =[39m
     [38;5;2m8867[39m: [38;5;2m     1801:        47:     match f dim s e with[39m
     [38;5;2m8868[39m: [38;5;2m     1802:        48:     | `Continue s    -> loop es dim s[39m
     [38;5;2m8869[39m: [38;5;2m     1803:        49:     | `Redraw (s, i) -> T.image term i >>= fun () -> loop es dim s[39m
     [38;5;2m8870[39m: [38;5;2m     1804:        50:     | `Stop          -> Lwt.return_unit in[39m
     [38;5;2m8871[39m: [38;5;2m     1805:        51:   let size = T.size term in[39m
     [38;5;2m8872[39m: [38;5;2m     1806:        52:   loop (event term, timer delay) size s0[39m
     [38;5;2m8873[39m: [38;5;2m     1807: Added regular file ../notty/examples/crops.ml:[39m
     [38;5;2m8874[39m: [38;5;2m     1808:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m8875[39m: [38;5;2m     1809:         2:    See LICENSE.md. *)[39m
     [38;5;2m8876[39m: [38;5;2m     1810:         3: [39m
     [38;5;2m8877[39m: [38;5;2m     1811:         4: (**[39m
     [38;5;2m8878[39m: [38;5;2m     1812:         5:  * Demonstrates edge-case behavior of functions that produce rectangle-like[39m
     [38;5;2m8879[39m: [38;5;2m     1813:         6:  * things.[39m
     [38;5;2m8880[39m: [38;5;2m     1814:         7:  *)[39m
     [38;5;2m8881[39m: [38;5;2m     1815:         8: open Notty[39m
     [38;5;2m8882[39m: [38;5;2m     1816:         9: open Common[39m
     [38;5;2m8883[39m: [38;5;2m     1817:        10: [39m
     [38;5;2m8884[39m: [38;5;2m     1818:        11: let hdistribute ?align w imgs =[39m
     [38;5;2m8885[39m: [38;5;2m     1819:        12:   let n = List.length imgs in[39m
     [38;5;2m8886[39m: [38;5;2m     1820:        13:   I.(List.map (hsnap ?align (w / n)) imgs |> hcat)[39m
     [38;5;2m8887[39m: [38;5;2m     1821:        14: [39m
     [38;5;2m8888[39m: [38;5;2m     1822:        15: let take w h i = I.(vsnap h i |> hsnap w)[39m
     [38;5;2m8889[39m: [38;5;2m     1823:        16: [39m
     [38;5;2m8890[39m: [38;5;2m     1824:        17: let () =[39m
     [38;5;2m8891[39m: [38;5;2m     1825:        18:   simpleterm ~s:(2, 2)[39m
     [38;5;2m8892[39m: [38;5;2m     1826:        19:     ~f:(fun (w, h as s) -> function[39m
     [38;5;2m8893[39m: [38;5;2m     1827:        20:         `Key (`Arrow `Left, _) -> Some (w - 1, h)[39m
     [38;5;2m8894[39m: [38;5;2m     1828:        21:       | `Key (`Arrow `Right, _) -> Some (w + 1, h)[39m
     [38;5;2m8895[39m: [38;5;2m     1829:        22:       | `Key (`Arrow `Up, _) -> Some (w, h - 1)[39m
     [38;5;2m8896[39m: [38;5;2m     1830:        23:       | `Key (`Arrow `Down, _) -> Some (w, h + 1)[39m
     [38;5;2m8897[39m: [38;5;2m     1831:        24:       | `Key (`ASCII '0', _) -> Some (0, 0)[39m
     [38;5;2m8898[39m: [38;5;2m     1832:        25:       | _ -> Some s)[39m
     [38;5;2m8899[39m: [38;5;2m     1833:        26:     ~imgf:I.(fun (ow, oh) (w, h) ->[39m
     [38;5;2m8900[39m: [38;5;2m     1834:        27:       let (a1, a2, a3) = A.(fg lightmagenta, fg lightred, fg lightblue) in[39m
     [38;5;2m8901[39m: [38;5;2m     1835:        28:       strf "Sizing edge behavior. Dim: (%d, %d)" w h <->[39m
     [38;5;2m8902[39m: [38;5;2m     1836:        29:       ( hdistribute ow Images.[[39m
     [38;5;2m8903[39m: [38;5;2m     1837:        30:           outline a1 (uchar a1 (Uchar.of_int 0x2022) w h)[39m
     [38;5;2m8904[39m: [38;5;2m     1838:        31:         ; outline a2 (uchar a2 (Uchar.of_int 0x2022) 300 300 |> take w h)[39m
     [38;5;2m8905[39m: [38;5;2m     1839:        32:         ; outline a3 (void w h)[39m
     [38;5;2m8906[39m: [38;5;2m     1840:        33:         ] |> vsnap (oh - 4) )[39m
     [38;5;2m8907[39m: [38;5;2m     1841:        34:       <->[39m
     [38;5;2m8908[39m: [38;5;2m     1842:        35:       hdistribute ow [string a1 "char"; string a2 "crop"; string a3 "void"][39m
     [38;5;2m8909[39m: [38;5;2m     1843:        36:     )[39m
     [38;5;2m8910[39m: [38;5;2m     1844: Added regular file ../notty/examples/cursor.ml:[39m
     [38;5;2m8911[39m: [38;5;2m     1845:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m8912[39m: [38;5;2m     1846:         2:    See LICENSE.md. *)[39m
     [38;5;2m8913[39m: [38;5;2m     1847:         3: [39m
     [38;5;2m8914[39m: [38;5;2m     1848:         4: open Notty[39m
     [38;5;2m8915[39m: [38;5;2m     1849:         5: open Common[39m
     [38;5;2m8916[39m: [38;5;2m     1850:         6: [39m
     [38;5;2m8917[39m: [38;5;2m     1851:         7: let rec main t (x, y as pos) =[39m
     [38;5;2m8918[39m: [38;5;2m     1852:         8:   let img =[39m
     [38;5;2m8919[39m: [38;5;2m     1853:         9:     let dot = I.string A.(bg lightred ++ fg black) "✓" |> I.pad ~l:x ~t:y[39m
     [38;5;2m8920[39m: [38;5;2m     1854:        10:     and txt = I.strf ~attr:A.(fg lightblack) "@(%d, %d)" x y in[39m
     [38;5;2m8921[39m: [38;5;2m     1855:        11:     I.(txt </> dot) in[39m
     [38;5;2m8922[39m: [38;5;2m     1856:        12:   Term.image t img;[39m
     [38;5;2m8923[39m: [38;5;2m     1857:        13:   Term.cursor t (Some pos);[39m
     [38;5;2m8924[39m: [38;5;2m     1858:        14:   match Term.event t with[39m
     [38;5;2m8925[39m: [38;5;2m     1859:        15:   | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m8926[39m: [38;5;2m     1860:        16:   | `Resize _ -> main t pos[39m
     [38;5;2m8927[39m: [38;5;2m     1861:        17:   | `Mouse ((`Press _ | `Drag), pos, _) -> main t pos[39m
     [38;5;2m8928[39m: [38;5;2m     1862:        18:   | `Key (`Arrow d, _) ->[39m
     [38;5;2m8929[39m: [38;5;2m     1863:        19:     ( main t @@ match d with[39m
     [38;5;2m8930[39m: [38;5;2m     1864:        20:       | `Up    -> (x, y - 1)[39m
     [38;5;2m8931[39m: [38;5;2m     1865:        21:       | `Down  -> (x, y + 1)[39m
     [38;5;2m8932[39m: [38;5;2m     1866:        22:       | `Left  -> (x - 1, y)[39m
     [38;5;2m8933[39m: [38;5;2m     1867:        23:       | `Right -> (x + 1, y) )[39m
     [38;5;2m8934[39m: [38;5;2m     1868:        24:   | _ -> main t pos[39m
     [38;5;2m8935[39m: [38;5;2m     1869:        25: [39m
     [38;5;2m8936[39m: [38;5;2m     1870:        26: let () = main (Term.create ()) (0, 1)[39m
     [38;5;2m8937[39m: [38;5;2m     1871: Added regular file ../notty/examples/cuts.ml:[39m
     [38;5;2m8938[39m: [38;5;2m     1872:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m8939[39m: [38;5;2m     1873:         2:    See LICENSE.md. *)[39m
     [38;5;2m8940[39m: [38;5;2m     1874:         3: [39m
     [38;5;2m8941[39m: [38;5;2m     1875:         4: (**[39m
     [38;5;2m8942[39m: [38;5;2m     1876:         5:  * Demonstrates text cropping, particularly of grapheme clusters and wide[39m
     [38;5;2m8943[39m: [38;5;2m     1877:         6:  * characters.[39m
     [38;5;2m8944[39m: [38;5;2m     1878:         7:  *)[39m
     [38;5;2m8945[39m: [38;5;2m     1879:         8: open Notty[39m
     [38;5;2m8946[39m: [38;5;2m     1880:         9: open Notty_unix[39m
     [38;5;2m8947[39m: [38;5;2m     1881:        10: open Common[39m
     [38;5;2m8948[39m: [38;5;2m     1882:        11: [39m
     [38;5;2m8949[39m: [38;5;2m     1883:        12: let hpadwith attr c a b i =[39m
     [38;5;2m8950[39m: [38;5;2m     1884:        13:   I.(char attr c a 1 <|> i <|> char attr c b 1)[39m
     [38;5;2m8951[39m: [38;5;2m     1885:        14: [39m
     [38;5;2m8952[39m: [38;5;2m     1886:        15: let cuts i =[39m
     [38;5;2m8953[39m: [38;5;2m     1887:        16:   let w = I.width i in[39m
     [38;5;2m8954[39m: [38;5;2m     1888:        17:   List.([39m
     [38;5;2m8955[39m: [38;5;2m     1889:        18:     range 0 w |> map (fun a ->[39m
     [38;5;2m8956[39m: [38;5;2m     1890:        19:       range 0 (w - a) |> map (fun b ->[39m
     [38;5;2m8957[39m: [38;5;2m     1891:        20:         i |> I.hcrop a b |> hpadwith A.(fg lightblack) '.' a b[39m
     [38;5;2m8958[39m: [38;5;2m     1892:        21:       ) |> I.vcat |> I.hpad 1 1[39m
     [38;5;2m8959[39m: [38;5;2m     1893:        22:     ) |> I.hcat |> I.vpad 1 1[39m
     [38;5;2m8960[39m: [38;5;2m     1894:        23:   )[39m
     [38;5;2m8961[39m: [38;5;2m     1895:        24: [39m
     [38;5;2m8962[39m: [38;5;2m     1896:        25: let colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m8963[39m: [38;5;2m     1897:        26: [39m
     [38;5;2m8964[39m: [38;5;2m     1898:        27: let patterns = [[39m
     [38;5;2m8965[39m: [38;5;2m     1899:        28:   "desu"[39m
     [38;5;2m8966[39m: [38;5;2m     1900:        29: ; ".▪e\204\129●."[39m
     [38;5;2m8967[39m: [38;5;2m     1901:        30: ; "(茶‸茶‶)"[39m
     [38;5;2m8968[39m: [38;5;2m     1902:        31: ; "(⌐■_■)"[39m
     [38;5;2m8969[39m: [38;5;2m     1903:        32: (* ; "¯\\(ツ)/¯" *)[39m
     [38;5;2m8970[39m: [38;5;2m     1904:        33: (* ; "ಠ_ಠ" *)[39m
     [38;5;2m8971[39m: [38;5;2m     1905:        34: (* ; "ಡ_ಡ" *)[39m
     [38;5;2m8972[39m: [38;5;2m     1906:        35: (* ; "\xe0\xb2\xa0\x5f\xe0\xb1\x83" *)[39m
     [38;5;2m8973[39m: [38;5;2m     1907:        36: (* ; "ತಎತ" *)[39m
     [38;5;2m8974[39m: [38;5;2m     1908:        37: (* ; "ಥ_ಥ" *)[39m
     [38;5;2m8975[39m: [38;5;2m     1909:        38: ; "ᕕ( ᐛ )ᕗ"[39m
     [38;5;2m8976[39m: [38;5;2m     1910:        39: (* ; "ᕙ(⇀‸↼‶)ᕗ" *)[39m
     [38;5;2m8977[39m: [38;5;2m     1911:        40: (* ; "ᕦ(ò_óˇ)ᕤ" *)[39m
     [38;5;2m8978[39m: [38;5;2m     1912:        41: (* ; "(╯ ︵╰ )" *)[39m
     [38;5;2m8979[39m: [38;5;2m     1913:        42: (* ; "\x28\x20\xcd\xa1\xc2\xb0\x20\xcd\x9c\xca\x96\x20\xcd\xa1\xc2\xb0\x29" *)[39m
     [38;5;2m8980[39m: [38;5;2m     1914:        43: ][39m
     [38;5;2m8981[39m: [38;5;2m     1915:        44: [39m
     [38;5;2m8982[39m: [38;5;2m     1916:        45: [39m
     [38;5;2m8983[39m: [38;5;2m     1917:        46: let () =[39m
     [38;5;2m8984[39m: [38;5;2m     1918:        47:   let open I in[39m
     [38;5;2m8985[39m: [38;5;2m     1919:        48: [39m
     [38;5;2m8986[39m: [38;5;2m     1920:        49:   patterns |> List.map (fun s ->[39m
     [38;5;2m8987[39m: [38;5;2m     1921:        50:     cuts (string A.(fg lightmagenta ++ bg lightblack) s)[39m
     [38;5;2m8988[39m: [38;5;2m     1922:        51:   ) |> I.vcat |> eol |> output_image ;[39m
     [38;5;2m8989[39m: [38;5;2m     1923:        52: [39m
     [38;5;2m8990[39m: [38;5;2m     1924:        53:   colors |> List.mapi (fun i c ->[39m
     [38;5;2m8991[39m: [38;5;2m     1925:        54:     pad ~l:i ~t:i ([39m
     [38;5;2m8992[39m: [38;5;2m     1926:        55:       string A.(fg black ++ bg c ++ st blink) "茶" <|>[39m
     [38;5;2m8993[39m: [38;5;2m     1927:        56:       pad ~l:2 ~t:1[39m
     [38;5;2m8994[39m: [38;5;2m     1928:        57:         (string A.(fg c ++ st blink) "PARTY!"))[39m
     [38;5;2m8995[39m: [38;5;2m     1929:        58:   ) |> zcat |> pad ~l:2 ~t:2 ~b:2 |> output_image[39m
     [38;5;2m8996[39m: [38;5;2m     1930: Added regular file ../notty/examples/dune:[39m
     [38;5;2m8997[39m: [38;5;2m     1931:         1: (library[39m
     [38;5;2m8998[39m: [38;5;2m     1932:         2:   (name common)[39m
     [38;5;2m8999[39m: [38;5;2m     1933:         3:   (modules common)[39m
     [38;5;2m9000[39m: [38;5;2m     1934:         4:   (libraries notty notty.unix))[39m
     [38;5;2m9001[39m: [38;5;2m     1935:         5: [39m
     [38;5;2m9002[39m: [38;5;2m     1936:         6: (library[39m
     [38;5;2m9003[39m: [38;5;2m     1937:         7:   (name common_lwt)[39m
     [38;5;2m9004[39m: [38;5;2m     1938:         8:   (modules common_lwt)[39m
     [38;5;2m9005[39m: [38;5;2m     1939:         9:   (libraries common notty.lwt))[39m
     [38;5;2m9006[39m: [38;5;2m     1940:        10: [39m
     [38;5;2m9007[39m: [38;5;2m     1941:        11: (executables[39m
     [38;5;2m9008[39m: [38;5;2m     1942:        12:   (names testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m9009[39m: [38;5;2m     1943:        13:          letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m9010[39m: [38;5;2m     1944:        14:          life)[39m
     [38;5;2m9011[39m: [38;5;2m     1945:        15:   (modules testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m9012[39m: [38;5;2m     1946:        16:            letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m9013[39m: [38;5;2m     1947:        17:            life)[39m
     [38;5;2m9014[39m: [38;5;2m     1948:        18:   (libraries common common_lwt))[39m
     [38;5;2m9015[39m: [38;5;2m     1949:        19: [39m
     [38;5;2m9016[39m: [38;5;2m     1950:        20: (alias[39m
     [38;5;2m9017[39m: [38;5;2m     1951:        21:   (name ex)[39m
     [38;5;2m9018[39m: [38;5;2m     1952:        22:   (package notty)[39m
     [38;5;2m9019[39m: [38;5;2m     1953:        23:   (deps testpatterns.exe colors.exe almondbread.exe crops.exe cursor.exe[39m
     [38;5;2m9020[39m: [38;5;2m     1954:        24:         cuts.exe emoji.exe inline.exe keys.exe letters.exe mouse.exe[39m
     [38;5;2m9021[39m: [38;5;2m     1955:        25:         thisbig.exe runes.exe sierpinski.exe rain.exe sierpinski_lwt.exe[39m
     [38;5;2m9022[39m: [38;5;2m     1956:        26:         linear.exe life.exe))[39m
     [38;5;2m9023[39m: [38;5;2m     1957: Added regular file ../notty/examples/emoji.ml:[39m
     [38;5;2m9024[39m: [38;5;2m     1958:         1: open Notty[39m
     [38;5;2m9025[39m: [38;5;2m     1959:         2: open Common[39m
     [38;5;2m9026[39m: [38;5;2m     1960:         3: [39m
     [38;5;2m9027[39m: [38;5;2m     1961:         4: let es = [[39m
     [38;5;2m9028[39m: [38;5;2m     1962:         5:   [0x2e; 0x2e; 0x2e; 0x2e];[39m
     [38;5;2m9029[39m: [38;5;2m     1963:         6:   [0x25aa; 0x25fe; 0x25fc; 0x2b1b];[39m
     [38;5;2m9030[39m: [38;5;2m     1964:         7:   [0x1f346; 0x1f351; 0x1f605; 0x1f4a6];[39m
     [38;5;2m9031[39m: [38;5;2m     1965:         8:   [0x1f62d; 0x1f52a; 0x1f52a; 0x1f47c];[39m
     [38;5;2m9032[39m: [38;5;2m     1966:         9: ][39m
     [38;5;2m9033[39m: [38;5;2m     1967:        10: [39m
     [38;5;2m9034[39m: [38;5;2m     1968:        11: let image =[39m
     [38;5;2m9035[39m: [38;5;2m     1969:        12:   es |> List.(map (map @@ fun x ->[39m
     [38;5;2m9036[39m: [38;5;2m     1970:        13:     let i = I.uchar A.(fg lightwhite) (Uchar.of_int x) 1 1 in[39m
     [38;5;2m9037[39m: [38;5;2m     1971:        14:     I.(pad ~r:(3 - width i) i)[39m
     [38;5;2m9038[39m: [38;5;2m     1972:        15:   )) |> Images.grid |> I.pad ~l:1 |> Images.outline A.(fg lightblack)[39m
     [38;5;2m9039[39m: [38;5;2m     1973:        16: [39m
     [38;5;2m9040[39m: [38;5;2m     1974:        17: let () = Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m9041[39m: [38;5;2m     1975:        18:   I.(pad ~l:((w - width image) / 2) ~b:1 image)[39m
     [38;5;2m9042[39m: [38;5;2m     1976: Added regular file ../notty/examples/inline.ml:[39m
     [38;5;2m9043[39m: [38;5;2m     1977:         1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9044[39m: [38;5;2m     1978:         2:    See LICENSE.md. *)[39m
     [38;5;2m9045[39m: [38;5;2m     1979:         3: [39m
     [38;5;2m9046[39m: [38;5;2m     1980:         4: (** Demonstrates manual cursor positioning. *)[39m
     [38;5;2m9047[39m: [38;5;2m     1981:         5: [39m
     [38;5;2m9048[39m: [38;5;2m     1982:         6: open Notty[39m
     [38;5;2m9049[39m: [38;5;2m     1983:         7: open Notty.Infix[39m
     [38;5;2m9050[39m: [38;5;2m     1984:         8: open Notty_unix[39m
     [38;5;2m9051[39m: [38;5;2m     1985:         9: [39m
     [38;5;2m9052[39m: [38;5;2m     1986:        10: let sleep n = flush stdout; Unix.select [] [] [] n |> ignore[39m
     [38;5;2m9053[39m: [38;5;2m     1987:        11: [39m
     [38;5;2m9054[39m: [38;5;2m     1988:        12: let pp_str attr = I.pp_attr attr Format.pp_print_string[39m
     [38;5;2m9055[39m: [38;5;2m     1989:        13: [39m
     [38;5;2m9056[39m: [38;5;2m     1990:        14: let rewind n = move_cursor `Home; move_cursor (`By (0, - (max n 0)))[39m
     [38;5;2m9057[39m: [38;5;2m     1991:        15: [39m
     [38;5;2m9058[39m: [38;5;2m     1992:        16: let output_subst ~prev i =[39m
     [38;5;2m9059[39m: [38;5;2m     1993:        17:   let h = I.height prev in[39m
     [38;5;2m9060[39m: [38;5;2m     1994:        18:   let d = h - I.height i in[39m
     [38;5;2m9061[39m: [38;5;2m     1995:        19:   if d > 0 then ( rewind (d - 1); output_image (I.void 0 d) );[39m
     [38;5;2m9062[39m: [38;5;2m     1996:        20:   rewind (h - 1); output_image i[39m
     [38;5;2m9063[39m: [38;5;2m     1997:        21: [39m
     [38;5;2m9064[39m: [38;5;2m     1998:        22: let cmyk = function[39m
     [38;5;2m9065[39m: [38;5;2m     1999:        23:   | 0 -> A.rgb ~r:0 ~g:5 ~b:5[39m
     [38;5;2m9066[39m: [38;5;2m     2000:        24:   | 1 -> A.rgb ~r:5 ~g:0 ~b:5[39m
     [38;5;2m9067[39m: [38;5;2m     2001:        25:   | 2 -> A.rgb ~r:5 ~g:5 ~b:0[39m
     [38;5;2m9068[39m: [38;5;2m     2002:        26:   | 3 -> A.rgb ~r:0 ~g:0 ~b:0[39m
     [38;5;2m9069[39m: [38;5;2m     2003:        27:   | _ -> A.rgb ~r:5 ~g:5 ~b:5[39m
     [38;5;2m9070[39m: [38;5;2m     2004:        28: [39m
     [38;5;2m9071[39m: [38;5;2m     2005:        29: let () =[39m
     [38;5;2m9072[39m: [38;5;2m     2006:        30: [39m
     [38;5;2m9073[39m: [38;5;2m     2007:        31:   let (w, h) = match winsize Unix.stdout with[39m
     [38;5;2m9074[39m: [38;5;2m     2008:        32:     Some dim -> dim | _ -> assert false[39m
     [38;5;2m9075[39m: [38;5;2m     2009:        33:   and attr = A.(fg lightwhite ++ bg blue) in[39m
     [38;5;2m9076[39m: [38;5;2m     2010:        34:   let img1 =[39m
     [38;5;2m9077[39m: [38;5;2m     2011:        35:     I.(string attr "THE BLUE STRIPE ABOVE" <->[39m
     [38;5;2m9078[39m: [38;5;2m     2012:        36:          tabulate 1 h (fun _ _ -> I.strf "HIDDEN"))[39m
     [38;5;2m9079[39m: [38;5;2m     2013:        37:   and img2 =[39m
     [38;5;2m9080[39m: [38;5;2m     2014:        38:     I.(strf "Top line. There's a %a above. ^^^"[39m
     [38;5;2m9081[39m: [38;5;2m     2015:        39:          (pp_str attr) "blue stripe" |> vpad 0 2) in[39m
     [38;5;2m9082[39m: [38;5;2m     2016:        40: [39m
     [38;5;2m9083[39m: [38;5;2m     2017:        41:   output_image img1; output_subst ~prev:img1 img2;[39m
     [38;5;2m9084[39m: [38;5;2m     2018:        42: [39m
     [38;5;2m9085[39m: [38;5;2m     2019:        43:   output_image I.(string A.(fg white) "[..]" |> eol);[39m
     [38;5;2m9086[39m: [38;5;2m     2020:        44:   for i = 0 to 5 do[39m
     [38;5;2m9087[39m: [38;5;2m     2021:        45:     let a  = A.(bg (rgb ~r:i ~b:(5 - i) ~g:0)) in[39m
     [38;5;2m9088[39m: [38;5;2m     2022:        46:     let bg = I.tabulate 1 i (fun _ -> I.strf "HIDDEN [%d]") |> eol[39m
     [38;5;2m9089[39m: [38;5;2m     2023:        47:     and fg = I.char a ' ' 19 (5 - i) <|> I.char a '-' 1 (5 - i) |> eol in[39m
     [38;5;2m9090[39m: [38;5;2m     2024:        48:     output_image bg; output_subst ~prev:bg fg;[39m
     [38;5;2m9091[39m: [38;5;2m     2025:        49:   done;[39m
     [38;5;2m9092[39m: [38;5;2m     2026:        50:   output_image I.(string A.(fg white) "[..]" |> vpad 0 2);[39m
     [38;5;2m9093[39m: [38;5;2m     2027:        51: [39m
     [38;5;2m9094[39m: [38;5;2m     2028:        52:   let rec go prev n =[39m
     [38;5;2m9095[39m: [38;5;2m     2029:        53:     if n <= w then[39m
     [38;5;2m9096[39m: [38;5;2m     2030:        54:       let h = log (float n) |> truncate in[39m
     [38;5;2m9097[39m: [38;5;2m     2031:        55:       let i = prev <|> I.tabulate 1 h (fun _ y -> I.char A.(bg (cmyk y)) ' ' 1 1) in[39m
     [38;5;2m9098[39m: [38;5;2m     2032:        56:       output_subst ~prev i; sleep 0.01; go i (n + 1)[39m
     [38;5;2m9099[39m: [38;5;2m     2033:        57:     else output_subst ~prev I.empty in[39m
     [38;5;2m9100[39m: [38;5;2m     2034:        58:   show_cursor false;[39m
     [38;5;2m9101[39m: [38;5;2m     2035:        59:   go I.empty 1;[39m
     [38;5;2m9102[39m: [38;5;2m     2036:        60:   show_cursor true;[39m
     [38;5;2m9103[39m: [38;5;2m     2037:        61: [39m
     [38;5;2m9104[39m: [38;5;2m     2038:        62:   output_image[39m
     [38;5;2m9105[39m: [38;5;2m     2039:        63:     I.(strf "It doesn't say %a anywhere on screen, either."[39m
     [38;5;2m9106[39m: [38;5;2m     2040:        64:         (pp_attr A.(fg white) Format.pp_print_string) "hidden" |> eol)[39m
     [38;5;2m9107[39m: [38;5;2m     2041:        65: [39m
     [38;5;2m9108[39m: [38;5;2m     2042: Added regular file ../notty/examples/keys.ml:[39m
     [38;5;2m9109[39m: [38;5;2m     2043:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9110[39m: [38;5;2m     2044:         2:    See LICENSE.md. *)[39m
     [38;5;2m9111[39m: [38;5;2m     2045:         3: [39m
     [38;5;2m9112[39m: [38;5;2m     2046:         4: (**[39m
     [38;5;2m9113[39m: [38;5;2m     2047:         5:  * Demonstrates input parsing.[39m
     [38;5;2m9114[39m: [38;5;2m     2048:         6:  *)[39m
     [38;5;2m9115[39m: [38;5;2m     2049:         7: open Notty[39m
     [38;5;2m9116[39m: [38;5;2m     2050:         8: open Common[39m
     [38;5;2m9117[39m: [38;5;2m     2051:         9: [39m
     [38;5;2m9118[39m: [38;5;2m     2052:        10: let pps = Format.pp_print_string[39m
     [38;5;2m9119[39m: [38;5;2m     2053:        11: let ppi = Format.pp_print_int[39m
     [38;5;2m9120[39m: [38;5;2m     2054:        12: [39m
     [38;5;2m9121[39m: [38;5;2m     2055:        13: let pp_special fmt = function[39m
     [38;5;2m9122[39m: [38;5;2m     2056:        14:   | `Escape       -> pps fmt "ESCAPE"[39m
     [38;5;2m9123[39m: [38;5;2m     2057:        15:   | `Enter        -> pps fmt "ENTER"[39m
     [38;5;2m9124[39m: [38;5;2m     2058:        16:   | `Tab          -> pps fmt "TAB"[39m
     [38;5;2m9125[39m: [38;5;2m     2059:        17:   | `Backspace    -> pps fmt "BACKSPACE"[39m
     [38;5;2m9126[39m: [38;5;2m     2060:        18:   | `Arrow `Up    -> pps fmt "UP"[39m
     [38;5;2m9127[39m: [38;5;2m     2061:        19:   | `Arrow `Down  -> pps fmt "DOWN"[39m
     [38;5;2m9128[39m: [38;5;2m     2062:        20:   | `Arrow `Left  -> pps fmt "LEFT"[39m
     [38;5;2m9129[39m: [38;5;2m     2063:        21:   | `Arrow `Right -> pps fmt "RIGHT"[39m
     [38;5;2m9130[39m: [38;5;2m     2064:        22:   | `Page `Up     -> pps fmt "PAGE UP"[39m
     [38;5;2m9131[39m: [38;5;2m     2065:        23:   | `Page `Down   -> pps fmt "PAGE DOWN"[39m
     [38;5;2m9132[39m: [38;5;2m     2066:        24:   | `Home         -> pps fmt "HOME"[39m
     [38;5;2m9133[39m: [38;5;2m     2067:        25:   | `End          -> pps fmt "END"[39m
     [38;5;2m9134[39m: [38;5;2m     2068:        26:   | `Insert       -> pps fmt "INSERT"[39m
     [38;5;2m9135[39m: [38;5;2m     2069:        27:   | `Delete       -> pps fmt "DELETE"[39m
     [38;5;2m9136[39m: [38;5;2m     2070:        28:   | `Function n   -> pps fmt "FN"; ppi fmt n[39m
     [38;5;2m9137[39m: [38;5;2m     2071:        29: [39m
     [38;5;2m9138[39m: [38;5;2m     2072:        30: let pp_mods fmt = function[39m
     [38;5;2m9139[39m: [38;5;2m     2073:        31:   | [] -> ()[39m
     [38;5;2m9140[39m: [38;5;2m     2074:        32:   | ms -> ms |> List.iter (fun m ->[39m
     [38;5;2m9141[39m: [38;5;2m     2075:        33:       pps fmt @@ match m with `Meta -> "M" | `Ctrl -> "C" | `Shift -> "S"[39m
     [38;5;2m9142[39m: [38;5;2m     2076:        34:     )[39m
     [38;5;2m9143[39m: [38;5;2m     2077:        35: [39m
     [38;5;2m9144[39m: [38;5;2m     2078:        36: let pp_mouse fmt = function[39m
     [38;5;2m9145[39m: [38;5;2m     2079:        37:   | `Release -> pps fmt "Release"[39m
     [38;5;2m9146[39m: [38;5;2m     2080:        38:   | `Drag    -> pps fmt "Drag"[39m
     [38;5;2m9147[39m: [38;5;2m     2081:        39:   | `Move    -> pps fmt "Move"[39m
     [38;5;2m9148[39m: [38;5;2m     2082:        40:   | `Press k ->[39m
     [38;5;2m9149[39m: [38;5;2m     2083:        41:       pps fmt "Press ";[39m
     [38;5;2m9150[39m: [38;5;2m     2084:        42:       pps fmt @@ match k with[39m
     [38;5;2m9151[39m: [38;5;2m     2085:        43:         | `Left         -> "Left"[39m
     [38;5;2m9152[39m: [38;5;2m     2086:        44:         | `Middle       -> "Middle"[39m
     [38;5;2m9153[39m: [38;5;2m     2087:        45:         | `Right        -> "Right"[39m
     [38;5;2m9154[39m: [38;5;2m     2088:        46:         | `Scroll `Up   -> "Scroll Up"[39m
     [38;5;2m9155[39m: [38;5;2m     2089:        47:         | `Scroll `Down -> "Scroll Down"[39m
     [38;5;2m9156[39m: [38;5;2m     2090:        48: [39m
     [38;5;2m9157[39m: [38;5;2m     2091:        49: let pp_u ppf u = Format.fprintf ppf "U+%04X" (Uchar.to_int u)[39m
     [38;5;2m9158[39m: [38;5;2m     2092:        50: [39m
     [38;5;2m9159[39m: [38;5;2m     2093:        51: let () =[39m
     [38;5;2m9160[39m: [38;5;2m     2094:        52:   let magenta = A.(fg lightmagenta ++ bg black)[39m
     [38;5;2m9161[39m: [38;5;2m     2095:        53:   and green   = A.(fg lightgreen   ++ bg black)[39m
     [38;5;2m9162[39m: [38;5;2m     2096:        54:   and blue    = A.(fg lightblue    ++ bg black) in[39m
     [38;5;2m9163[39m: [38;5;2m     2097:        55:   let pp_mods  = I.pp_attr green pp_mods[39m
     [38;5;2m9164[39m: [38;5;2m     2098:        56:   and pp_mouse = I.pp_attr blue pp_mouse in[39m
     [38;5;2m9165[39m: [38;5;2m     2099:        57:   simpleterm ~s:[][39m
     [38;5;2m9166[39m: [38;5;2m     2100:        58:     ~f:(fun xs x -> Some (List.take 100 (x::xs)))[39m
     [38;5;2m9167[39m: [38;5;2m     2101:        59:     ~imgf:(fun (_, h) xs ->[39m
     [38;5;2m9168[39m: [38;5;2m     2102:        60:       let attr = magenta in[39m
     [38;5;2m9169[39m: [38;5;2m     2103:        61:       let msg = I.string A.empty "Push keys."[39m
     [38;5;2m9170[39m: [38;5;2m     2104:        62:       and ks = List.map (function[39m
     [38;5;2m9171[39m: [38;5;2m     2105:        63:         | `Key ((`ASCII _ | `Uchar _) as c, mods) ->[39m
     [38;5;2m9172[39m: [38;5;2m     2106:        64:             let u = Unescape.uchar c in[39m
     [38;5;2m9173[39m: [38;5;2m     2107:        65:             I.(uchar blue u 1 1 <|> strf ~attr " %a %a" pp_u u pp_mods mods)[39m
     [38;5;2m9174[39m: [38;5;2m     2108:        66:         | `Key (#Unescape.special as k, mods) ->[39m
     [38;5;2m9175[39m: [38;5;2m     2109:        67:             I.strf ~attr "%a %a" pp_special k pp_mods mods[39m
     [38;5;2m9176[39m: [38;5;2m     2110:        68:         | `Mouse (e, (x, y), mods) ->[39m
     [38;5;2m9177[39m: [38;5;2m     2111:        69:             I.strf ~attr "MOUSE %a (%d, %d) %a" pp_mouse e x y pp_mods mods[39m
     [38;5;2m9178[39m: [38;5;2m     2112:        70:         | `Paste e ->[39m
     [38;5;2m9179[39m: [38;5;2m     2113:        71:             I.strf ~attr "PASTE %s" (if e = `Start then "START" else "END")[39m
     [38;5;2m9180[39m: [38;5;2m     2114:        72:         ) xs |> I.vcat in[39m
     [38;5;2m9181[39m: [38;5;2m     2115:        73:       I.(vsnap ~align:`Top (h - 3) ks <-> void 0 1 <-> msg |> pad ~l:1 ~t:1))[39m
     [38;5;2m9182[39m: [38;5;2m     2116: Added regular file ../notty/examples/letters.ml:[39m
     [38;5;2m9183[39m: [38;5;2m     2117:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9184[39m: [38;5;2m     2118:         2:    See LICENSE.md. *)[39m
     [38;5;2m9185[39m: [38;5;2m     2119:         3: [39m
     [38;5;2m9186[39m: [38;5;2m     2120:         4: (**[39m
     [38;5;2m9187[39m: [38;5;2m     2121:         5:  * Dancing letters.[39m
     [38;5;2m9188[39m: [38;5;2m     2122:         6:  *)[39m
     [38;5;2m9189[39m: [38;5;2m     2123:         7: open Notty[39m
     [38;5;2m9190[39m: [38;5;2m     2124:         8: open Common[39m
     [38;5;2m9191[39m: [38;5;2m     2125:         9: [39m
     [38;5;2m9192[39m: [38;5;2m     2126:        10: let nw = 6[39m
     [38;5;2m9193[39m: [38;5;2m     2127:        11: and nh = 5[39m
     [38;5;2m9194[39m: [38;5;2m     2128:        12: [39m
     [38;5;2m9195[39m: [38;5;2m     2129:        13: let () =[39m
     [38;5;2m9196[39m: [38;5;2m     2130:        14:   simpleterm ~s:[][39m
     [38;5;2m9197[39m: [38;5;2m     2131:        15:     ~f:(fun us -> function[39m
     [38;5;2m9198[39m: [38;5;2m     2132:        16:       | `Key ((`Delete|`Backspace), _) ->[39m
     [38;5;2m9199[39m: [38;5;2m     2133:        17:           Some (match us with _::xs -> xs | _ -> us)[39m
     [38;5;2m9200[39m: [38;5;2m     2134:        18:       | `Key ((`ASCII _|`Uchar _ as u), _) ->[39m
     [38;5;2m9201[39m: [38;5;2m     2135:        19:           Some (List.take (nw * nh) (Unescape.uchar u :: us))[39m
     [38;5;2m9202[39m: [38;5;2m     2136:        20:       | _  -> Some us)[39m
     [38;5;2m9203[39m: [38;5;2m     2137:        21:     ~imgf:(fun _ us ->[39m
     [38;5;2m9204[39m: [38;5;2m     2138:        22:       let open List in[39m
     [38;5;2m9205[39m: [38;5;2m     2139:        23:       let uus = chunks nw (rev us) in[39m
     [38;5;2m9206[39m: [38;5;2m     2140:        24:       mapi (fun i us ->[39m
     [38;5;2m9207[39m: [38;5;2m     2141:        25:         mapi (fun j u ->[39m
     [38;5;2m9208[39m: [38;5;2m     2142:        26:           I.uchar A.(fg white ++ bg (rgb ~r:0 ~g:i ~b:j)) u 1 1[39m
     [38;5;2m9209[39m: [38;5;2m     2143:        27:         ) us |> I.hcat[39m
     [38;5;2m9210[39m: [38;5;2m     2144:        28:       ) uus |> I.vcat[39m
     [38;5;2m9211[39m: [38;5;2m     2145:        29:       |> I.pad ~t:1 ~l:1[39m
     [38;5;2m9212[39m: [38;5;2m     2146:        30:       |> I.hsnap ~align:`Left (nw + 1)[39m
     [38;5;2m9213[39m: [38;5;2m     2147:        31:       |> tile nw 1)[39m
     [38;5;2m9214[39m: [38;5;2m     2148: Added regular file ../notty/examples/life.ml:[39m
     [38;5;2m9215[39m: [38;5;2m     2149:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9216[39m: [38;5;2m     2150:         2:    See LICENSE.md. *)[39m
     [38;5;2m9217[39m: [38;5;2m     2151:         3: [39m
     [38;5;2m9218[39m: [38;5;2m     2152:         4: (*[39m
     [38;5;2m9219[39m: [38;5;2m     2153:         5:  * Game of Life with some ZX spectrum kitsch.[39m
     [38;5;2m9220[39m: [38;5;2m     2154:         6:  *)[39m
     [38;5;2m9221[39m: [38;5;2m     2155:         7: [39m
     [38;5;2m9222[39m: [38;5;2m     2156:         8: let flip f a b = f b a[39m
     [38;5;2m9223[39m: [38;5;2m     2157:         9: [39m
     [38;5;2m9224[39m: [38;5;2m     2158:        10: (** Live, **)[39m
     [38;5;2m9225[39m: [38;5;2m     2159:        11: [39m
     [38;5;2m9226[39m: [38;5;2m     2160:        12: module Coord = struct[39m
     [38;5;2m9227[39m: [38;5;2m     2161:        13:   type t = int * int[39m
     [38;5;2m9228[39m: [38;5;2m     2162:        14:   let compare ((a, b) : t) (c, d) =[39m
     [38;5;2m9229[39m: [38;5;2m     2163:        15:     match compare a c with 0 -> compare b d | r -> r[39m
     [38;5;2m9230[39m: [38;5;2m     2164:        16:   let equal ((a, b) : t) (c, d) = a = c && b = d[39m
     [38;5;2m9231[39m: [38;5;2m     2165:        17: end[39m
     [38;5;2m9232[39m: [38;5;2m     2166:        18: [39m
     [38;5;2m9233[39m: [38;5;2m     2167:        19: module CSet = struct[39m
     [38;5;2m9234[39m: [38;5;2m     2168:        20:   include Set.Make (Coord)[39m
     [38;5;2m9235[39m: [38;5;2m     2169:        21:   let of_list = List.fold_left (flip add) empty[39m
     [38;5;2m9236[39m: [38;5;2m     2170:        22:   let map f s = fold (fun x s -> add (f x) s) s empty[39m
     [38;5;2m9237[39m: [38;5;2m     2171:        23: end[39m
     [38;5;2m9238[39m: [38;5;2m     2172:        24: [39m
     [38;5;2m9239[39m: [38;5;2m     2173:        25: module CMap = struct[39m
     [38;5;2m9240[39m: [38;5;2m     2174:        26:   include Map.Make (Coord)[39m
     [38;5;2m9241[39m: [38;5;2m     2175:        27:   let preimg p m =[39m
     [38;5;2m9242[39m: [38;5;2m     2176:        28:     fold (fun k v s -> if p v then CSet.add k s else s) m CSet.empty[39m
     [38;5;2m9243[39m: [38;5;2m     2177:        29: end[39m
     [38;5;2m9244[39m: [38;5;2m     2178:        30: [39m
     [38;5;2m9245[39m: [38;5;2m     2179:        31: let erem x y = (x mod y + y) mod y[39m
     [38;5;2m9246[39m: [38;5;2m     2180:        32: let square (w, h) (a, b as ab) =[39m
     [38;5;2m9247[39m: [38;5;2m     2181:        33:   if a < 0 || a >= w || b < 0 || b >= h then (-1, -1) else ab[39m
     [38;5;2m9248[39m: [38;5;2m     2182:        34: let torus (w, h) (a, b) = (erem a w, erem b h)[39m
     [38;5;2m9249[39m: [38;5;2m     2183:        35: let moebius (w, h) (a, b as ab) =[39m
     [38;5;2m9250[39m: [38;5;2m     2184:        36:   if a < 0 || a >= w then (erem a w, h - b - 1) else ab[39m
     [38;5;2m9251[39m: [38;5;2m     2185:        37: [39m
     [38;5;2m9252[39m: [38;5;2m     2186:        38: let neigh topo (a, b) = [[39m
     [38;5;2m9253[39m: [38;5;2m     2187:        39:   (a-1, b); (a+1, b); (a-1, b-1); (a-1, b+1)[39m
     [38;5;2m9254[39m: [38;5;2m     2188:        40: ; (a, b-1); (a, b+1); (a+1, b-1); (a+1, b+1)[39m
     [38;5;2m9255[39m: [38;5;2m     2189:        41: ] |> List.map topo[39m
     [38;5;2m9256[39m: [38;5;2m     2190:        42: [39m
     [38;5;2m9257[39m: [38;5;2m     2191:        43: let step topo life =[39m
     [38;5;2m9258[39m: [38;5;2m     2192:        44:   let nlive pt =[39m
     [38;5;2m9259[39m: [38;5;2m     2193:        45:     List.(neigh topo pt |> filter (flip CSet.mem life) |> length) in[39m
     [38;5;2m9260[39m: [38;5;2m     2194:        46:   let f1 pt acc =[39m
     [38;5;2m9261[39m: [38;5;2m     2195:        47:     pt :: neigh topo pt |> List.fold_left (fun acc -> function[39m
     [38;5;2m9262[39m: [38;5;2m     2196:        48:       | (-1, -1) -> acc[39m
     [38;5;2m9263[39m: [38;5;2m     2197:        49:       | pt when CMap.mem pt acc -> acc[39m
     [38;5;2m9264[39m: [38;5;2m     2198:        50:       | pt ->[39m
     [38;5;2m9265[39m: [38;5;2m     2199:        51:           let n = nlive pt in[39m
     [38;5;2m9266[39m: [38;5;2m     2200:        52:           acc |> CMap.add pt[39m
     [38;5;2m9267[39m: [38;5;2m     2201:        53:             (if n = 3 || (n = 2 && CSet.mem pt life) then 0 else 1)[39m
     [38;5;2m9268[39m: [38;5;2m     2202:        54:     ) acc in[39m
     [38;5;2m9269[39m: [38;5;2m     2203:        55:   CSet.fold f1 life CMap.empty |> CMap.preimg ((=) 0)[39m
     [38;5;2m9270[39m: [38;5;2m     2204:        56: [39m
     [38;5;2m9271[39m: [38;5;2m     2205:        57: let glider = CSet.of_list [(2,1); (3,2); (1,3); (2,3); (3,3)][39m
     [38;5;2m9272[39m: [38;5;2m     2206:        58: [39m
     [38;5;2m9273[39m: [38;5;2m     2207:        59: (** ...render, **)[39m
     [38;5;2m9274[39m: [38;5;2m     2208:        60: [39m
     [38;5;2m9275[39m: [38;5;2m     2209:        61: open Notty[39m
     [38;5;2m9276[39m: [38;5;2m     2210:        62: open Notty.Infix[39m
     [38;5;2m9277[39m: [38;5;2m     2211:        63: [39m
     [38;5;2m9278[39m: [38;5;2m     2212:        64: let dot = I.string A.(fg lightred) "●"[39m
     [38;5;2m9279[39m: [38;5;2m     2213:        65: [39m
     [38;5;2m9280[39m: [38;5;2m     2214:        66: let background step (n, m) =[39m
     [38;5;2m9281[39m: [38;5;2m     2215:        67:   let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m9282[39m: [38;5;2m     2216:        68:   if k > 0 then I.string A.(fg (gray k)) "." else I.void 1 1[39m
     [38;5;2m9283[39m: [38;5;2m     2217:        69: [39m
     [38;5;2m9284[39m: [38;5;2m     2218:        70: let render (w, h) step life =[39m
     [38;5;2m9285[39m: [38;5;2m     2219:        71:   I.tabulate w (h - 1) (fun x y ->[39m
     [38;5;2m9286[39m: [38;5;2m     2220:        72:     let pt = (x, y) in if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m9287[39m: [38;5;2m     2221:        73:   ) <->[39m
     [38;5;2m9288[39m: [38;5;2m     2222:        74:   I.(strf ~attr:A.(fg lightblack) "[generation %04d]" step |>[39m
     [38;5;2m9289[39m: [38;5;2m     2223:        75:       hsnap ~align:`Right w)[39m
     [38;5;2m9290[39m: [38;5;2m     2224:        76: [39m
     [38;5;2m9291[39m: [38;5;2m     2225:        77: (** ...and interact. **)[39m
     [38;5;2m9292[39m: [38;5;2m     2226:        78: [39m
     [38;5;2m9293[39m: [38;5;2m     2227:        79: open Lwt.Infix[39m
     [38;5;2m9294[39m: [38;5;2m     2228:        80: open Notty_lwt[39m
     [38;5;2m9295[39m: [38;5;2m     2229:        81: [39m
     [38;5;2m9296[39m: [38;5;2m     2230:        82: let timer () = Lwt_unix.sleep 0.1 >|= fun () -> `Timer[39m
     [38;5;2m9297[39m: [38;5;2m     2231:        83: let event term = Lwt_stream.get (Term.events term) >|= function[39m
     [38;5;2m9298[39m: [38;5;2m     2232:        84:   | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m9299[39m: [38;5;2m     2233:        85:   | None -> `End[39m
     [38;5;2m9300[39m: [38;5;2m     2234:        86: [39m
     [38;5;2m9301[39m: [38;5;2m     2235:        87: let rec loop term (e, t) (dim, n, life as st) =[39m
     [38;5;2m9302[39m: [38;5;2m     2236:        88:   (e <?> t) >>= function[39m
     [38;5;2m9303[39m: [38;5;2m     2237:        89:   | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m9304[39m: [38;5;2m     2238:        90:       Lwt.return_unit[39m
     [38;5;2m9305[39m: [38;5;2m     2239:        91:   | `Timer ->[39m
     [38;5;2m9306[39m: [38;5;2m     2240:        92:       Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m9307[39m: [38;5;2m     2241:        93:         loop term (e, timer ())[39m
     [38;5;2m9308[39m: [38;5;2m     2242:        94:           (dim, n + 1, step (torus dim) life)[39m
     [38;5;2m9309[39m: [38;5;2m     2243:        95:   | `Mouse ((`Press `Left|`Drag), (x, y), _) ->[39m
     [38;5;2m9310[39m: [38;5;2m     2244:        96:       loop term (event term, t)[39m
     [38;5;2m9311[39m: [38;5;2m     2245:        97:         (dim, n, CSet.add (torus dim (x, y)) life)[39m
     [38;5;2m9312[39m: [38;5;2m     2246:        98:   | `Resize dim ->[39m
     [38;5;2m9313[39m: [38;5;2m     2247:        99:       let life = CSet.map (torus dim) life in[39m
     [38;5;2m9314[39m: [38;5;2m     2248:       100:       Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m9315[39m: [38;5;2m     2249:       101:         loop term (event term, t) (dim, n, life)[39m
     [38;5;2m9316[39m: [38;5;2m     2250:       102:   | _ -> loop term (event term, t) st[39m
     [38;5;2m9317[39m: [38;5;2m     2251:       103: [39m
     [38;5;2m9318[39m: [38;5;2m     2252:       104: let main () =[39m
     [38;5;2m9319[39m: [38;5;2m     2253:       105:   let t = Term.create () in[39m
     [38;5;2m9320[39m: [38;5;2m     2254:       106:   loop t (event t, timer ()) (Term.size t, 0, glider)[39m
     [38;5;2m9321[39m: [38;5;2m     2255:       107: [39m
     [38;5;2m9322[39m: [38;5;2m     2256:       108: let () = Lwt_main.run @@ main ()[39m
     [38;5;2m9323[39m: [38;5;2m     2257: Added regular file ../notty/examples/linear.ml:[39m
     [38;5;2m9324[39m: [38;5;2m     2258:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9325[39m: [38;5;2m     2259:         2:    See LICENSE.md. *)[39m
     [38;5;2m9326[39m: [38;5;2m     2260:         3: [39m
     [38;5;2m9327[39m: [38;5;2m     2261:         4: (*[39m
     [38;5;2m9328[39m: [38;5;2m     2262:         5:  * Elementary Cellular Automata[39m
     [38;5;2m9329[39m: [38;5;2m     2263:         6:  *)[39m
     [38;5;2m9330[39m: [38;5;2m     2264:         7: open Notty[39m
     [38;5;2m9331[39m: [38;5;2m     2265:         8: open Notty.Infix[39m
     [38;5;2m9332[39m: [38;5;2m     2266:         9: open Common_lwt[39m
     [38;5;2m9333[39m: [38;5;2m     2267:        10: [39m
     [38;5;2m9334[39m: [38;5;2m     2268:        11: let flip f a b = f b a[39m
     [38;5;2m9335[39m: [38;5;2m     2269:        12: let rec take n = function[39m
     [38;5;2m9336[39m: [38;5;2m     2270:        13:   | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m9337[39m: [38;5;2m     2271:        14:   | _                -> [][39m
     [38;5;2m9338[39m: [38;5;2m     2272:        15: [39m
     [38;5;2m9339[39m: [38;5;2m     2273:        16: let getd arr d i =[39m
     [38;5;2m9340[39m: [38;5;2m     2274:        17:   if i < 0 || i >= Array.length arr then d else arr.(i)[39m
     [38;5;2m9341[39m: [38;5;2m     2275:        18: [39m
     [38;5;2m9342[39m: [38;5;2m     2276:        19: let f ~rule a b c =[39m
     [38;5;2m9343[39m: [38;5;2m     2277:        20:   if rule land (1 lsl (a lsl 2 + b lsl 1 + c)) > 0 then 1 else 0[39m
     [38;5;2m9344[39m: [38;5;2m     2278:        21: [39m
     [38;5;2m9345[39m: [38;5;2m     2279:        22: let step ~rule w arr =[39m
     [38;5;2m9346[39m: [38;5;2m     2280:        23:   let get = getd arr 0 in[39m
     [38;5;2m9347[39m: [38;5;2m     2281:        24:   Array.init w @@ fun i ->[39m
     [38;5;2m9348[39m: [38;5;2m     2282:        25:     f ~rule (get (i - 1)) (get i) (get (i + 1))[39m
     [38;5;2m9349[39m: [38;5;2m     2283:        26: [39m
     [38;5;2m9350[39m: [38;5;2m     2284:        27: let dot  = I.char A.(bg lightwhite) ' ' 1 1[39m
     [38;5;2m9351[39m: [38;5;2m     2285:        28: let void = I.void 1 1[39m
     [38;5;2m9352[39m: [38;5;2m     2286:        29: [39m
     [38;5;2m9353[39m: [38;5;2m     2287:        30: let render ~rule ~h xss =[39m
     [38;5;2m9354[39m: [38;5;2m     2288:        31:   let cons k = function[39m
     [38;5;2m9355[39m: [38;5;2m     2289:        32:     | 0 -> I.void k 1[39m
     [38;5;2m9356[39m: [38;5;2m     2290:        33:     | _ -> I.char A.(bg lightwhite) ' ' k 1 in[39m
     [38;5;2m9357[39m: [38;5;2m     2291:        34:   let rec rline s k i arr =[39m
     [38;5;2m9358[39m: [38;5;2m     2292:        35:     if i >= Array.length arr then[39m
     [38;5;2m9359[39m: [38;5;2m     2293:        36:       cons k s[39m
     [38;5;2m9360[39m: [38;5;2m     2294:        37:     else if arr.(i) = s then[39m
     [38;5;2m9361[39m: [38;5;2m     2295:        38:       rline s (k + 1) (i + 1) arr[39m
     [38;5;2m9362[39m: [38;5;2m     2296:        39:     else cons k s <|> rline (1 - s) 1 (i + 1) arr in[39m
     [38;5;2m9363[39m: [38;5;2m     2297:        40:   ( xss |> List.rev |> List.map (rline 0 0 0) |> I.vcat[39m
     [38;5;2m9364[39m: [38;5;2m     2298:        41:     |> I.vsnap ~align:`Top (h - 2) ) <->[39m
     [38;5;2m9365[39m: [38;5;2m     2299:        42:   ( I.strf ~attr:A.(fg lightgreen ++ bg black) " RULE %d " rule[39m
     [38;5;2m9366[39m: [38;5;2m     2300:        43:     |> I.vpad 1 0 )[39m
     [38;5;2m9367[39m: [38;5;2m     2301:        44: [39m
     [38;5;2m9368[39m: [38;5;2m     2302:        45: let rule = 124 (* 110 mirrored *)[39m
     [38;5;2m9369[39m: [38;5;2m     2303:        46: [39m
     [38;5;2m9370[39m: [38;5;2m     2304:        47: let main () =[39m
     [38;5;2m9371[39m: [38;5;2m     2305:        48:   simpleterm_lwt_timed ~delay:0.1 ([], rule)[39m
     [38;5;2m9372[39m: [38;5;2m     2306:        49:   ~f:(fun (w, h) (lines, rule) -> function[39m
     [38;5;2m9373[39m: [38;5;2m     2307:        50:     | `Timer ->[39m
     [38;5;2m9374[39m: [38;5;2m     2308:        51:         let prev  = match lines with [] -> [|1|] | h::_ -> h in[39m
     [38;5;2m9375[39m: [38;5;2m     2309:        52:         let lines = step ~rule w prev :: lines |> take (h - 2) in[39m
     [38;5;2m9376[39m: [38;5;2m     2310:        53:         `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m9377[39m: [38;5;2m     2311:        54:     | `Resize _ ->[39m
     [38;5;2m9378[39m: [38;5;2m     2312:        55:         let lines = lines |> take h in[39m
     [38;5;2m9379[39m: [38;5;2m     2313:        56:         `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m9380[39m: [38;5;2m     2314:        57:     | `Key (`Arrow `Left, []) ->[39m
     [38;5;2m9381[39m: [38;5;2m     2315:        58:         `Redraw (([], rule - 1), render ~rule ~h lines)[39m
     [38;5;2m9382[39m: [38;5;2m     2316:        59:     | `Key (`Arrow `Right, []) ->[39m
     [38;5;2m9383[39m: [38;5;2m     2317:        60:         `Redraw (([], rule + 1), render ~rule ~h lines)[39m
     [38;5;2m9384[39m: [38;5;2m     2318:        61:     | _ -> `Continue (lines, rule)[39m
     [38;5;2m9385[39m: [38;5;2m     2319:        62:   )[39m
     [38;5;2m9386[39m: [38;5;2m     2320:        63: [39m
     [38;5;2m9387[39m: [38;5;2m     2321:        64: let () = Lwt_main.run @@ main ()[39m
     [38;5;2m9388[39m: [38;5;2m     2322: Added regular file ../notty/examples/mouse.ml:[39m
     [38;5;2m9389[39m: [38;5;2m     2323:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9390[39m: [38;5;2m     2324:         2:    See LICENSE.md. *)[39m
     [38;5;2m9391[39m: [38;5;2m     2325:         3: [39m
     [38;5;2m9392[39m: [38;5;2m     2326:         4: (**[39m
     [38;5;2m9393[39m: [38;5;2m     2327:         5:  * Demonstrates mouse input.[39m
     [38;5;2m9394[39m: [38;5;2m     2328:         6:  *)[39m
     [38;5;2m9395[39m: [38;5;2m     2329:         7: open Notty[39m
     [38;5;2m9396[39m: [38;5;2m     2330:         8: open Common[39m
     [38;5;2m9397[39m: [38;5;2m     2331:         9: [39m
     [38;5;2m9398[39m: [38;5;2m     2332:        10: let lnv = Uchar.of_int 0x2502[39m
     [38;5;2m9399[39m: [38;5;2m     2333:        11: and lnh = Uchar.of_int 0x2500[39m
     [38;5;2m9400[39m: [38;5;2m     2334:        12: and crs = Uchar.of_int 0x253c[39m
     [38;5;2m9401[39m: [38;5;2m     2335:        13: [39m
     [38;5;2m9402[39m: [38;5;2m     2336:        14: let clip a b x = min b (max a x)[39m
     [38;5;2m9403[39m: [38;5;2m     2337:        15: [39m
     [38;5;2m9404[39m: [38;5;2m     2338:        16: let () =[39m
     [38;5;2m9405[39m: [38;5;2m     2339:        17:   simpleterm ~s:(`Down, (0, 0), [], 11)[39m
     [38;5;2m9406[39m: [38;5;2m     2340:        18:     ~f:(fun (st, pos, mods, scr as s) -> function[39m
     [38;5;2m9407[39m: [38;5;2m     2341:        19:       | `Mouse ((`Press `Left|`Drag), pos, mods) -> Some (`Drag, pos, mods, scr)[39m
     [38;5;2m9408[39m: [38;5;2m     2342:        20:       | `Mouse (`Press (`Scroll s), _, _) ->[39m
     [38;5;2m9409[39m: [38;5;2m     2343:        21:           Some (st, pos, mods, clip 0 23 (scr + match s with `Up -> 1 | _ -> -1))[39m
     [38;5;2m9410[39m: [38;5;2m     2344:        22:       | `Mouse (`Release, pos, _) -> Some (`Down, pos, [], scr)[39m
     [38;5;2m9411[39m: [38;5;2m     2345:        23:       | _ -> Some s)[39m
     [38;5;2m9412[39m: [38;5;2m     2346:        24:     ~imgf:I.(fun (w, h) (st, (x, y), mods, scr) ->[39m
     [38;5;2m9413[39m: [38;5;2m     2347:        25:       let cross =[39m
     [38;5;2m9414[39m: [38;5;2m     2348:        26:         let a  = match st with `Drag -> A.(fg lightgreen) | `Down -> A.(fg green) in[39m
     [38;5;2m9415[39m: [38;5;2m     2349:        27:         (uchar a lnh x 1 |> vpad y 0) <|>[39m
     [38;5;2m9416[39m: [38;5;2m     2350:        28:         (uchar a lnv 1 y <-> uchar a crs 1 1 <-> uchar a lnv 1 (h - y)) <|>[39m
     [38;5;2m9417[39m: [38;5;2m     2351:        29:         (uchar a lnh (w - x - 1) 1 |> vpad y 0)[39m
     [38;5;2m9418[39m: [38;5;2m     2352:        30:         |> crop ~t:1 ~l:1 ~r:3[39m
     [38;5;2m9419[39m: [38;5;2m     2353:        31:         |> hpad 1 1[39m
     [38;5;2m9420[39m: [38;5;2m     2354:        32:         |> vsnap ~align:`Top (h - 1)[39m
     [38;5;2m9421[39m: [38;5;2m     2355:        33:       and scroll =[39m
     [38;5;2m9422[39m: [38;5;2m     2356:        34:         List.(range 0 scr |> rev |> map @@ fun level ->[39m
     [38;5;2m9423[39m: [38;5;2m     2357:        35:           Images.dot A.(gray level)[39m
     [38;5;2m9424[39m: [38;5;2m     2358:        36:         ) |> vcat |> vsnap ~align:`Bottom (h - 1)[39m
     [38;5;2m9425[39m: [38;5;2m     2359:        37:       and status =[39m
     [38;5;2m9426[39m: [38;5;2m     2360:        38:         let a = A.(fg lightblack ++ bg black) in[39m
     [38;5;2m9427[39m: [38;5;2m     2361:        39:         let fa m = if List.mem m mods then A.(fg lightgreen ++ bg black) else a in[39m
     [38;5;2m9428[39m: [38;5;2m     2362:        40:         string A.empty "Use the mouse." </>[39m
     [38;5;2m9429[39m: [38;5;2m     2363:        41:         (hcat [ string a "["[39m
     [38;5;2m9430[39m: [38;5;2m     2364:        42:               ; string (fa `Ctrl) "C"[39m
     [38;5;2m9431[39m: [38;5;2m     2365:        43:               ; string (fa `Meta) "M"[39m
     [38;5;2m9432[39m: [38;5;2m     2366:        44:               ; strf ~attr:a "] @(%03d, %03d)" x y ][39m
     [38;5;2m9433[39m: [38;5;2m     2367:        45:          |> hsnap ~align:`Right w)[39m
     [38;5;2m9434[39m: [38;5;2m     2368:        46:       in (cross <|> scroll) <-> status[39m
     [38;5;2m9435[39m: [38;5;2m     2369:        47:     )[39m
     [38;5;2m9436[39m: [38;5;2m     2370: Added regular file ../notty/examples/rain.ml:[39m
     [38;5;2m9437[39m: [38;5;2m     2371:         1: [39m
     [38;5;2m9438[39m: [38;5;2m     2372:         2: let () = Random.self_init ()[39m
     [38;5;2m9439[39m: [38;5;2m     2373:         3: [39m
     [38;5;2m9440[39m: [38;5;2m     2374:         4: let rec (--) a b = if a > b then [] else a :: succ a -- b[39m
     [38;5;2m9441[39m: [38;5;2m     2375:         5: [39m
     [38;5;2m9442[39m: [38;5;2m     2376:         6: let utf8_of_code_point =[39m
     [38;5;2m9443[39m: [38;5;2m     2377:         7:   let buf = Buffer.create 7 in fun cp ->[39m
     [38;5;2m9444[39m: [38;5;2m     2378:         8:     Buffer.clear buf;[39m
     [38;5;2m9445[39m: [38;5;2m     2379:         9:     Uutf.Buffer.add_utf_8 buf (Uchar.of_int cp);[39m
     [38;5;2m9446[39m: [38;5;2m     2380:        10:     Buffer.contents buf[39m
     [38;5;2m9447[39m: [38;5;2m     2381:        11: [39m
     [38;5;2m9448[39m: [38;5;2m     2382:        12: let nsym = 4096[39m
     [38;5;2m9449[39m: [38;5;2m     2383:        13: let glitch = nsym / 20[39m
     [38;5;2m9450[39m: [38;5;2m     2384:        14: let symbols = Array.(concat [[39m
     [38;5;2m9451[39m: [38;5;2m     2385:        15:   init 58 (fun x -> utf8_of_code_point (0xff66 + x));[39m
     [38;5;2m9452[39m: [38;5;2m     2386:        16:   init 10 (fun x -> utf8_of_code_point (0x30 + x));[39m
     [38;5;2m9453[39m: [38;5;2m     2387:        17:   (* init 26 (fun x -> utf8_of_code_point (0x61 + x)); *)[39m
     [38;5;2m9454[39m: [38;5;2m     2388:        18:   (* init 14 (fun x -> utf8_of_code_point (0x21 + x)); *)[39m
     [38;5;2m9455[39m: [38;5;2m     2389:        19: ])[39m
     [38;5;2m9456[39m: [38;5;2m     2390:        20: let sym () = symbols.(Random.int (Array.length symbols))[39m
     [38;5;2m9457[39m: [38;5;2m     2391:        21: let syms = Array.init nsym (fun _ -> sym ())[39m
     [38;5;2m9458[39m: [38;5;2m     2392:        22: [39m
     [38;5;2m9459[39m: [38;5;2m     2393:        23: let gen_wait h = `Wait Random.(int (h / 2))[39m
     [38;5;2m9460[39m: [38;5;2m     2394:        24: and gen_line h =[39m
     [38;5;2m9461[39m: [38;5;2m     2395:        25:   `Line Random.(0, int (nsym - h), int (h + h / 2) + 1, int 2 + 1)[39m
     [38;5;2m9462[39m: [38;5;2m     2396:        26: let gen (w, h as dim) =[39m
     [38;5;2m9463[39m: [38;5;2m     2397:        27:   let lines = 1 -- w |> List.map @@ fun _ ->[39m
     [38;5;2m9464[39m: [38;5;2m     2398:        28:     if Random.float 1. < 0.1 then gen_line h else gen_wait h in[39m
     [38;5;2m9465[39m: [38;5;2m     2399:        29:   (dim, lines)[39m
     [38;5;2m9466[39m: [38;5;2m     2400:        30: [39m
     [38;5;2m9467[39m: [38;5;2m     2401:        31: let step ((_, h as dim), xs) =[39m
     [38;5;2m9468[39m: [38;5;2m     2402:        32:   let xs = xs |> List.map @@ function[39m
     [38;5;2m9469[39m: [38;5;2m     2403:        33:       `Wait 0 -> gen_line h[39m
     [38;5;2m9470[39m: [38;5;2m     2404:        34:     | `Wait n -> `Wait (n - 1)[39m
     [38;5;2m9471[39m: [38;5;2m     2405:        35:     | `Line (i, _, win, k) when i - win + k >= h -> gen_wait h[39m
     [38;5;2m9472[39m: [38;5;2m     2406:        36:     | `Line (i, s, win, k) -> `Line (i + k, s, win, k) in[39m
     [38;5;2m9473[39m: [38;5;2m     2407:        37:   Random.(for _ = 0 to int glitch do syms.(int nsym) <- sym () done);[39m
     [38;5;2m9474[39m: [38;5;2m     2408:        38:   (dim, xs)[39m
     [38;5;2m9475[39m: [38;5;2m     2409:        39: [39m
     [38;5;2m9476[39m: [38;5;2m     2410:        40: open Notty[39m
     [38;5;2m9477[39m: [38;5;2m     2411:        41: open Notty.Infix[39m
     [38;5;2m9478[39m: [38;5;2m     2412:        42: [39m
     [38;5;2m9479[39m: [38;5;2m     2413:        43: let bgc = A.(bg @@ rgb ~r:0 ~g:0 ~b:0)[39m
     [38;5;2m9480[39m: [38;5;2m     2414:        44: [39m
     [38;5;2m9481[39m: [38;5;2m     2415:        45: let color i n =[39m
     [38;5;2m9482[39m: [38;5;2m     2416:        46:   let chan x = x *. 255. |> truncate[39m
     [38;5;2m9483[39m: [38;5;2m     2417:        47:   and t  = float i /. float n in[39m
     [38;5;2m9484[39m: [38;5;2m     2418:        48:   let t1 = exp (-. t /. 0.02) |> chan[39m
     [38;5;2m9485[39m: [38;5;2m     2419:        49:   and t2 = exp (-. t /. 0.45) |> chan in[39m
     [38;5;2m9486[39m: [38;5;2m     2420:        50:   A.rgb_888 ~r:t1 ~b:t1 ~g:t2[39m
     [38;5;2m9487[39m: [38;5;2m     2421:        51: [39m
     [38;5;2m9488[39m: [38;5;2m     2422:        52: let show ((w, h), xs) =[39m
     [38;5;2m9489[39m: [38;5;2m     2423:        53:   let f = function[39m
     [38;5;2m9490[39m: [38;5;2m     2424:        54:     `Wait _ -> I.void 1 0[39m
     [38;5;2m9491[39m: [38;5;2m     2425:        55:   | `Line (i, sym, win, _) ->[39m
     [38;5;2m9492[39m: [38;5;2m     2426:        56:       let last = i - win[39m
     [38;5;2m9493[39m: [38;5;2m     2427:        57:       and off = max 0 (i - h + 1) in[39m
     [38;5;2m9494[39m: [38;5;2m     2428:        58:       let rec chars w =[39m
     [38;5;2m9495[39m: [38;5;2m     2429:        59:         let ix = w + last in[39m
     [38;5;2m9496[39m: [38;5;2m     2430:        60:         if 0 <= min ix w then syms.(sym + ix) :: chars (w - 1) else [] in[39m
     [38;5;2m9497[39m: [38;5;2m     2431:        61:       let rec images acc i = function[39m
     [38;5;2m9498[39m: [38;5;2m     2432:        62:         | []    -> acc[39m
     [38;5;2m9499[39m: [38;5;2m     2433:        63:         | x::xs -> let img = I.string A.(fg (color i win) ++ bgc) x in[39m
     [38;5;2m9500[39m: [38;5;2m     2434:        64:                    images (img :: acc) (i + 1) xs in[39m
     [38;5;2m9501[39m: [38;5;2m     2435:        65:       chars (win - off) |> images [] off[39m
     [38;5;2m9502[39m: [38;5;2m     2436:        66:         |> I.vcat |> I.vpad (max 0 (i - win)) 0 in[39m
     [38;5;2m9503[39m: [38;5;2m     2437:        67:   (List.map f xs |> I.hcat) </> I.char bgc ' ' w h[39m
     [38;5;2m9504[39m: [38;5;2m     2438:        68: [39m
     [38;5;2m9505[39m: [38;5;2m     2439:        69: open Notty_unix[39m
     [38;5;2m9506[39m: [38;5;2m     2440:        70: [39m
     [38;5;2m9507[39m: [38;5;2m     2441:        71: type r = [ Unescape.event | `Resize of int * int | `End | `Timer ][39m
     [38;5;2m9508[39m: [38;5;2m     2442:        72: [39m
     [38;5;2m9509[39m: [38;5;2m     2443:        73: let event ~delay t =[39m
     [38;5;2m9510[39m: [38;5;2m     2444:        74:   if Term.pending t then (Term.event t :> r) else[39m
     [38;5;2m9511[39m: [38;5;2m     2445:        75:     let open Unix in[39m
     [38;5;2m9512[39m: [38;5;2m     2446:        76:     match select [Term.fds t |> fst] [] [] delay with[39m
     [38;5;2m9513[39m: [38;5;2m     2447:        77:     | ([], _, _) -> `Timer[39m
     [38;5;2m9514[39m: [38;5;2m     2448:        78:     | (_::_, _, _) -> (Term.event t :> r)[39m
     [38;5;2m9515[39m: [38;5;2m     2449:        79:     | exception Unix_error (EINTR, _, _) -> (Term.event t :> r)[39m
     [38;5;2m9516[39m: [38;5;2m     2450:        80: [39m
     [38;5;2m9517[39m: [38;5;2m     2451:        81: let loop t ~frame st =[39m
     [38;5;2m9518[39m: [38;5;2m     2452:        82:   let rec go st deadline =[39m
     [38;5;2m9519[39m: [38;5;2m     2453:        83:     let now = Unix.gettimeofday () in[39m
     [38;5;2m9520[39m: [38;5;2m     2454:        84:     if deadline <= now then[39m
     [38;5;2m9521[39m: [38;5;2m     2455:        85:       ( Term.image t (show st); go (step st) (frame +. deadline) )[39m
     [38;5;2m9522[39m: [38;5;2m     2456:        86:     else match event ~delay:(deadline -. now) t with[39m
     [38;5;2m9523[39m: [38;5;2m     2457:        87:       | `End | `Key (`Escape, _) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m9524[39m: [38;5;2m     2458:        88:       | `Resize _ | `Key (`ASCII ' ', _) -> go (gen (Term.size t)) deadline[39m
     [38;5;2m9525[39m: [38;5;2m     2459:        89:       | _ -> go st deadline in[39m
     [38;5;2m9526[39m: [38;5;2m     2460:        90:   go st (Unix.gettimeofday ())[39m
     [38;5;2m9527[39m: [38;5;2m     2461:        91: [39m
     [38;5;2m9528[39m: [38;5;2m     2462:        92: let () =[39m
     [38;5;2m9529[39m: [38;5;2m     2463:        93:   let t = Term.create () in[39m
     [38;5;2m9530[39m: [38;5;2m     2464:        94:   loop t ~frame:0.075 (gen (Term.size t));[39m
     [38;5;2m9531[39m: [38;5;2m     2465:        95:   Term.release t[39m
     [38;5;2m9532[39m: [38;5;2m     2466: Added regular file ../notty/examples/runes.ml:[39m
     [38;5;2m9533[39m: [38;5;2m     2467:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9534[39m: [38;5;2m     2468:         2:    See LICENSE.md. *)[39m
     [38;5;2m9535[39m: [38;5;2m     2469:         3: [39m
     [38;5;2m9536[39m: [38;5;2m     2470:         4: (**[39m
     [38;5;2m9537[39m: [38;5;2m     2471:         5:  * Demonstrates geometry computation with various scripts. A few of those will[39m
     [38;5;2m9538[39m: [38;5;2m     2472:         6:  * usually break.[39m
     [38;5;2m9539[39m: [38;5;2m     2473:         7:  *)[39m
     [38;5;2m9540[39m: [38;5;2m     2474:         8: open Notty[39m
     [38;5;2m9541[39m: [38;5;2m     2475:         9: open Notty.Infix[39m
     [38;5;2m9542[39m: [38;5;2m     2476:        10: open Common[39m
     [38;5;2m9543[39m: [38;5;2m     2477:        11: [39m
     [38;5;2m9544[39m: [38;5;2m     2478:        12: let hpad_sp attr l r i =[39m
     [38;5;2m9545[39m: [38;5;2m     2479:        13:   let h = I.height i in[39m
     [38;5;2m9546[39m: [38;5;2m     2480:        14:   I.(char attr ' ' l h <|> i <|> char attr ' ' r h)[39m
     [38;5;2m9547[39m: [38;5;2m     2481:        15: [39m
     [38;5;2m9548[39m: [38;5;2m     2482:        16: let vpad_sp attr t b i =[39m
     [38;5;2m9549[39m: [38;5;2m     2483:        17:   let w = I.width i in[39m
     [38;5;2m9550[39m: [38;5;2m     2484:        18:   I.(char attr ' ' w t <-> i <-> char attr ' ' w b)[39m
     [38;5;2m9551[39m: [38;5;2m     2485:        19: [39m
     [38;5;2m9552[39m: [38;5;2m     2486:        20: let grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m9553[39m: [38;5;2m     2487:        21: [39m
     [38;5;2m9554[39m: [38;5;2m     2488:        22: let centered attr xs =[39m
     [38;5;2m9555[39m: [38;5;2m     2489:        23:   let lns = List.map I.(string attr) xs in[39m
     [38;5;2m9556[39m: [38;5;2m     2490:        24:   let w   = List.fold_left (fun a i -> max a I.(width i)) 0 lns in[39m
     [38;5;2m9557[39m: [38;5;2m     2491:        25:   lns |> List.map I.(fun ln ->[39m
     [38;5;2m9558[39m: [38;5;2m     2492:        26:     let d = w - I.width ln in[39m
     [38;5;2m9559[39m: [38;5;2m     2493:        27:     char attr ' ' (d / 2) 1 <|> ln <|> char attr ' ' (d - d / 2) 1[39m
     [38;5;2m9560[39m: [38;5;2m     2494:        28:   ) |> I.vcat[39m
     [38;5;2m9561[39m: [38;5;2m     2495:        29: [39m
     [38;5;2m9562[39m: [38;5;2m     2496:        30: let note xs = I.([39m
     [38;5;2m9563[39m: [38;5;2m     2497:        31:   string A.(st bold) "Note:" <|>[39m
     [38;5;2m9564[39m: [38;5;2m     2498:        32:   (xs |> List.map (string A.empty) |> vcat |> hpad 1 0)[39m
     [38;5;2m9565[39m: [38;5;2m     2499:        33: )[39m
     [38;5;2m9566[39m: [38;5;2m     2500:        34: [39m
     [38;5;2m9567[39m: [38;5;2m     2501:        35: let text = [[39m
     [38;5;2m9568[39m: [38;5;2m     2502:        36:     "\225\154\160\225\155\135\225\154\187\225\155\171\225\155\146\225\155\166\225\154\166\225\155\171\225\154\160\225\154\177\225\154\169\225\154\160\225\154\162\225\154\177\225\155\171\225\154\160\225\155\129\225\154\177\225\154\170\225\155\171\225\154\183\225\155\150\225\154\187\225\154\185\225\155\166\225\155\154\225\154\179\225\154\162\225\155\151"[39m
     [38;5;2m9569[39m: [38;5;2m[39m
     [38;5;2m9570[39m: [38;5;2m     2504:        38:   ; "\225\154\183\225\155\129\225\154\160\225\155\171\225\154\187\225\155\150\225\155\171\225\154\185\225\155\129\225\155\154\225\155\150\225\155\171\225\154\160\225\154\169\225\154\177\225\155\171\225\155\158\225\154\177\225\155\129\225\154\187\225\155\143\225\154\190\225\155\150\225\155\171\225\155\158\225\154\169\225\155\151\225\155\150\225\155\139\225\155\171\225\154\187\225\155\154\225\155\135\225\155\143\225\154\170\225\154\190\225\155\172"[39m
     [38;5;2m9571[39m: [38;5;2m     2505:        39:   ; ""[39m
     [38;5;2m9572[39m: [38;5;2m     2506:        40:   ; "\227\129\132\227\130\141\227\129\175\227\129\171\227\129\187\227\129\184\227\129\168\227\129\161\227\130\138\227\129\172\227\130\139\227\130\146"[39m
     [38;5;2m9573[39m: [38;5;2m     2507:        41:   ; "\227\130\143\227\129\139\227\130\136\227\129\159\227\130\140\227\129\157\227\129\164\227\129\173\227\129\170\227\130\137\227\130\128"[39m
     [38;5;2m9574[39m: [38;5;2m     2508:        42:   ; "\227\129\134\227\130\144\227\129\174\227\129\138\227\129\143\227\130\132\227\129\190\227\129\145\227\129\181\227\129\147\227\129\136\227\129\166"[39m
     [38;5;2m9575[39m: [38;5;2m     2509:        43:   ; "\227\129\130\227\129\149\227\129\141\227\130\134\227\130\129\227\129\191\227\129\151\227\130\145\227\129\178\227\130\130\227\129\155\227\129\153"[39m
     [38;5;2m9576[39m: [38;5;2m     2510:        44:   ; ""[39m
     [38;5;2m9577[39m: [38;5;2m     2511:        45:   ; "\227\130\164\227\131\173\227\131\143\227\131\139\227\131\155\227\131\152\227\131\136 \227\131\129\227\131\170\227\131\140\227\131\171\227\131\178 \227\131\175\227\130\171\227\131\168\227\130\191\227\131\172\227\130\189 \227\131\132\227\131\141\227\131\138\227\131\169\227\131\160"[39m
     [38;5;2m9578[39m: [38;5;2m     2512:        46:   ; "\227\130\166\227\131\176\227\131\142\227\130\170\227\130\175\227\131\164\227\131\158 \227\130\177\227\131\149\227\130\179\227\130\168\227\131\134 \227\130\162\227\130\181\227\130\173\227\131\166\227\131\161\227\131\159\227\130\183 \227\131\177\227\131\146\227\131\162\227\130\187\227\130\185\227\131\179"[39m
     [38;5;2m9579[39m: [38;5;2m     2513:        47:   ; ""[39m
     [38;5;2m9580[39m: [38;5;2m     2514:        48:   ; "\237\130\164\236\138\164\236\157\152 \234\179\160\236\156\160\236\161\176\234\177\180\236\157\128 \236\158\133\236\136\160\235\129\188\235\166\172 \235\167\140\235\130\152\236\149\188"[39m
     [38;5;2m9581[39m: [38;5;2m     2515:        49:   ; "\237\149\152\234\179\160 \237\138\185\235\179\132\237\149\156 \234\184\176\236\136\160\236\157\128 \237\149\132\236\154\148\236\185\152 \236\149\138\235\139\164"[39m
     [38;5;2m9582[39m: [38;5;2m     2516:        50:   ; ""[39m
     [38;5;2m9583[39m: [38;5;2m     2517:        51:   ; "\206\158\206\181\207\131\206\186\206\181\207\128\206\172\206\182\207\137 \207\132\225\189\180\206\189 \207\136\207\133\207\135\206\191\207\134\206\184\207\140\207\129\206\177 \206\178\206\180\206\181\206\187\207\133\206\179\206\188\206\175\206\177"[39m
     [38;5;2m9584[39m: [38;5;2m     2518:        52:   ; ""[39m
     [38;5;2m9585[39m: [38;5;2m     2519:        53:   ; "\208\167\208\181\209\136\209\155\208\181 \209\134e\209\146\208\181\209\154\208\181 \208\188\209\128e\208\182\208\176\209\129\209\130\208\184\208\188 \209\159\208\176\208\186\208\190\208\188 \208\191\208\190\208\177\208\190\209\153\209\136\208\176\208\178\208\176"[39m
     [38;5;2m9586[39m: [38;5;2m     2520:        54:   ; "\209\132\208\181\209\128\209\130\208\184\208\187\208\184\208\183\208\176\209\134\208\184\209\152\209\131 \208\179\208\181\208\189\209\129\208\186\208\184\209\133 \209\133\208\184\208\177\209\128\208\184\208\180\208\176!"[39m
     [38;5;2m9587[39m: [38;5;2m     2521:        55:   ; ""[39m
     [38;5;2m9588[39m: [38;5;2m     2522:        56:   ; "Heiz\195\182lr\195\188cksto\195\159abd\195\164mpfung."[39m
     [38;5;2m9589[39m: [38;5;2m     2523:        57:   ; ""[39m
     [38;5;2m9590[39m: [38;5;2m     2524:        58:   ; "\208\146 \209\135\208\176\209\137\208\176\209\133 \209\142\208\179\208\176 \208\182\208\184\208\187 \208\177\209\139 \209\134\208\184\209\130\209\128\209\131\209\129? \208\148\208\176, \208\189\208\190 \209\132\208\176\208\187\209\140\209\136\208\184\208\178\209\139\208\185 \209\141\208\186\208\183\208\181\208\188\208\191\208\187\209\143\209\128!"[39m
     [38;5;2m9591[39m: [38;5;2m     2525:        59:   ; ""[39m
     [38;5;2m9592[39m: [38;5;2m     2526:        60:   ; "\225\131\149\225\131\148\225\131\158\225\131\174\225\131\152\225\131\161 \225\131\162\225\131\167\225\131\144\225\131\157\225\131\161\225\131\144\225\131\156\225\131\152 \225\131\168\225\131\157\225\131\151\225\131\144 \225\131\160\225\131\163\225\131\161\225\131\151\225\131\144\225\131\149\225\131\148\225\131\154\225\131\152"[39m
     [38;5;2m9593[39m: [38;5;2m     2527:        61:   ; ""[39m
     [38;5;2m9594[39m: [38;5;2m     2528:        62:   ; "Lu\195\173s arg\195\188ia \195\160 J\195\186lia que \194\171bra\195\167\195\181es, f\195\169, ch\195\161,"[39m
     [38;5;2m9595[39m: [38;5;2m     2529:        63:   ; "\195\179xido, p\195\180r, z\195\162ng\195\163o\194\187 eram palavras do portugu\195\170s."[39m
     [38;5;2m9596[39m: [38;5;2m     2530:        64:   ; ""[39m
     [38;5;2m9597[39m: [38;5;2m     2531:        65:   ; "ding ↹ ∀ ⌘ ▓ ◭ ☃ ♠ ♋ ♕ ⚅ ♩ ☭ ✎ 🂡 bats"[39m
     [38;5;2m9598[39m: [38;5;2m     2532:        66:   ; ""[39m
     [38;5;2m9599[39m: [38;5;2m     2533:        67:   ; "\216\181\217\144\217\129 \216\174\217\142\217\132\217\130\217\142 \216\174\217\142\217\136\216\175\217\144 \217\131\217\142\217\133\217\144\216\171\217\132\217\144 \216\167\217\132\216\180\217\142\217\133\216\179\217\144 \216\165\217\144\216\176 \216\168\217\142\216\178\217\142\216\186\217\142\216\170 \226\128\148 \217\138\217\142\216\173\216\184\217\137 \216\167\217\132\216\182\217\142\216\172\217\138\216\185\217\143 \216\168\217\144\217\135\216\167 \217\134\217\142\216\172\217\132\216\167\216\161\217\142 \217\133\217\144\216\185\216\183\216\167\216\177\217\144"[39m
     [38;5;2m9600[39m: [38;5;2m     2534:        68:   ; ""[39m
     [38;5;2m9601[39m: [38;5;2m     2535:        69:   ; "\215\147\215\146 \215\161\215\167\215\168\215\159 \215\169\215\152 \215\145\215\153\215\157 \215\158\215\144\215\149\215\155\215\150\215\145 \215\149\215\156\215\164\215\170\215\162 \215\158\215\166\215\144 \215\156\215\149 \215\151\215\145\215\168\215\148 \215\144\215\153\215\154 \215\148\215\167\215\156\215\153\215\152\215\148"[39m
     [38;5;2m9602[39m: [38;5;2m     2536:        70:   ; ""[39m
     [38;5;2m9603[39m: [38;5;2m     2537:        71:   ; "\224\174\175\224\174\190\224\174\174\224\174\177\224\174\191\224\174\168\224\175\141\224\174\164 \224\174\174\224\175\138\224\174\180\224\174\191\224\174\149\224\174\179\224\174\191\224\174\178\224\175\135 \224\174\164\224\174\174\224\174\191\224\174\180\224\175\141\224\174\174\224\175\138\224\174\180\224\174\191 \224\174\170\224\175\139\224\174\178\224\175\141 \224\174\135\224\174\169\224\174\191\224\174\164\224\174\190\224\174\181\224\174\164\224\175\129 \224\174\142\224\174\153\224\175\141\224\174\149\224\175\129\224\174\174\224\175\141 \224\174\149\224\174\190\224\174\163\224\175\139\224\174\174\224\175\141,"[39m
     [38;5;2m9604[39m: [38;5;2m     2538:        72:   ; "\224\174\170\224\174\190\224\174\174\224\174\176\224\174\176\224\174\190\224\174\175\224\175\141 \224\174\181\224\174\191\224\174\178\224\174\153\224\175\141\224\174\149\224\175\129\224\174\149\224\174\179\224\174\190\224\174\175\224\175\141, \224\174\137\224\174\178\224\174\149\224\174\169\224\175\136\224\174\164\224\175\141\224\174\164\224\175\129\224\174\174\224\175\141 \224\174\135\224\174\149\224\174\180\224\175\141\224\174\154\224\175\141\224\174\154\224\174\191\224\174\154\224\175\138\224\174\178\224\174\170\224\175\141 \224\174\170\224\174\190\224\174\169\224\175\141\224\174\174\224\175\136 \224\174\149\224\175\134\224\174\159\224\175\141\224\174\159\224\175\129"[39m
     [38;5;2m9605[39m: [38;5;2m     2539:        73:   ; ""[39m
     [38;5;2m9606[39m: [38;5;2m     2540:        74:   ; "\224\178\172\224\178\190 \224\178\135\224\178\178\224\179\141\224\178\178\224\178\191 \224\178\184\224\178\130\224\178\173\224\178\181\224\178\191\224\178\184\224\179\129 \224\178\135\224\178\130\224\178\166\224\179\134\224\178\168\224\179\141\224\178\168 \224\178\185\224\179\131\224\178\166\224\178\175\224\178\166\224\178\178\224\178\191"[39m
     [38;5;2m9607[39m: [38;5;2m     2541:        75:   ; "\224\178\168\224\178\191\224\178\164\224\179\141\224\178\175\224\178\181\224\179\130 \224\178\133\224\178\181\224\178\164\224\178\176\224\178\191\224\178\170 \224\178\184\224\178\164\224\179\141\224\178\175\224\178\190\224\178\181\224\178\164\224\178\190\224\178\176"[39m
     [38;5;2m9608[39m: [38;5;2m     2542:        76:   ; ""[39m
     [38;5;2m9609[39m: [38;5;2m     2543:        77:   ; "\224\164\139\224\164\183\224\164\191\224\164\175\224\165\139\224\164\130 \224\164\149\224\165\139 \224\164\184\224\164\164\224\164\190\224\164\168\224\165\135 \224\164\181\224\164\190\224\164\178\224\165\135 \224\164\166\224\165\129\224\164\183\224\165\141\224\164\159 \224\164\176\224\164\190\224\164\149\224\165\141\224\164\183\224\164\184\224\165\139\224\164\130 \224\164\149\224\165\135 \224\164\176\224\164\190\224\164\156\224\164\190 \224\164\176\224\164\190\224\164\181\224\164\163 \224\164\149\224\164\190 \224\164\184\224\164\176\224\165\141\224\164\181\224\164\168\224\164\190\224\164\182 \224\164\149\224\164\176\224\164\168\224\165\135 \224\164\181\224\164\190\224\164\178\224\165\135"[39m
     [38;5;2m9610[39m: [38;5;2m     2544:        78:   ; "\224\164\181\224\164\191\224\164\183\224\165\141\224\164\163\224\165\129\224\164\181\224\164\164\224\164\190\224\164\176 \224\164\173\224\164\151\224\164\181\224\164\190\224\164\168 \224\164\182\224\165\141\224\164\176\224\165\128\224\164\176\224\164\190\224\164\174, \224\164\133\224\164\175\224\165\139\224\164\167\224\165\141\224\164\175\224\164\190 \224\164\149\224\165\135 \224\164\174\224\164\185\224\164\190\224\164\176\224\164\190\224\164\156 \224\164\166\224\164\182\224\164\176\224\164\165 \224\164\149\224\165\135 \224\164\172\224\164\161\224\164\188\224\165\135 \224\164\184\224\164\170\224\165\129\224\164\164\224\165\141\224\164\176 \224\164\165\224\165\135\224\165\164"[39m
     [38;5;2m9611[39m: [38;5;2m     2545:        79: ][39m
     [38;5;2m9612[39m: [38;5;2m     2546:        80: [39m
     [38;5;2m9613[39m: [38;5;2m     2547:        81: let () =[39m
     [38;5;2m9614[39m: [38;5;2m     2548:        82:   let attr = A.(fg lightmagenta) in[39m
     [38;5;2m9615[39m: [38;5;2m     2549:        83:   let img = I.([39m
     [38;5;2m9616[39m: [38;5;2m     2550:        84:     centered attr text[39m
     [38;5;2m9617[39m: [38;5;2m     2551:        85:     |> vpad_sp attr 1 1 |> hpad_sp attr 2 2[39m
     [38;5;2m9618[39m: [38;5;2m     2552:        86:     |> Images.outline attr[39m
     [38;5;2m9619[39m: [38;5;2m     2553:        87:     |> pad ~t:1 ~b:1 ~l:2 ~r:2[39m
     [38;5;2m9620[39m: [38;5;2m     2554:        88:   ) <->[39m
     [38;5;2m9621[39m: [38;5;2m     2555:        89:     note [ "Alignment will usually break on the last few scripts."[39m
     [38;5;2m9622[39m: [38;5;2m     2556:        90:          ; "This is at the limit of what terminals can do."[39m
     [38;5;2m9623[39m: [38;5;2m     2557:        91:          ; ":(" ][39m
     [38;5;2m9624[39m: [38;5;2m     2558:        92:   in Notty_unix.(eol img |> output_image)[39m
     [38;5;2m9625[39m: [38;5;2m     2559: Added regular file ../notty/examples/sierpinski.ml:[39m
     [38;5;2m9626[39m: [38;5;2m     2560:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9627[39m: [38;5;2m     2561:         2:    See LICENSE.md. *)[39m
     [38;5;2m9628[39m: [38;5;2m     2562:         3: [39m
     [38;5;2m9629[39m: [38;5;2m     2563:         4: (**[39m
     [38;5;2m9630[39m: [38;5;2m     2564:         5:  * A classic example in combinatory graphics.[39m
     [38;5;2m9631[39m: [38;5;2m     2565:         6:  *[39m
     [38;5;2m9632[39m: [38;5;2m     2566:         7:  * Demonstrates interaction.[39m
     [38;5;2m9633[39m: [38;5;2m     2567:         8:  *)[39m
     [38;5;2m9634[39m: [38;5;2m     2568:         9: open Notty[39m
     [38;5;2m9635[39m: [38;5;2m     2569:        10: open Common[39m
     [38;5;2m9636[39m: [38;5;2m     2570:        11: [39m
     [38;5;2m9637[39m: [38;5;2m     2571:        12: let () =[39m
     [38;5;2m9638[39m: [38;5;2m     2572:        13:   simpleterm ~s:1[39m
     [38;5;2m9639[39m: [38;5;2m     2573:        14:     ~f:(fun s -> function[39m
     [38;5;2m9640[39m: [38;5;2m     2574:        15:       | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m9641[39m: [38;5;2m     2575:        16:       | `Key (`Arrow a, _) ->[39m
     [38;5;2m9642[39m: [38;5;2m     2576:        17:         ( match a with[39m
     [38;5;2m9643[39m: [38;5;2m     2577:        18:           | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m9644[39m: [38;5;2m     2578:        19:           | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m9645[39m: [38;5;2m     2579:        20:       | _ -> Some s)[39m
     [38;5;2m9646[39m: [38;5;2m     2580:        21:     ~imgf:I.(fun _ s ->[39m
     [38;5;2m9647[39m: [38;5;2m     2581:        22:       string A.empty (string_of_int s) <->[39m
     [38;5;2m9648[39m: [38;5;2m     2582:        23:       pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m9649[39m: [38;5;2m     2583:        24:     )[39m
     [38;5;2m9650[39m: [38;5;2m     2584: Added regular file ../notty/examples/sierpinski_lwt.ml:[39m
     [38;5;2m9651[39m: [38;5;2m     2585:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9652[39m: [38;5;2m     2586:         2:    See LICENSE.md. *)[39m
     [38;5;2m9653[39m: [38;5;2m     2587:         3: [39m
     [38;5;2m9654[39m: [38;5;2m     2588:         4: (**[39m
     [38;5;2m9655[39m: [38;5;2m     2589:         5:  * Demonstrates Lwt interaction.[39m
     [38;5;2m9656[39m: [38;5;2m     2590:         6:  *)[39m
     [38;5;2m9657[39m: [38;5;2m     2591:         7: open Notty[39m
     [38;5;2m9658[39m: [38;5;2m     2592:         8: open Common_lwt[39m
     [38;5;2m9659[39m: [38;5;2m     2593:         9: [39m
     [38;5;2m9660[39m: [38;5;2m     2594:        10: let img s = I.([39m
     [38;5;2m9661[39m: [38;5;2m     2595:        11:   string A.empty (string_of_int s) <-> hpad 2 0 (Images.sierp A.magenta s)[39m
     [38;5;2m9662[39m: [38;5;2m     2596:        12: )[39m
     [38;5;2m9663[39m: [38;5;2m     2597:        13: [39m
     [38;5;2m9664[39m: [38;5;2m     2598:        14: let () =[39m
     [38;5;2m9665[39m: [38;5;2m     2599:        15:   simpleterm_lwt ~s:1[39m
     [38;5;2m9666[39m: [38;5;2m     2600:        16:     ~f:(fun s -> function[39m
     [38;5;2m9667[39m: [38;5;2m     2601:        17:       | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m9668[39m: [38;5;2m     2602:        18:       | `Key (`Arrow a, _) ->[39m
     [38;5;2m9669[39m: [38;5;2m     2603:        19:         ( match a with[39m
     [38;5;2m9670[39m: [38;5;2m     2604:        20:           | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m9671[39m: [38;5;2m     2605:        21:           | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m9672[39m: [38;5;2m     2606:        22:       | _ -> Some s)[39m
     [38;5;2m9673[39m: [38;5;2m     2607:        23:     ~imgf:I.(fun _ s ->[39m
     [38;5;2m9674[39m: [38;5;2m     2608:        24:       string A.empty (string_of_int s) <->[39m
     [38;5;2m9675[39m: [38;5;2m     2609:        25:       pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m9676[39m: [38;5;2m     2610:        26:     )[39m
     [38;5;2m9677[39m: [38;5;2m     2611: Added regular file ../notty/examples/testpatterns.ml:[39m
     [38;5;2m9678[39m: [38;5;2m     2612:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9679[39m: [38;5;2m     2613:         2:    See LICENSE.md. *)[39m
     [38;5;2m9680[39m: [38;5;2m     2614:         3: [39m
     [38;5;2m9681[39m: [38;5;2m     2615:         4: (**[39m
     [38;5;2m9682[39m: [38;5;2m     2616:         5:  * A few images that exercise image composition, cropping, and padding. This[39m
     [38;5;2m9683[39m: [38;5;2m     2617:         6:  * test is a good canary.[39m
     [38;5;2m9684[39m: [38;5;2m     2618:         7:  *)[39m
     [38;5;2m9685[39m: [38;5;2m     2619:         8: open Common[39m
     [38;5;2m9686[39m: [38;5;2m     2620:         9: open Notty_unix[39m
     [38;5;2m9687[39m: [38;5;2m     2621:        10: [39m
     [38;5;2m9688[39m: [38;5;2m     2622:        11: let () = Images.[i3; i5; checker1] |> List.map eol |> List.iter output_image[39m
     [38;5;2m9689[39m: [38;5;2m     2623: Added regular file ../notty/examples/thisbig.ml:[39m
     [38;5;2m9690[39m: [38;5;2m     2624:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9691[39m: [38;5;2m     2625:         2:    See LICENSE.md. *)[39m
     [38;5;2m9692[39m: [38;5;2m     2626:         3: [39m
     [38;5;2m9693[39m: [38;5;2m     2627:         4: open Notty[39m
     [38;5;2m9694[39m: [38;5;2m     2628:         5: open Common[39m
     [38;5;2m9695[39m: [38;5;2m     2629:         6: [39m
     [38;5;2m9696[39m: [38;5;2m     2630:         7: let () =[39m
     [38;5;2m9697[39m: [38;5;2m     2631:         8:   Notty_unix.output_image_size @@ fun (w, h) ->[39m
     [38;5;2m9698[39m: [38;5;2m     2632:         9:     Images.outline A.(fg lightblue)[39m
     [38;5;2m9699[39m: [38;5;2m     2633:        10:       I.(hsnap (w - 2) @@[39m
     [38;5;2m9700[39m: [38;5;2m     2634:        11:           vsnap (h - 3) @@ (* +1 for the prompt *)[39m
     [38;5;2m9701[39m: [38;5;2m     2635:        12:             Images.sierp A.lightblue 5)[39m
     [38;5;2m9702[39m: [38;5;2m     2636: Added regular file ../notty/notty.opam:[39m
     [38;5;2m9703[39m: [38;5;2m     2637:         1: opam-version: "2.0"[39m
     [38;5;2m9704[39m: [38;5;2m     2638:         2: homepage:     "https://github.com/pqwy/notty"[39m
     [38;5;2m9705[39m: [38;5;2m     2639:         3: dev-repo:     "git+https://github.com/pqwy/notty.git"[39m
     [38;5;2m9706[39m: [38;5;2m     2640:         4: bug-reports:  "https://github.com/pqwy/notty/issues"[39m
     [38;5;2m9707[39m: [38;5;2m     2641:         5: doc:          "https://pqwy.github.io/notty/doc"[39m
     [38;5;2m9708[39m: [38;5;2m     2642:         6: author:       "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m9709[39m: [38;5;2m     2643:         7: maintainer:   "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m9710[39m: [38;5;2m     2644:         8: license:      "ISC"[39m
     [38;5;2m9711[39m: [38;5;2m     2645:         9: synopsis:     "Declaring terminals"[39m
     [38;5;2m9712[39m: [38;5;2m     2646:        10: description:[39m
     [38;5;2m9713[39m: [38;5;2m     2647:        11:   "Notty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m9714[39m: [38;5;2m     2648:        12:   of composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m9715[39m: [38;5;2m     2649:        13:   model, providing something simpler and more expressive."[39m
     [38;5;2m9716[39m: [38;5;2m     2650:        14: [39m
     [38;5;2m9717[39m: [38;5;2m     2651:        15: build: [ [ "dune" "subst" ] {dev}[39m
     [38;5;2m9718[39m: [38;5;2m     2652:        16:          [ "dune" "build" "-p" name "-j" jobs ] ][39m
     [38;5;2m9719[39m: [38;5;2m     2653:        17: depends: [[39m
     [38;5;2m9720[39m: [38;5;2m     2654:        18:   "ocaml" {>= "4.08.0"}[39m
     [38;5;2m9721[39m: [38;5;2m     2655:        19:   "dune" {>= "1.7"}[39m
     [38;5;2m9722[39m: [38;5;2m     2656:        20:   "cppo" {build & >= "1.1.0"}[39m
     [38;5;2m9723[39m: [38;5;2m     2657:        21:   "uutf" {>= "1.0.0"}[39m
     [38;5;2m9724[39m: [38;5;2m     2658:        22: ][39m
     [38;5;2m9725[39m: [38;5;2m     2659:        23: depopts: [ "lwt" ][39m
     [38;5;2m9726[39m: [38;5;2m     2660:        24: conflicts: [ "lwt" {<"2.5.2"} ][39m
     [38;5;2m9727[39m: [38;5;2m     2661: Added regular file ../notty/src/dune:[39m
     [38;5;2m9728[39m: [38;5;2m     2662:         1: (include_subdirs unqualified)[39m
     [38;5;2m9729[39m: [38;5;2m     2663:         2: [39m
     [38;5;2m9730[39m: [38;5;2m     2664:         3: (library[39m
     [38;5;2m9731[39m: [38;5;2m     2665:         4:   (public_name notty)[39m
     [38;5;2m9732[39m: [38;5;2m     2666:         5:   (synopsis "Declaring terminals")[39m
     [38;5;2m9733[39m: [38;5;2m     2667:         6:   (libraries uutf)[39m
     [38;5;2m9734[39m: [38;5;2m     2668:         7:   (wrapped false)[39m
     [38;5;2m9735[39m: [38;5;2m     2669:         8:   (modules notty notty_grapheme_cluster notty_uucp notty_uucp_data)[39m
     [38;5;2m9736[39m: [38;5;2m     2670:         9:   (private_modules notty_grapheme_cluster notty_uucp notty_uucp_data))[39m
     [38;5;2m9737[39m: [38;5;2m     2671:        10: [39m
     [38;5;2m9738[39m: [38;5;2m     2672:        11: (library[39m
     [38;5;2m9739[39m: [38;5;2m     2673:        12:   (public_name notty.top)[39m
     [38;5;2m9740[39m: [38;5;2m     2674:        13:   (synopsis "Notty toplevel support")[39m
     [38;5;2m9741[39m: [38;5;2m     2675:        14:   (name notty_top)[39m
     [38;5;2m9742[39m: [38;5;2m     2676:        15:   (wrapped false)[39m
     [38;5;2m9743[39m: [38;5;2m     2677:        16:   (modules notty_top)[39m
     [38;5;2m9744[39m: [38;5;2m     2678:        17:   (preprocess (action (run %{bin:cppo} -V OCAML:%{ocaml_version} %{input-file})))[39m
     [38;5;2m9745[39m: [38;5;2m     2679:        18:   (libraries notty compiler-libs.toplevel))[39m
     [38;5;2m9746[39m: [38;5;2m     2680:        19: [39m
     [38;5;2m9747[39m: [38;5;2m     2681:        20: (install[39m
     [38;5;2m9748[39m: [38;5;2m     2682:        21:   (section lib)[39m
     [38;5;2m9749[39m: [38;5;2m     2683:        22:   (files (notty_top_init.ml as top/notty_top_init.ml)))[39m
     [38;5;2m9750[39m: [38;5;2m     2684: Added regular file ../notty/src/no-uucp/README.md:[39m
     [38;5;2m9751[39m: [38;5;2m     2685:         1: Cannibalized bits of Uucp:[39m
     [38;5;2m9752[39m: [38;5;2m     2686:         2: [39m
     [38;5;2m9753[39m: [38;5;2m     2687:         3: - `Notty_uucp_data` is generated from an actual Uucp installation.[39m
     [38;5;2m9754[39m: [38;5;2m     2688:         4: - `Notty_uucp` uses it to provide the few Unicode properties that Notty needs.[39m
     [38;5;2m9755[39m: [38;5;2m     2689:         5: - `Notty_grapheme_cluster` is `Grapheme_cluster` from Uuseg, adapted to use the[39m
     [38;5;2m9756[39m: [38;5;2m     2690:         6:   above.[39m
     [38;5;2m9757[39m: [38;5;2m     2691:         7: [39m
     [38;5;2m9758[39m: [38;5;2m     2692:         8: Compiled size of these is on the order of 70K. Uucp is presently a monolithic 10M.[39m
     [38;5;2m9759[39m: [38;5;2m     2693:         9: [39m
     [38;5;2m9760[39m: [38;5;2m     2694:        10: The idea is to remove these in favor of the actual Uucp/Uuseg, as soon as it[39m
     [38;5;2m9761[39m: [38;5;2m     2695:        11: becomes possible to depend only on the necessary parts of Uucp.[39m
     [38;5;2m9762[39m: [38;5;2m     2696:        12: [39m
     [38;5;2m9763[39m: [38;5;2m     2697:        13: Uucp and Uuseg are Copyright (c) 2014 Daniel C. Bünzli.[39m
     [38;5;2m9764[39m: [38;5;2m     2698: Added regular file ../notty/src/no-uucp/notty_grapheme_cluster.ml:[39m
     [38;5;2m9765[39m: [38;5;2m     2699:         1: (*---------------------------------------------------------------------------[39m
     [38;5;2m9766[39m: [38;5;2m     2700:         2:    Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m9767[39m: [38;5;2m     2701:         3:    Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m9768[39m: [38;5;2m     2702:         4:    %%NAME%% %%VERSION%%[39m
     [38;5;2m9769[39m: [38;5;2m     2703:         5:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m9770[39m: [38;5;2m     2704:         6: [39m
     [38;5;2m9771[39m: [38;5;2m     2705:         7: (* These are the rules as found in [1], with property values aliases [2][39m
     [38;5;2m9772[39m: [38;5;2m     2706:         8:    substituted.[39m
     [38;5;2m9773[39m: [38;5;2m     2707:         9: [39m
     [38;5;2m9774[39m: [38;5;2m     2708:        10:    GB1.               sot ÷ Any[39m
     [38;5;2m9775[39m: [38;5;2m     2709:        11:    GB2.               Any ÷ eot[39m
     [38;5;2m9776[39m: [38;5;2m     2710:        12:    GB3.                CR × LF[39m
     [38;5;2m9777[39m: [38;5;2m     2711:        13:    GB4.        (CN|CR|LF) ÷[39m
     [38;5;2m9778[39m: [38;5;2m     2712:        14:    GB5.                   ÷ (CN|CR|LF)[39m
     [38;5;2m9779[39m: [38;5;2m     2713:        15:    GB6.                 L × (L|V|LV|LVT)[39m
     [38;5;2m9780[39m: [38;5;2m     2714:        16:    GB7.            (LV|V) × (V|T)[39m
     [38;5;2m9781[39m: [38;5;2m     2715:        17:    GB8.           (LVT|T) × T[39m
     [38;5;2m9782[39m: [38;5;2m     2716:        18:    GB9.                   × (EX|ZWJ)[39m
     [38;5;2m9783[39m: [38;5;2m     2717:        19:    GB9a.                  × SM[39m
     [38;5;2m9784[39m: [38;5;2m     2718:        20:    GB9b.               PP ×[39m
     [38;5;2m9785[39m: [38;5;2m     2719:        21:    GB10. (v10.0.0) (EB|EBG) EX* × EM[39m
     [38;5;2m9786[39m: [38;5;2m     2720:        22:    GB11. (v10.0.0)          ZWJ × (GAZ|EBG)[39m
     [38;5;2m9787[39m: [38;5;2m     2721:        23:    GB12.  sot (RI RI)* RI × RI[39m
     [38;5;2m9788[39m: [38;5;2m     2722:        24:    GB13.   [^RI] (RI RI)* × RI[39m
     [38;5;2m9789[39m: [38;5;2m     2723:        25:    GB999.             Any ÷ Any[39m
     [38;5;2m9790[39m: [38;5;2m     2724:        26: [39m
     [38;5;2m9791[39m: [38;5;2m     2725:        27:    [1]: http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries[39m
     [38;5;2m9792[39m: [38;5;2m     2726:        28:    [2]: http://www.unicode.org/Public/7.0.0/ucd/PropertyValueAliases.txt[39m
     [38;5;2m9793[39m: [38;5;2m     2727:        29:    [3]: http://www.unicode.org/Public/7.0.0/ucd/auxiliary/GraphemeBreakTest.html[39m
     [38;5;2m9794[39m: [38;5;2m     2728:        30: [39m
     [38;5;2m9795[39m: [38;5;2m     2729:        31:    By the structure of the rules we see that grapheme clusters[39m
     [38;5;2m9796[39m: [38;5;2m     2730:        32:    boundaries can *mostly* be determined by simply looking at the[39m
     [38;5;2m9797[39m: [38;5;2m     2731:        33:    grapheme cluster break property value of the character on the left[39m
     [38;5;2m9798[39m: [38;5;2m     2732:        34:    and on the right of a boundary. The exceptions are GB10 and GB12-13[39m
     [38;5;2m9799[39m: [38;5;2m     2733:        35:    which are handled specially by enriching the segmenter state in[39m
     [38;5;2m9800[39m: [38;5;2m     2734:        36:    a horribly ad-hoc fashion. *)[39m
     [38;5;2m9801[39m: [38;5;2m     2735:        37: [39m
     [38;5;2m9802[39m: [38;5;2m     2736:        38: type ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m9803[39m: [38;5;2m     2737:        39: [39m
     [38;5;2m9804[39m: [38;5;2m     2738:        40: type gcb =[39m
     [38;5;2m9805[39m: [38;5;2m     2739:        41:   | CN | CR | EX | EB | EBG | EM | GAZ | L | LF | LV | LVT | PP | RI[39m
     [38;5;2m9806[39m: [38;5;2m     2740:        42:   | SM | T | V | XX | ZWJ | Sot[39m
     [38;5;2m9807[39m: [38;5;2m     2741:        43: [39m
     [38;5;2m9808[39m: [38;5;2m     2742:        44: (* WARNING. The indexes used here need to be synchronized with those[39m
     [38;5;2m9809[39m: [38;5;2m     2743:        45:    assigned by uucp for Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m9810[39m: [38;5;2m     2744:        46: [39m
     [38;5;2m9811[39m: [38;5;2m     2745:        47: let byte_to_gcb =[39m
     [38;5;2m9812[39m: [38;5;2m     2746:        48:   [| CN; CR; EX; EB; EBG; EM; GAZ; L; LF; LV; LVT; PP; RI;[39m
     [38;5;2m9813[39m: [38;5;2m     2747:        49:      SM; T; V; XX; ZWJ; |][39m
     [38;5;2m9814[39m: [38;5;2m     2748:        50: [39m
     [38;5;2m9815[39m: [38;5;2m     2749:        51: let gcb u = byte_to_gcb.(Notty_uucp.grapheme_cluster_boundary u)[39m
     [38;5;2m9816[39m: [38;5;2m     2750:        52: [39m
     [38;5;2m9817[39m: [38;5;2m     2751:        53: type state =[39m
     [38;5;2m9818[39m: [38;5;2m     2752:        54: | Fill  (* get next uchar to decide boundary. *)[39m
     [38;5;2m9819[39m: [38;5;2m     2753:        55: | Flush (* an uchar is buffered, client needs to get it out with `Await. *)[39m
     [38;5;2m9820[39m: [38;5;2m     2754:        56: | End   (* `End was added. *)[39m
     [38;5;2m9821[39m: [38;5;2m     2755:        57: [39m
     [38;5;2m9822[39m: [38;5;2m     2756:        58: type t =[39m
     [38;5;2m9823[39m: [38;5;2m     2757:        59:   { mutable state : state;                                 (* current state. *)[39m
     [38;5;2m9824[39m: [38;5;2m     2758:        60:     mutable left : gcb;            (* break property value left of boundary. *)[39m
     [38;5;2m9825[39m: [38;5;2m     2759:        61:     mutable odd_ri : bool;                  (* odd number of RI on the left. *)[39m
     [38;5;2m9826[39m: [38;5;2m     2760:        62:     mutable emoji_seq : bool;               (* (EB|EBG) Extend* on the left. *)[39m
     [38;5;2m9827[39m: [38;5;2m     2761:        63:     mutable buf : [ `Uchar of Uchar.t ] }                 (* bufferized add. *)[39m
     [38;5;2m9828[39m: [38;5;2m     2762:        64: [39m
     [38;5;2m9829[39m: [38;5;2m     2763:        65: let nul_buf = `Uchar (Uchar.unsafe_of_int 0x0000)[39m
     [38;5;2m9830[39m: [38;5;2m     2764:        66: [39m
     [38;5;2m9831[39m: [38;5;2m     2765:        67: let create () =[39m
     [38;5;2m9832[39m: [38;5;2m     2766:        68:   { state = Fill; left = Sot;[39m
     [38;5;2m9833[39m: [38;5;2m     2767:        69:     odd_ri = false; emoji_seq = false;[39m
     [38;5;2m9834[39m: [38;5;2m     2768:        70:     buf = nul_buf (* overwritten *); }[39m
     [38;5;2m9835[39m: [38;5;2m     2769:        71: [39m
     [38;5;2m9836[39m: [38;5;2m     2770:        72: let break s right = match s.left, right with[39m
     [38;5;2m9837[39m: [38;5;2m     2771:        73: | (* GB1 *)   Sot, _ -> true[39m
     [38;5;2m9838[39m: [38;5;2m     2772:        74:   (* GB2 is handled by `End *)[39m
     [38;5;2m9839[39m: [38;5;2m     2773:        75: | (* GB3 *)   CR, LF -> false[39m
     [38;5;2m9840[39m: [38;5;2m     2774:        76: | (* GB4 *)   (CN|CR|LF), _ -> true[39m
     [38;5;2m9841[39m: [38;5;2m     2775:        77: | (* GB5 *)   _, (CN|CR|LF) -> true[39m
     [38;5;2m9842[39m: [38;5;2m     2776:        78: | (* GB6 *)   L, (L|V|LV|LVT) -> false[39m
     [38;5;2m9843[39m: [38;5;2m     2777:        79: | (* GB7 *)   (LV|V), (V|T) -> false[39m
     [38;5;2m9844[39m: [38;5;2m     2778:        80: | (* GB8 *)   (LVT|T), T -> false[39m
     [38;5;2m9845[39m: [38;5;2m     2779:        81: | (* GB9+a *) _, (EX|ZWJ|SM) -> false[39m
     [38;5;2m9846[39m: [38;5;2m     2780:        82: | (* GB9b *)  PP, _ -> false[39m
     [38;5;2m9847[39m: [38;5;2m     2781:        83: | (* GB10 *)  _, EM when s.emoji_seq -> false[39m
     [38;5;2m9848[39m: [38;5;2m     2782:        84: | (* GB11 *)  ZWJ, (GAZ|EBG) -> false[39m
     [38;5;2m9849[39m: [38;5;2m     2783:        85: | (* GB12+13 *) RI, RI when s.odd_ri -> false[39m
     [38;5;2m9850[39m: [38;5;2m     2784:        86: | (* GB999 *) _, _ -> true[39m
     [38;5;2m9851[39m: [38;5;2m     2785:        87: [39m
     [38;5;2m9852[39m: [38;5;2m     2786:        88: let update_left s right =[39m
     [38;5;2m9853[39m: [38;5;2m     2787:        89:   s.left <- right;[39m
     [38;5;2m9854[39m: [38;5;2m     2788:        90:   match s.left with[39m
     [38;5;2m9855[39m: [38;5;2m     2789:        91:   | EX -> (* keep s.emoji_seq as is *) s.odd_ri <- false[39m
     [38;5;2m9856[39m: [38;5;2m     2790:        92:   | EB | EBG -> s.emoji_seq <- true; s.odd_ri <- false[39m
     [38;5;2m9857[39m: [38;5;2m     2791:        93:   | RI -> s.emoji_seq <- false; s.odd_ri <- not s.odd_ri[39m
     [38;5;2m9858[39m: [38;5;2m     2792:        94:   | _ -> s.emoji_seq <- false; s.odd_ri <- false[39m
     [38;5;2m9859[39m: [38;5;2m     2793:        95: [39m
     [38;5;2m9860[39m: [38;5;2m     2794:        96: let add s = function[39m
     [38;5;2m9861[39m: [38;5;2m     2795:        97: | `Uchar u as add ->[39m
     [38;5;2m9862[39m: [38;5;2m     2796:        98:     begin match s.state with[39m
     [38;5;2m9863[39m: [38;5;2m     2797:        99:     | Fill ->[39m
     [38;5;2m9864[39m: [38;5;2m     2798:       100:         let right = gcb u in[39m
     [38;5;2m9865[39m: [38;5;2m     2799:       101:         let break = break s right in[39m
     [38;5;2m9866[39m: [38;5;2m     2800:       102:         update_left s right;[39m
     [38;5;2m9867[39m: [38;5;2m     2801:       103:         if not break then add else[39m
     [38;5;2m9868[39m: [38;5;2m     2802:       104:         (s.state <- Flush; s.buf <- add; `Boundary)[39m
     [38;5;2m9869[39m: [38;5;2m     2803:       105:     | Flush | End -> assert false[39m
     [38;5;2m9870[39m: [38;5;2m     2804:       106:     end[39m
     [38;5;2m9871[39m: [38;5;2m     2805:       107: | `Await ->[39m
     [38;5;2m9872[39m: [38;5;2m     2806:       108:     begin match s.state with[39m
     [38;5;2m9873[39m: [38;5;2m     2807:       109:     | Flush -> s.state <- Fill; (s.buf :> ret)[39m
     [38;5;2m9874[39m: [38;5;2m     2808:       110:     | End -> `End[39m
     [38;5;2m9875[39m: [38;5;2m     2809:       111:     | Fill -> `Await[39m
     [38;5;2m9876[39m: [38;5;2m     2810:       112:     end[39m
     [38;5;2m9877[39m: [38;5;2m     2811:       113: | `End ->[39m
     [38;5;2m9878[39m: [38;5;2m     2812:       114:     begin match s.state with[39m
     [38;5;2m9879[39m: [38;5;2m     2813:       115:     | Fill -> s.state <- End; if s.left = Sot then `End else `Boundary[39m
     [38;5;2m9880[39m: [38;5;2m     2814:       116:     | Flush | End -> assert false[39m
     [38;5;2m9881[39m: [38;5;2m     2815:       117:     end[39m
     [38;5;2m9882[39m: [38;5;2m     2816:       118: [39m
     [38;5;2m9883[39m: [38;5;2m     2817:       119: (*---------------------------------------------------------------------------[39m
     [38;5;2m9884[39m: [38;5;2m     2818:       120:    Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m9885[39m: [38;5;2m     2819:       121: [39m
     [38;5;2m9886[39m: [38;5;2m     2820:       122:    Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m9887[39m: [38;5;2m     2821:       123:    purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m9888[39m: [38;5;2m     2822:       124:    copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m9889[39m: [38;5;2m     2823:       125: [39m
     [38;5;2m9890[39m: [38;5;2m     2824:       126:    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m9891[39m: [38;5;2m     2825:       127:    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m9892[39m: [38;5;2m     2826:       128:    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m9893[39m: [38;5;2m     2827:       129:    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m9894[39m: [38;5;2m     2828:       130:    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m9895[39m: [38;5;2m     2829:       131:    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m9896[39m: [38;5;2m     2830:       132:    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m9897[39m: [38;5;2m     2831:       133:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m9898[39m: [38;5;2m     2832: Added regular file ../notty/src/no-uucp/notty_grapheme_cluster.mli:[39m
     [38;5;2m9899[39m: [38;5;2m     2833:         1: (*---------------------------------------------------------------------------[39m
     [38;5;2m9900[39m: [38;5;2m     2834:         2:    Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m9901[39m: [38;5;2m     2835:         3:    Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m9902[39m: [38;5;2m     2836:         4:    %%NAME%% %%VERSION%%[39m
     [38;5;2m9903[39m: [38;5;2m     2837:         5:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m9904[39m: [38;5;2m     2838:         6: [39m
     [38;5;2m9905[39m: [38;5;2m     2839:         7: type ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m9906[39m: [38;5;2m     2840:         8: [39m
     [38;5;2m9907[39m: [38;5;2m     2841:         9: type t[39m
     [38;5;2m9908[39m: [38;5;2m     2842:        10: val create : unit -> t[39m
     [38;5;2m9909[39m: [38;5;2m     2843:        11: val add : t -> [ `Await | `End | `Uchar of Uchar.t ] -> ret[39m
     [38;5;2m9910[39m: [38;5;2m     2844:        12: [39m
     [38;5;2m9911[39m: [38;5;2m     2845:        13: (*---------------------------------------------------------------------------[39m
     [38;5;2m9912[39m: [38;5;2m     2846:        14:    Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m9913[39m: [38;5;2m     2847:        15: [39m
     [38;5;2m9914[39m: [38;5;2m     2848:        16:    Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m9915[39m: [38;5;2m     2849:        17:    purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m9916[39m: [38;5;2m     2850:        18:    copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m9917[39m: [38;5;2m     2851:        19: [39m
     [38;5;2m9918[39m: [38;5;2m     2852:        20:    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m9919[39m: [38;5;2m     2853:        21:    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m9920[39m: [38;5;2m     2854:        22:    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m9921[39m: [38;5;2m     2855:        23:    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m9922[39m: [38;5;2m     2856:        24:    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m9923[39m: [38;5;2m     2857:        25:    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m9924[39m: [38;5;2m     2858:        26:    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m9925[39m: [38;5;2m     2859:        27:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m9926[39m: [38;5;2m     2860: Added regular file ../notty/src/no-uucp/notty_uucp.ml:[39m
     [38;5;2m9927[39m: [38;5;2m     2861:         1: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9928[39m: [38;5;2m     2862:         2:    See LICENSE.md. *)[39m
     [38;5;2m9929[39m: [38;5;2m     2863:         3: [39m
     [38;5;2m9930[39m: [38;5;2m     2864:         4: (* Unpacked interval lookup table. *)[39m
     [38;5;2m9931[39m: [38;5;2m     2865:         5: let find_i ~def k (xs, _, _ as tab) =[39m
     [38;5;2m9932[39m: [38;5;2m     2866:         6:   let rec go i j (los, his, vs as tab) (k: int) def =[39m
     [38;5;2m9933[39m: [38;5;2m     2867:         7:     if i > j then def else[39m
     [38;5;2m9934[39m: [38;5;2m     2868:         8:     let x = (i + j) / 2 in[39m
     [38;5;2m9935[39m: [38;5;2m     2869:         9:     if k < Array.unsafe_get los x then go i (x - 1) tab k def else[39m
     [38;5;2m9936[39m: [38;5;2m     2870:        10:     if k > Array.unsafe_get his x then go (x + 1) j tab k def else[39m
     [38;5;2m9937[39m: [38;5;2m     2871:        11:       Array.unsafe_get vs x in[39m
     [38;5;2m9938[39m: [38;5;2m     2872:        12:   go 0 (Array.length xs - 1) tab k def[39m
     [38;5;2m9939[39m: [38;5;2m     2873:        13: [39m
     [38;5;2m9940[39m: [38;5;2m     2874:        14: (* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m9941[39m: [38;5;2m     2875:        15:    Root is variable; lower levels are either empty or complete. *)[39m
     [38;5;2m9942[39m: [38;5;2m     2876:        16: let find_t ~def k tab =[39m
     [38;5;2m9943[39m: [38;5;2m     2877:        17:   let k = if k > 0xd7ff then k - 0x800 else k in (* Pack to continuous range. *)[39m
     [38;5;2m9944[39m: [38;5;2m     2878:        18:   let b0 = (k lsr 12) land 0xfff in[39m
     [38;5;2m9945[39m: [38;5;2m     2879:        19:   if Array.length tab <= b0 then def else[39m
     [38;5;2m9946[39m: [38;5;2m     2880:        20:   match Array.unsafe_get tab b0 with[39m
     [38;5;2m9947[39m: [38;5;2m     2881:        21:   | [||] -> def[39m
     [38;5;2m9948[39m: [38;5;2m     2882:        22:   | arr -> match Array.unsafe_get arr ((k lsr 6) land 0x3f) with[39m
     [38;5;2m9949[39m: [38;5;2m     2883:        23:     | "" -> def[39m
     [38;5;2m9950[39m: [38;5;2m     2884:        24:     | str -> String.unsafe_get str (k land 0x3f) |> Char.code[39m
     [38;5;2m9951[39m: [38;5;2m     2885:        25: [39m
     [38;5;2m9952[39m: [38;5;2m     2886:        26: (* We catch w = -1 and default to w = 1 to minimize the table. *)[39m
     [38;5;2m9953[39m: [38;5;2m     2887:        27: let tty_width_hint u = match Uchar.to_int u with[39m
     [38;5;2m9954[39m: [38;5;2m     2888:        28: | 0 -> 0[39m
     [38;5;2m9955[39m: [38;5;2m     2889:        29: | u when u <= 0x001F || 0x007F <= u && u <= 0x009F -> -1[39m
     [38;5;2m9956[39m: [38;5;2m     2890:        30: | u when u <= 0x02ff -> 1[39m
     [38;5;2m9957[39m: [38;5;2m     2891:        31: | u -> find_i ~def:1 u Notty_uucp_data.tty_width_hint[39m
     [38;5;2m9958[39m: [38;5;2m     2892:        32: [39m
     [38;5;2m9959[39m: [38;5;2m     2893:        33: let grapheme_cluster_boundary u =[39m
     [38;5;2m9960[39m: [38;5;2m     2894:        34:   find_t ~def:16 (Uchar.to_int u) Notty_uucp_data.grapheme_cluster_boundary[39m
     [38;5;2m9961[39m: [38;5;2m     2895:        35: [39m
     [38;5;2m9962[39m: [38;5;2m     2896:        36: (* let check () = *)[39m
     [38;5;2m9963[39m: [38;5;2m     2897:        37: (*   let pp_u ppf u = Format.fprintf ppf "u+%04x" (Uchar.to_int u) in *)[39m
     [38;5;2m9964[39m: [38;5;2m     2898:        38: (*   let rec go i u = *)[39m
     [38;5;2m9965[39m: [38;5;2m     2899:        39: (*     let w1 = tty_width_hint u *)[39m
     [38;5;2m9966[39m: [38;5;2m     2900:        40: (*     and w2 = Uucp.Break.tty_width_hint u in *)[39m
     [38;5;2m9967[39m: [38;5;2m     2901:        41: (*     if w1 <> w2 then Format.printf "w: %a here: %d there: %d@." pp_u u w1 w2; *)[39m
     [38;5;2m9968[39m: [38;5;2m     2902:        42: (*     let gc1 = grapheme_cluster_boundary u *)[39m
     [38;5;2m9969[39m: [38;5;2m     2903:        43: (*     and gc2 = Uucp.Break.Low.grapheme_cluster u in *)[39m
     [38;5;2m9970[39m: [38;5;2m     2904:        44: (*     if gc1 <> gc2 then Format.printf "gc: %a here: %d there: %d@." pp_u u gc1 gc2; *)[39m
     [38;5;2m9971[39m: [38;5;2m     2905:        45: (*     if u = Uchar.max then i else go (i + 1) (Uchar.succ u) in *)[39m
     [38;5;2m9972[39m: [38;5;2m     2906:        46: (*   let n = go 1 Uchar.min in *)[39m
     [38;5;2m9973[39m: [38;5;2m     2907:        47: (*   Format.printf "Checked equality for %d code points.@." n *)[39m
     [38;5;2m9974[39m: [38;5;2m     2908:        48: [39m
     [38;5;2m9975[39m: [38;5;2m     2909: Added regular file ../notty/src/no-uucp/notty_uucp.mli:[39m
     [38;5;2m9976[39m: [38;5;2m     2910:         1: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m9977[39m: [38;5;2m     2911:         2:    See LICENSE.md. *)[39m
     [38;5;2m9978[39m: [38;5;2m     2912:         3: [39m
     [38;5;2m9979[39m: [38;5;2m     2913:         4: (* This is a local copy of the (very few) relevant [uucp] properties. *)[39m
     [38;5;2m9980[39m: [38;5;2m     2914:         5: [39m
     [38;5;2m9981[39m: [38;5;2m     2915:         6: val tty_width_hint : Uchar.t -> int[39m
     [38;5;2m9982[39m: [38;5;2m     2916:         7: (* [Uucp.Break.tty_width_hint]. *)[39m
     [38;5;2m9983[39m: [38;5;2m     2917:         8: [39m
     [38;5;2m9984[39m: [38;5;2m     2918:         9: val grapheme_cluster_boundary : Uchar.t -> int[39m
     [38;5;2m9985[39m: [38;5;2m     2919:        10: (* [Uucp.Break.Low.grapheme_cluster]. *)[39m
     [38;5;2m9986[39m: [38;5;2m     2920:        11: [39m
     [38;5;2m9987[39m: [38;5;2m     2921:        12: (* val check : unit -> unit *)[39m
     [38;5;2m9988[39m: [38;5;2m     2922:        13: [39m
     [38;5;2m9989[39m: [38;5;2m     2923: Added regular file ../notty/src/no-uucp/notty_uucp_data.ml:[39m
     [38;5;2m9990[39m: [38;5;2m     2924:         1: (* Do not edit.[39m
     [38;5;2m9991[39m: [38;5;2m     2925:         2:  *[39m
     [38;5;2m9992[39m: [38;5;2m     2926:         3:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m9993[39m: [38;5;2m     2927:         4:  * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m9994[39m: [38;5;2m     2928:         5:  *[39m
     [38;5;2m9995[39m: [38;5;2m     2929:         6:  * Unicode version 13.0.0.[39m
     [38;5;2m9996[39m: [38;5;2m     2930:         7:  *)[39m
     [38;5;2m9997[39m: [38;5;2m     2931:         8: [39m
     [38;5;2m9998[39m: [38;5;2m     2932:         9: [39m
     [38;5;2m9999[39m: [38;5;2m     2933:        10: let tty_width_hint =[39m
     [38;5;2m10000[39m: [38;5;2m     2934:        11:   ([|0x0000; 0x0300; 0x0483; 0x0591; 0x05bf; 0x05c1; 0x05c4; 0x05c7; 0x0600;[39m
     [38;5;2m10001[39m: [38;5;2m     2935:        12:      0x0610; 0x061c; 0x064b; 0x0670; 0x06d6; 0x06df; 0x06e7; 0x06ea; 0x070f;[39m
     [38;5;2m10002[39m: [38;5;2m     2936:        13:      0x0711; 0x0730; 0x07a6; 0x07eb; 0x07fd; 0x0816; 0x081b; 0x0825; 0x0829;[39m
     [38;5;2m10003[39m: [38;5;2m     2937:        14:      0x0859; 0x08d3; 0x093a; 0x093c; 0x0941; 0x094d; 0x0951; 0x0962; 0x0981;[39m
     [38;5;2m10004[39m: [38;5;2m     2938:        15:      0x09bc; 0x09c1; 0x09cd; 0x09e2; 0x09fe; 0x0a01; 0x0a3c; 0x0a41; 0x0a47;[39m
     [38;5;2m10005[39m: [38;5;2m     2939:        16:      0x0a4b; 0x0a51; 0x0a70; 0x0a75; 0x0a81; 0x0abc; 0x0ac1; 0x0ac7; 0x0acd;[39m
     [38;5;2m10006[39m: [38;5;2m     2940:        17:      0x0ae2; 0x0afa; 0x0b01; 0x0b3c; 0x0b3f; 0x0b41; 0x0b4d; 0x0b55; 0x0b62;[39m
     [38;5;2m10007[39m: [38;5;2m     2941:        18:      0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c3e; 0x0c46; 0x0c4a; 0x0c55;[39m
     [38;5;2m10008[39m: [38;5;2m     2942:        19:      0x0c62; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccc; 0x0ce2; 0x0d00; 0x0d3b;[39m
     [38;5;2m10009[39m: [38;5;2m     2943:        20:      0x0d41; 0x0d4d; 0x0d62; 0x0d81; 0x0dca; 0x0dd2; 0x0dd6; 0x0e31; 0x0e34;[39m
     [38;5;2m10010[39m: [38;5;2m     2944:        21:      0x0e47; 0x0eb1; 0x0eb4; 0x0ec8; 0x0f18; 0x0f35; 0x0f37; 0x0f39; 0x0f71;[39m
     [38;5;2m10011[39m: [38;5;2m     2945:        22:      0x0f80; 0x0f86; 0x0f8d; 0x0f99; 0x0fc6; 0x102d; 0x1032; 0x1039; 0x103d;[39m
     [38;5;2m10012[39m: [38;5;2m     2946:        23:      0x1058; 0x105e; 0x1071; 0x1082; 0x1085; 0x108d; 0x109d; 0x1100; 0x135d;[39m
     [38;5;2m10013[39m: [38;5;2m     2947:        24:      0x1712; 0x1732; 0x1752; 0x1772; 0x17b4; 0x17b7; 0x17c6; 0x17c9; 0x17dd;[39m
     [38;5;2m10014[39m: [38;5;2m     2948:        25:      0x180b; 0x1885; 0x18a9; 0x1920; 0x1927; 0x1932; 0x1939; 0x1a17; 0x1a1b;[39m
     [38;5;2m10015[39m: [38;5;2m     2949:        26:      0x1a56; 0x1a58; 0x1a60; 0x1a62; 0x1a65; 0x1a73; 0x1a7f; 0x1ab0; 0x1b00;[39m
     [38;5;2m10016[39m: [38;5;2m     2950:        27:      0x1b34; 0x1b36; 0x1b3c; 0x1b42; 0x1b6b; 0x1b80; 0x1ba2; 0x1ba8; 0x1bab;[39m
     [38;5;2m10017[39m: [38;5;2m     2951:        28:      0x1be6; 0x1be8; 0x1bed; 0x1bef; 0x1c2c; 0x1c36; 0x1cd0; 0x1cd4; 0x1ce2;[39m
     [38;5;2m10018[39m: [38;5;2m     2952:        29:      0x1ced; 0x1cf4; 0x1cf8; 0x1dc0; 0x1dfb; 0x200b; 0x202a; 0x2060; 0x2066;[39m
     [38;5;2m10019[39m: [38;5;2m     2953:        30:      0x20d0; 0x231a; 0x2329; 0x23e9; 0x23f0; 0x23f3; 0x25fd; 0x2614; 0x2648;[39m
     [38;5;2m10020[39m: [38;5;2m     2954:        31:      0x267f; 0x2693; 0x26a1; 0x26aa; 0x26bd; 0x26c4; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m10021[39m: [38;5;2m     2955:        32:      0x26f2; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270a; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m10022[39m: [38;5;2m     2956:        33:      0x2753; 0x2757; 0x2795; 0x27b0; 0x27bf; 0x2b1b; 0x2b50; 0x2b55; 0x2cef;[39m
     [38;5;2m10023[39m: [38;5;2m     2957:        34:      0x2d7f; 0x2de0; 0x2e80; 0x2e9b; 0x2f00; 0x2ff0; 0x3000; 0x302a; 0x302e;[39m
     [38;5;2m10024[39m: [38;5;2m     2958:        35:      0x3041; 0x3099; 0x309b; 0x3105; 0x3131; 0x3190; 0x31f0; 0x3220; 0x3250;[39m
     [38;5;2m10025[39m: [38;5;2m     2959:        36:      0x4e00; 0xa490; 0xa66f; 0xa674; 0xa69e; 0xa6f0; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m10026[39m: [38;5;2m     2960:        37:      0xa825; 0xa82c; 0xa8c4; 0xa8e0; 0xa8ff; 0xa926; 0xa947; 0xa960; 0xa980;[39m
     [38;5;2m10027[39m: [38;5;2m     2961:        38:      0xa9b3; 0xa9b6; 0xa9bc; 0xa9e5; 0xaa29; 0xaa31; 0xaa35; 0xaa43; 0xaa4c;[39m
     [38;5;2m10028[39m: [38;5;2m     2962:        39:      0xaa7c; 0xaab0; 0xaab2; 0xaab7; 0xaabe; 0xaac1; 0xaaec; 0xaaf6; 0xabe5;[39m
     [38;5;2m10029[39m: [38;5;2m     2963:        40:      0xabe8; 0xabed; 0xac00; 0xf900; 0xfb1e; 0xfe00; 0xfe10; 0xfe20; 0xfe30;[39m
     [38;5;2m10030[39m: [38;5;2m     2964:        41:      0xfe54; 0xfe68; 0xfeff; 0xff01; 0xffe0; 0xfff9; 0x101fd; 0x102e0;[39m
     [38;5;2m10031[39m: [38;5;2m     2965:        42:      0x10376; 0x10a01; 0x10a05; 0x10a0c; 0x10a38; 0x10a3f; 0x10ae5; 0x10d24;[39m
     [38;5;2m10032[39m: [38;5;2m     2966:        43:      0x10eab; 0x10f46; 0x11001; 0x11038; 0x1107f; 0x110b3; 0x110b9; 0x110bd;[39m
     [38;5;2m10033[39m: [38;5;2m     2967:        44:      0x110cd; 0x11100; 0x11127; 0x1112d; 0x11173; 0x11180; 0x111b6; 0x111c9;[39m
     [38;5;2m10034[39m: [38;5;2m     2968:        45:      0x111cf; 0x1122f; 0x11234; 0x11236; 0x1123e; 0x112df; 0x112e3; 0x11300;[39m
     [38;5;2m10035[39m: [38;5;2m     2969:        46:      0x1133b; 0x11340; 0x11366; 0x11370; 0x11438; 0x11442; 0x11446; 0x1145e;[39m
     [38;5;2m10036[39m: [38;5;2m     2970:        47:      0x114b3; 0x114ba; 0x114bf; 0x114c2; 0x115b2; 0x115bc; 0x115bf; 0x115dc;[39m
     [38;5;2m10037[39m: [38;5;2m     2971:        48:      0x11633; 0x1163d; 0x1163f; 0x116ab; 0x116ad; 0x116b0; 0x116b7; 0x1171d;[39m
     [38;5;2m10038[39m: [38;5;2m     2972:        49:      0x11722; 0x11727; 0x1182f; 0x11839; 0x1193b; 0x1193e; 0x11943; 0x119d4;[39m
     [38;5;2m10039[39m: [38;5;2m     2973:        50:      0x119da; 0x119e0; 0x11a01; 0x11a33; 0x11a3b; 0x11a47; 0x11a51; 0x11a59;[39m
     [38;5;2m10040[39m: [38;5;2m     2974:        51:      0x11a8a; 0x11a98; 0x11c30; 0x11c38; 0x11c3f; 0x11c92; 0x11caa; 0x11cb2;[39m
     [38;5;2m10041[39m: [38;5;2m     2975:        52:      0x11cb5; 0x11d31; 0x11d3a; 0x11d3c; 0x11d3f; 0x11d47; 0x11d90; 0x11d95;[39m
     [38;5;2m10042[39m: [38;5;2m     2976:        53:      0x11d97; 0x11ef3; 0x13430; 0x16af0; 0x16b30; 0x16f4f; 0x16f8f; 0x16fe0;[39m
     [38;5;2m10043[39m: [38;5;2m     2977:        54:      0x16fe4; 0x16ff0; 0x17000; 0x18800; 0x18d00; 0x1b000; 0x1b150; 0x1b164;[39m
     [38;5;2m10044[39m: [38;5;2m     2978:        55:      0x1b170; 0x1bc9d; 0x1bca0; 0x1d167; 0x1d173; 0x1d185; 0x1d1aa; 0x1d242;[39m
     [38;5;2m10045[39m: [38;5;2m     2979:        56:      0x1da00; 0x1da3b; 0x1da75; 0x1da84; 0x1da9b; 0x1daa1; 0x1e000; 0x1e008;[39m
     [38;5;2m10046[39m: [38;5;2m     2980:        57:      0x1e01b; 0x1e023; 0x1e026; 0x1e130; 0x1e2ec; 0x1e8d0; 0x1e944; 0x1f004;[39m
     [38;5;2m10047[39m: [38;5;2m     2981:        58:      0x1f0cf; 0x1f18e; 0x1f191; 0x1f200; 0x1f210; 0x1f240; 0x1f250; 0x1f260;[39m
     [38;5;2m10048[39m: [38;5;2m     2982:        59:      0x1f300; 0x1f32d; 0x1f337; 0x1f37e; 0x1f3a0; 0x1f3cf; 0x1f3e0; 0x1f3f4;[39m
     [38;5;2m10049[39m: [38;5;2m     2983:        60:      0x1f3f8; 0x1f440; 0x1f442; 0x1f4ff; 0x1f54b; 0x1f550; 0x1f57a; 0x1f595;[39m
     [38;5;2m10050[39m: [38;5;2m     2984:        61:      0x1f5a4; 0x1f5fb; 0x1f680; 0x1f6cc; 0x1f6d0; 0x1f6d5; 0x1f6eb; 0x1f6f4;[39m
     [38;5;2m10051[39m: [38;5;2m     2985:        62:      0x1f7e0; 0x1f90c; 0x1f93c; 0x1f947; 0x1f97a; 0x1f9cd; 0x1fa70; 0x1fa78;[39m
     [38;5;2m10052[39m: [38;5;2m     2986:        63:      0x1fa80; 0x1fa90; 0x1fab0; 0x1fac0; 0x1fad0; 0x20000; 0x30000; 0xe0001;[39m
     [38;5;2m10053[39m: [38;5;2m     2987:        64:      0xe0020; 0xe0100|],[39m
     [38;5;2m10054[39m: [38;5;2m     2988:        65:    [|0x0000; 0x036f; 0x0489; 0x05bd; 0x05bf; 0x05c2; 0x05c5; 0x05c7; 0x0605;[39m
     [38;5;2m10055[39m: [38;5;2m     2989:        66:      0x061a; 0x061c; 0x065f; 0x0670; 0x06dd; 0x06e4; 0x06e8; 0x06ed; 0x070f;[39m
     [38;5;2m10056[39m: [38;5;2m     2990:        67:      0x0711; 0x074a; 0x07b0; 0x07f3; 0x07fd; 0x0819; 0x0823; 0x0827; 0x082d;[39m
     [38;5;2m10057[39m: [38;5;2m     2991:        68:      0x085b; 0x0902; 0x093a; 0x093c; 0x0948; 0x094d; 0x0957; 0x0963; 0x0981;[39m
     [38;5;2m10058[39m: [38;5;2m     2992:        69:      0x09bc; 0x09c4; 0x09cd; 0x09e3; 0x09fe; 0x0a02; 0x0a3c; 0x0a42; 0x0a48;[39m
     [38;5;2m10059[39m: [38;5;2m     2993:        70:      0x0a4d; 0x0a51; 0x0a71; 0x0a75; 0x0a82; 0x0abc; 0x0ac5; 0x0ac8; 0x0acd;[39m
     [38;5;2m10060[39m: [38;5;2m     2994:        71:      0x0ae3; 0x0aff; 0x0b01; 0x0b3c; 0x0b3f; 0x0b44; 0x0b4d; 0x0b56; 0x0b63;[39m
     [38;5;2m10061[39m: [38;5;2m     2995:        72:      0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c40; 0x0c48; 0x0c4d; 0x0c56;[39m
     [38;5;2m10062[39m: [38;5;2m     2996:        73:      0x0c63; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccd; 0x0ce3; 0x0d01; 0x0d3c;[39m
     [38;5;2m10063[39m: [38;5;2m     2997:        74:      0x0d44; 0x0d4d; 0x0d63; 0x0d81; 0x0dca; 0x0dd4; 0x0dd6; 0x0e31; 0x0e3a;[39m
     [38;5;2m10064[39m: [38;5;2m     2998:        75:      0x0e4e; 0x0eb1; 0x0ebc; 0x0ecd; 0x0f19; 0x0f35; 0x0f37; 0x0f39; 0x0f7e;[39m
     [38;5;2m10065[39m: [38;5;2m     2999:        76:      0x0f84; 0x0f87; 0x0f97; 0x0fbc; 0x0fc6; 0x1030; 0x1037; 0x103a; 0x103e;[39m
     [38;5;2m10066[39m: [38;5;2m     3000:        77:      0x1059; 0x1060; 0x1074; 0x1082; 0x1086; 0x108d; 0x109d; 0x115f; 0x135f;[39m
     [38;5;2m10067[39m: [38;5;2m     3001:        78:      0x1714; 0x1734; 0x1753; 0x1773; 0x17b5; 0x17bd; 0x17c6; 0x17d3; 0x17dd;[39m
     [38;5;2m10068[39m: [38;5;2m     3002:        79:      0x180e; 0x1886; 0x18a9; 0x1922; 0x1928; 0x1932; 0x193b; 0x1a18; 0x1a1b;[39m
     [38;5;2m10069[39m: [38;5;2m     3003:        80:      0x1a56; 0x1a5e; 0x1a60; 0x1a62; 0x1a6c; 0x1a7c; 0x1a7f; 0x1ac0; 0x1b03;[39m
     [38;5;2m10070[39m: [38;5;2m     3004:        81:      0x1b34; 0x1b3a; 0x1b3c; 0x1b42; 0x1b73; 0x1b81; 0x1ba5; 0x1ba9; 0x1bad;[39m
     [38;5;2m10071[39m: [38;5;2m     3005:        82:      0x1be6; 0x1be9; 0x1bed; 0x1bf1; 0x1c33; 0x1c37; 0x1cd2; 0x1ce0; 0x1ce8;[39m
     [38;5;2m10072[39m: [38;5;2m     3006:        83:      0x1ced; 0x1cf4; 0x1cf9; 0x1df9; 0x1dff; 0x200f; 0x202e; 0x2064; 0x206f;[39m
     [38;5;2m10073[39m: [38;5;2m     3007:        84:      0x20f0; 0x231b; 0x232a; 0x23ec; 0x23f0; 0x23f3; 0x25fe; 0x2615; 0x2653;[39m
     [38;5;2m10074[39m: [38;5;2m     3008:        85:      0x267f; 0x2693; 0x26a1; 0x26ab; 0x26be; 0x26c5; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m10075[39m: [38;5;2m     3009:        86:      0x26f3; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270b; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m10076[39m: [38;5;2m     3010:        87:      0x2755; 0x2757; 0x2797; 0x27b0; 0x27bf; 0x2b1c; 0x2b50; 0x2b55; 0x2cf1;[39m
     [38;5;2m10077[39m: [38;5;2m     3011:        88:      0x2d7f; 0x2dff; 0x2e99; 0x2ef3; 0x2fd5; 0x2ffb; 0x3029; 0x302d; 0x303e;[39m
     [38;5;2m10078[39m: [38;5;2m     3012:        89:      0x3096; 0x309a; 0x30ff; 0x312f; 0x318e; 0x31e3; 0x321e; 0x3247; 0x4dbf;[39m
     [38;5;2m10079[39m: [38;5;2m     3013:        90:      0xa48c; 0xa4c6; 0xa672; 0xa67d; 0xa69f; 0xa6f1; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m10080[39m: [38;5;2m     3014:        91:      0xa826; 0xa82c; 0xa8c5; 0xa8f1; 0xa8ff; 0xa92d; 0xa951; 0xa97c; 0xa982;[39m
     [38;5;2m10081[39m: [38;5;2m     3015:        92:      0xa9b3; 0xa9b9; 0xa9bd; 0xa9e5; 0xaa2e; 0xaa32; 0xaa36; 0xaa43; 0xaa4c;[39m
     [38;5;2m10082[39m: [38;5;2m     3016:        93:      0xaa7c; 0xaab0; 0xaab4; 0xaab8; 0xaabf; 0xaac1; 0xaaed; 0xaaf6; 0xabe5;[39m
     [38;5;2m10083[39m: [38;5;2m     3017:        94:      0xabe8; 0xabed; 0xd7a3; 0xfaff; 0xfb1e; 0xfe0f; 0xfe19; 0xfe2f; 0xfe52;[39m
     [38;5;2m10084[39m: [38;5;2m     3018:        95:      0xfe66; 0xfe6b; 0xfeff; 0xff60; 0xffe6; 0xfffb; 0x101fd; 0x102e0;[39m
     [38;5;2m10085[39m: [38;5;2m     3019:        96:      0x1037a; 0x10a03; 0x10a06; 0x10a0f; 0x10a3a; 0x10a3f; 0x10ae6; 0x10d27;[39m
     [38;5;2m10086[39m: [38;5;2m     3020:        97:      0x10eac; 0x10f50; 0x11001; 0x11046; 0x11081; 0x110b6; 0x110ba; 0x110bd;[39m
     [38;5;2m10087[39m: [38;5;2m     3021:        98:      0x110cd; 0x11102; 0x1112b; 0x11134; 0x11173; 0x11181; 0x111be; 0x111cc;[39m
     [38;5;2m10088[39m: [38;5;2m     3022:        99:      0x111cf; 0x11231; 0x11234; 0x11237; 0x1123e; 0x112df; 0x112ea; 0x11301;[39m
     [38;5;2m10089[39m: [38;5;2m     3023:       100:      0x1133c; 0x11340; 0x1136c; 0x11374; 0x1143f; 0x11444; 0x11446; 0x1145e;[39m
     [38;5;2m10090[39m: [38;5;2m     3024:       101:      0x114b8; 0x114ba; 0x114c0; 0x114c3; 0x115b5; 0x115bd; 0x115c0; 0x115dd;[39m
     [38;5;2m10091[39m: [38;5;2m     3025:       102:      0x1163a; 0x1163d; 0x11640; 0x116ab; 0x116ad; 0x116b5; 0x116b7; 0x1171f;[39m
     [38;5;2m10092[39m: [38;5;2m     3026:       103:      0x11725; 0x1172b; 0x11837; 0x1183a; 0x1193c; 0x1193e; 0x11943; 0x119d7;[39m
     [38;5;2m10093[39m: [38;5;2m     3027:       104:      0x119db; 0x119e0; 0x11a0a; 0x11a38; 0x11a3e; 0x11a47; 0x11a56; 0x11a5b;[39m
     [38;5;2m10094[39m: [38;5;2m     3028:       105:      0x11a96; 0x11a99; 0x11c36; 0x11c3d; 0x11c3f; 0x11ca7; 0x11cb0; 0x11cb3;[39m
     [38;5;2m10095[39m: [38;5;2m     3029:       106:      0x11cb6; 0x11d36; 0x11d3a; 0x11d3d; 0x11d45; 0x11d47; 0x11d91; 0x11d95;[39m
     [38;5;2m10096[39m: [38;5;2m     3030:       107:      0x11d97; 0x11ef4; 0x13438; 0x16af4; 0x16b36; 0x16f4f; 0x16f92; 0x16fe3;[39m
     [38;5;2m10097[39m: [38;5;2m     3031:       108:      0x16fe4; 0x16ff1; 0x187f7; 0x18cd5; 0x18d08; 0x1b11e; 0x1b152; 0x1b167;[39m
     [38;5;2m10098[39m: [38;5;2m     3032:       109:      0x1b2fb; 0x1bc9e; 0x1bca3; 0x1d169; 0x1d182; 0x1d18b; 0x1d1ad; 0x1d244;[39m
     [38;5;2m10099[39m: [38;5;2m     3033:       110:      0x1da36; 0x1da6c; 0x1da75; 0x1da84; 0x1da9f; 0x1daaf; 0x1e006; 0x1e018;[39m
     [38;5;2m10100[39m: [38;5;2m     3034:       111:      0x1e021; 0x1e024; 0x1e02a; 0x1e136; 0x1e2ef; 0x1e8d6; 0x1e94a; 0x1f004;[39m
     [38;5;2m10101[39m: [38;5;2m     3035:       112:      0x1f0cf; 0x1f18e; 0x1f19a; 0x1f202; 0x1f23b; 0x1f248; 0x1f251; 0x1f265;[39m
     [38;5;2m10102[39m: [38;5;2m     3036:       113:      0x1f320; 0x1f335; 0x1f37c; 0x1f393; 0x1f3ca; 0x1f3d3; 0x1f3f0; 0x1f3f4;[39m
     [38;5;2m10103[39m: [38;5;2m     3037:       114:      0x1f43e; 0x1f440; 0x1f4fc; 0x1f53d; 0x1f54e; 0x1f567; 0x1f57a; 0x1f596;[39m
     [38;5;2m10104[39m: [38;5;2m     3038:       115:      0x1f5a4; 0x1f64f; 0x1f6c5; 0x1f6cc; 0x1f6d2; 0x1f6d7; 0x1f6ec; 0x1f6fc;[39m
     [38;5;2m10105[39m: [38;5;2m     3039:       116:      0x1f7eb; 0x1f93a; 0x1f945; 0x1f978; 0x1f9cb; 0x1f9ff; 0x1fa74; 0x1fa7a;[39m
     [38;5;2m10106[39m: [38;5;2m     3040:       117:      0x1fa86; 0x1faa8; 0x1fab6; 0x1fac2; 0x1fad6; 0x2fffd; 0x3fffd; 0xe0001;[39m
     [38;5;2m10107[39m: [38;5;2m     3041:       118:      0xe007f; 0xe01ef|],[39m
     [38;5;2m10108[39m: [38;5;2m     3042:       119:    [|0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10109[39m: [38;5;2m     3043:       120:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10110[39m: [38;5;2m     3044:       121:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10111[39m: [38;5;2m     3045:       122:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10112[39m: [38;5;2m     3046:       123:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 0; 0; 0;[39m
     [38;5;2m10113[39m: [38;5;2m     3047:       124:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10114[39m: [38;5;2m     3048:       125:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10115[39m: [38;5;2m     3049:       126:      0; 0; 0; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m10116[39m: [38;5;2m     3050:       127:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 2; 2; 2; 2; 2; 0; 2;[39m
     [38;5;2m10117[39m: [38;5;2m     3051:       128:      2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10118[39m: [38;5;2m     3052:       129:      0; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2;[39m
     [38;5;2m10119[39m: [38;5;2m     3053:       130:      2; 0; 0; 2; 0; 2; 2; 2; 0; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10120[39m: [38;5;2m     3054:       131:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10121[39m: [38;5;2m     3055:       132:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10122[39m: [38;5;2m     3056:       133:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m10123[39m: [38;5;2m     3057:       134:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 0;[39m
     [38;5;2m10124[39m: [38;5;2m     3058:       135:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 2; 2;[39m
     [38;5;2m10125[39m: [38;5;2m     3059:       136:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m10126[39m: [38;5;2m     3060:       137:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0|])[39m
     [38;5;2m10127[39m: [38;5;2m     3061:       138: [39m
     [38;5;2m10128[39m: [38;5;2m     3062:       139: let s000 = ""[39m
     [38;5;2m10129[39m: [38;5;2m     3063:       140: let s001 = "\000\000\000\000\000\000\000\000\000\000\b\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10130[39m: [38;5;2m     3064:       141: let s002 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000"[39m
     [38;5;2m10131[39m: [38;5;2m     3065:       142: let s003 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10132[39m: [38;5;2m     3066:       143: let s004 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10133[39m: [38;5;2m     3067:       144: let s005 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10134[39m: [38;5;2m     3068:       145: let s006 = "\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10135[39m: [38;5;2m     3069:       146: let s007 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002"[39m
     [38;5;2m10136[39m: [38;5;2m     3070:       147: let s008 = "\016\002\002\016\002\002\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10137[39m: [38;5;2m     3071:       148: let s009 = "\011\011\011\011\011\011\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10138[39m: [38;5;2m     3072:       149: let s010 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10139[39m: [38;5;2m     3073:       150: let s011 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\011\016\002\002\002\002\002\002\016\016\002\002\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10140[39m: [38;5;2m     3074:       151: let s012 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10141[39m: [38;5;2m     3075:       152: let s013 = "\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10142[39m: [38;5;2m     3076:       153: let s014 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10143[39m: [38;5;2m     3077:       154: let s015 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m10144[39m: [38;5;2m     3078:       155: let s016 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\016\002\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10145[39m: [38;5;2m     3079:       156: let s017 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10146[39m: [38;5;2m     3080:       157: let s018 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\011\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10147[39m: [38;5;2m     3081:       158: let s019 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\016\r\r"[39m
     [38;5;2m10148[39m: [38;5;2m     3082:       159: let s020 = "\r\002\002\002\002\002\002\002\002\r\r\r\r\002\r\r\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10149[39m: [38;5;2m     3083:       160: let s021 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\r"[39m
     [38;5;2m10150[39m: [38;5;2m     3084:       161: let s022 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016"[39m
     [38;5;2m10151[39m: [38;5;2m     3085:       162: let s023 = "\016\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r"[39m
     [38;5;2m10152[39m: [38;5;2m     3086:       163: let s024 = "\r\002\002\016\016\016\016\002\002\016\016\002\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10153[39m: [38;5;2m     3087:       164: let s025 = "\r\002\002\002\002\002\016\002\002\r\016\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002"[39m
     [38;5;2m10154[39m: [38;5;2m     3088:       165: let s026 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002"[39m
     [38;5;2m10155[39m: [38;5;2m     3089:       166: let s027 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10156[39m: [38;5;2m     3090:       167: let s028 = "\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r"[39m
     [38;5;2m10157[39m: [38;5;2m     3091:       168: let s029 = "\002\r\r\016\016\016\r\r\r\016\r\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10158[39m: [38;5;2m     3092:       169: let s030 = "\002\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002"[39m
     [38;5;2m10159[39m: [38;5;2m     3093:       170: let s031 = "\002\r\r\r\r\016\002\002\002\016\002\002\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10160[39m: [38;5;2m     3094:       171: let s032 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002"[39m
     [38;5;2m10161[39m: [38;5;2m     3095:       172: let s033 = "\r\r\002\r\r\016\002\r\r\016\r\r\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10162[39m: [38;5;2m     3096:       173: let s034 = "\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\002\r"[39m
     [38;5;2m10163[39m: [38;5;2m     3097:       174: let s035 = "\r\002\002\002\002\016\r\r\r\016\r\r\r\002\011\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10164[39m: [38;5;2m     3098:       175: let s036 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10165[39m: [38;5;2m     3099:       176: let s037 = "\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\002\r\r\002\002\002\016\002\016\r\r\r\r\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10166[39m: [38;5;2m     3100:       177: let s038 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m10167[39m: [38;5;2m     3101:       178: let s039 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10168[39m: [38;5;2m     3102:       179: let s040 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m10169[39m: [38;5;2m     3103:       180: let s041 = "\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10170[39m: [38;5;2m     3104:       181: let s042 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\016\002\016\016\016\016\r\r"[39m
     [38;5;2m10171[39m: [38;5;2m     3105:       182: let s043 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m10172[39m: [38;5;2m     3106:       183: let s044 = "\002\002\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m10173[39m: [38;5;2m     3107:       184: let s045 = "\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10174[39m: [38;5;2m     3108:       185: let s046 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\r\002\002\002\002\002\002\016\002\002\r\r\002\002\016"[39m
     [38;5;2m10175[39m: [38;5;2m     3109:       186: let s047 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10176[39m: [38;5;2m     3110:       187: let s048 = "\016\016\002\016\r\002\002\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10177[39m: [38;5;2m     3111:       188: let s049 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007"[39m
     [38;5;2m10178[39m: [38;5;2m     3112:       189: let s050 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m10179[39m: [38;5;2m     3113:       190: let s051 = "\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m10180[39m: [38;5;2m     3114:       191: let s052 = "\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m10181[39m: [38;5;2m     3115:       192: let s053 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10182[39m: [38;5;2m     3116:       193: let s054 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10183[39m: [38;5;2m     3117:       194: let s055 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10184[39m: [38;5;2m     3118:       195: let s056 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\002\002\002\002\002\002\002\r\r"[39m
     [38;5;2m10185[39m: [38;5;2m     3119:       196: let s057 = "\r\r\r\r\r\r\002\r\r\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10186[39m: [38;5;2m     3120:       197: let s058 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10187[39m: [38;5;2m     3121:       198: let s059 = "\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10188[39m: [38;5;2m     3122:       199: let s060 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\r\r\002\002\r\r\r\016\016\016\016\r\r\002\r\r\r\r\r\r\002\002\002\016\016\016\016"[39m
     [38;5;2m10189[39m: [38;5;2m     3123:       200: let s061 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10190[39m: [38;5;2m     3124:       201: let s062 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\r\002\002\002\002\002\002\002\016\002\016\002\016\016\002\002\002\002\002\002\002\002\r\r\r\r\r\r\002\002\002\002\002\002\002\002\002\002\016\016\002"[39m
     [38;5;2m10191[39m: [38;5;2m     3125:       202: let s063 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10192[39m: [38;5;2m     3126:       203: let s064 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10193[39m: [38;5;2m     3127:       204: let s065 = "\002\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\r\002\r\r\r"[39m
     [38;5;2m10194[39m: [38;5;2m     3128:       205: let s066 = "\r\r\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10195[39m: [38;5;2m     3129:       206: let s067 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\r\r\002\002\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10196[39m: [38;5;2m     3130:       207: let s068 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\r\r\r\002\r\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10197[39m: [38;5;2m     3131:       208: let s069 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\002\002\002\002\002\002\002\002\r\r\002\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10198[39m: [38;5;2m     3132:       209: let s070 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\002\002\002\002\002\016\016\016\016\002\016\016\016\016\016\016\002\016\016\r\002\002\016\016\016\016\016\016"[39m
     [38;5;2m10199[39m: [38;5;2m     3133:       210: let s071 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002"[39m
     [38;5;2m10200[39m: [38;5;2m     3134:       211: let s072 = "\016\016\016\016\016\016\016\016\016\016\016\000\002\017\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10201[39m: [38;5;2m     3135:       212: let s073 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10202[39m: [38;5;2m     3136:       213: let s074 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10203[39m: [38;5;2m     3137:       214: let s075 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10204[39m: [38;5;2m     3138:       215: let s076 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m10205[39m: [38;5;2m     3139:       216: let s077 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10206[39m: [38;5;2m     3140:       217: let s078 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10207[39m: [38;5;2m     3141:       218: let s079 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10208[39m: [38;5;2m     3142:       219: let s080 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\016\016"[39m
     [38;5;2m10209[39m: [38;5;2m     3143:       220: let s081 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10210[39m: [38;5;2m     3144:       221: let s082 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10211[39m: [38;5;2m     3145:       222: let s083 = "\016\016\002\016\016\016\002\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\r\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10212[39m: [38;5;2m     3146:       223: let s084 = "\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m10213[39m: [38;5;2m     3147:       224: let s085 = "\r\r\r\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m10214[39m: [38;5;2m     3148:       225: let s086 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10215[39m: [38;5;2m     3149:       226: let s087 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\016\016\016"[39m
     [38;5;2m10216[39m: [38;5;2m     3150:       227: let s088 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\r\r\002\002\r\r"[39m
     [38;5;2m10217[39m: [38;5;2m     3151:       228: let s089 = "\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10218[39m: [38;5;2m     3152:       229: let s090 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\r\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10219[39m: [38;5;2m     3153:       230: let s091 = "\016\016\016\002\016\016\016\016\016\016\016\016\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016"[39m
     [38;5;2m10220[39m: [38;5;2m     3154:       231: let s092 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002\002\016\016\002\002\016\016\016\016\016\002\002"[39m
     [38;5;2m10221[39m: [38;5;2m     3155:       232: let s093 = "\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\r\r\016\016\016\016\016\r\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10222[39m: [38;5;2m     3156:       233: let s094 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\r\r\002\r\r\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10223[39m: [38;5;2m     3157:       234: let s095 = "\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n"[39m
     [38;5;2m10224[39m: [38;5;2m     3158:       235: let s096 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m10225[39m: [38;5;2m     3159:       236: let s097 = "\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m10226[39m: [38;5;2m     3160:       237: let s098 = "\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n"[39m
     [38;5;2m10227[39m: [38;5;2m     3161:       238: let s099 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m10228[39m: [38;5;2m     3162:       239: let s100 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m10229[39m: [38;5;2m     3163:       240: let s101 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m10230[39m: [38;5;2m     3164:       241: let s102 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\016\016\016\016\016\016\016\016\016\016\016\016\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m10231[39m: [38;5;2m     3165:       242: let s103 = "\015\015\015\015\015\015\015\016\016\016\016\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\016\016\016\016"[39m
     [38;5;2m10232[39m: [38;5;2m     3166:       243: let s104 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10233[39m: [38;5;2m     3167:       244: let s105 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10234[39m: [38;5;2m     3168:       245: let s106 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016"[39m
     [38;5;2m10235[39m: [38;5;2m     3169:       246: let s107 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m10236[39m: [38;5;2m     3170:       247: let s108 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10237[39m: [38;5;2m     3171:       248: let s109 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m10238[39m: [38;5;2m     3172:       249: let s110 = "\016\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\002"[39m
     [38;5;2m10239[39m: [38;5;2m     3173:       250: let s111 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10240[39m: [38;5;2m     3174:       251: let s112 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10241[39m: [38;5;2m     3175:       252: let s113 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10242[39m: [38;5;2m     3176:       253: let s114 = "\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10243[39m: [38;5;2m     3177:       254: let s115 = "\r\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10244[39m: [38;5;2m     3178:       255: let s116 = "\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m10245[39m: [38;5;2m     3179:       256: let s117 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\r\r\002\002\016\016\011\016\016"[39m
     [38;5;2m10246[39m: [38;5;2m     3180:       257: let s118 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10247[39m: [38;5;2m     3181:       258: let s119 = "\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10248[39m: [38;5;2m     3182:       259: let s120 = "\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10249[39m: [38;5;2m     3183:       260: let s121 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m10250[39m: [38;5;2m     3184:       261: let s122 = "\r\016\011\011\016\016\016\016\016\002\002\002\002\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10251[39m: [38;5;2m     3185:       262: let s123 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\r\r\002\r\002\002\016\016\016\016\016\016\002\016"[39m
     [38;5;2m10252[39m: [38;5;2m     3186:       263: let s124 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10253[39m: [38;5;2m     3187:       264: let s125 = "\002\r\r\r\r\016\016\r\r\016\016\r\r\r\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\r\r\016\016\002\002\002\002\002\002\002\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10254[39m: [38;5;2m     3188:       265: let s126 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10255[39m: [38;5;2m     3189:       266: let s127 = "\r\r\002\002\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10256[39m: [38;5;2m     3190:       267: let s128 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\002\002\r\002\r\r\002\r\002"[39m
     [38;5;2m10257[39m: [38;5;2m     3191:       268: let s129 = "\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10258[39m: [38;5;2m     3192:       269: let s130 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\016\016\r\r\r\r\002\002\r\002"[39m
     [38;5;2m10259[39m: [38;5;2m     3193:       270: let s131 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10260[39m: [38;5;2m     3194:       271: let s132 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\r\r\002\r\002"[39m
     [38;5;2m10261[39m: [38;5;2m     3195:       272: let s133 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\r\r\002\002\002\002\002\002\r\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10262[39m: [38;5;2m     3196:       273: let s134 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\002\002\002\002\r\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10263[39m: [38;5;2m     3197:       274: let s135 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016"[39m
     [38;5;2m10264[39m: [38;5;2m     3198:       275: let s136 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\r\r\016\r\r\016\016\002\002\r\002\011"[39m
     [38;5;2m10265[39m: [38;5;2m     3199:       276: let s137 = "\r\011\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10266[39m: [38;5;2m     3200:       277: let s138 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\016\016\002\002\r\r\r\r\002\016\016\016\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10267[39m: [38;5;2m     3201:       278: let s139 = "\016\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\011\002\002\002\002\016"[39m
     [38;5;2m10268[39m: [38;5;2m     3202:       279: let s140 = "\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10269[39m: [38;5;2m     3203:       280: let s141 = "\016\016\016\016\011\011\011\011\011\011\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10270[39m: [38;5;2m     3204:       281: let s142 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\002\002\002\016\002\002\002\002\002\002\r\002"[39m
     [38;5;2m10271[39m: [38;5;2m     3205:       282: let s143 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\r\002\002\002\002\002\002\002\r\002\002\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10272[39m: [38;5;2m     3206:       283: let s144 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\002\016\002\002\016\002"[39m
     [38;5;2m10273[39m: [38;5;2m     3207:       284: let s145 = "\002\002\002\002\002\002\011\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10274[39m: [38;5;2m     3208:       285: let s146 = "\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\016\002\002\016\r\r\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10275[39m: [38;5;2m     3209:       286: let s147 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10276[39m: [38;5;2m     3210:       287: let s148 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016"[39m
     [38;5;2m10277[39m: [38;5;2m     3211:       288: let s149 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10278[39m: [38;5;2m     3212:       289: let s150 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10279[39m: [38;5;2m     3213:       290: let s151 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m10280[39m: [38;5;2m     3214:       291: let s152 = "\r\r\r\r\r\r\r\r\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10281[39m: [38;5;2m     3215:       292: let s153 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10282[39m: [38;5;2m     3216:       293: let s154 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10283[39m: [38;5;2m     3217:       294: let s155 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\002\016\016\016\r\002\002\002\002\002\000\000\000\000\000\000\000\000\002\002\002\002\002"[39m
     [38;5;2m10284[39m: [38;5;2m     3218:       295: let s156 = "\002\002\002\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10285[39m: [38;5;2m     3219:       296: let s157 = "\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10286[39m: [38;5;2m     3220:       297: let s158 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m10287[39m: [38;5;2m     3221:       298: let s159 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10288[39m: [38;5;2m     3222:       299: let s160 = "\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10289[39m: [38;5;2m     3223:       300: let s161 = "\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\002\002\002\002\002\002\002\016\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10290[39m: [38;5;2m     3224:       301: let s162 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10291[39m: [38;5;2m     3225:       302: let s163 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10292[39m: [38;5;2m     3226:       303: let s164 = "\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m10293[39m: [38;5;2m     3227:       304: let s165 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012"[39m
     [38;5;2m10294[39m: [38;5;2m     3228:       305: let s166 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m10295[39m: [38;5;2m     3229:       306: let s167 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m10296[39m: [38;5;2m     3230:       307: let s168 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m10297[39m: [38;5;2m     3231:       308: let s169 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m10298[39m: [38;5;2m     3232:       309: [39m
     [38;5;2m10299[39m: [38;5;2m     3233:       310: let grapheme_cluster_boundary =[39m
     [38;5;2m10300[39m: [38;5;2m     3234:       311:   [|[|s001; s002; s003; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10301[39m: [38;5;2m     3235:       312:       s004; s005; s000; s000; s000; s000; s006; s000; s000; s000; s007; s008;[39m
     [38;5;2m10302[39m: [38;5;2m     3236:       313:       s009; s010; s000; s011; s012; s013; s014; s015; s016; s017; s000; s018;[39m
     [38;5;2m10303[39m: [38;5;2m     3237:       314:       s019; s020; s021; s022; s023; s024; s023; s025; s026; s027; s028; s029;[39m
     [38;5;2m10304[39m: [38;5;2m     3238:       315:       s030; s031; s032; s033; s034; s035; s036; s037; s038; s039; s040; s041;[39m
     [38;5;2m10305[39m: [38;5;2m     3239:       316:       s042; s043; s044; s045|];[39m
     [38;5;2m10306[39m: [38;5;2m     3240:       317:     [|s046; s047; s048; s000; s049; s050; s051; s052; s000; s000; s000; s000;[39m
     [38;5;2m10307[39m: [38;5;2m     3241:       318:       s000; s053; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10308[39m: [38;5;2m     3242:       319:       s000; s000; s000; s000; s054; s055; s056; s057; s058; s000; s059; s000;[39m
     [38;5;2m10309[39m: [38;5;2m     3243:       320:       s060; s000; s000; s000; s061; s062; s063; s064; s065; s066; s067; s068;[39m
     [38;5;2m10310[39m: [38;5;2m     3244:       321:       s069; s000; s000; s070; s000; s000; s000; s071; s000; s000; s000; s000;[39m
     [38;5;2m10311[39m: [38;5;2m     3245:       322:       s000; s000; s000; s000|];[39m
     [38;5;2m10312[39m: [38;5;2m     3246:       323:     [|s072; s073; s000; s074; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10313[39m: [38;5;2m     3247:       324:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10314[39m: [38;5;2m     3248:       325:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10315[39m: [38;5;2m     3249:       326:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10316[39m: [38;5;2m     3250:       327:       s000; s000; s000; s075; s000; s076; s000; s077; s000; s000; s000; s000;[39m
     [38;5;2m10317[39m: [38;5;2m     3251:       328:       s000; s000; s000; s000|];[39m
     [38;5;2m10318[39m: [38;5;2m     3252:       329:     [|s078; s000; s079; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10319[39m: [38;5;2m     3253:       330:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10320[39m: [38;5;2m     3254:       331:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10321[39m: [38;5;2m     3255:       332:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10322[39m: [38;5;2m     3256:       333:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10323[39m: [38;5;2m     3257:       334:       s000; s000; s000; s000|];[39m
     [38;5;2m10324[39m: [38;5;2m     3258:       335:     [||]; [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m10325[39m: [38;5;2m     3259:       336:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10326[39m: [38;5;2m     3260:       337:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10327[39m: [38;5;2m     3261:       338:       s000; s080; s081; s082; s000; s000; s000; s000; s083; s000; s084; s085;[39m
     [38;5;2m10328[39m: [38;5;2m     3262:       339:       s086; s087; s088; s089; s090; s091; s092; s093; s000; s000; s000; s094;[39m
     [38;5;2m10329[39m: [38;5;2m     3263:       340:       s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m10330[39m: [38;5;2m     3264:       341:       s100; s101; s095; s096|];[39m
     [38;5;2m10331[39m: [38;5;2m     3265:       342:     [|s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m10332[39m: [38;5;2m     3266:       343:       s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m10333[39m: [38;5;2m     3267:       344:       s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097;[39m
     [38;5;2m10334[39m: [38;5;2m     3268:       345:       s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m10335[39m: [38;5;2m     3269:       346:       s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m10336[39m: [38;5;2m     3270:       347:       s101; s095; s096; s097|];[39m
     [38;5;2m10337[39m: [38;5;2m     3271:       348:     [|s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m10338[39m: [38;5;2m     3272:       349:       s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m10339[39m: [38;5;2m     3273:       350:       s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098;[39m
     [38;5;2m10340[39m: [38;5;2m     3274:       351:       s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m10341[39m: [38;5;2m     3275:       352:       s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m10342[39m: [38;5;2m     3276:       353:       s095; s096; s097; s098|];[39m
     [38;5;2m10343[39m: [38;5;2m     3277:       354:     [|s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m10344[39m: [38;5;2m     3278:       355:       s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m10345[39m: [38;5;2m     3279:       356:       s095; s096; s097; s098; s099; s100; s102; s103; s000; s000; s000; s000;[39m
     [38;5;2m10346[39m: [38;5;2m     3280:       357:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10347[39m: [38;5;2m     3281:       358:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10348[39m: [38;5;2m     3282:       359:       s000; s000; s000; s000|];[39m
     [38;5;2m10349[39m: [38;5;2m     3283:       360:     [||];[39m
     [38;5;2m10350[39m: [38;5;2m     3284:       361:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10351[39m: [38;5;2m     3285:       362:       s104; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10352[39m: [38;5;2m     3286:       363:       s105; s000; s000; s002; s000; s000; s081; s106; s000; s000; s000; s000;[39m
     [38;5;2m10353[39m: [38;5;2m     3287:       364:       s000; s000; s000; s107; s000; s000; s000; s108; s000; s109; s000; s000;[39m
     [38;5;2m10354[39m: [38;5;2m     3288:       365:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10355[39m: [38;5;2m     3289:       366:       s000; s000; s000; s000|];[39m
     [38;5;2m10356[39m: [38;5;2m     3290:       367:     [|s000; s000; s000; s000; s000; s000; s000; s000; s110; s000; s000; s111;[39m
     [38;5;2m10357[39m: [38;5;2m     3291:       368:       s000; s000; s000; s000; s000; s000; s000; s000; s112; s000; s000; s000;[39m
     [38;5;2m10358[39m: [38;5;2m     3292:       369:       s000; s000; s113; s000; s000; s114; s000; s000; s115; s116; s117; s118;[39m
     [38;5;2m10359[39m: [38;5;2m     3293:       370:       s119; s120; s121; s122; s123; s000; s000; s124; s034; s125; s000; s000;[39m
     [38;5;2m10360[39m: [38;5;2m     3294:       371:       s126; s127; s128; s129; s000; s000; s130; s131; s132; s064; s133; s000;[39m
     [38;5;2m10361[39m: [38;5;2m     3295:       372:       s134; s000; s000; s000|];[39m
     [38;5;2m10362[39m: [38;5;2m     3296:       373:     [|s135; s000; s000; s000; s136; s137; s000; s138; s139; s140; s141; s000;[39m
     [38;5;2m10363[39m: [38;5;2m     3297:       374:       s000; s000; s000; s000; s142; s000; s143; s000; s144; s145; s146; s000;[39m
     [38;5;2m10364[39m: [38;5;2m     3298:       375:       s000; s000; s000; s147; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10365[39m: [38;5;2m     3299:       376:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10366[39m: [38;5;2m     3300:       377:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10367[39m: [38;5;2m     3301:       378:       s000; s000; s000; s000|];[39m
     [38;5;2m10368[39m: [38;5;2m     3302:       379:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10369[39m: [38;5;2m     3303:       380:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10370[39m: [38;5;2m     3304:       381:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10371[39m: [38;5;2m     3305:       382:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10372[39m: [38;5;2m     3306:       383:       s148; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10373[39m: [38;5;2m     3307:       384:       s000; s000; s000; s000|];[39m
     [38;5;2m10374[39m: [38;5;2m     3308:       385:     [||]; [||]; [||];[39m
     [38;5;2m10375[39m: [38;5;2m     3309:       386:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s149;[39m
     [38;5;2m10376[39m: [38;5;2m     3310:       387:       s150; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10377[39m: [38;5;2m     3311:       388:       s000; s000; s000; s000; s000; s151; s152; s153; s000; s000; s000; s000;[39m
     [38;5;2m10378[39m: [38;5;2m     3312:       389:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10379[39m: [38;5;2m     3313:       390:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10380[39m: [38;5;2m     3314:       391:       s000; s000; s000; s000|];[39m
     [38;5;2m10381[39m: [38;5;2m     3315:       392:     [||]; [||]; [||]; [||];[39m
     [38;5;2m10382[39m: [38;5;2m     3316:       393:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10383[39m: [38;5;2m     3317:       394:       s000; s000; s000; s000; s000; s000; s154; s000; s000; s000; s000; s000;[39m
     [38;5;2m10384[39m: [38;5;2m     3318:       395:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10385[39m: [38;5;2m     3319:       396:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10386[39m: [38;5;2m     3320:       397:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10387[39m: [38;5;2m     3321:       398:       s000; s000; s000; s000|];[39m
     [38;5;2m10388[39m: [38;5;2m     3322:       399:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10389[39m: [38;5;2m     3323:       400:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10390[39m: [38;5;2m     3324:       401:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10391[39m: [38;5;2m     3325:       402:       s000; s155; s156; s000; s000; s157; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10392[39m: [38;5;2m     3326:       403:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10393[39m: [38;5;2m     3327:       404:       s000; s000; s000; s000|];[39m
     [38;5;2m10394[39m: [38;5;2m     3328:       405:     [|s000; s000; s000; s000; s000; s000; s000; s000; s158; s159; s160; s000;[39m
     [38;5;2m10395[39m: [38;5;2m     3329:       406:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10396[39m: [38;5;2m     3330:       407:       s000; s000; s000; s000; s000; s000; s000; s000; s161; s000; s000; s000;[39m
     [38;5;2m10397[39m: [38;5;2m     3331:       408:       s150; s000; s000; s000; s000; s000; s000; s162; s000; s000; s000; s000;[39m
     [38;5;2m10398[39m: [38;5;2m     3332:       409:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10399[39m: [38;5;2m     3333:       410:       s000; s000; s000; s000|];[39m
     [38;5;2m10400[39m: [38;5;2m     3334:       411:     [|s000; s000; s000; s163; s000; s164; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10401[39m: [38;5;2m     3335:       412:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10402[39m: [38;5;2m     3336:       413:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10403[39m: [38;5;2m     3337:       414:       s000; s000; s000; s165; s000; s000; s000; s000; s000; s000; s000; s166;[39m
     [38;5;2m10404[39m: [38;5;2m     3338:       415:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10405[39m: [38;5;2m     3339:       416:       s000; s000; s000; s000|];[39m
     [38;5;2m10406[39m: [38;5;2m     3340:       417:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10407[39m: [38;5;2m     3341:       418:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10408[39m: [38;5;2m     3342:       419:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10409[39m: [38;5;2m     3343:       420:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10410[39m: [38;5;2m     3344:       421:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10411[39m: [38;5;2m     3345:       422:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10412[39m: [38;5;2m     3346:       423:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10413[39m: [38;5;2m     3347:       424:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10414[39m: [38;5;2m     3348:       425:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10415[39m: [38;5;2m     3349:       426:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10416[39m: [38;5;2m     3350:       427:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10417[39m: [38;5;2m     3351:       428:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10418[39m: [38;5;2m     3352:       429:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10419[39m: [38;5;2m     3353:       430:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10420[39m: [38;5;2m     3354:       431:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10421[39m: [38;5;2m     3355:       432:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10422[39m: [38;5;2m     3356:       433:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m10423[39m: [38;5;2m     3357:       434:     [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m10424[39m: [38;5;2m     3358:       435:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10425[39m: [38;5;2m     3359:       436:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10426[39m: [38;5;2m     3360:       437:       s000; s000; s000; s000; s000; s000; s000; s000; s167; s004; s168; s168;[39m
     [38;5;2m10427[39m: [38;5;2m     3361:       438:       s004; s004; s004; s169; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m10428[39m: [38;5;2m     3362:       439:       s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m10429[39m: [38;5;2m     3363:       440:       s168; s168; s168; s168|];[39m
     [38;5;2m10430[39m: [38;5;2m     3364:       441:     [|s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m10431[39m: [38;5;2m     3365:       442:       s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m10432[39m: [38;5;2m     3366:       443:       s168; s168; s168; s168; s168; s168; s168; s168; s000; s000; s000; s000;[39m
     [38;5;2m10433[39m: [38;5;2m     3367:       444:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10434[39m: [38;5;2m     3368:       445:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m10435[39m: [38;5;2m     3369:       446:       s000; s000; s000; s000|]|][39m
     [38;5;2m10436[39m: [38;5;2m     3370: Added regular file ../notty/src/no-uucp/notty_uucp_data.mli:[39m
     [38;5;2m10437[39m: [38;5;2m     3371:         1: (* Do not edit.[39m
     [38;5;2m10438[39m: [38;5;2m     3372:         2:  *[39m
     [38;5;2m10439[39m: [38;5;2m     3373:         3:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m10440[39m: [38;5;2m     3374:         4:  * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m10441[39m: [38;5;2m     3375:         5:  *[39m
     [38;5;2m10442[39m: [38;5;2m     3376:         6:  * Unicode version 13.0.0.[39m
     [38;5;2m10443[39m: [38;5;2m     3377:         7:  *)[39m
     [38;5;2m10444[39m: [38;5;2m     3378:         8: [39m
     [38;5;2m10445[39m: [38;5;2m     3379:         9: (* Uucp.Break.tty_width_hint *)[39m
     [38;5;2m10446[39m: [38;5;2m     3380:        10: val tty_width_hint: int array * int array * int array[39m
     [38;5;2m10447[39m: [38;5;2m     3381:        11: [39m
     [38;5;2m10448[39m: [38;5;2m     3382:        12: (* Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m10449[39m: [38;5;2m     3383:        13: val grapheme_cluster_boundary: string array array[39m
     [38;5;2m10450[39m: [38;5;2m     3384:        14: [39m
     [38;5;2m10451[39m: [38;5;2m     3385: Added regular file ../notty/src/notty.ml:[39m
     [38;5;2m10452[39m: [38;5;2m     3386:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m10453[39m: [38;5;2m     3387:         2:    See LICENSE.md. *)[39m
     [38;5;2m10454[39m: [38;5;2m     3388:         3: [39m
     [38;5;2m10455[39m: [38;5;2m     3389:         4: let invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m10456[39m: [38;5;2m     3390:         5: [39m
     [38;5;2m10457[39m: [38;5;2m     3391:         6: let (&.) f g x = f (g x)[39m
     [38;5;2m10458[39m: [38;5;2m     3392:         7: [39m
     [38;5;2m10459[39m: [38;5;2m     3393:         8: let btw (x : int) a b = a <= x && x <= b[39m
     [38;5;2m10460[39m: [38;5;2m     3394:         9: let bit n b = b land (1 lsl n) > 0[39m
     [38;5;2m10461[39m: [38;5;2m     3395:        10: [39m
     [38;5;2m10462[39m: [38;5;2m     3396:        11: let max (a : int) b = if a > b then a else b[39m
     [38;5;2m10463[39m: [38;5;2m     3397:        12: let min (a : int) b = if a < b then a else b[39m
     [38;5;2m10464[39m: [38;5;2m     3398:        13: [39m
     [38;5;2m10465[39m: [38;5;2m     3399:        14: let is_C0 x = x < 0x20 || x = 0x7f[39m
     [38;5;2m10466[39m: [38;5;2m     3400:        15: and is_C1 x = 0x80 <= x && x < 0xa0[39m
     [38;5;2m10467[39m: [38;5;2m     3401:        16: let is_ctrl x = is_C0 x || is_C1 x[39m
     [38;5;2m10468[39m: [38;5;2m     3402:        17: and is_ascii x = x < 0x80[39m
     [38;5;2m10469[39m: [38;5;2m     3403:        18: [39m
     [38;5;2m10470[39m: [38;5;2m     3404:        19: let rec concatm z (@) xs =[39m
     [38;5;2m10471[39m: [38;5;2m     3405:        20:   let rec accum (@) = function[39m
     [38;5;2m10472[39m: [38;5;2m     3406:        21:     | []|[_] as xs -> xs[39m
     [38;5;2m10473[39m: [38;5;2m     3407:        22:     | a::b::xs -> (a @ b) :: accum (@) xs in[39m
     [38;5;2m10474[39m: [38;5;2m     3408:        23:   match xs with [] -> z | [x] -> x | xs -> concatm z (@) (accum (@) xs)[39m
     [38;5;2m10475[39m: [38;5;2m     3409:        24: [39m
     [38;5;2m10476[39m: [38;5;2m     3410:        25: let rec linspcm z (@) x n f = match n with[39m
     [38;5;2m10477[39m: [38;5;2m     3411:        26:   | 0 -> z[39m
     [38;5;2m10478[39m: [38;5;2m     3412:        27:   | 1 -> f x[39m
     [38;5;2m10479[39m: [38;5;2m     3413:        28:   | _ -> let m = n / 2 in linspcm z (@) x m f @ linspcm z (@) (x + m) (n - m) f[39m
     [38;5;2m10480[39m: [38;5;2m     3414:        29: [39m
     [38;5;2m10481[39m: [38;5;2m     3415:        30: let memo (type a) ?(hash=Hashtbl.hash) ?(eq=(=)) ~size f =[39m
     [38;5;2m10482[39m: [38;5;2m     3416:        31:   let module H = Ephemeron.K1.Make[39m
     [38;5;2m10483[39m: [38;5;2m     3417:        32:     (struct type t = a let (hash, equal) = (hash, eq) end) in[39m
     [38;5;2m10484[39m: [38;5;2m     3418:        33:   let t = H.create size in fun x ->[39m
     [38;5;2m10485[39m: [38;5;2m     3419:        34:     try H.find t x with Not_found -> let y = f x in H.add t x y; y[39m
     [38;5;2m10486[39m: [38;5;2m     3420:        35: [39m
     [38;5;2m10487[39m: [38;5;2m     3421:        36: module Buffer = struct[39m
     [38;5;2m10488[39m: [38;5;2m     3422:        37:   include Buffer[39m
     [38;5;2m10489[39m: [38;5;2m     3423:        38:   let buf = Buffer.create 1024[39m
     [38;5;2m10490[39m: [38;5;2m     3424:        39:   let mkstring f = f buf; let res = contents buf in reset buf; res[39m
     [38;5;2m10491[39m: [38;5;2m     3425:        40:   let add_decimal b = function[39m
     [38;5;2m10492[39m: [38;5;2m     3426:        41:     | x when btw x 0 999 ->[39m
     [38;5;2m10493[39m: [38;5;2m     3427:        42:         let d1 = x / 100 and d2 = (x mod 100) / 10 and d3 = x mod 10 in[39m
     [38;5;2m10494[39m: [38;5;2m     3428:        43:         if d1 > 0 then 0x30 + d1 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m10495[39m: [38;5;2m     3429:        44:         if (d1 + d2) > 0 then 0x30 + d2 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m10496[39m: [38;5;2m     3430:        45:         0x30 + d3 |> Char.unsafe_chr |> add_char b[39m
     [38;5;2m10497[39m: [38;5;2m     3431:        46:     | x -> string_of_int x |> add_string b[39m
     [38;5;2m10498[39m: [38;5;2m     3432:        47:   let add_chars b c n = for _ = 1 to n do add_char b c done[39m
     [38;5;2m10499[39m: [38;5;2m     3433:        48: end[39m
     [38;5;2m10500[39m: [38;5;2m     3434:        49: [39m
     [38;5;2m10501[39m: [38;5;2m     3435:        50: module String = struct[39m
     [38;5;2m10502[39m: [38;5;2m     3436:        51:   include String[39m
     [38;5;2m10503[39m: [38;5;2m     3437:        52:   let sub0cp s i len = if i > 0 || len < length s then sub s i len else s[39m
     [38;5;2m10504[39m: [38;5;2m     3438:        53:   let of_chars_rev = function[39m
     [38;5;2m10505[39m: [38;5;2m     3439:        54:     | []  -> ""[39m
     [38;5;2m10506[39m: [38;5;2m     3440:        55:     | [c] -> String.make 1 c[39m
     [38;5;2m10507[39m: [38;5;2m     3441:        56:     | cs  ->[39m
     [38;5;2m10508[39m: [38;5;2m     3442:        57:         let n = List.length cs in[39m
     [38;5;2m10509[39m: [38;5;2m     3443:        58:         let rec go bs i = Bytes.(function[39m
     [38;5;2m10510[39m: [38;5;2m     3444:        59:           | []    -> unsafe_to_string bs[39m
     [38;5;2m10511[39m: [38;5;2m     3445:        60:           | x::xs -> unsafe_set bs i x; go bs (pred i) xs[39m
     [38;5;2m10512[39m: [38;5;2m     3446:        61:         ) in go (Bytes.create n) (n - 1) cs[39m
     [38;5;2m10513[39m: [38;5;2m     3447:        62: end[39m
     [38;5;2m10514[39m: [38;5;2m     3448:        63: [39m
     [38;5;2m10515[39m: [38;5;2m     3449:        64: module Option = struct[39m
     [38;5;2m10516[39m: [38;5;2m     3450:        65: [39m
     [38;5;2m10517[39m: [38;5;2m     3451:        66:   let map f = function Some x -> Some (f x) | _ -> None[39m
     [38;5;2m10518[39m: [38;5;2m     3452:        67:   let get def = function Some x -> x | _ -> def[39m
     [38;5;2m10519[39m: [38;5;2m     3453:        68:   let to_list = function Some x -> [x] | _ -> [][39m
     [38;5;2m10520[39m: [38;5;2m     3454:        69:   let (>>|) a f = map f a[39m
     [38;5;2m10521[39m: [38;5;2m     3455:        70:   let (>>=) a f = match a with Some x -> f x | _ -> None[39m
     [38;5;2m10522[39m: [38;5;2m     3456:        71: end[39m
     [38;5;2m10523[39m: [38;5;2m     3457:        72: [39m
     [38;5;2m10524[39m: [38;5;2m     3458:        73: module Text = struct[39m
     [38;5;2m10525[39m: [38;5;2m     3459:        74: [39m
     [38;5;2m10526[39m: [38;5;2m     3460:        75:   let err_ctrl u = invalid_arg "Notty: control char: U+%02X, %S" (Char.code u)[39m
     [38;5;2m10527[39m: [38;5;2m     3461:        76:   let err_malformed = invalid_arg "Notty: malformed UTF-8: %s, %S"[39m
     [38;5;2m10528[39m: [38;5;2m     3462:        77: [39m
     [38;5;2m10529[39m: [38;5;2m     3463:        78:   type t =[39m
     [38;5;2m10530[39m: [38;5;2m     3464:        79:     | Ascii of string * int * int[39m
     [38;5;2m10531[39m: [38;5;2m     3465:        80:     | Utf8  of string * int array * int * int[39m
     [38;5;2m10532[39m: [38;5;2m     3466:        81: [39m
     [38;5;2m10533[39m: [38;5;2m     3467:        82:   let equal t1 t2 = match (t1, t2) with[39m
     [38;5;2m10534[39m: [38;5;2m     3468:        83:     | (Utf8 (s1, _, i1, n1), Utf8 (s2, _, i2, n2))[39m
     [38;5;2m10535[39m: [38;5;2m     3469:        84:     | (Ascii (s1, i1, n1), Ascii (s2, i2, n2)) -> i1 = i2 && n1 = n2 && s1 = s2[39m
     [38;5;2m10536[39m: [38;5;2m     3470:        85:     | _ -> false[39m
     [38;5;2m10537[39m: [38;5;2m     3471:        86: [39m
     [38;5;2m10538[39m: [38;5;2m     3472:        87:   let width = function Utf8 (_, _, _, w) -> w | Ascii (_, _, w)   -> w[39m
     [38;5;2m10539[39m: [38;5;2m     3473:        88: [39m
     [38;5;2m10540[39m: [38;5;2m     3474:        89:   let empty = Ascii ("", 0, 0)[39m
     [38;5;2m10541[39m: [38;5;2m     3475:        90: [39m
     [38;5;2m10542[39m: [38;5;2m     3476:        91:   let is_empty t = width t = 0[39m
     [38;5;2m10543[39m: [38;5;2m     3477:        92: [39m
     [38;5;2m10544[39m: [38;5;2m     3478:        93:   let graphemes str =[39m
     [38;5;2m10545[39m: [38;5;2m     3479:        94:     let module Uuseg = Notty_grapheme_cluster in[39m
     [38;5;2m10546[39m: [38;5;2m     3480:        95:     let seg = Uuseg.create () in[39m
     [38;5;2m10547[39m: [38;5;2m     3481:        96:     let rec f (is, w as acc) i evt =[39m
     [38;5;2m10548[39m: [38;5;2m     3482:        97:       match Uuseg.add seg evt with[39m
     [38;5;2m10549[39m: [38;5;2m     3483:        98:       | `Await | `End -> acc[39m
     [38;5;2m10550[39m: [38;5;2m     3484:        99:       | `Uchar u      -> f (is, w + Notty_uucp.tty_width_hint u) i `Await[39m
     [38;5;2m10551[39m: [38;5;2m     3485:       100:       | `Boundary     ->[39m
     [38;5;2m10552[39m: [38;5;2m     3486:       101:           let is = match w with 0 -> is | 1 -> i::is | _ -> i::(-1)::is in[39m
     [38;5;2m10553[39m: [38;5;2m     3487:       102:           f (is, 0) i `Await in[39m
     [38;5;2m10554[39m: [38;5;2m     3488:       103:     let acc = Uutf.String.fold_utf_8 (fun acc i -> function[39m
     [38;5;2m10555[39m: [38;5;2m     3489:       104:       | `Malformed err -> err_malformed err str[39m
     [38;5;2m10556[39m: [38;5;2m     3490:       105:       | `Uchar _ as u  -> f acc i u[39m
     [38;5;2m10557[39m: [38;5;2m     3491:       106:       ) ([0], 0) str in[39m
     [38;5;2m10558[39m: [38;5;2m     3492:       107:     f acc (String.length str) `End |> fst |> List.rev |> Array.of_list (*XXX*)[39m
     [38;5;2m10559[39m: [38;5;2m     3493:       108: [39m
     [38;5;2m10560[39m: [38;5;2m     3494:       109:   let dead = ' '[39m
     [38;5;2m10561[39m: [38;5;2m     3495:       110: [39m
     [38;5;2m10562[39m: [38;5;2m     3496:       111:   let to_buffer buf = function[39m
     [38;5;2m10563[39m: [38;5;2m     3497:       112:     | Ascii (s, off, w)    -> Buffer.add_substring buf s off w[39m
     [38;5;2m10564[39m: [38;5;2m     3498:       113:     | Utf8 (s, ix, off, w) ->[39m
     [38;5;2m10565[39m: [38;5;2m     3499:       114:         let x1 = match ix.(off) with[39m
     [38;5;2m10566[39m: [38;5;2m     3500:       115:           | -1 -> Buffer.add_char buf dead; ix.(off + 1) | x -> x[39m
     [38;5;2m10567[39m: [38;5;2m     3501:       116:         and x2 = ix.(off + w) in[39m
     [38;5;2m10568[39m: [38;5;2m     3502:       117:         Buffer.add_substring buf s x1 @@[39m
     [38;5;2m10569[39m: [38;5;2m     3503:       118:           (if x2 = -1 then ix.(off + w - 1) else x2) - x1;[39m
     [38;5;2m10570[39m: [38;5;2m     3504:       119:         if x2 = -1 then Buffer.add_char buf dead[39m
     [38;5;2m10571[39m: [38;5;2m     3505:       120: [39m
     [38;5;2m10572[39m: [38;5;2m     3506:       121:   let sub t x w =[39m
     [38;5;2m10573[39m: [38;5;2m     3507:       122:     let w1 = width t in[39m
     [38;5;2m10574[39m: [38;5;2m     3508:       123:     if w = 0 || x >= w1 then empty else[39m
     [38;5;2m10575[39m: [38;5;2m     3509:       124:       let w = min w (w1 - x) in[39m
     [38;5;2m10576[39m: [38;5;2m     3510:       125:       if w = w1 then t else match t with[39m
     [38;5;2m10577[39m: [38;5;2m     3511:       126:         Ascii (s, off, _) -> Ascii (s, off + x, w)[39m
     [38;5;2m10578[39m: [38;5;2m     3512:       127:       | Utf8 (s, ix, off, _) -> Utf8 (s, ix, off + x, w)[39m
     [38;5;2m10579[39m: [38;5;2m     3513:       128: [39m
     [38;5;2m10580[39m: [38;5;2m     3514:       129:   let is_ascii_or_raise_ctrl s =[39m
     [38;5;2m10581[39m: [38;5;2m     3515:       130:     let (@!) s i = String.unsafe_get s i |> Char.code in[39m
     [38;5;2m10582[39m: [38;5;2m     3516:       131:     let rec go s acc i n =[39m
     [38;5;2m10583[39m: [38;5;2m     3517:       132:       if n = 0 then acc else[39m
     [38;5;2m10584[39m: [38;5;2m     3518:       133:         let x = s @! i in[39m
     [38;5;2m10585[39m: [38;5;2m     3519:       134:         if is_C0 x then[39m
     [38;5;2m10586[39m: [38;5;2m     3520:       135:           err_ctrl s.[i] s[39m
     [38;5;2m10587[39m: [38;5;2m     3521:       136:         else if x = 0xc2 && n > 1 && is_C1 (s @! (i + 1)) then[39m
     [38;5;2m10588[39m: [38;5;2m     3522:       137:           err_ctrl s.[i + 1] s[39m
     [38;5;2m10589[39m: [38;5;2m     3523:       138:         else go s (acc && is_ascii x) (i + 1) (n - 1) in[39m
     [38;5;2m10590[39m: [38;5;2m     3524:       139:     go s true 0 (String.length s)[39m
     [38;5;2m10591[39m: [38;5;2m     3525:       140: [39m
     [38;5;2m10592[39m: [38;5;2m     3526:       141:   let of_ascii s = Ascii (s, 0, String.length s)[39m
     [38;5;2m10593[39m: [38;5;2m     3527:       142:   and of_unicode s = let x = graphemes s in Utf8 (s, x, 0, Array.length x - 1)[39m
     [38;5;2m10594[39m: [38;5;2m     3528:       143:   let of_unicode = memo ~eq:String.equal ~size:128 of_unicode[39m
     [38;5;2m10595[39m: [38;5;2m     3529:       144: [39m
     [38;5;2m10596[39m: [38;5;2m     3530:       145:   let of_string = function[39m
     [38;5;2m10597[39m: [38;5;2m     3531:       146:     | "" -> empty[39m
     [38;5;2m10598[39m: [38;5;2m     3532:       147:     | s  -> if is_ascii_or_raise_ctrl s then of_ascii s else of_unicode s[39m
     [38;5;2m10599[39m: [38;5;2m     3533:       148: [39m
     [38;5;2m10600[39m: [38;5;2m     3534:       149:   let of_uchars ucs = of_string @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m10601[39m: [38;5;2m     3535:       150:     Array.iter (Buffer.add_utf_8_uchar buf) ucs[39m
     [38;5;2m10602[39m: [38;5;2m     3536:       151: [39m
     [38;5;2m10603[39m: [38;5;2m     3537:       152:   let replicateu w u =[39m
     [38;5;2m10604[39m: [38;5;2m     3538:       153:     if is_ctrl (Uchar.to_int u) then[39m
     [38;5;2m10605[39m: [38;5;2m     3539:       154:       err_ctrl (Uchar.unsafe_to_char u) "<repeated character>"[39m
     [38;5;2m10606[39m: [38;5;2m     3540:       155:     else if w < 1 then empty[39m
     [38;5;2m10607[39m: [38;5;2m     3541:       156:     else if is_ascii (Uchar.to_int u) then[39m
     [38;5;2m10608[39m: [38;5;2m     3542:       157:       of_ascii (String.make w (Uchar.unsafe_to_char u))[39m
     [38;5;2m10609[39m: [38;5;2m     3543:       158:     else of_unicode @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m10610[39m: [38;5;2m     3544:       159:       for _ = 1 to w do Buffer.add_utf_8_uchar buf u done[39m
     [38;5;2m10611[39m: [38;5;2m     3545:       160: [39m
     [38;5;2m10612[39m: [38;5;2m     3546:       161:   let replicatec w c = replicateu w (Uchar.of_char c)[39m
     [38;5;2m10613[39m: [38;5;2m     3547:       162: end[39m
     [38;5;2m10614[39m: [38;5;2m     3548:       163: [39m
     [38;5;2m10615[39m: [38;5;2m     3549:       164: module A = struct[39m
     [38;5;2m10616[39m: [38;5;2m     3550:       165: [39m
     [38;5;2m10617[39m: [38;5;2m     3551:       166:   type color = int[39m
     [38;5;2m10618[39m: [38;5;2m     3552:       167:   type style = int[39m
     [38;5;2m10619[39m: [38;5;2m     3553:       168:   type t = { fg : color; bg : color; st : style }[39m
     [38;5;2m10620[39m: [38;5;2m     3554:       169: [39m
     [38;5;2m10621[39m: [38;5;2m     3555:       170:   let equal t1 t2 = t1.fg = t2.fg && t1.bg = t2.bg && t1.st = t2.st[39m
     [38;5;2m10622[39m: [38;5;2m     3556:       171:   let unsafe_color_of_int int= int[39m
     [38;5;2m10623[39m: [38;5;2m     3557:       172:   let unsafe_style_of_int int= int[39m
     [38;5;2m10624[39m: [38;5;2m     3558:       173: [39m
     [38;5;2m10625[39m: [38;5;2m     3559:       174:   let black        = 0x01000000[39m
     [38;5;2m10626[39m: [38;5;2m     3560:       175:   and red          = 0x01000001[39m
     [38;5;2m10627[39m: [38;5;2m     3561:       176:   and green        = 0x01000002[39m
     [38;5;2m10628[39m: [38;5;2m     3562:       177:   and yellow       = 0x01000003[39m
     [38;5;2m10629[39m: [38;5;2m     3563:       178:   and blue         = 0x01000004[39m
     [38;5;2m10630[39m: [38;5;2m     3564:       179:   and magenta      = 0x01000005[39m
     [38;5;2m10631[39m: [38;5;2m     3565:       180:   and cyan         = 0x01000006[39m
     [38;5;2m10632[39m: [38;5;2m     3566:       181:   and white        = 0x01000007[39m
     [38;5;2m10633[39m: [38;5;2m     3567:       182:   and lightblack   = 0x01000008[39m
     [38;5;2m10634[39m: [38;5;2m     3568:       183:   and lightred     = 0x01000009[39m
     [38;5;2m10635[39m: [38;5;2m     3569:       184:   and lightgreen   = 0x0100000a[39m
     [38;5;2m10636[39m: [38;5;2m     3570:       185:   and lightyellow  = 0x0100000b[39m
     [38;5;2m10637[39m: [38;5;2m     3571:       186:   and lightblue    = 0x0100000c[39m
     [38;5;2m10638[39m: [38;5;2m     3572:       187:   and lightmagenta = 0x0100000d[39m
     [38;5;2m10639[39m: [38;5;2m     3573:       188:   and lightcyan    = 0x0100000e[39m
     [38;5;2m10640[39m: [38;5;2m     3574:       189:   and lightwhite   = 0x0100000f[39m
     [38;5;2m10641[39m: [38;5;2m     3575:       190: [39m
     [38;5;2m10642[39m: [38;5;2m     3576:       191:   let tag c = (c land 0x03000000) lsr 24[39m
     [38;5;2m10643[39m: [38;5;2m     3577:       192: [39m
     [38;5;2m10644[39m: [38;5;2m     3578:       193:   let rgb ~r ~g ~b =[39m
     [38;5;2m10645[39m: [38;5;2m     3579:       194:     if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m10646[39m: [38;5;2m     3580:       195:       invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m10647[39m: [38;5;2m     3581:       196:     else 0x01000000 lor (r * 36 + g * 6 + b + 16)[39m
     [38;5;2m10648[39m: [38;5;2m     3582:       197: [39m
     [38;5;2m10649[39m: [38;5;2m     3583:       198:   let gray level =[39m
     [38;5;2m10650[39m: [38;5;2m     3584:       199:     if level < 0 || level > 23 then[39m
     [38;5;2m10651[39m: [38;5;2m     3585:       200:       invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m10652[39m: [38;5;2m     3586:       201:     else 0x01000000 lor (level + 232)[39m
     [38;5;2m10653[39m: [38;5;2m     3587:       202: [39m
     [38;5;2m10654[39m: [38;5;2m     3588:       203:   let rgb_888 ~r ~g ~b =[39m
     [38;5;2m10655[39m: [38;5;2m     3589:       204:     if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m10656[39m: [38;5;2m     3590:       205:       invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m10657[39m: [38;5;2m     3591:       206:     else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m10658[39m: [38;5;2m     3592:       207: [39m
     [38;5;2m10659[39m: [38;5;2m     3593:       208:   let i x = x land 0xff[39m
     [38;5;2m10660[39m: [38;5;2m     3594:       209:   and r x = x lsr 16 land 0xff[39m
     [38;5;2m10661[39m: [38;5;2m     3595:       210:   and g x = x lsr 8 land 0xff[39m
     [38;5;2m10662[39m: [38;5;2m     3596:       211:   and b x = x land 0xff[39m
     [38;5;2m10663[39m: [38;5;2m     3597:       212: [39m
     [38;5;2m10664[39m: [38;5;2m     3598:       213:   let bold      = 1[39m
     [38;5;2m10665[39m: [38;5;2m     3599:       214:   and italic    = 2[39m
     [38;5;2m10666[39m: [38;5;2m     3600:       215:   and underline = 4[39m
     [38;5;2m10667[39m: [38;5;2m     3601:       216:   and blink     = 8[39m
     [38;5;2m10668[39m: [38;5;2m     3602:       217:   and reverse   = 16[39m
     [38;5;2m10669[39m: [38;5;2m     3603:       218: [39m
     [38;5;2m10670[39m: [38;5;2m     3604:       219:   let empty = { fg = 0; bg = 0; st = 0 }[39m
     [38;5;2m10671[39m: [38;5;2m     3605:       220: [39m
     [38;5;2m10672[39m: [38;5;2m     3606:       221:  let (++) a1 a2 =[39m
     [38;5;2m10673[39m: [38;5;2m     3607:       222:    if a1 == empty then a2 else if a2 == empty then a1 else[39m
     [38;5;2m10674[39m: [38;5;2m     3608:       223:      { fg = (match a2.fg with 0 -> a1.fg | x -> x)[39m
     [38;5;2m10675[39m: [38;5;2m     3609:       224:      ; bg = (match a2.bg with 0 -> a1.bg | x -> x)[39m
     [38;5;2m10676[39m: [38;5;2m     3610:       225:      ; st = a1.st lor a2.st }[39m
     [38;5;2m10677[39m: [38;5;2m     3611:       226: [39m
     [38;5;2m10678[39m: [38;5;2m     3612:       227:   let fg fg = { empty with fg }[39m
     [38;5;2m10679[39m: [38;5;2m     3613:       228:   let bg bg = { empty with bg }[39m
     [38;5;2m10680[39m: [38;5;2m     3614:       229:   let st st = { empty with st }[39m
     [38;5;2m10681[39m: [38;5;2m     3615:       230: end[39m
     [38;5;2m10682[39m: [38;5;2m     3616:       231: [39m
     [38;5;2m10683[39m: [38;5;2m     3617:       232: module I = struct[39m
     [38;5;2m10684[39m: [38;5;2m     3618:       233: [39m
     [38;5;2m10685[39m: [38;5;2m     3619:       234:   type dim = int * int[39m
     [38;5;2m10686[39m: [38;5;2m     3620:       235: [39m
     [38;5;2m10687[39m: [38;5;2m     3621:       236:   type t =[39m
     [38;5;2m10688[39m: [38;5;2m     3622:       237:     | Empty[39m
     [38;5;2m10689[39m: [38;5;2m     3623:       238:     | Segment  of A.t * Text.t[39m
     [38;5;2m10690[39m: [38;5;2m     3624:       239:     | Hcompose of (t * t) * dim[39m
     [38;5;2m10691[39m: [38;5;2m     3625:       240:     | Vcompose of (t * t) * dim[39m
     [38;5;2m10692[39m: [38;5;2m     3626:       241:     | Zcompose of (t * t) * dim[39m
     [38;5;2m10693[39m: [38;5;2m     3627:       242:     | Hcrop    of (t * int * int) * dim[39m
     [38;5;2m10694[39m: [38;5;2m     3628:       243:     | Vcrop    of (t * int * int) * dim[39m
     [38;5;2m10695[39m: [38;5;2m     3629:       244:     | Void     of dim[39m
     [38;5;2m10696[39m: [38;5;2m     3630:       245: [39m
     [38;5;2m10697[39m: [38;5;2m     3631:       246:   let width = function[39m
     [38;5;2m10698[39m: [38;5;2m     3632:       247:     | Empty -> 0[39m
     [38;5;2m10699[39m: [38;5;2m     3633:       248:     | Segment (_, text) -> Text.width text[39m
     [38;5;2m10700[39m: [38;5;2m     3634:       249:     | Hcompose (_, (w, _)) -> w[39m
     [38;5;2m10701[39m: [38;5;2m     3635:       250:     | Vcompose (_, (w, _)) -> w[39m
     [38;5;2m10702[39m: [38;5;2m     3636:       251:     | Zcompose (_, (w, _)) -> w[39m
     [38;5;2m10703[39m: [38;5;2m     3637:       252:     | Hcrop    (_, (w, _)) -> w[39m
     [38;5;2m10704[39m: [38;5;2m     3638:       253:     | Vcrop    (_, (w, _)) -> w[39m
     [38;5;2m10705[39m: [38;5;2m     3639:       254:     | Void         (w, _)  -> w [@@inline][39m
     [38;5;2m10706[39m: [38;5;2m     3640:       255: [39m
     [38;5;2m10707[39m: [38;5;2m     3641:       256:   let height = function[39m
     [38;5;2m10708[39m: [38;5;2m     3642:       257:     | Empty -> 0[39m
     [38;5;2m10709[39m: [38;5;2m     3643:       258:     | Segment _ -> 1[39m
     [38;5;2m10710[39m: [38;5;2m     3644:       259:     | Hcompose (_, (_, h)) -> h[39m
     [38;5;2m10711[39m: [38;5;2m     3645:       260:     | Vcompose (_, (_, h)) -> h[39m
     [38;5;2m10712[39m: [38;5;2m     3646:       261:     | Zcompose (_, (_, h)) -> h[39m
     [38;5;2m10713[39m: [38;5;2m     3647:       262:     | Hcrop    (_, (_, h)) -> h[39m
     [38;5;2m10714[39m: [38;5;2m     3648:       263:     | Vcrop    (_, (_, h)) -> h[39m
     [38;5;2m10715[39m: [38;5;2m     3649:       264:     | Void         (_, h)  -> h [@@inline][39m
     [38;5;2m10716[39m: [38;5;2m     3650:       265: [39m
     [38;5;2m10717[39m: [38;5;2m     3651:       266:   let equal t1 t2 =[39m
     [38;5;2m10718[39m: [38;5;2m     3652:       267:     let rec eq t1 t2 = match (t1, t2) with[39m
     [38;5;2m10719[39m: [38;5;2m     3653:       268:       | (Empty, Empty) -> true[39m
     [38;5;2m10720[39m: [38;5;2m     3654:       269:       | (Segment (a1, t1), Segment (a2, t2)) ->[39m
     [38;5;2m10721[39m: [38;5;2m     3655:       270:           A.equal a1 a2 && Text.equal t1 t2[39m
     [38;5;2m10722[39m: [38;5;2m     3656:       271:       | (Hcompose ((a, b), _), Hcompose ((c, d), _))[39m
     [38;5;2m10723[39m: [38;5;2m     3657:       272:       | (Vcompose ((a, b), _), Vcompose ((c, d), _))[39m
     [38;5;2m10724[39m: [38;5;2m     3658:       273:       | (Zcompose ((a, b), _), Zcompose ((c, d), _)) -> eq a c && eq b d[39m
     [38;5;2m10725[39m: [38;5;2m     3659:       274:       | (Hcrop ((a, i1, n1), _), Hcrop ((b, i2, n2), _))[39m
     [38;5;2m10726[39m: [38;5;2m     3660:       275:       | (Vcrop ((a, i1, n1), _), Vcrop ((b, i2, n2), _)) ->[39m
     [38;5;2m10727[39m: [38;5;2m     3661:       276:           i1 = i2 && n1 = n2 && eq a b[39m
     [38;5;2m10728[39m: [38;5;2m     3662:       277:       | (Void (a, b), Void (c, d)) -> a = c && b = d[39m
     [38;5;2m10729[39m: [38;5;2m     3663:       278:       | _ -> false in[39m
     [38;5;2m10730[39m: [38;5;2m     3664:       279:     width t1 = width t2 && height t1 = height t2 && eq t1 t2[39m
     [38;5;2m10731[39m: [38;5;2m     3665:       280: [39m
     [38;5;2m10732[39m: [38;5;2m     3666:       281:   let empty = Empty[39m
     [38;5;2m10733[39m: [38;5;2m     3667:       282: [39m
     [38;5;2m10734[39m: [38;5;2m     3668:       283:   let (<|>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m10735[39m: [38;5;2m     3669:       284:     | (_, Empty) -> t1[39m
     [38;5;2m10736[39m: [38;5;2m     3670:       285:     | (Empty, _) -> t2[39m
     [38;5;2m10737[39m: [38;5;2m     3671:       286:     | _          ->[39m
     [38;5;2m10738[39m: [38;5;2m     3672:       287:         let w = width t1 + width t2[39m
     [38;5;2m10739[39m: [38;5;2m     3673:       288:         and h = max (height t1) (height t2) in[39m
     [38;5;2m10740[39m: [38;5;2m     3674:       289:         Hcompose ((t1, t2), (w, h))[39m
     [38;5;2m10741[39m: [38;5;2m     3675:       290: [39m
     [38;5;2m10742[39m: [38;5;2m     3676:       291:   let (<->) t1 t2 = match (t1, t2) with[39m
     [38;5;2m10743[39m: [38;5;2m     3677:       292:     | (_, Empty) -> t1[39m
     [38;5;2m10744[39m: [38;5;2m     3678:       293:     | (Empty, _) -> t2[39m
     [38;5;2m10745[39m: [38;5;2m     3679:       294:     | _          ->[39m
     [38;5;2m10746[39m: [38;5;2m     3680:       295:         let w = max (width t1) (width t2)[39m
     [38;5;2m10747[39m: [38;5;2m     3681:       296:         and h = height t1 + height t2 in[39m
     [38;5;2m10748[39m: [38;5;2m     3682:       297:         Vcompose ((t1, t2), (w, h))[39m
     [38;5;2m10749[39m: [38;5;2m     3683:       298: [39m
     [38;5;2m10750[39m: [38;5;2m     3684:       299:   let (</>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m10751[39m: [38;5;2m     3685:       300:     | (_, Empty) -> t1[39m
     [38;5;2m10752[39m: [38;5;2m     3686:       301:     | (Empty, _) -> t2[39m
     [38;5;2m10753[39m: [38;5;2m     3687:       302:     | _          ->[39m
     [38;5;2m10754[39m: [38;5;2m     3688:       303:         let w = max (width t1) (width t2)[39m
     [38;5;2m10755[39m: [38;5;2m     3689:       304:         and h = max (height t1) (height t2) in[39m
     [38;5;2m10756[39m: [38;5;2m     3690:       305:         Zcompose ((t1, t2), (w, h))[39m
     [38;5;2m10757[39m: [38;5;2m     3691:       306: [39m
     [38;5;2m10758[39m: [38;5;2m     3692:       307:   let void w h =[39m
     [38;5;2m10759[39m: [38;5;2m     3693:       308:     if w < 1 && h < 1 then Empty else Void (max 0 w, max 0 h)[39m
     [38;5;2m10760[39m: [38;5;2m     3694:       309: [39m
     [38;5;2m10761[39m: [38;5;2m     3695:       310:   let lincropinv crop void (++) init fini img =[39m
     [38;5;2m10762[39m: [38;5;2m     3696:       311:     match (init >= 0, fini >= 0) with[39m
     [38;5;2m10763[39m: [38;5;2m     3697:       312:     | (true, true) -> crop init fini img[39m
     [38;5;2m10764[39m: [38;5;2m     3698:       313:     | (true, _   ) -> crop init 0 img ++ void (-fini)[39m
     [38;5;2m10765[39m: [38;5;2m     3699:       314:     | (_   , true) -> void (-init) ++ crop 0 fini img[39m
     [38;5;2m10766[39m: [38;5;2m     3700:       315:     | _            -> void (-init) ++ img ++ void (-fini)[39m
     [38;5;2m10767[39m: [38;5;2m     3701:       316: [39m
     [38;5;2m10768[39m: [38;5;2m     3702:       317:   let hcrop =[39m
     [38;5;2m10769[39m: [38;5;2m     3703:       318:     let ctor left right img =[39m
     [38;5;2m10770[39m: [38;5;2m     3704:       319:       let h = height img and w = width img - left - right in[39m
     [38;5;2m10771[39m: [38;5;2m     3705:       320:       if w > 0 then Hcrop ((img, left, right), (w, h)) else void w h[39m
     [38;5;2m10772[39m: [38;5;2m     3706:       321:     in lincropinv ctor (fun w -> void w 0) (<|>)[39m
     [38;5;2m10773[39m: [38;5;2m     3707:       322: [39m
     [38;5;2m10774[39m: [38;5;2m     3708:       323:   let vcrop =[39m
     [38;5;2m10775[39m: [38;5;2m     3709:       324:     let ctor top bottom img =[39m
     [38;5;2m10776[39m: [38;5;2m     3710:       325:       let w = width img and h = height img - top - bottom in[39m
     [38;5;2m10777[39m: [38;5;2m     3711:       326:       if h > 0 then Vcrop ((img, top, bottom), (w, h)) else void w h[39m
     [38;5;2m10778[39m: [38;5;2m     3712:       327:     in lincropinv ctor (void 0) (<->)[39m
     [38;5;2m10779[39m: [38;5;2m     3713:       328: [39m
     [38;5;2m10780[39m: [38;5;2m     3714:       329:   let crop ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m10781[39m: [38;5;2m     3715:       330:     let img = if l <> 0 || r <> 0 then hcrop l r img else img in[39m
     [38;5;2m10782[39m: [38;5;2m     3716:       331:     if t <> 0 || b <> 0 then vcrop t b img else img[39m
     [38;5;2m10783[39m: [38;5;2m     3717:       332: [39m
     [38;5;2m10784[39m: [38;5;2m     3718:       333:   let hpad left right img = hcrop (-left) (-right) img[39m
     [38;5;2m10785[39m: [38;5;2m     3719:       334: [39m
     [38;5;2m10786[39m: [38;5;2m     3720:       335:   let vpad top bottom img = vcrop (-top) (-bottom) img[39m
     [38;5;2m10787[39m: [38;5;2m     3721:       336: [39m
     [38;5;2m10788[39m: [38;5;2m     3722:       337:   let pad ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m10789[39m: [38;5;2m     3723:       338:     crop ~l:(-l) ~r:(-r) ~t:(-t) ~b:(-b) img[39m
     [38;5;2m10790[39m: [38;5;2m     3724:       339: [39m
     [38;5;2m10791[39m: [38;5;2m     3725:       340:   let hcat = concatm empty (<|>)[39m
     [38;5;2m10792[39m: [38;5;2m     3726:       341: [39m
     [38;5;2m10793[39m: [38;5;2m     3727:       342:   let vcat = concatm empty (<->)[39m
     [38;5;2m10794[39m: [38;5;2m     3728:       343: [39m
     [38;5;2m10795[39m: [38;5;2m     3729:       344:   let zcat xs = List.fold_right (</>) xs empty[39m
     [38;5;2m10796[39m: [38;5;2m     3730:       345: [39m
     [38;5;2m10797[39m: [38;5;2m     3731:       346:   let text attr tx =[39m
     [38;5;2m10798[39m: [38;5;2m     3732:       347:     if Text.is_empty tx then void 0 1 else Segment (attr, tx)[39m
     [38;5;2m10799[39m: [38;5;2m     3733:       348: [39m
     [38;5;2m10800[39m: [38;5;2m     3734:       349:   let string attr s = text attr (Text.of_string s)[39m
     [38;5;2m10801[39m: [38;5;2m     3735:       350: [39m
     [38;5;2m10802[39m: [38;5;2m     3736:       351:   let uchars attr a = text attr (Text.of_uchars a)[39m
     [38;5;2m10803[39m: [38;5;2m     3737:       352: [39m
     [38;5;2m10804[39m: [38;5;2m     3738:       353:   let tabulate m n f =[39m
     [38;5;2m10805[39m: [38;5;2m     3739:       354:     let m = max m 0 and n = max n 0 in[39m
     [38;5;2m10806[39m: [38;5;2m     3740:       355:     linspcm empty (<->) 0 n (fun y -> linspcm empty (<|>) 0 m (fun x -> f x y))[39m
     [38;5;2m10807[39m: [38;5;2m     3741:       356: [39m
     [38;5;2m10808[39m: [38;5;2m     3742:       357:   let chars ctor attr c w h =[39m
     [38;5;2m10809[39m: [38;5;2m     3743:       358:     if w < 1 || h < 1 then void w h else[39m
     [38;5;2m10810[39m: [38;5;2m     3744:       359:       let line = text attr (ctor w c) in tabulate 1 h (fun _ _ -> line)[39m
     [38;5;2m10811[39m: [38;5;2m     3745:       360: [39m
     [38;5;2m10812[39m: [38;5;2m     3746:       361:   let char  = chars Text.replicatec[39m
     [38;5;2m10813[39m: [38;5;2m     3747:       362:   let uchar = chars Text.replicateu[39m
     [38;5;2m10814[39m: [38;5;2m     3748:       363: [39m
     [38;5;2m10815[39m: [38;5;2m     3749:       364:   let hsnap ?(align=`Middle) w img =[39m
     [38;5;2m10816[39m: [38;5;2m     3750:       365:     let off = width img - w in match align with[39m
     [38;5;2m10817[39m: [38;5;2m     3751:       366:       | `Left   -> hcrop 0 off img[39m
     [38;5;2m10818[39m: [38;5;2m     3752:       367:       | `Right  -> hcrop off 0 img[39m
     [38;5;2m10819[39m: [38;5;2m     3753:       368:       | `Middle -> let w1 = off / 2 in hcrop w1 (off - w1) img[39m
     [38;5;2m10820[39m: [38;5;2m     3754:       369: [39m
     [38;5;2m10821[39m: [38;5;2m     3755:       370:   let vsnap ?(align=`Middle) h img =[39m
     [38;5;2m10822[39m: [38;5;2m     3756:       371:     let off = height img - h in match align with[39m
     [38;5;2m10823[39m: [38;5;2m     3757:       372:       | `Top    -> vcrop 0 off img[39m
     [38;5;2m10824[39m: [38;5;2m     3758:       373:       | `Bottom -> vcrop off 0 img[39m
     [38;5;2m10825[39m: [38;5;2m     3759:       374:       | `Middle -> let h1 = off / 2 in vcrop h1 (off - h1) img[39m
     [38;5;2m10826[39m: [38;5;2m     3760:       375: [39m
     [38;5;2m10827[39m: [38;5;2m     3761:       376:   module Fmt = struct[39m
     [38;5;2m10828[39m: [38;5;2m     3762:       377: [39m
     [38;5;2m10829[39m: [38;5;2m     3763:       378:     open Format[39m
     [38;5;2m10830[39m: [38;5;2m     3764:       379: [39m
     [38;5;2m10831[39m: [38;5;2m     3765:       380:     type stag += Attr of A.t[39m
     [38;5;2m10832[39m: [38;5;2m     3766:       381: [39m
     [38;5;2m10833[39m: [38;5;2m     3767:       382:     let push r x = r := x :: !r[39m
     [38;5;2m10834[39m: [38;5;2m     3768:       383:     let pop r = r := (match !r with _::xs -> xs | _ -> [])[39m
     [38;5;2m10835[39m: [38;5;2m     3769:       384:     let top_a r = match !r with a::_ -> a | _ -> A.empty[39m
     [38;5;2m10836[39m: [38;5;2m     3770:       385: [39m
     [38;5;2m10837[39m: [38;5;2m     3771:       386:     let create () =[39m
     [38;5;2m10838[39m: [38;5;2m     3772:       387:       let img, line, attr = ref empty, ref empty, ref [] in[39m
     [38;5;2m10839[39m: [38;5;2m     3773:       388:       let fmt = formatter_of_out_functions {[39m
     [38;5;2m10840[39m: [38;5;2m     3774:       389:           out_flush = (fun () ->[39m
     [38;5;2m10841[39m: [38;5;2m     3775:       390:             img := !img <-> !line; line := empty; attr := [])[39m
     [38;5;2m10842[39m: [38;5;2m     3776:       391:         ; out_newline = (fun () ->[39m
     [38;5;2m10843[39m: [38;5;2m     3777:       392:             img := !img <-> !line; line := void 0 1)[39m
     [38;5;2m10844[39m: [38;5;2m     3778:       393:         ; out_string = (fun s i n ->[39m
     [38;5;2m10845[39m: [38;5;2m     3779:       394:             line := !line <|> string (top_a attr) String.(sub0cp s i n))[39m
     [38;5;2m10846[39m: [38;5;2m     3780:       395:         (* Not entirely clear; either or both could be void: *)[39m
     [38;5;2m10847[39m: [38;5;2m     3781:       396:         ; out_spaces = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m10848[39m: [38;5;2m     3782:       397:         ; out_indent = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m10849[39m: [38;5;2m     3783:       398:       } in[39m
     [38;5;2m10850[39m: [38;5;2m     3784:       399:       pp_set_formatter_stag_functions fmt {[39m
     [38;5;2m10851[39m: [38;5;2m     3785:       400:         (pp_get_formatter_stag_functions fmt ()) with[39m
     [38;5;2m10852[39m: [38;5;2m     3786:       401:             mark_open_stag =[39m
     [38;5;2m10853[39m: [38;5;2m     3787:       402:               (function Attr a -> push attr A.(top_a attr ++ a); "" | _ -> "")[39m
     [38;5;2m10854[39m: [38;5;2m     3788:       403:           ; mark_close_stag = (fun _ -> pop attr; "") };[39m
     [38;5;2m10855[39m: [38;5;2m     3789:       404:       pp_set_mark_tags fmt true;[39m
     [38;5;2m10856[39m: [38;5;2m     3790:       405:       fmt, fun () -> let i = !img in img := empty; line := empty; attr := []; i[39m
     [38;5;2m10857[39m: [38;5;2m     3791:       406: [39m
     [38;5;2m10858[39m: [38;5;2m     3792:       407:     let ppf, reset = create ()[39m
     [38;5;2m10859[39m: [38;5;2m     3793:       408: [39m
     [38;5;2m10860[39m: [38;5;2m     3794:       409:     let kstrf ?(attr = A.empty) ?(w = 1000000) k format =[39m
     [38;5;2m10861[39m: [38;5;2m     3795:       410:       let m = ref 0 in[39m
     [38;5;2m10862[39m: [38;5;2m     3796:       411:       let f1 _ () =[39m
     [38;5;2m10863[39m: [38;5;2m     3797:       412:         m := pp_get_margin ppf ();[39m
     [38;5;2m10864[39m: [38;5;2m     3798:       413:         pp_set_margin ppf w;[39m
     [38;5;2m10865[39m: [38;5;2m     3799:       414:         pp_open_stag ppf (Attr attr)[39m
     [38;5;2m10866[39m: [38;5;2m     3800:       415:       and k _ =[39m
     [38;5;2m10867[39m: [38;5;2m     3801:       416:         pp_print_flush ppf ();[39m
     [38;5;2m10868[39m: [38;5;2m     3802:       417:         pp_set_margin ppf !m;[39m
     [38;5;2m10869[39m: [38;5;2m     3803:       418:         reset () |> k[39m
     [38;5;2m10870[39m: [38;5;2m     3804:       419:       in kfprintf k ppf ("%a" ^^ format) f1 ()[39m
     [38;5;2m10871[39m: [38;5;2m     3805:       420: [39m
     [38;5;2m10872[39m: [38;5;2m     3806:       421:     let strf ?attr ?w format = kstrf ?attr ?w (fun i -> i) format[39m
     [38;5;2m10873[39m: [38;5;2m     3807:       422: [39m
     [38;5;2m10874[39m: [38;5;2m     3808:       423:     let attr attr f fmt x =[39m
     [38;5;2m10875[39m: [38;5;2m     3809:       424:       pp_open_stag fmt (Attr attr); f fmt x; pp_close_stag fmt ()[39m
     [38;5;2m10876[39m: [38;5;2m     3810:       425:   end[39m
     [38;5;2m10877[39m: [38;5;2m     3811:       426: [39m
     [38;5;2m10878[39m: [38;5;2m     3812:       427:   let kstrf, strf, pp_attr = Fmt.(kstrf, strf, attr)[39m
     [38;5;2m10879[39m: [38;5;2m     3813:       428: end[39m
     [38;5;2m10880[39m: [38;5;2m     3814:       429: [39m
     [38;5;2m10881[39m: [38;5;2m     3815:       430: module Operation = struct[39m
     [38;5;2m10882[39m: [38;5;2m     3816:       431: [39m
     [38;5;2m10883[39m: [38;5;2m     3817:       432:   type t =[39m
     [38;5;2m10884[39m: [38;5;2m     3818:       433:     End[39m
     [38;5;2m10885[39m: [38;5;2m     3819:       434:   | Skip of int * t[39m
     [38;5;2m10886[39m: [38;5;2m     3820:       435:   | Text of A.t * Text.t * t[39m
     [38;5;2m10887[39m: [38;5;2m     3821:       436: [39m
     [38;5;2m10888[39m: [38;5;2m     3822:       437:   let skip n k = if n = 0 then k else match k with[39m
     [38;5;2m10889[39m: [38;5;2m     3823:       438:       End         -> End[39m
     [38;5;2m10890[39m: [38;5;2m     3824:       439:     | Skip (m, k) -> Skip (m + n, k)[39m
     [38;5;2m10891[39m: [38;5;2m     3825:       440:     | _           -> Skip (n, k) [@@inline][39m
     [38;5;2m10892[39m: [38;5;2m     3826:       441: [39m
     [38;5;2m10893[39m: [38;5;2m     3827:       442:   let rec scan x w row i k =[39m
     [38;5;2m10894[39m: [38;5;2m     3828:       443:     let open I in match i with[39m
     [38;5;2m10895[39m: [38;5;2m     3829:       444: [39m
     [38;5;2m10896[39m: [38;5;2m     3830:       445:     | Empty | Void _ -> skip w k[39m
     [38;5;2m10897[39m: [38;5;2m     3831:       446: [39m
     [38;5;2m10898[39m: [38;5;2m     3832:       447:     | Segment _ when row > 0 -> skip w k[39m
     [38;5;2m10899[39m: [38;5;2m     3833:       448:     | Segment (attr, text) ->[39m
     [38;5;2m10900[39m: [38;5;2m     3834:       449:         let t  = Text.sub text x w in[39m
     [38;5;2m10901[39m: [38;5;2m     3835:       450:         let w1 = Text.width t in[39m
     [38;5;2m10902[39m: [38;5;2m     3836:       451:         let p  = if w > w1 then skip (w - w1) k else k in[39m
     [38;5;2m10903[39m: [38;5;2m     3837:       452:         if w1 > 0 then Text (attr, t, p) else p[39m
     [38;5;2m10904[39m: [38;5;2m     3838:       453: [39m
     [38;5;2m10905[39m: [38;5;2m     3839:       454:     | Hcompose ((i1, i2), _) ->[39m
     [38;5;2m10906[39m: [38;5;2m     3840:       455:         let w1 = width i1[39m
     [38;5;2m10907[39m: [38;5;2m     3841:       456:         and w2 = width i2 in[39m
     [38;5;2m10908[39m: [38;5;2m     3842:       457:         if x >= w1 + w2 then skip w k else[39m
     [38;5;2m10909[39m: [38;5;2m     3843:       458:         if x >= w1 then scan (x - w1) w row i2 k else[39m
     [38;5;2m10910[39m: [38;5;2m     3844:       459:         if x + w <= w1 then scan x w row i1 k else[39m
     [38;5;2m10911[39m: [38;5;2m     3845:       460:           scan x (w1 - x) row i1 @@ scan 0 (w - w1 + x) row i2 @@ k[39m
     [38;5;2m10912[39m: [38;5;2m     3846:       461: [39m
     [38;5;2m10913[39m: [38;5;2m     3847:       462:     | Vcompose ((i1, i2), _) ->[39m
     [38;5;2m10914[39m: [38;5;2m     3848:       463:         let h1 = height i1[39m
     [38;5;2m10915[39m: [38;5;2m     3849:       464:         and h2 = height i2 in[39m
     [38;5;2m10916[39m: [38;5;2m     3850:       465:         if row >= h1 + h2 then skip w k else[39m
     [38;5;2m10917[39m: [38;5;2m     3851:       466:         if row >= h1 then scan x w (row - h1) i2 k else scan x w row i1 k[39m
     [38;5;2m10918[39m: [38;5;2m     3852:       467: [39m
     [38;5;2m10919[39m: [38;5;2m     3853:       468:     | Zcompose ((i1, i2), _) ->[39m
     [38;5;2m10920[39m: [38;5;2m     3854:       469:         let rec stitch x w row i = function[39m
     [38;5;2m10921[39m: [38;5;2m     3855:       470:           | End -> scan x w row i End[39m
     [38;5;2m10922[39m: [38;5;2m     3856:       471:           | Text (a, t, ops) as opss ->[39m
     [38;5;2m10923[39m: [38;5;2m     3857:       472:               let w1 = Text.width t in[39m
     [38;5;2m10924[39m: [38;5;2m     3858:       473:               if w1 >= w then opss else[39m
     [38;5;2m10925[39m: [38;5;2m     3859:       474:                 Text (a, t, stitch (x + w1) (w - w1) row i ops)[39m
     [38;5;2m10926[39m: [38;5;2m     3860:       475:           | Skip (w1, ops) ->[39m
     [38;5;2m10927[39m: [38;5;2m     3861:       476:               scan x w1 row i @@[39m
     [38;5;2m10928[39m: [38;5;2m     3862:       477:                 if w1 >= w then ops else stitch (x + w1) (w - w1) row i ops[39m
     [38;5;2m10929[39m: [38;5;2m     3863:       478:         in stitch x w row i2 @@ scan x w row i1 @@ k[39m
     [38;5;2m10930[39m: [38;5;2m     3864:       479: [39m
     [38;5;2m10931[39m: [38;5;2m     3865:       480:     | Hcrop ((i, left, _), (w1, _)) ->[39m
     [38;5;2m10932[39m: [38;5;2m     3866:       481:         if x >= w1 then skip w k else[39m
     [38;5;2m10933[39m: [38;5;2m     3867:       482:         if x + w <= w1 then scan (x + left) w row i k else[39m
     [38;5;2m10934[39m: [38;5;2m     3868:       483:           scan (x + left) (w1 - x) row i @@ skip (w - w1 + x) k[39m
     [38;5;2m10935[39m: [38;5;2m     3869:       484: [39m
     [38;5;2m10936[39m: [38;5;2m     3870:       485:     | Vcrop ((i, top, _), (_, h1)) ->[39m
     [38;5;2m10937[39m: [38;5;2m     3871:       486:         if row < h1 then scan x w (top + row) i k else skip w k[39m
     [38;5;2m10938[39m: [38;5;2m     3872:       487: [39m
     [38;5;2m10939[39m: [38;5;2m     3873:       488:   let of_image (x, y) (w, h) i =[39m
     [38;5;2m10940[39m: [38;5;2m     3874:       489:     List.init h (fun off -> scan x (x + w) (y + off) i End)[39m
     [38;5;2m10941[39m: [38;5;2m     3875:       490: end[39m
     [38;5;2m10942[39m: [38;5;2m     3876:       491: [39m
     [38;5;2m10943[39m: [38;5;2m     3877:       492: module Cap = struct[39m
     [38;5;2m10944[39m: [38;5;2m     3878:       493: [39m
     [38;5;2m10945[39m: [38;5;2m     3879:       494:   type op = Buffer.t -> unit[39m
     [38;5;2m10946[39m: [38;5;2m     3880:       495: [39m
     [38;5;2m10947[39m: [38;5;2m     3881:       496:   let (&) op1 op2 buf = op1 buf; op2 buf[39m
     [38;5;2m10948[39m: [38;5;2m     3882:       497: [39m
     [38;5;2m10949[39m: [38;5;2m     3883:       498:   type t = {[39m
     [38;5;2m10950[39m: [38;5;2m     3884:       499:     skip    : int -> op[39m
     [38;5;2m10951[39m: [38;5;2m     3885:       500:   ; sgr     : A.t -> op[39m
     [38;5;2m10952[39m: [38;5;2m     3886:       501:   ; newline : op[39m
     [38;5;2m10953[39m: [38;5;2m     3887:       502:   ; clreol  : op[39m
     [38;5;2m10954[39m: [38;5;2m     3888:       503:   ; cursvis : bool -> op[39m
     [38;5;2m10955[39m: [38;5;2m     3889:       504:   ; cursat  : int -> int -> op[39m
     [38;5;2m10956[39m: [38;5;2m     3890:       505:   ; cubcuf  : int -> op[39m
     [38;5;2m10957[39m: [38;5;2m     3891:       506:   ; cuucud  : int -> op[39m
     [38;5;2m10958[39m: [38;5;2m     3892:       507:   ; cr      : op[39m
     [38;5;2m10959[39m: [38;5;2m     3893:       508:   ; altscr  : bool -> op[39m
     [38;5;2m10960[39m: [38;5;2m     3894:       509:   ; mouse   : bool -> op[39m
     [38;5;2m10961[39m: [38;5;2m     3895:       510:   ; bpaste  : bool -> op[39m
     [38;5;2m10962[39m: [38;5;2m     3896:       511:   }[39m
     [38;5;2m10963[39m: [38;5;2m     3897:       512: [39m
     [38;5;2m10964[39m: [38;5;2m     3898:       513:   let ((<|), (<.), (<!)) = Buffer.(add_string, add_char, add_decimal)[39m
     [38;5;2m10965[39m: [38;5;2m     3899:       514: [39m
     [38;5;2m10966[39m: [38;5;2m     3900:       515:   let sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m10967[39m: [38;5;2m     3901:       516: [39m
     [38;5;2m10968[39m: [38;5;2m     3902:       517:   let sgr { A.fg; bg; st } buf =[39m
     [38;5;2m10969[39m: [38;5;2m     3903:       518:     buf <| "\x1b[0";[39m
     [38;5;2m10970[39m: [38;5;2m     3904:       519:     let rgb888 buf x =[39m
     [38;5;2m10971[39m: [38;5;2m     3905:       520:       buf <! A.r x; buf <. ';'; buf <! A.g x; buf <. ';'; buf <! A.b x in[39m
     [38;5;2m10972[39m: [38;5;2m     3906:       521:     ( match A.tag fg with[39m
     [38;5;2m10973[39m: [38;5;2m     3907:       522:         0 -> ()[39m
     [38;5;2m10974[39m: [38;5;2m     3908:       523:       | 1 -> let c = A.i fg in[39m
     [38;5;2m10975[39m: [38;5;2m     3909:       524:              if c < 8  then ( buf <. ';'; buf <! (c + 30) )[39m
     [38;5;2m10976[39m: [38;5;2m     3910:       525:              else if c < 16 then ( buf <. ';'; buf <! (c + 82) )[39m
     [38;5;2m10977[39m: [38;5;2m     3911:       526:              else ( buf <| ";38;5;"; buf <! c )[39m
     [38;5;2m10978[39m: [38;5;2m     3912:       527:       | _ -> buf <| ";38;2;"; rgb888 buf fg );[39m
     [38;5;2m10979[39m: [38;5;2m     3913:       528:     ( match A.tag bg with[39m
     [38;5;2m10980[39m: [38;5;2m     3914:       529:         0 -> ()[39m
     [38;5;2m10981[39m: [38;5;2m     3915:       530:       | 1 -> let c = A.i bg in[39m
     [38;5;2m10982[39m: [38;5;2m     3916:       531:              if c < 8  then ( buf <. ';'; buf <! (c + 40) )[39m
     [38;5;2m10983[39m: [38;5;2m     3917:       532:              else if c < 16 then ( buf <. ';'; buf <! (c + 92) )[39m
     [38;5;2m10984[39m: [38;5;2m     3918:       533:              else ( buf <| ";48;5;"; buf <! c )[39m
     [38;5;2m10985[39m: [38;5;2m     3919:       534:       | _ -> buf <| ";48;2;"; rgb888 buf bg );[39m
     [38;5;2m10986[39m: [38;5;2m     3920:       535:     if st <> 0 then[39m
     [38;5;2m10987[39m: [38;5;2m     3921:       536:       ( let rec go f xs = match (f, xs) with[39m
     [38;5;2m10988[39m: [38;5;2m     3922:       537:           | (0, _) | (_, []) -> ()[39m
     [38;5;2m10989[39m: [38;5;2m     3923:       538:           | (_, x::xs) -> if f land 1 > 0 then buf <| x; go (f lsr 1) xs in[39m
     [38;5;2m10990[39m: [38;5;2m     3924:       539:         go st sts );[39m
     [38;5;2m10991[39m: [38;5;2m     3925:       540:     buf <. 'm'[39m
     [38;5;2m10992[39m: [38;5;2m     3926:       541: [39m
     [38;5;2m10993[39m: [38;5;2m     3927:       542:   let ansi = {[39m
     [38;5;2m10994[39m: [38;5;2m     3928:       543:       skip    = (fun n b -> b <| "\x1b[0m"; Buffer.add_chars b ' ' n)[39m
     [38;5;2m10995[39m: [38;5;2m     3929:       544:     ; newline = (fun b -> b <| "\x1bE")[39m
     [38;5;2m10996[39m: [38;5;2m     3930:       545:     ; altscr  = (fun x b -> b <| if x then "\x1b[?1049h" else "\x1b[?1049l")[39m
     [38;5;2m10997[39m: [38;5;2m     3931:       546:     ; cursat  = (fun w h b -> b <| "\x1b["; b <! h; b <. ';'; b <! w; b <. 'H')[39m
     [38;5;2m10998[39m: [38;5;2m     3932:       547:     ; cubcuf  = (fun x b -> b <| "\x1b["; b <! abs x; b <. if x < 0 then 'D' else 'C')[39m
     [38;5;2m10999[39m: [38;5;2m     3933:       548:     ; cuucud  = (fun y b -> b <| "\x1b["; b <! abs y; b <. if y < 0 then 'A' else 'B')[39m
     [38;5;2m11000[39m: [38;5;2m     3934:       549:     ; cr      = (fun b -> b <| "\x1b[1G")[39m
     [38;5;2m11001[39m: [38;5;2m     3935:       550:     ; clreol  = (fun b -> b <| "\x1b[K")[39m
     [38;5;2m11002[39m: [38;5;2m     3936:       551:     ; cursvis = (fun x b -> b <| if x then "\x1b[34h\x1b[?25h" else "\x1b[?25l")[39m
     [38;5;2m11003[39m: [38;5;2m     3937:       552:     ; mouse   = (fun x b -> b <| if x then "\x1b[?1000;1002;1005;1015;1006h"[39m
     [38;5;2m11004[39m: [38;5;2m     3938:       553:                                       else "\x1b[?1000;1002;1005;1015;1006l")[39m
     [38;5;2m11005[39m: [38;5;2m     3939:       554:     ; bpaste  = (fun x b -> b <| if x then "\x1b[?2004h" else "\x1b[?2004l")[39m
     [38;5;2m11006[39m: [38;5;2m     3940:       555:     ; sgr }[39m
     [38;5;2m11007[39m: [38;5;2m     3941:       556: [39m
     [38;5;2m11008[39m: [38;5;2m     3942:       557:   let no0 _     = ()[39m
     [38;5;2m11009[39m: [38;5;2m     3943:       558:   and no1 _ _   = ()[39m
     [38;5;2m11010[39m: [38;5;2m     3944:       559:   and no2 _ _ _ = ()[39m
     [38;5;2m11011[39m: [38;5;2m     3945:       560: [39m
     [38;5;2m11012[39m: [38;5;2m     3946:       561:   let dumb = {[39m
     [38;5;2m11013[39m: [38;5;2m     3947:       562:       skip    = (fun n b -> Buffer.add_chars b ' ' n)[39m
     [38;5;2m11014[39m: [38;5;2m     3948:       563:     ; newline = (fun b -> b <| "\n")[39m
     [38;5;2m11015[39m: [38;5;2m     3949:       564:     ; altscr  = no1[39m
     [38;5;2m11016[39m: [38;5;2m     3950:       565:     ; cursat  = no2[39m
     [38;5;2m11017[39m: [38;5;2m     3951:       566:     ; cubcuf  = no1[39m
     [38;5;2m11018[39m: [38;5;2m     3952:       567:     ; cuucud  = no1[39m
     [38;5;2m11019[39m: [38;5;2m     3953:       568:     ; cr      = no0[39m
     [38;5;2m11020[39m: [38;5;2m     3954:       569:     ; clreol  = no0[39m
     [38;5;2m11021[39m: [38;5;2m     3955:       570:     ; cursvis = no1[39m
     [38;5;2m11022[39m: [38;5;2m     3956:       571:     ; sgr     = no1[39m
     [38;5;2m11023[39m: [38;5;2m     3957:       572:     ; mouse   = no1[39m
     [38;5;2m11024[39m: [38;5;2m     3958:       573:     ; bpaste  = no1[39m
     [38;5;2m11025[39m: [38;5;2m     3959:       574:     }[39m
     [38;5;2m11026[39m: [38;5;2m     3960:       575: [39m
     [38;5;2m11027[39m: [38;5;2m     3961:       576:   let erase cap buf = cap.sgr A.empty buf; cap.clreol buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m11028[39m: [38;5;2m     3962:       577:   let cursat0 cap w h = cap.cursat (max w 0 + 1) (max h 0 + 1)[39m
     [38;5;2m11029[39m: [38;5;2m     3963:       578: end[39m
     [38;5;2m11030[39m: [38;5;2m     3964:       579: [39m
     [38;5;2m11031[39m: [38;5;2m     3965:       580: module Render = struct[39m
     [38;5;2m11032[39m: [38;5;2m     3966:       581: [39m
     [38;5;2m11033[39m: [38;5;2m     3967:       582:   open Cap[39m
     [38;5;2m11034[39m: [38;5;2m     3968:       583:   open Operation[39m
     [38;5;2m11035[39m: [38;5;2m     3969:       584: [39m
     [38;5;2m11036[39m: [38;5;2m     3970:       585:   let skip_op cap buf n = cap.skip n buf[39m
     [38;5;2m11037[39m: [38;5;2m     3971:       586:   let text_op cap buf a x = cap.sgr a buf; Text.to_buffer buf x[39m
     [38;5;2m11038[39m: [38;5;2m     3972:       587: [39m
     [38;5;2m11039[39m: [38;5;2m     3973:       588:   let rec line cap buf = function[39m
     [38;5;2m11040[39m: [38;5;2m     3974:       589:     End              -> erase cap buf[39m
     [38;5;2m11041[39m: [38;5;2m     3975:       590:   | Skip (n,    End) -> erase cap buf; skip_op cap buf n[39m
     [38;5;2m11042[39m: [38;5;2m     3976:       591:   | Text (a, x, End) -> erase cap buf; text_op cap buf a x[39m
     [38;5;2m11043[39m: [38;5;2m     3977:       592:   | Skip (n,    ops) -> skip_op cap buf n; line cap buf ops[39m
     [38;5;2m11044[39m: [38;5;2m     3978:       593:   | Text (a, x, ops) -> text_op cap buf a x; line cap buf ops[39m
     [38;5;2m11045[39m: [38;5;2m     3979:       594: [39m
     [38;5;2m11046[39m: [38;5;2m     3980:       595:   let rec lines cap buf = function[39m
     [38;5;2m11047[39m: [38;5;2m     3981:       596:     []      -> ()[39m
     [38;5;2m11048[39m: [38;5;2m     3982:       597:   | [ln]    -> line cap buf ln; cap.sgr A.empty buf[39m
     [38;5;2m11049[39m: [38;5;2m     3983:       598:   | ln::lns -> line cap buf ln; cap.newline buf; lines cap buf lns[39m
     [38;5;2m11050[39m: [38;5;2m     3984:       599: [39m
     [38;5;2m11051[39m: [38;5;2m     3985:       600:   let to_buffer buf cap off dim img =[39m
     [38;5;2m11052[39m: [38;5;2m     3986:       601:     Operation.of_image off dim img |> lines cap buf[39m
     [38;5;2m11053[39m: [38;5;2m     3987:       602: [39m
     [38;5;2m11054[39m: [38;5;2m     3988:       603:   let pp cap ppf img =[39m
     [38;5;2m11055[39m: [38;5;2m     3989:       604:     let open Format in[39m
     [38;5;2m11056[39m: [38;5;2m     3990:       605:     let buf = Buffer.create (I.width img * 2) in[39m
     [38;5;2m11057[39m: [38;5;2m     3991:       606:     let h, w = I.(height img, width img |> min (pp_get_margin ppf ())) in[39m
     [38;5;2m11058[39m: [38;5;2m     3992:       607:     let img = I.(img </> vpad (h - 1) 0 (char A.empty ' ' w 1)) in[39m
     [38;5;2m11059[39m: [38;5;2m     3993:       608:     pp_open_vbox ppf 0;[39m
     [38;5;2m11060[39m: [38;5;2m     3994:       609:     for y = 0 to h - 1 do[39m
     [38;5;2m11061[39m: [38;5;2m     3995:       610:       Buffer.clear buf; to_buffer buf cap (0, y) (w, 1) img;[39m
     [38;5;2m11062[39m: [38;5;2m     3996:       611:       pp_print_as ppf w (Buffer.contents buf);[39m
     [38;5;2m11063[39m: [38;5;2m     3997:       612:       if y < h - 1 then pp_print_cut ppf ()[39m
     [38;5;2m11064[39m: [38;5;2m     3998:       613:     done;[39m
     [38;5;2m11065[39m: [38;5;2m     3999:       614:     pp_close_box ppf ()[39m
     [38;5;2m11066[39m: [38;5;2m     4000:       615: [39m
     [38;5;2m11067[39m: [38;5;2m     4001:       616:   let pp_image = pp Cap.ansi[39m
     [38;5;2m11068[39m: [38;5;2m     4002:       617:   let pp_attr ppf a =[39m
     [38;5;2m11069[39m: [38;5;2m     4003:       618:     let string_ = I.string A.empty in[39m
     [38;5;2m11070[39m: [38;5;2m     4004:       619:     pp_image ppf I.(string_ "<" <|> string a "ATTR" <|> string_ ">")[39m
     [38;5;2m11071[39m: [38;5;2m     4005:       620: end[39m
     [38;5;2m11072[39m: [38;5;2m     4006:       621: [39m
     [38;5;2m11073[39m: [38;5;2m     4007:       622: module Unescape = struct[39m
     [38;5;2m11074[39m: [38;5;2m     4008:       623: [39m
     [38;5;2m11075[39m: [38;5;2m     4009:       624:   type special = [[39m
     [38;5;2m11076[39m: [38;5;2m     4010:       625:     `Escape[39m
     [38;5;2m11077[39m: [38;5;2m     4011:       626:   | `Enter[39m
     [38;5;2m11078[39m: [38;5;2m     4012:       627:   | `Tab[39m
     [38;5;2m11079[39m: [38;5;2m     4013:       628:   | `Backspace[39m
     [38;5;2m11080[39m: [38;5;2m     4014:       629:   | `Insert[39m
     [38;5;2m11081[39m: [38;5;2m     4015:       630:   | `Delete[39m
     [38;5;2m11082[39m: [38;5;2m     4016:       631:   | `Home | `End[39m
     [38;5;2m11083[39m: [38;5;2m     4017:       632:   | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m11084[39m: [38;5;2m     4018:       633:   | `Page of [ `Up | `Down ][39m
     [38;5;2m11085[39m: [38;5;2m     4019:       634:   | `Function of int[39m
     [38;5;2m11086[39m: [38;5;2m     4020:       635:   ][39m
     [38;5;2m11087[39m: [38;5;2m     4021:       636: [39m
     [38;5;2m11088[39m: [38;5;2m     4022:       637:   type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m11089[39m: [38;5;2m     4023:       638: [39m
     [38;5;2m11090[39m: [38;5;2m     4024:       639:   type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m11091[39m: [38;5;2m     4025:       640: [39m
     [38;5;2m11092[39m: [38;5;2m     4026:       641:   type key = [ special | `Uchar of Uchar.t  | `ASCII of char ] * mods[39m
     [38;5;2m11093[39m: [38;5;2m     4027:       642: [39m
     [38;5;2m11094[39m: [38;5;2m     4028:       643:   type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m11095[39m: [38;5;2m     4029:       644: [39m
     [38;5;2m11096[39m: [38;5;2m     4030:       645:   type paste = [ `Start | `End ][39m
     [38;5;2m11097[39m: [38;5;2m     4031:       646: [39m
     [38;5;2m11098[39m: [38;5;2m     4032:       647:   type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m11099[39m: [38;5;2m     4033:       648: [39m
     [38;5;2m11100[39m: [38;5;2m     4034:       649:   type esc =[39m
     [38;5;2m11101[39m: [38;5;2m     4035:       650:     C0    of char[39m
     [38;5;2m11102[39m: [38;5;2m     4036:       651:   | C1    of char[39m
     [38;5;2m11103[39m: [38;5;2m     4037:       652:   | SS2   of char[39m
     [38;5;2m11104[39m: [38;5;2m     4038:       653:   | CSI   of string * int list * char[39m
     [38;5;2m11105[39m: [38;5;2m     4039:       654:   | Esc_M of int * int * int[39m
     [38;5;2m11106[39m: [38;5;2m     4040:       655:   | Uchar of Uchar.t[39m
     [38;5;2m11107[39m: [38;5;2m     4041:       656: [39m
     [38;5;2m11108[39m: [38;5;2m     4042:       657:   let uchar = function `Uchar u -> u | `ASCII c -> Uchar.of_char c[39m
     [38;5;2m11109[39m: [38;5;2m     4043:       658: [39m
     [38;5;2m11110[39m: [38;5;2m     4044:       659:   let csi =[39m
     [38;5;2m11111[39m: [38;5;2m     4045:       660:     let open Option in[39m
     [38;5;2m11112[39m: [38;5;2m     4046:       661:     let rec priv acc = function[39m
     [38;5;2m11113[39m: [38;5;2m     4047:       662:       | x::xs when btw x 0x3c 0x3f -> priv (Char.unsafe_chr x::acc) xs[39m
     [38;5;2m11114[39m: [38;5;2m     4048:       663:       | xs                         -> param (String.of_chars_rev acc) None [] xs[39m
     [38;5;2m11115[39m: [38;5;2m     4049:       664:     and param prv p ps = function[39m
     [38;5;2m11116[39m: [38;5;2m     4050:       665:       | x::xs when btw x 0x30 0x39 -> param prv (Some (get 0 p * 10 + x - 0x30)) ps xs[39m
     [38;5;2m11117[39m: [38;5;2m     4051:       666:       | 0x3b::xs                   -> param prv None (get 0 p :: ps) xs[39m
     [38;5;2m11118[39m: [38;5;2m     4052:       667:       | xs                         -> code prv (List.rev (to_list p @ ps)) xs[39m
     [38;5;2m11119[39m: [38;5;2m     4053:       668:     and code prv ps = function (* Conflate two classes because urxvt... *)[39m
     [38;5;2m11120[39m: [38;5;2m     4054:       669:       | x::xs when btw x 0x20 0x2f || btw x 0x40 0x7e ->[39m
     [38;5;2m11121[39m: [38;5;2m     4055:       670:           Some (CSI (prv, ps, (Char.chr x)), xs)[39m
     [38;5;2m11122[39m: [38;5;2m     4056:       671:       | _ -> None in[39m
     [38;5;2m11123[39m: [38;5;2m     4057:       672:     priv [][39m
     [38;5;2m11124[39m: [38;5;2m     4058:       673: [39m
     [38;5;2m11125[39m: [38;5;2m     4059:       674:   let rec demux =[39m
     [38;5;2m11126[39m: [38;5;2m     4060:       675:     let chr = Char.chr in function[39m
     [38;5;2m11127[39m: [38;5;2m     4061:       676:     | 0x1b::0x5b::0x4d::a::b::c::xs -> Esc_M (a, b, c) :: demux xs[39m
     [38;5;2m11128[39m: [38;5;2m     4062:       677:     | 0x1b::0x5b::xs | 0x9b::xs ->[39m
     [38;5;2m11129[39m: [38;5;2m     4063:       678:         let (r, xs) = csi xs |> Option.get (C1 '\x5b', xs) in r :: demux xs[39m
     [38;5;2m11130[39m: [38;5;2m     4064:       679:     | 0x1b::0x4f::x::xs | 0x8f::x::xs[39m
     [38;5;2m11131[39m: [38;5;2m     4065:       680:         when is_ascii x                 -> SS2 (chr x) :: demux xs[39m
     [38;5;2m11132[39m: [38;5;2m     4066:       681:     | 0x1b::x::xs when is_C1 (x + 0x40) -> C1 (chr x) :: demux xs[39m
     [38;5;2m11133[39m: [38;5;2m     4067:       682:     | x::xs when is_C1 x                -> C1 (chr (x - 0x40)) :: demux xs[39m
     [38;5;2m11134[39m: [38;5;2m     4068:       683:     | x::xs when is_C0 x                -> C0 (chr x) :: demux xs[39m
     [38;5;2m11135[39m: [38;5;2m     4069:       684:     | x::xs -> Uchar (Uchar.unsafe_of_int x) :: demux xs[39m
     [38;5;2m11136[39m: [38;5;2m     4070:       685:     | [] -> [][39m
     [38;5;2m11137[39m: [38;5;2m     4071:       686: [39m
     [38;5;2m11138[39m: [38;5;2m     4072:       687:   let xtrm_mod_flags = function[39m
     [38;5;2m11139[39m: [38;5;2m     4073:       688:     | 2 -> Some [`Shift][39m
     [38;5;2m11140[39m: [38;5;2m     4074:       689:     | 3 -> Some [`Meta][39m
     [38;5;2m11141[39m: [38;5;2m     4075:       690:     | 4 -> Some [`Shift; `Meta][39m
     [38;5;2m11142[39m: [38;5;2m     4076:       691:     | 5 -> Some [`Ctrl][39m
     [38;5;2m11143[39m: [38;5;2m     4077:       692:     | 6 -> Some [`Shift; `Ctrl][39m
     [38;5;2m11144[39m: [38;5;2m     4078:       693:     | 7 -> Some [`Meta; `Ctrl][39m
     [38;5;2m11145[39m: [38;5;2m     4079:       694:     | 8 -> Some [`Shift; `Meta; `Ctrl][39m
     [38;5;2m11146[39m: [38;5;2m     4080:       695:     | _ -> None[39m
     [38;5;2m11147[39m: [38;5;2m     4081:       696: [39m
     [38;5;2m11148[39m: [38;5;2m     4082:       697:   let mods_xtrm = function[39m
     [38;5;2m11149[39m: [38;5;2m     4083:       698:     | [1;p] -> xtrm_mod_flags p[39m
     [38;5;2m11150[39m: [38;5;2m     4084:       699:     | []    -> Some [][39m
     [38;5;2m11151[39m: [38;5;2m     4085:       700:     | _     -> None[39m
     [38;5;2m11152[39m: [38;5;2m     4086:       701: [39m
     [38;5;2m11153[39m: [38;5;2m     4087:       702:   let mods_rxvt = function[39m
     [38;5;2m11154[39m: [38;5;2m     4088:       703:     | '~' -> Some [][39m
     [38;5;2m11155[39m: [38;5;2m     4089:       704:     | '$' -> Some [`Shift][39m
     [38;5;2m11156[39m: [38;5;2m     4090:       705:     | '^' -> Some [`Ctrl][39m
     [38;5;2m11157[39m: [38;5;2m     4091:       706:     | '@' -> Some [`Ctrl; `Shift][39m
     [38;5;2m11158[39m: [38;5;2m     4092:       707:     | _ -> None[39m
     [38;5;2m11159[39m: [38;5;2m     4093:       708: [39m
     [38;5;2m11160[39m: [38;5;2m     4094:       709:   let mods_common ps code = match (ps, code) with[39m
     [38;5;2m11161[39m: [38;5;2m     4095:       710:     | ([], '~')  -> Some [][39m
     [38;5;2m11162[39m: [38;5;2m     4096:       711:     | ([], c)    -> mods_rxvt c[39m
     [38;5;2m11163[39m: [38;5;2m     4097:       712:     | ([p], '~') -> xtrm_mod_flags p[39m
     [38;5;2m11164[39m: [38;5;2m     4098:       713:     | _          -> None[39m
     [38;5;2m11165[39m: [38;5;2m     4099:       714: [39m
     [38;5;2m11166[39m: [38;5;2m     4100:       715:   let mouse_p p =[39m
     [38;5;2m11167[39m: [38;5;2m     4101:       716:     let btn = match p land 3 with[39m
     [38;5;2m11168[39m: [38;5;2m     4102:       717:       | 0 when bit 6 p -> `Scroll `Up[39m
     [38;5;2m11169[39m: [38;5;2m     4103:       718:       | 0              -> `Left[39m
     [38;5;2m11170[39m: [38;5;2m     4104:       719:       | 1 when bit 6 p -> `Scroll `Down[39m
     [38;5;2m11171[39m: [38;5;2m     4105:       720:       | 1              -> `Middle[39m
     [38;5;2m11172[39m: [38;5;2m     4106:       721:       | 2 when bit 6 p -> `ALL (* `Scroll `Left *)[39m
     [38;5;2m11173[39m: [38;5;2m     4107:       722:       | 2              -> `Right[39m
     [38;5;2m11174[39m: [38;5;2m     4108:       723:       | 3 when bit 6 p -> `ALL (* `Scroll `Right *)[39m
     [38;5;2m11175[39m: [38;5;2m     4109:       724:       | _              -> `ALL[39m
     [38;5;2m11176[39m: [38;5;2m     4110:       725:     and drag = bit 5 p[39m
     [38;5;2m11177[39m: [38;5;2m     4111:       726:     and mods =[39m
     [38;5;2m11178[39m: [38;5;2m     4112:       727:       (if bit 3 p then [`Meta] else []) @[39m
     [38;5;2m11179[39m: [38;5;2m     4113:       728:       (if bit 4 p then [`Ctrl] else [])[39m
     [38;5;2m11180[39m: [38;5;2m     4114:       729:     in (btn, drag, mods)[39m
     [38;5;2m11181[39m: [38;5;2m     4115:       730: [39m
     [38;5;2m11182[39m: [38;5;2m     4116:       731:   let key k mods = Some (`Key (k, mods))[39m
     [38;5;2m11183[39m: [38;5;2m     4117:       732: [39m
     [38;5;2m11184[39m: [38;5;2m     4118:       733:   let event_of_control_code =[39m
     [38;5;2m11185[39m: [38;5;2m     4119:       734:     let open Option in function[39m
     [38;5;2m11186[39m: [38;5;2m     4120:       735:     | Uchar u when Uchar.to_int u |> is_ascii ->[39m
     [38;5;2m11187[39m: [38;5;2m     4121:       736:         Some (`Key (`ASCII (Uchar.unsafe_to_char u), []))[39m
     [38;5;2m11188[39m: [38;5;2m     4122:       737:     | Uchar u -> Some (`Key (`Uchar u, []))[39m
     [38;5;2m11189[39m: [38;5;2m     4123:       738: [39m
     [38;5;2m11190[39m: [38;5;2m     4124:       739:     | C0 '\x1b'        -> key `Escape [][39m
     [38;5;2m11191[39m: [38;5;2m     4125:       740:     | C0 ('\b'|'\x7f') -> key `Backspace [][39m
     [38;5;2m11192[39m: [38;5;2m     4126:       741:     | C0 '\n'          -> key `Enter [][39m
     [38;5;2m11193[39m: [38;5;2m     4127:       742:     | C0 '\t'          -> key `Tab [][39m
     [38;5;2m11194[39m: [38;5;2m     4128:       743: [39m
     [38;5;2m11195[39m: [38;5;2m     4129:       744:     | C0 x -> key (`ASCII Char.(code x + 0x40 |> unsafe_chr)) [`Ctrl][39m
     [38;5;2m11196[39m: [38;5;2m     4130:       745:     | C1 x -> key (`ASCII x) [`Meta][39m
     [38;5;2m11197[39m: [38;5;2m     4131:       746: [39m
     [38;5;2m11198[39m: [38;5;2m     4132:       747:     | CSI ("",[],'Z') -> key `Tab [`Shift][39m
     [38;5;2m11199[39m: [38;5;2m     4133:       748: [39m
     [38;5;2m11200[39m: [38;5;2m     4134:       749:     | CSI ("",p,'A') -> mods_xtrm p >>= key (`Arrow `Up)[39m
     [38;5;2m11201[39m: [38;5;2m     4135:       750:     | CSI ("",p,'B') -> mods_xtrm p >>= key (`Arrow `Down)[39m
     [38;5;2m11202[39m: [38;5;2m     4136:       751:     | CSI ("",p,'C') -> mods_xtrm p >>= key (`Arrow `Right)[39m
     [38;5;2m11203[39m: [38;5;2m     4137:       752:     | CSI ("",p,'D') -> mods_xtrm p >>= key (`Arrow `Left)[39m
     [38;5;2m11204[39m: [38;5;2m     4138:       753: [39m
     [38;5;2m11205[39m: [38;5;2m     4139:       754:     | CSI ("",[],'a') -> key (`Arrow `Up) [`Shift][39m
     [38;5;2m11206[39m: [38;5;2m     4140:       755:     | CSI ("",[],'b') -> key (`Arrow `Down) [`Shift][39m
     [38;5;2m11207[39m: [38;5;2m     4141:       756:     | CSI ("",[],'c') -> key (`Arrow `Right) [`Shift][39m
     [38;5;2m11208[39m: [38;5;2m     4142:       757:     | CSI ("",[],'d') -> key (`Arrow `Left) [`Shift][39m
     [38;5;2m11209[39m: [38;5;2m     4143:       758:     | SS2 ('A'|'a') -> key (`Arrow `Up) [`Ctrl][39m
     [38;5;2m11210[39m: [38;5;2m     4144:       759:     | SS2 ('B'|'b') -> key (`Arrow `Down) [`Ctrl][39m
     [38;5;2m11211[39m: [38;5;2m     4145:       760:     | SS2 ('C'|'c') -> key (`Arrow `Right) [`Ctrl][39m
     [38;5;2m11212[39m: [38;5;2m     4146:       761:     | SS2 ('D'|'d') -> key (`Arrow `Left) [`Ctrl][39m
     [38;5;2m11213[39m: [38;5;2m     4147:       762: [39m
     [38;5;2m11214[39m: [38;5;2m     4148:       763:     | CSI ("",5::p,c) -> mods_common p c >>= key (`Page `Up)[39m
     [38;5;2m11215[39m: [38;5;2m     4149:       764:     | CSI ("",6::p,c) -> mods_common p c >>= key (`Page `Down)[39m
     [38;5;2m11216[39m: [38;5;2m     4150:       765: [39m
     [38;5;2m11217[39m: [38;5;2m     4151:       766:     | CSI ("",2::p,c) -> mods_common p c >>= key `Insert[39m
     [38;5;2m11218[39m: [38;5;2m     4152:       767:     | CSI ("",3::p,c) -> mods_common p c >>= key `Delete[39m
     [38;5;2m11219[39m: [38;5;2m     4153:       768: [39m
     [38;5;2m11220[39m: [38;5;2m     4154:       769:     | CSI ("",[4],'h') -> key `Insert [][39m
     [38;5;2m11221[39m: [38;5;2m     4155:       770:     | CSI ("",[],'L')  -> key `Insert [`Ctrl][39m
     [38;5;2m11222[39m: [38;5;2m     4156:       771:     | CSI ("",[],'P')  -> key `Delete [][39m
     [38;5;2m11223[39m: [38;5;2m     4157:       772:     | CSI ("",[],'M')  -> key `Delete [`Ctrl][39m
     [38;5;2m11224[39m: [38;5;2m     4158:       773: [39m
     [38;5;2m11225[39m: [38;5;2m     4159:       774:     | CSI ("",p,'H')   -> mods_xtrm p >>= key `Home[39m
     [38;5;2m11226[39m: [38;5;2m     4160:       775:     | CSI ("",[7|1],c) -> mods_rxvt c >>= key `Home[39m
     [38;5;2m11227[39m: [38;5;2m     4161:       776: [39m
     [38;5;2m11228[39m: [38;5;2m     4162:       777:     | CSI ("",p,'F')   -> mods_xtrm p >>= key `End[39m
     [38;5;2m11229[39m: [38;5;2m     4163:       778:     | CSI ("",[8|4],c) -> mods_rxvt c >>= key `End[39m
     [38;5;2m11230[39m: [38;5;2m     4164:       779:     | CSI ("",[],'J')  -> key `End [`Ctrl][39m
     [38;5;2m11231[39m: [38;5;2m     4165:       780: [39m
     [38;5;2m11232[39m: [38;5;2m     4166:       781:     | SS2 ('P'..'S' as c) -> key (`Function (Char.code c - 0x4f)) [][39m
     [38;5;2m11233[39m: [38;5;2m     4167:       782: [39m
     [38;5;2m11234[39m: [38;5;2m     4168:       783:     | CSI ("",p,('P'..'S' as c)) ->[39m
     [38;5;2m11235[39m: [38;5;2m     4169:       784:         mods_xtrm p >>= key (`Function (Char.code c - 0x4f))[39m
     [38;5;2m11236[39m: [38;5;2m     4170:       785: [39m
     [38;5;2m11237[39m: [38;5;2m     4171:       786:     | CSI ("",k::p,c) when btw k 11 15 || btw k 17 21 || btw k 23 26 ->[39m
     [38;5;2m11238[39m: [38;5;2m     4172:       787:         mods_common p c >>= key (`Function ((k - 10) - (k - 10) / 6))[39m
     [38;5;2m11239[39m: [38;5;2m     4173:       788: [39m
     [38;5;2m11240[39m: [38;5;2m     4174:       789:     | CSI ("<",[p;x;y],('M'|'m' as c)) ->[39m
     [38;5;2m11241[39m: [38;5;2m     4175:       790:         let (btn, drag, mods) = mouse_p p in[39m
     [38;5;2m11242[39m: [38;5;2m     4176:       791:         ( match (c, btn, drag) with[39m
     [38;5;2m11243[39m: [38;5;2m     4177:       792:           | ('M', (#button as b), false) -> Some (`Press b)[39m
     [38;5;2m11244[39m: [38;5;2m     4178:       793:           | ('M', #button, true)         -> Some `Drag[39m
     [38;5;2m11245[39m: [38;5;2m     4179:       794:           | ('m', #button, false)        -> Some `Release[39m
     [38;5;2m11246[39m: [38;5;2m     4180:       795:           (* | ('M', `ALL   , true)         -> Some `Move *)[39m
     [38;5;2m11247[39m: [38;5;2m     4181:       796:           | _                            -> None[39m
     [38;5;2m11248[39m: [38;5;2m     4182:       797:         ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m11249[39m: [38;5;2m     4183:       798: [39m
     [38;5;2m11250[39m: [38;5;2m     4184:       799:     | CSI ("",[p;x;y],'M') | Esc_M (p,x,y) as evt ->[39m
     [38;5;2m11251[39m: [38;5;2m     4185:       800:         let (x, y) = match evt with Esc_M _ -> x - 32, y - 32 | _ -> x, y[39m
     [38;5;2m11252[39m: [38;5;2m     4186:       801:         and (btn, drag, mods) = mouse_p (p - 32) in[39m
     [38;5;2m11253[39m: [38;5;2m     4187:       802:         ( match (btn, drag) with[39m
     [38;5;2m11254[39m: [38;5;2m     4188:       803:           | (#button as b, false) -> Some (`Press b)[39m
     [38;5;2m11255[39m: [38;5;2m     4189:       804:           | (#button     , true ) -> Some `Drag[39m
     [38;5;2m11256[39m: [38;5;2m     4190:       805:           | (`ALL        , false) -> Some `Release[39m
     [38;5;2m11257[39m: [38;5;2m     4191:       806:           (* | (`ALL        , true)  -> Some `Move *)[39m
     [38;5;2m11258[39m: [38;5;2m     4192:       807:           | _                     -> None[39m
     [38;5;2m11259[39m: [38;5;2m     4193:       808:         ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m11260[39m: [38;5;2m     4194:       809: [39m
     [38;5;2m11261[39m: [38;5;2m     4195:       810:     | CSI ("",[200],'~') -> Some (`Paste `Start)[39m
     [38;5;2m11262[39m: [38;5;2m     4196:       811:     | CSI ("",[201],'~') -> Some (`Paste `End)[39m
     [38;5;2m11263[39m: [38;5;2m     4197:       812: [39m
     [38;5;2m11264[39m: [38;5;2m     4198:       813:     | CSI _ | SS2 _ -> None[39m
     [38;5;2m11265[39m: [38;5;2m     4199:       814: [39m
     [38;5;2m11266[39m: [38;5;2m     4200:       815:   let rec events = function[39m
     [38;5;2m11267[39m: [38;5;2m     4201:       816:     | C0 '\x1b' :: cc :: ccs ->[39m
     [38;5;2m11268[39m: [38;5;2m     4202:       817:       ( match event_of_control_code cc with[39m
     [38;5;2m11269[39m: [38;5;2m     4203:       818:         | Some (`Key (k, mods)) -> `Key (k, `Meta :: mods) :: events ccs[39m
     [38;5;2m11270[39m: [38;5;2m     4204:       819:         | Some _                -> `Key (`Escape, []) :: events (cc::ccs)[39m
     [38;5;2m11271[39m: [38;5;2m     4205:       820:         | None                  -> events ccs )[39m
     [38;5;2m11272[39m: [38;5;2m     4206:       821:     | cc::ccs -> (event_of_control_code cc |> Option.to_list) @ events ccs[39m
     [38;5;2m11273[39m: [38;5;2m     4207:       822:     | [] -> [][39m
     [38;5;2m11274[39m: [38;5;2m     4208:       823: [39m
     [38;5;2m11275[39m: [38;5;2m     4209:       824:   let decode = events &. demux &. List.map Uchar.to_int[39m
     [38;5;2m11276[39m: [38;5;2m     4210:       825: [39m
     [38;5;2m11277[39m: [38;5;2m     4211:       826:   type t = (event list * bool) ref[39m
     [38;5;2m11278[39m: [38;5;2m     4212:       827: [39m
     [38;5;2m11279[39m: [38;5;2m     4213:       828:   let create () = ref ([], false)[39m
     [38;5;2m11280[39m: [38;5;2m     4214:       829: [39m
     [38;5;2m11281[39m: [38;5;2m     4215:       830:   let next t = match !t with[39m
     [38;5;2m11282[39m: [38;5;2m     4216:       831:     | (#event as e::es, eof) -> t := (es, eof) ; e[39m
     [38;5;2m11283[39m: [38;5;2m     4217:       832:     | ([], false) -> `Await[39m
     [38;5;2m11284[39m: [38;5;2m     4218:       833:     | _           -> `End[39m
     [38;5;2m11285[39m: [38;5;2m     4219:       834: [39m
     [38;5;2m11286[39m: [38;5;2m     4220:       835:   let list_of_utf8 buf i l =[39m
     [38;5;2m11287[39m: [38;5;2m     4221:       836:     let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m11288[39m: [38;5;2m     4222:       837:     String.sub0cp (Bytes.unsafe_to_string buf) i l[39m
     [38;5;2m11289[39m: [38;5;2m     4223:       838:     |> Uutf.String.fold_utf_8 f [] |> List.rev[39m
     [38;5;2m11290[39m: [38;5;2m     4224:       839: [39m
     [38;5;2m11291[39m: [38;5;2m     4225:       840:   let input t buf i l = t := match !t with[39m
     [38;5;2m11292[39m: [38;5;2m     4226:       841:     | (es, false) when l > 0 -> (es @ (list_of_utf8 buf i l |> decode), false)[39m
     [38;5;2m11293[39m: [38;5;2m     4227:       842:     | (es, _)                -> (es, true)[39m
     [38;5;2m11294[39m: [38;5;2m     4228:       843: [39m
     [38;5;2m11295[39m: [38;5;2m     4229:       844:   let pending t = match !t with ([], false) -> false | _ -> true[39m
     [38;5;2m11296[39m: [38;5;2m     4230:       845: end[39m
     [38;5;2m11297[39m: [38;5;2m     4231:       846: [39m
     [38;5;2m11298[39m: [38;5;2m     4232:       847: module Tmachine = struct[39m
     [38;5;2m11299[39m: [38;5;2m     4233:       848: [39m
     [38;5;2m11300[39m: [38;5;2m     4234:       849:   open Cap[39m
     [38;5;2m11301[39m: [38;5;2m     4235:       850:   (* XXX This is sad. This should be a composable, stateless transducer. *)[39m
     [38;5;2m11302[39m: [38;5;2m     4236:       851: [39m
     [38;5;2m11303[39m: [38;5;2m     4237:       852:   type t = {[39m
     [38;5;2m11304[39m: [38;5;2m     4238:       853:     cap           : Cap.t[39m
     [38;5;2m11305[39m: [38;5;2m     4239:       854:   ; mutable write : Buffer.t -> unit[39m
     [38;5;2m11306[39m: [38;5;2m     4240:       855:   ; mutable curs  : (int * int) option[39m
     [38;5;2m11307[39m: [38;5;2m     4241:       856:   ; mutable dim   : (int * int)[39m
     [38;5;2m11308[39m: [38;5;2m     4242:       857:   ; mutable image : I.t[39m
     [38;5;2m11309[39m: [38;5;2m     4243:       858:   ; mutable dead  : bool[39m
     [38;5;2m11310[39m: [38;5;2m     4244:       859:   }[39m
     [38;5;2m11311[39m: [38;5;2m     4245:       860: [39m
     [38;5;2m11312[39m: [38;5;2m     4246:       861:   let emit t op =[39m
     [38;5;2m11313[39m: [38;5;2m     4247:       862:     if t.dead then[39m
     [38;5;2m11314[39m: [38;5;2m     4248:       863:       invalid_arg "Notty: use of released terminal"[39m
     [38;5;2m11315[39m: [38;5;2m     4249:       864:     else t.write <- t.write & op[39m
     [38;5;2m11316[39m: [38;5;2m     4250:       865: [39m
     [38;5;2m11317[39m: [38;5;2m     4251:       866:   let cursor cap = function[39m
     [38;5;2m11318[39m: [38;5;2m     4252:       867:     | None        -> cap.cursvis false[39m
     [38;5;2m11319[39m: [38;5;2m     4253:       868:     | Some (w, h) -> cap.cursvis true & cursat0 cap w h[39m
     [38;5;2m11320[39m: [38;5;2m     4254:       869: [39m
     [38;5;2m11321[39m: [38;5;2m     4255:       870:   let create ~mouse ~bpaste cap = {[39m
     [38;5;2m11322[39m: [38;5;2m     4256:       871:       cap[39m
     [38;5;2m11323[39m: [38;5;2m     4257:       872:     ; curs  = None[39m
     [38;5;2m11324[39m: [38;5;2m     4258:       873:     ; dim   = (0, 0)[39m
     [38;5;2m11325[39m: [38;5;2m     4259:       874:     ; image = I.empty[39m
     [38;5;2m11326[39m: [38;5;2m     4260:       875:     ; dead  = false[39m
     [38;5;2m11327[39m: [38;5;2m     4261:       876:     ; write =[39m
     [38;5;2m11328[39m: [38;5;2m     4262:       877:         cap.altscr true & cursor cap None & cap.mouse mouse & cap.bpaste bpaste[39m
     [38;5;2m11329[39m: [38;5;2m     4263:       878:     }[39m
     [38;5;2m11330[39m: [38;5;2m     4264:       879: [39m
     [38;5;2m11331[39m: [38;5;2m     4265:       880:   let release t =[39m
     [38;5;2m11332[39m: [38;5;2m     4266:       881:     if t.dead then false else[39m
     [38;5;2m11333[39m: [38;5;2m     4267:       882:       ( emit t ( t.cap.altscr false & t.cap.cursvis true &[39m
     [38;5;2m11334[39m: [38;5;2m     4268:       883:                  t.cap.mouse false & t.cap.bpaste false );[39m
     [38;5;2m11335[39m: [38;5;2m     4269:       884:         t.dead <- true; true )[39m
     [38;5;2m11336[39m: [38;5;2m     4270:       885: [39m
     [38;5;2m11337[39m: [38;5;2m     4271:       886:   let output t buf = t.write buf; t.write <- ignore[39m
     [38;5;2m11338[39m: [38;5;2m     4272:       887: [39m
     [38;5;2m11339[39m: [38;5;2m     4273:       888:   let refresh ({ dim; image; _ } as t) =[39m
     [38;5;2m11340[39m: [38;5;2m     4274:       889:     emit t ( cursor t.cap None & cursat0 t.cap 0 0 &[39m
     [38;5;2m11341[39m: [38;5;2m     4275:       890:              (fun buf -> Render.to_buffer buf t.cap (0, 0) dim image) &[39m
     [38;5;2m11342[39m: [38;5;2m     4276:       891:              cursor t.cap t.curs )[39m
     [38;5;2m11343[39m: [38;5;2m     4277:       892: [39m
     [38;5;2m11344[39m: [38;5;2m     4278:       893:   let set_size t dim = t.dim <- dim[39m
     [38;5;2m11345[39m: [38;5;2m     4279:       894:   let image t image = t.image <- image; refresh t[39m
     [38;5;2m11346[39m: [38;5;2m     4280:       895:   let cursor t curs = t.curs <- curs; emit t (cursor t.cap curs)[39m
     [38;5;2m11347[39m: [38;5;2m     4281:       896: [39m
     [38;5;2m11348[39m: [38;5;2m     4282:       897:   let size t = t.dim[39m
     [38;5;2m11349[39m: [38;5;2m     4283:       898:   let dead t = t.dead[39m
     [38;5;2m11350[39m: [38;5;2m     4284:       899: end[39m
     [38;5;2m11351[39m: [38;5;2m     4285:       900: [39m
     [38;5;2m11352[39m: [38;5;2m     4286:       901: module Direct = struct[39m
     [38;5;2m11353[39m: [38;5;2m     4287:       902:   let show_cursor buf cap x = cap.Cap.cursvis x buf[39m
     [38;5;2m11354[39m: [38;5;2m     4288:       903:   and move_cursor buf cap cmd = match cmd with[39m
     [38;5;2m11355[39m: [38;5;2m     4289:       904:     | `To (w, h) -> Cap.cursat0 cap w h buf[39m
     [38;5;2m11356[39m: [38;5;2m     4290:       905:     | `Home      -> cap.Cap.cr buf[39m
     [38;5;2m11357[39m: [38;5;2m     4291:       906:     | `By (x, y) ->[39m
     [38;5;2m11358[39m: [38;5;2m     4292:       907:         Cap.(if x <> 0 then cap.cubcuf x buf; if y <> 0 then cap.cuucud y buf)[39m
     [38;5;2m11359[39m: [38;5;2m     4293:       908: end[39m
     [38;5;2m11360[39m: [38;5;2m     4294:       909: [39m
     [38;5;2m11361[39m: [38;5;2m     4295:       910: type attr  = A.t[39m
     [38;5;2m11362[39m: [38;5;2m     4296:       911: type image = I.t[39m
     [38;5;2m11363[39m: [38;5;2m     4297:       912: [39m
     [38;5;2m11364[39m: [38;5;2m     4298:       913: module Infix = struct[39m
     [38;5;2m11365[39m: [38;5;2m     4299:       914:   let ((<->), (<|>), (</>)) = I.((<->), (<|>), (</>))[39m
     [38;5;2m11366[39m: [38;5;2m     4300:       915:   let (++) = A.(++)[39m
     [38;5;2m11367[39m: [38;5;2m     4301:       916: end[39m
     [38;5;2m11368[39m: [38;5;2m     4302: Added regular file ../notty/src/notty.mli:[39m
     [38;5;2m11369[39m: [38;5;2m     4303:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m11370[39m: [38;5;2m     4304:         2:    See LICENSE.md. *)[39m
     [38;5;2m11371[39m: [38;5;2m     4305:         3: [39m
     [38;5;2m11372[39m: [38;5;2m     4306:         4: (** Declaring terminals.[39m
     [38;5;2m11373[39m: [38;5;2m     4307:         5: [39m
     [38;5;2m11374[39m: [38;5;2m     4308:         6:     Notty is a terminal library that revolves around construction and[39m
     [38;5;2m11375[39m: [38;5;2m     4309:         7:     composition of displayable images.[39m
     [38;5;2m11376[39m: [38;5;2m     4310:         8: [39m
     [38;5;2m11377[39m: [38;5;2m     4311:         9:     This module provides the core {{!I}[image]} abstraction, standalone[39m
     [38;5;2m11378[39m: [38;5;2m     4312:        10:     {{!Render}rendering}, and escape sequence {{!Unescape}parsing}. It does not[39m
     [38;5;2m11379[39m: [38;5;2m     4313:        11:     depend on any platform code, and does not interact with the environment.[39m
     [38;5;2m11380[39m: [38;5;2m     4314:        12:     Input and output are provided by {!Notty_unix} and {!Notty_lwt}.[39m
     [38;5;2m11381[39m: [38;5;2m     4315:        13: [39m
     [38;5;2m11382[39m: [38;5;2m     4316:        14:     Consult the {{!basics}basics}, {{!examples}examples} and[39m
     [38;5;2m11383[39m: [38;5;2m     4317:        15:     {{!limitations}limitations}.[39m
     [38;5;2m11384[39m: [38;5;2m     4318:        16: [39m
     [38;5;2m11385[39m: [38;5;2m     4319:        17:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m11386[39m: [38;5;2m     4320:        18: [39m
     [38;5;2m11387[39m: [38;5;2m     4321:        19: (** {1 Interface} *)[39m
     [38;5;2m11388[39m: [38;5;2m     4322:        20: [39m
     [38;5;2m11389[39m: [38;5;2m     4323:        21: type attr[39m
     [38;5;2m11390[39m: [38;5;2m     4324:        22: (** Visual characteristics of displayed text. *)[39m
     [38;5;2m11391[39m: [38;5;2m     4325:        23: [39m
     [38;5;2m11392[39m: [38;5;2m     4326:        24: type image[39m
     [38;5;2m11393[39m: [38;5;2m     4327:        25: (** Rectangles of styled characters. *)[39m
     [38;5;2m11394[39m: [38;5;2m     4328:        26: [39m
     [38;5;2m11395[39m: [38;5;2m     4329:        27: (** [A] is for attribute.[39m
     [38;5;2m11396[39m: [38;5;2m     4330:        28: [39m
     [38;5;2m11397[39m: [38;5;2m     4331:        29:     Construction and composition of styling characteristics of text.[39m
     [38;5;2m11398[39m: [38;5;2m     4332:        30: [39m
     [38;5;2m11399[39m: [38;5;2m     4333:        31:     Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m11400[39m: [38;5;2m     4334:        32: module A : sig[39m
     [38;5;2m11401[39m: [38;5;2m     4335:        33: [39m
     [38;5;2m11402[39m: [38;5;2m     4336:        34:   (** {1 Colors} *)[39m
     [38;5;2m11403[39m: [38;5;2m     4337:        35: [39m
     [38;5;2m11404[39m: [38;5;2m     4338:        36:   type color[39m
     [38;5;2m11405[39m: [38;5;2m     4339:        37:   (** An ineffable quality of light.[39m
     [38;5;2m11406[39m: [38;5;2m     4340:        38: [39m
     [38;5;2m11407[39m: [38;5;2m     4341:        39:       There are three kinds of colors:[39m
     [38;5;2m11408[39m: [38;5;2m     4342:        40:       {ul[39m
     [38;5;2m11409[39m: [38;5;2m     4343:        41:       {- {e Core 16 colors.}[39m
     [38;5;2m11410[39m: [38;5;2m     4344:        42: [39m
     [38;5;2m11411[39m: [38;5;2m     4345:        43:          ANSI defines 8 color {e names}, with the actual display colors[39m
     [38;5;2m11412[39m: [38;5;2m     4346:        44:          considered an implementation detail. Historically, this palette was[39m
     [38;5;2m11413[39m: [38;5;2m     4347:        45:          extended with their light (sometimes {e bright} or {e high-intensity})[39m
     [38;5;2m11414[39m: [38;5;2m     4348:        46:          counterparts. Their presentation is undefined too, but typically[39m
     [38;5;2m11415[39m: [38;5;2m     4349:        47:          produces a brighter shade. These colors - often called the {e ANSI[39m
     [38;5;2m11416[39m: [38;5;2m     4350:        48:          colors} - tend to be unpredictable, but ubiquitously supported.[39m
     [38;5;2m11417[39m: [38;5;2m     4351:        49: [39m
     [38;5;2m11418[39m: [38;5;2m     4352:        50:          }[39m
     [38;5;2m11419[39m: [38;5;2m     4353:        51:       {- {e Extended 256-color palette.}[39m
     [38;5;2m11420[39m: [38;5;2m     4354:        52: [39m
     [38;5;2m11421[39m: [38;5;2m     4355:        53:          This common feature extends the palette by further 240 colors. They[39m
     [38;5;2m11422[39m: [38;5;2m     4356:        54:          come in two groups:[39m
     [38;5;2m11423[39m: [38;5;2m     4357:        55: [39m
     [38;5;2m11424[39m: [38;5;2m     4358:        56:          {ul[39m
     [38;5;2m11425[39m: [38;5;2m     4359:        57:          {- The {e color cube}, a 6*6*6 approximation to the usual 24-bit RGB[39m
     [38;5;2m11426[39m: [38;5;2m     4360:        58:             color cube; and}[39m
     [38;5;2m11427[39m: [38;5;2m     4361:        59:          {- the {e grayscale ramp}, containing (merely) 24 shades of gray.}}[39m
     [38;5;2m11428[39m: [38;5;2m     4362:        60: [39m
     [38;5;2m11429[39m: [38;5;2m     4363:        61:          XTerm was the first to support this extension. Many terminals have[39m
     [38;5;2m11430[39m: [38;5;2m     4364:        62:          since cloned it, so the support is wide, but not universal.[39m
     [38;5;2m11431[39m: [38;5;2m     4365:        63: [39m
     [38;5;2m11432[39m: [38;5;2m     4366:        64:          As the extended colors are still palette-driven they do not have a[39m
     [38;5;2m11433[39m: [38;5;2m     4367:        65:          fixed presentation, and the presentation can be changed in some[39m
     [38;5;2m11434[39m: [38;5;2m     4368:        66:          terminals. Default palette tends to match {{:[39m
     [38;5;2m11435[39m: [38;5;2m     4369:        67:          https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg}[39m
     [38;5;2m11436[39m: [38;5;2m     4370:        68:          XTerm's}.[39m
     [38;5;2m11437[39m: [38;5;2m     4371:        69: [39m
     [38;5;2m11438[39m: [38;5;2m     4372:        70:          }[39m
     [38;5;2m11439[39m: [38;5;2m     4373:        71:       {- {e True color}[39m
     [38;5;2m11440[39m: [38;5;2m     4374:        72: [39m
     [38;5;2m11441[39m: [38;5;2m     4375:        73:          A recently established convention allows directly sending 24-bit colors[39m
     [38;5;2m11442[39m: [38;5;2m     4376:        74:          to the terminal. This has been adopted by a growing minority of[39m
     [38;5;2m11443[39m: [38;5;2m     4377:        75:          terminals. A reasonably up-to-date status document maintained by the[39m
     [38;5;2m11444[39m: [38;5;2m     4378:        76:          community can be found {{:https://gist.github.com/XVilka/8346728}here}.}}[39m
     [38;5;2m11445[39m: [38;5;2m     4379:        77: [39m
     [38;5;2m11446[39m: [38;5;2m     4380:        78:       Some of the technical and historical background can be found in {{:[39m
     [38;5;2m11447[39m: [38;5;2m     4381:        79:       http://invisible-island.net/xterm/xterm.faq.html#problems_colors}[39m
     [38;5;2m11448[39m: [38;5;2m     4382:        80:       XTerm's FAQ}.[39m
     [38;5;2m11449[39m: [38;5;2m     4383:        81: [39m
     [38;5;2m11450[39m: [38;5;2m     4384:        82:       {b Note} No attempt is made to remap colors depending on the terminal.[39m
     [38;5;2m11451[39m: [38;5;2m     4385:        83:       Terminals might ignore, remap, or completely misinterpret unsupported[39m
     [38;5;2m11452[39m: [38;5;2m     4386:        84:       colors. *)[39m
     [38;5;2m11453[39m: [38;5;2m     4387:        85: [39m
     [38;5;2m11454[39m: [38;5;2m     4388:        86:   (** {2:corecolors Core 16 colors}[39m
     [38;5;2m11455[39m: [38;5;2m     4389:        87: [39m
     [38;5;2m11456[39m: [38;5;2m     4390:        88:       The first 8 have their standard ANSI names. *)[39m
     [38;5;2m11457[39m: [38;5;2m     4391:        89:     val unsafe_color_of_int:int->color[39m
     [38;5;2m11458[39m: [38;5;2m     4392:        90: [39m
     [38;5;2m11459[39m: [38;5;2m     4393:        91:   val black        : color[39m
     [38;5;2m11460[39m: [38;5;2m     4394:        92:   val red          : color[39m
     [38;5;2m11461[39m: [38;5;2m     4395:        93:   val green        : color[39m
     [38;5;2m11462[39m: [38;5;2m     4396:        94:   val yellow       : color[39m
     [38;5;2m11463[39m: [38;5;2m     4397:        95:   val blue         : color[39m
     [38;5;2m11464[39m: [38;5;2m     4398:        96:   val magenta      : color[39m
     [38;5;2m11465[39m: [38;5;2m     4399:        97:   val cyan         : color[39m
     [38;5;2m11466[39m: [38;5;2m     4400:        98:   val white        : color[39m
     [38;5;2m11467[39m: [38;5;2m     4401:        99:   val lightblack   : color[39m
     [38;5;2m11468[39m: [38;5;2m     4402:       100:   val lightred     : color[39m
     [38;5;2m11469[39m: [38;5;2m     4403:       101:   val lightgreen   : color[39m
     [38;5;2m11470[39m: [38;5;2m     4404:       102:   val lightyellow  : color[39m
     [38;5;2m11471[39m: [38;5;2m     4405:       103:   val lightblue    : color[39m
     [38;5;2m11472[39m: [38;5;2m     4406:       104:   val lightmagenta : color[39m
     [38;5;2m11473[39m: [38;5;2m     4407:       105:   val lightcyan    : color[39m
     [38;5;2m11474[39m: [38;5;2m     4408:       106:   val lightwhite   : color[39m
     [38;5;2m11475[39m: [38;5;2m     4409:       107: [39m
     [38;5;2m11476[39m: [38;5;2m     4410:       108:   (** {2 Extended 256-color palette} *)[39m
     [38;5;2m11477[39m: [38;5;2m     4411:       109: [39m
     [38;5;2m11478[39m: [38;5;2m     4412:       110:   val rgb : r:int -> g:int -> b:int -> color[39m
     [38;5;2m11479[39m: [38;5;2m     4413:       111:   (** [rgb ~r:red ~g:green ~b:blue] is an extended-palette color from the color cube.[39m
     [38;5;2m11480[39m: [38;5;2m     4414:       112: [39m
     [38;5;2m11481[39m: [38;5;2m     4415:       113:       All three channels must be in the range [0 - 5]. XTerm default palette maps[39m
     [38;5;2m11482[39m: [38;5;2m     4416:       114:       this to [0x00], [0x5f], [0x87], [0xaf], [0xd7], and [0xff] independently[39m
     [38;5;2m11483[39m: [38;5;2m     4417:       115:       per channel.[39m
     [38;5;2m11484[39m: [38;5;2m     4418:       116: [39m
     [38;5;2m11485[39m: [38;5;2m     4419:       117:       @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m11486[39m: [38;5;2m     4420:       118: [39m
     [38;5;2m11487[39m: [38;5;2m     4421:       119:   val gray : int -> color[39m
     [38;5;2m11488[39m: [38;5;2m     4422:       120:   (** [gray level] is an extended-palette color from the grayscale ramp.[39m
     [38;5;2m11489[39m: [38;5;2m     4423:       121: [39m
     [38;5;2m11490[39m: [38;5;2m     4424:       122:       [level] must be in the range [0 - 23]. XTerm default palette maps this to[39m
     [38;5;2m11491[39m: [38;5;2m     4425:       123:       [8 + level * 10] on all three channels.[39m
     [38;5;2m11492[39m: [38;5;2m     4426:       124: [39m
     [38;5;2m11493[39m: [38;5;2m     4427:       125:       @raise Invalid_argument if the [level] is outside the range. *)[39m
     [38;5;2m11494[39m: [38;5;2m     4428:       126: [39m
     [38;5;2m11495[39m: [38;5;2m     4429:       127:   (** {2 True Color} *)[39m
     [38;5;2m11496[39m: [38;5;2m     4430:       128: [39m
     [38;5;2m11497[39m: [38;5;2m     4431:       129:   val rgb_888 : r:int -> g:int -> b:int -> color[39m
     [38;5;2m11498[39m: [38;5;2m     4432:       130:   (** [rgb_888 ~r:red ~g:green ~b:blue] is a 24-bit color.[39m
     [38;5;2m11499[39m: [38;5;2m     4433:       131: [39m
     [38;5;2m11500[39m: [38;5;2m     4434:       132:       All three channels must be in the range [0 - 255].[39m
     [38;5;2m11501[39m: [38;5;2m     4435:       133: [39m
     [38;5;2m11502[39m: [38;5;2m     4436:       134:       @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m11503[39m: [38;5;2m     4437:       135: [39m
     [38;5;2m11504[39m: [38;5;2m     4438:       136:   (** {1 Text styles} *)[39m
     [38;5;2m11505[39m: [38;5;2m     4439:       137: [39m
     [38;5;2m11506[39m: [38;5;2m     4440:       138:   type style[39m
     [38;5;2m11507[39m: [38;5;2m     4441:       139:   (** Additional text properties. *)[39m
     [38;5;2m11508[39m: [38;5;2m     4442:       140: [39m
     [38;5;2m11509[39m: [38;5;2m     4443:       141:   val unsafe_style_of_int: int-> style[39m
     [38;5;2m11510[39m: [38;5;2m     4444:       142: [39m
     [38;5;2m11511[39m: [38;5;2m     4445:       143:   val bold      : style[39m
     [38;5;2m11512[39m: [38;5;2m     4446:       144:   val italic    : style[39m
     [38;5;2m11513[39m: [38;5;2m     4447:       145:   val underline : style[39m
     [38;5;2m11514[39m: [38;5;2m     4448:       146:   val blink     : style[39m
     [38;5;2m11515[39m: [38;5;2m     4449:       147:   val reverse   : style[39m
     [38;5;2m11516[39m: [38;5;2m     4450:       148: [39m
     [38;5;2m11517[39m: [38;5;2m     4451:       149:   (** {1 Attribute construction and composition} *)[39m
     [38;5;2m11518[39m: [38;5;2m     4452:       150: [39m
     [38;5;2m11519[39m: [38;5;2m     4453:       151:   type t = attr[39m
     [38;5;2m11520[39m: [38;5;2m     4454:       152: [39m
     [38;5;2m11521[39m: [38;5;2m     4455:       153:   val equal : t -> t -> bool[39m
     [38;5;2m11522[39m: [38;5;2m     4456:       154: [39m
     [38;5;2m11523[39m: [38;5;2m     4457:       155:   val empty : attr[39m
     [38;5;2m11524[39m: [38;5;2m     4458:       156:   (** [empty] is the attribute with the default foreground and background color[39m
     [38;5;2m11525[39m: [38;5;2m     4459:       157:       and empty style set. *)[39m
     [38;5;2m11526[39m: [38;5;2m     4460:       158: [39m
     [38;5;2m11527[39m: [38;5;2m     4461:       159:   val (++) : attr -> attr -> attr[39m
     [38;5;2m11528[39m: [38;5;2m     4462:       160:   (** [a1 ++ a2] is the concatenation of [a1] and [a2], the attribute that has[39m
     [38;5;2m11529[39m: [38;5;2m     4463:       161:       [a2]'s foreground (resp. background), unless {e unset}, in which case it[39m
     [38;5;2m11530[39m: [38;5;2m     4464:       162:       is [a1]'s, and the union of both style sets.[39m
     [38;5;2m11531[39m: [38;5;2m     4465:       163: [39m
     [38;5;2m11532[39m: [38;5;2m     4466:       164:       [++] is left-associative, and forms a monoid with [empty]. *)[39m
     [38;5;2m11533[39m: [38;5;2m     4467:       165: [39m
     [38;5;2m11534[39m: [38;5;2m     4468:       166:   val fg : color -> attr[39m
     [38;5;2m11535[39m: [38;5;2m     4469:       167:   (** [fg c] is [empty] with foreground [c]. *)[39m
     [38;5;2m11536[39m: [38;5;2m     4470:       168: [39m
     [38;5;2m11537[39m: [38;5;2m     4471:       169:   val bg : color -> attr[39m
     [38;5;2m11538[39m: [38;5;2m     4472:       170:   (** [bg c] is [empty] with background [c]. *)[39m
     [38;5;2m11539[39m: [38;5;2m     4473:       171: [39m
     [38;5;2m11540[39m: [38;5;2m     4474:       172:   val st : style -> attr[39m
     [38;5;2m11541[39m: [38;5;2m     4475:       173:   (** [st s] is [empty] with style [s]. *)[39m
     [38;5;2m11542[39m: [38;5;2m     4476:       174: end[39m
     [38;5;2m11543[39m: [38;5;2m     4477:       175: [39m
     [38;5;2m11544[39m: [38;5;2m     4478:       176: (** [I] is for image.[39m
     [38;5;2m11545[39m: [38;5;2m     4479:       177: [39m
     [38;5;2m11546[39m: [38;5;2m     4480:       178:     Construction and composition of images.[39m
     [38;5;2m11547[39m: [38;5;2m     4481:       179: [39m
     [38;5;2m11548[39m: [38;5;2m     4482:       180:     Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m11549[39m: [38;5;2m     4483:       181: module I : sig[39m
     [38;5;2m11550[39m: [38;5;2m     4484:       182: [39m
     [38;5;2m11551[39m: [38;5;2m     4485:       183:   type t = image[39m
     [38;5;2m11552[39m: [38;5;2m     4486:       184: [39m
     [38;5;2m11553[39m: [38;5;2m     4487:       185:   val height : image -> int[39m
     [38;5;2m11554[39m: [38;5;2m     4488:       186:   val width  : image -> int[39m
     [38;5;2m11555[39m: [38;5;2m     4489:       187: [39m
     [38;5;2m11556[39m: [38;5;2m     4490:       188:   val equal : t -> t -> bool[39m
     [38;5;2m11557[39m: [38;5;2m     4491:       189:   (** [equal t1 t2] is [true] iff [t1] and [t2] are constructed by the same term.[39m
     [38;5;2m11558[39m: [38;5;2m     4492:       190: [39m
     [38;5;2m11559[39m: [38;5;2m     4493:       191:       {b Note} This is a weak form of equality. Images that are not [equal][39m
     [38;5;2m11560[39m: [38;5;2m     4494:       192:       could still render the same. *)[39m
     [38;5;2m11561[39m: [38;5;2m     4495:       193: [39m
     [38;5;2m11562[39m: [38;5;2m     4496:       194:   (** {1:imgprims Primitives} *)[39m
     [38;5;2m11563[39m: [38;5;2m     4497:       195: [39m
     [38;5;2m11564[39m: [38;5;2m     4498:       196:   val empty : image[39m
     [38;5;2m11565[39m: [38;5;2m     4499:       197:   (** [empty] is a zero-sized image. *)[39m
     [38;5;2m11566[39m: [38;5;2m     4500:       198: [39m
     [38;5;2m11567[39m: [38;5;2m     4501:       199:   val string : attr -> string -> image[39m
     [38;5;2m11568[39m: [38;5;2m     4502:       200:   (** [string attr s] is an image containing text [s], styled with [attr].[39m
     [38;5;2m11569[39m: [38;5;2m     4503:       201: [39m
     [38;5;2m11570[39m: [38;5;2m     4504:       202:       @raise Invalid_argument if [string] is not a valid UTF-8 sequence, or[39m
     [38;5;2m11571[39m: [38;5;2m     4505:       203:       contains {{!ctrls}control characters}. *)[39m
     [38;5;2m11572[39m: [38;5;2m     4506:       204: [39m
     [38;5;2m11573[39m: [38;5;2m     4507:       205:   val uchars : attr -> Uchar.t array -> image[39m
     [38;5;2m11574[39m: [38;5;2m     4508:       206:   (** [uchars attr us] is an image containing text [us], styled with [attr].[39m
     [38;5;2m11575[39m: [38;5;2m     4509:       207: [39m
     [38;5;2m11576[39m: [38;5;2m     4510:       208:       @raise Invalid_argument if [us] contains {{!ctrls}control characters}. *)[39m
     [38;5;2m11577[39m: [38;5;2m     4511:       209: [39m
     [38;5;2m11578[39m: [38;5;2m     4512:       210:   val char : attr -> char -> int -> int -> image[39m
     [38;5;2m11579[39m: [38;5;2m     4513:       211:   (** [char attr c w h] is a [w * h] grid of [c].[39m
     [38;5;2m11580[39m: [38;5;2m     4514:       212: [39m
     [38;5;2m11581[39m: [38;5;2m     4515:       213:       @raise Invalid_argument if [c] is a {{!ctrls}control character}. *)[39m
     [38;5;2m11582[39m: [38;5;2m     4516:       214: [39m
     [38;5;2m11583[39m: [38;5;2m     4517:       215:   val uchar : attr -> Uchar.t -> int -> int -> image[39m
     [38;5;2m11584[39m: [38;5;2m     4518:       216:   (** [uchar attr u w h] is a [w * h] grid of [u].[39m
     [38;5;2m11585[39m: [38;5;2m     4519:       217: [39m
     [38;5;2m11586[39m: [38;5;2m     4520:       218:       @raise Invalid_argument if [u] is a {{!ctrls}control character}. *)[39m
     [38;5;2m11587[39m: [38;5;2m     4521:       219: [39m
     [38;5;2m11588[39m: [38;5;2m     4522:       220:   val void  : int -> int -> image[39m
     [38;5;2m11589[39m: [38;5;2m     4523:       221:   (** [void w h] is a [w * h] rectangle of transparent cells.[39m
     [38;5;2m11590[39m: [38;5;2m     4524:       222: [39m
     [38;5;2m11591[39m: [38;5;2m     4525:       223:       [void] is magical: it has geometry, but no displayable content. This is[39m
     [38;5;2m11592[39m: [38;5;2m     4526:       224:       different, for example, from the space character [U+0020], which renders[39m
     [38;5;2m11593[39m: [38;5;2m     4527:       225:       as a cell filled with the background color. This means that [void][39m
     [38;5;2m11594[39m: [38;5;2m     4528:       226:       interacts specially with {{!(</>)}overlays}.[39m
     [38;5;2m11595[39m: [38;5;2m     4529:       227: [39m
     [38;5;2m11596[39m: [38;5;2m     4530:       228:       [void 0 0 = empty].[39m
     [38;5;2m11597[39m: [38;5;2m     4531:       229:       [void] with only one dimension [0] acts as a spacing element in the other[39m
     [38;5;2m11598[39m: [38;5;2m     4532:       230:       dimension. Negative size is treated as [0]. *)[39m
     [38;5;2m11599[39m: [38;5;2m     4533:       231: [39m
     [38;5;2m11600[39m: [38;5;2m     4534:       232:   (** {1:imgcomp Image composition}[39m
     [38;5;2m11601[39m: [38;5;2m     4535:       233: [39m
     [38;5;2m11602[39m: [38;5;2m     4536:       234:       Three basic composition modes allow construction of more complex images[39m
     [38;5;2m11603[39m: [38;5;2m     4537:       235:       from simpler ones.[39m
     [38;5;2m11604[39m: [38;5;2m     4538:       236: [39m
     [38;5;2m11605[39m: [38;5;2m     4539:       237:       Composition operators are left-associative and form a monoid with [void].[39m
     [38;5;2m11606[39m: [38;5;2m     4540:       238:       *)[39m
     [38;5;2m11607[39m: [38;5;2m     4541:       239: [39m
     [38;5;2m11608[39m: [38;5;2m     4542:       240:   val (<|>) : image -> image -> image[39m
     [38;5;2m11609[39m: [38;5;2m     4543:       241:   (**  [i1 <|> i2] is the horizontal combination of [i1] and [i2].[39m
     [38;5;2m11610[39m: [38;5;2m     4544:       242: [39m
     [38;5;2m11611[39m: [38;5;2m     4545:       243:       [width (i1 <|> i2) = width i1 + width i2][39m
     [38;5;2m11612[39m: [38;5;2m     4546:       244:       [height (i1 <|> i2) = max (height i1) (height i2)][39m
     [38;5;2m11613[39m: [38;5;2m     4547:       245: [39m
     [38;5;2m11614[39m: [38;5;2m     4548:       246:       Images are top-aligned. The missing region is implicitly filled with[39m
     [38;5;2m11615[39m: [38;5;2m     4549:       247:       {{!void}[void]}.[39m
     [38;5;2m11616[39m: [38;5;2m     4550:       248: [39m
     [38;5;2m11617[39m: [38;5;2m     4551:       249: {v[39m
     [38;5;2m11618[39m: [38;5;2m     4552:       250: [x] <|> [y] = [xy][39m
     [38;5;2m11619[39m: [38;5;2m     4553:       251:         [y]   [.y][39m
     [38;5;2m11620[39m: [38;5;2m     4554:       252: v}[39m
     [38;5;2m11621[39m: [38;5;2m     4555:       253: [39m
     [38;5;2m11622[39m: [38;5;2m     4556:       254:       where [.] denotes {{!void}[void]}. *)[39m
     [38;5;2m11623[39m: [38;5;2m     4557:       255: [39m
     [38;5;2m11624[39m: [38;5;2m     4558:       256:   val (<->) : image -> image -> image[39m
     [38;5;2m11625[39m: [38;5;2m     4559:       257:   (** [i1 <-> i2] is the vertical combination of [i1] and [i2].[39m
     [38;5;2m11626[39m: [38;5;2m     4560:       258: [39m
     [38;5;2m11627[39m: [38;5;2m     4561:       259:       [width (i1 <-> i2) = max (width i1) (width i2)][39m
     [38;5;2m11628[39m: [38;5;2m     4562:       260:       [height (i1 <-> i2) = height i1 + height i2][39m
     [38;5;2m11629[39m: [38;5;2m     4563:       261: [39m
     [38;5;2m11630[39m: [38;5;2m     4564:       262:       Images are left-aligned. The missing region is implicitly filled with[39m
     [38;5;2m11631[39m: [38;5;2m     4565:       263:       {{!void}[void]}.[39m
     [38;5;2m11632[39m: [38;5;2m     4566:       264: [39m
     [38;5;2m11633[39m: [38;5;2m     4567:       265: {v[39m
     [38;5;2m11634[39m: [38;5;2m     4568:       266: [xx] <-> [y] = [xx][39m
     [38;5;2m11635[39m: [38;5;2m     4569:       267:                [y.][39m
     [38;5;2m11636[39m: [38;5;2m     4570:       268: v}[39m
     [38;5;2m11637[39m: [38;5;2m     4571:       269:       *)[39m
     [38;5;2m11638[39m: [38;5;2m     4572:       270: [39m
     [38;5;2m11639[39m: [38;5;2m     4573:       271:   val (</>) : image -> image -> image[39m
     [38;5;2m11640[39m: [38;5;2m     4574:       272:   (** [i1 </> i2] is [i1] overlaid over [i2].[39m
     [38;5;2m11641[39m: [38;5;2m     4575:       273: [39m
     [38;5;2m11642[39m: [38;5;2m     4576:       274:       [width (i1 </> i2) = max (width i1) (width i2)][39m
     [38;5;2m11643[39m: [38;5;2m     4577:       275:       [height (i1 </> i2) = max (height i1) (height i2)][39m
     [38;5;2m11644[39m: [38;5;2m     4578:       276: [39m
     [38;5;2m11645[39m: [38;5;2m     4579:       277:       Images are top-left-aligned. In the region of their overlap, only the[39m
     [38;5;2m11646[39m: [38;5;2m     4580:       278:       {{!void}[void]} cells of [i1] show fragments of [i2].[39m
     [38;5;2m11647[39m: [38;5;2m     4581:       279: [39m
     [38;5;2m11648[39m: [38;5;2m     4582:       280: {v[39m
     [38;5;2m11649[39m: [38;5;2m     4583:       281: [x.x] </> [yyyy] = [xyxy][39m
     [38;5;2m11650[39m: [38;5;2m     4584:       282: v}[39m
     [38;5;2m11651[39m: [38;5;2m     4585:       283:       *)[39m
     [38;5;2m11652[39m: [38;5;2m     4586:       284: [39m
     [38;5;2m11653[39m: [38;5;2m     4587:       285:   (** {1:imgcrop Cropping and padding} *)[39m
     [38;5;2m11654[39m: [38;5;2m     4588:       286: [39m
     [38;5;2m11655[39m: [38;5;2m     4589:       287:   val hcrop : int -> int -> image -> image[39m
     [38;5;2m11656[39m: [38;5;2m     4590:       288:   (** [hcrop left right i] is [i] with [left] leftmost, and [right][39m
     [38;5;2m11657[39m: [38;5;2m     4591:       289:       rightmost columns missing. If [left + right >= width i] the result is[39m
     [38;5;2m11658[39m: [38;5;2m     4592:       290:       [empty].[39m
     [38;5;2m11659[39m: [38;5;2m     4593:       291: [39m
     [38;5;2m11660[39m: [38;5;2m     4594:       292:       If either [left] or [right] is negative, instead of being cropped, the[39m
     [38;5;2m11661[39m: [38;5;2m     4595:       293:       image is padded on that side.[39m
     [38;5;2m11662[39m: [38;5;2m     4596:       294: [39m
     [38;5;2m11663[39m: [38;5;2m     4597:       295:       For example:[39m
     [38;5;2m11664[39m: [38;5;2m     4598:       296:       {ul[39m
     [38;5;2m11665[39m: [38;5;2m     4599:       297:       {- [hcrop 0 1 [abc]] = [[ab]]}[39m
     [38;5;2m11666[39m: [38;5;2m     4600:       298:       {- [hcrop 1 1 [abc]] = [[b]]}[39m
     [38;5;2m11667[39m: [38;5;2m     4601:       299:       {- [hcrop (-1) 1 [abc]] = [void 1 1 <|> hcrop 0 1 [abc]] = [[.ab]]}[39m
     [38;5;2m11668[39m: [38;5;2m     4602:       300:       {- [hcrop 2 2 [abc]] = [empty]}} *)[39m
     [38;5;2m11669[39m: [38;5;2m     4603:       301: [39m
     [38;5;2m11670[39m: [38;5;2m     4604:       302:   val vcrop : int -> int -> image -> image[39m
     [38;5;2m11671[39m: [38;5;2m     4605:       303:   (** [vcrop top bottom i] is the vertical analogue to {{!hcrop}[hcrop]}. *)[39m
     [38;5;2m11672[39m: [38;5;2m     4606:       304: [39m
     [38;5;2m11673[39m: [38;5;2m     4607:       305:   val crop : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m11674[39m: [38;5;2m     4608:       306:   (** [crop ~l:left ~r:right ~t:top ~b:bottom i] is[39m
     [38;5;2m11675[39m: [38;5;2m     4609:       307:       [vcrop left right (hcrop top bottom) i].[39m
     [38;5;2m11676[39m: [38;5;2m     4610:       308: [39m
     [38;5;2m11677[39m: [38;5;2m     4611:       309:       Missing arguments default to [0]. *)[39m
     [38;5;2m11678[39m: [38;5;2m     4612:       310: [39m
     [38;5;2m11679[39m: [38;5;2m     4613:       311:   val hpad : int -> int -> image -> image[39m
     [38;5;2m11680[39m: [38;5;2m     4614:       312:   (** {{!hcrop}[hcrop]} with margins negated. *)[39m
     [38;5;2m11681[39m: [38;5;2m     4615:       313: [39m
     [38;5;2m11682[39m: [38;5;2m     4616:       314:   val vpad : int -> int -> image -> image[39m
     [38;5;2m11683[39m: [38;5;2m     4617:       315:   (** {{!vcrop}[vcrop]} with margins negated. *)[39m
     [38;5;2m11684[39m: [38;5;2m     4618:       316: [39m
     [38;5;2m11685[39m: [38;5;2m     4619:       317:   val pad : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m11686[39m: [38;5;2m     4620:       318:   (** {{!crop}[crop]} with margins negated. *)[39m
     [38;5;2m11687[39m: [38;5;2m     4621:       319: [39m
     [38;5;2m11688[39m: [38;5;2m     4622:       320: [39m
     [38;5;2m11689[39m: [38;5;2m     4623:       321:   (** {1 Additional combinators} *)[39m
     [38;5;2m11690[39m: [38;5;2m     4624:       322: [39m
     [38;5;2m11691[39m: [38;5;2m     4625:       323:   val hcat : image list -> image[39m
     [38;5;2m11692[39m: [38;5;2m     4626:       324:   (** [hcat xs] horizontally concatenates [xs]. See {{!(<|>)}beside}. *)[39m
     [38;5;2m11693[39m: [38;5;2m     4627:       325: [39m
     [38;5;2m11694[39m: [38;5;2m     4628:       326:   val vcat : image list -> image[39m
     [38;5;2m11695[39m: [38;5;2m     4629:       327:   (** [vcat xs] vertically concatenates [xs]. See {{!(<->)}above}. *)[39m
     [38;5;2m11696[39m: [38;5;2m     4630:       328: [39m
     [38;5;2m11697[39m: [38;5;2m     4631:       329:   val zcat : image list -> image[39m
     [38;5;2m11698[39m: [38;5;2m     4632:       330:   (** [zcat xs] overlays [xs]. See {{!(</>)}over}. *)[39m
     [38;5;2m11699[39m: [38;5;2m     4633:       331: [39m
     [38;5;2m11700[39m: [38;5;2m     4634:       332:   val tabulate : int -> int -> (int -> int -> image) -> image[39m
     [38;5;2m11701[39m: [38;5;2m     4635:       333:   (** [tabulate m n f] is the grid of values [f x y] with [x = 0..m-1][39m
     [38;5;2m11702[39m: [38;5;2m     4636:       334:       and [y = 0..n-1], where [x] grows to the right, and [y] growns down.[39m
     [38;5;2m11703[39m: [38;5;2m     4637:       335: [39m
     [38;5;2m11704[39m: [38;5;2m     4638:       336:       [f a y] is to the left of [f b y] if [a < b], and [f x a] is above [f x b][39m
     [38;5;2m11705[39m: [38;5;2m     4639:       337:       if [a < b], but the exact alignment is unspecified if the various [f x y][39m
     [38;5;2m11706[39m: [38;5;2m     4640:       338:       have different dimensions. *)[39m
     [38;5;2m11707[39m: [38;5;2m     4641:       339: [39m
     [38;5;2m11708[39m: [38;5;2m     4642:       340:   val hsnap : ?align:[ `Left | `Middle | `Right ] -> int -> image -> image[39m
     [38;5;2m11709[39m: [38;5;2m     4643:       341:   (** [hsnap ~align w i] is an image of width strictly [w] obtained by either[39m
     [38;5;2m11710[39m: [38;5;2m     4644:       342:       horizontally padding or cropping [i] and positioning it according to[39m
     [38;5;2m11711[39m: [38;5;2m     4645:       343:       [~align].[39m
     [38;5;2m11712[39m: [38;5;2m     4646:       344: [39m
     [38;5;2m11713[39m: [38;5;2m     4647:       345:       [~align] defaults to [`Middle]. *)[39m
     [38;5;2m11714[39m: [38;5;2m     4648:       346: [39m
     [38;5;2m11715[39m: [38;5;2m     4649:       347:   val vsnap : ?align:[ `Top | `Middle | `Bottom ] -> int -> image -> image[39m
     [38;5;2m11716[39m: [38;5;2m     4650:       348:   (** [vsnap ~align h i] is an image of height strictly [h] obtained by either[39m
     [38;5;2m11717[39m: [38;5;2m     4651:       349:       vertically padding or cropping [i] and positioning it according to[39m
     [38;5;2m11718[39m: [38;5;2m     4652:       350:       [~align].[39m
     [38;5;2m11719[39m: [38;5;2m     4653:       351: [39m
     [38;5;2m11720[39m: [38;5;2m     4654:       352:       [~align] defaults to [`Middle]. *)[39m
     [38;5;2m11721[39m: [38;5;2m     4655:       353: [39m
     [38;5;2m11722[39m: [38;5;2m     4656:       354:   (** {1 [Format] interoperability} *)[39m
     [38;5;2m11723[39m: [38;5;2m     4657:       355: [39m
     [38;5;2m11724[39m: [38;5;2m     4658:       356:   val strf : ?attr:attr -> ?w:int -> ('a, Format.formatter, unit, image) format4 -> 'a[39m
     [38;5;2m11725[39m: [38;5;2m     4659:       357:   (** [strf ?attr ?w:width format ...] pretty-prints like[39m
     [38;5;2m11726[39m: [38;5;2m     4660:       358:       [Format.asprintf format ...], but returns an [image].[39m
     [38;5;2m11727[39m: [38;5;2m     4661:       359: [39m
     [38;5;2m11728[39m: [38;5;2m     4662:       360:       [attr] is the (outermost) attribute. Defaults to {!A.empty}.[39m
     [38;5;2m11729[39m: [38;5;2m     4663:       361: [39m
     [38;5;2m11730[39m: [38;5;2m     4664:       362:       [width] is used to set the margin on the formatter. This is only a hint,[39m
     [38;5;2m11731[39m: [38;5;2m     4665:       363:       and does not guarantee the width of the result. Consult[39m
     [38;5;2m11732[39m: [38;5;2m     4666:       364:       {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#VALset_margin}[39m
     [38;5;2m11733[39m: [38;5;2m     4667:       365:       [Format.set_margin]} for details. Defaults to an unspecified, large[39m
     [38;5;2m11734[39m: [38;5;2m     4668:       366:       number.[39m
     [38;5;2m11735[39m: [38;5;2m     4669:       367: [39m
     [38;5;2m11736[39m: [38;5;2m     4670:       368:       @raise Invalid_argument if the printing process attempts to directly[39m
     [38;5;2m11737[39m: [38;5;2m     4671:       369:       output {{!ctrls}control characters}, by embedding them in [format] or a[39m
     [38;5;2m11738[39m: [38;5;2m     4672:       370:       string printed with the [%s] conversion, for example.[39m
     [38;5;2m11739[39m: [38;5;2m     4673:       371:       {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#fpp}[39m
     [38;5;2m11740[39m: [38;5;2m     4674:       372:       Formatted printing} is allowed. *)[39m
     [38;5;2m11741[39m: [38;5;2m     4675:       373: [39m
     [38;5;2m11742[39m: [38;5;2m     4676:       374:   val kstrf : ?attr:attr -> ?w:int -> (image -> 'a) -> ('b, Format.formatter, unit, 'a) format4 -> 'b[39m
     [38;5;2m11743[39m: [38;5;2m     4677:       375:   (** [kstrf ?attr ?w k format ...] is continuation-based [strf ?attr ?w format ...]. *)[39m
     [38;5;2m11744[39m: [38;5;2m     4678:       376: [39m
     [38;5;2m11745[39m: [38;5;2m     4679:       377:   val pp_attr : attr -> (Format.formatter -> 'a -> unit) -> Format.formatter -> 'a -> unit[39m
     [38;5;2m11746[39m: [38;5;2m     4680:       378:   (** [pp_attr a f] is a pretty-printer like [f], except its output is styled[39m
     [38;5;2m11747[39m: [38;5;2m     4681:       379:       with [a]. This applies only outside of any styling [f] itself might embed. *)[39m
     [38;5;2m11748[39m: [38;5;2m     4682:       380: end[39m
     [38;5;2m11749[39m: [38;5;2m     4683:       381: [39m
     [38;5;2m11750[39m: [38;5;2m     4684:       382: (** Operators, repeated. *)[39m
     [38;5;2m11751[39m: [38;5;2m     4685:       383: module Infix : sig[39m
     [38;5;2m11752[39m: [38;5;2m     4686:       384: [39m
     [38;5;2m11753[39m: [38;5;2m     4687:       385:   (** {2 [I]}[39m
     [38;5;2m11754[39m: [38;5;2m     4688:       386: [39m
     [38;5;2m11755[39m: [38;5;2m     4689:       387:       See {{!I}[I]}. *)[39m
     [38;5;2m11756[39m: [38;5;2m     4690:       388: [39m
     [38;5;2m11757[39m: [38;5;2m     4691:       389:   val (<->) : image -> image -> image[39m
     [38;5;2m11758[39m: [38;5;2m     4692:       390:   val (<|>) : image -> image -> image[39m
     [38;5;2m11759[39m: [38;5;2m     4693:       391:   val (</>) : image -> image -> image[39m
     [38;5;2m11760[39m: [38;5;2m     4694:       392: [39m
     [38;5;2m11761[39m: [38;5;2m     4695:       393:   (** {2 [A]}[39m
     [38;5;2m11762[39m: [38;5;2m     4696:       394: [39m
     [38;5;2m11763[39m: [38;5;2m     4697:       395:       See {{!A}[A]}. *)[39m
     [38;5;2m11764[39m: [38;5;2m     4698:       396: [39m
     [38;5;2m11765[39m: [38;5;2m     4699:       397:   val (++)  : attr -> attr -> attr[39m
     [38;5;2m11766[39m: [38;5;2m     4700:       398: end[39m
     [38;5;2m11767[39m: [38;5;2m     4701:       399: [39m
     [38;5;2m11768[39m: [38;5;2m     4702:       400: (** {1 Low-level interface}[39m
     [38;5;2m11769[39m: [38;5;2m     4703:       401: [39m
     [38;5;2m11770[39m: [38;5;2m     4704:       402:     You can ignore it, unless you are porting [Notty] to a new platform not[39m
     [38;5;2m11771[39m: [38;5;2m     4705:       403:     supported by the existing IO backends. *)[39m
     [38;5;2m11772[39m: [38;5;2m     4706:       404: [39m
     [38;5;2m11773[39m: [38;5;2m     4707:       405: (** Terminal capabilities.[39m
     [38;5;2m11774[39m: [38;5;2m     4708:       406: [39m
     [38;5;2m11775[39m: [38;5;2m     4709:       407:     This module describes how to output things so that a terminal understands[39m
     [38;5;2m11776[39m: [38;5;2m     4710:       408:     them. *)[39m
     [38;5;2m11777[39m: [38;5;2m     4711:       409: module Cap : sig[39m
     [38;5;2m11778[39m: [38;5;2m     4712:       410: [39m
     [38;5;2m11779[39m: [38;5;2m     4713:       411:   type t[39m
     [38;5;2m11780[39m: [38;5;2m     4714:       412:   (** A set of capabilities that distinguish terminals from one another.[39m
     [38;5;2m11781[39m: [38;5;2m     4715:       413: [39m
     [38;5;2m11782[39m: [38;5;2m     4716:       414:       A bundle of magic strings, really. *)[39m
     [38;5;2m11783[39m: [38;5;2m     4717:       415: [39m
     [38;5;2m11784[39m: [38;5;2m     4718:       416:   val ansi : t[39m
     [38;5;2m11785[39m: [38;5;2m     4719:       417:   (** The usual ANSI terminal, with colors, text styles and cursor[39m
     [38;5;2m11786[39m: [38;5;2m     4720:       418:       positioning. *)[39m
     [38;5;2m11787[39m: [38;5;2m     4721:       419: [39m
     [38;5;2m11788[39m: [38;5;2m     4722:       420:   val dumb : t[39m
     [38;5;2m11789[39m: [38;5;2m     4723:       421:   (** Pure text output. Text attributes are stripped and positioning is done[39m
     [38;5;2m11790[39m: [38;5;2m     4724:       422:       with the character [U+0020], SPACE. *)[39m
     [38;5;2m11791[39m: [38;5;2m     4725:       423: end[39m
     [38;5;2m11792[39m: [38;5;2m     4726:       424: [39m
     [38;5;2m11793[39m: [38;5;2m     4727:       425: (** Dump images to string buffers. *)[39m
     [38;5;2m11794[39m: [38;5;2m     4728:       426: module Render : sig[39m
     [38;5;2m11795[39m: [38;5;2m     4729:       427: [39m
     [38;5;2m11796[39m: [38;5;2m     4730:       428:   val to_buffer : Buffer.t -> Cap.t -> int * int -> int * int -> image -> unit[39m
     [38;5;2m11797[39m: [38;5;2m     4731:       429:   (** [to_buffer buf cap (x, y) (w, h) i] writes the string representation of[39m
     [38;5;2m11798[39m: [38;5;2m     4732:       430:       [i] to [buf], as interpreted by [cap].[39m
     [38;5;2m11799[39m: [38;5;2m     4733:       431: [39m
     [38;5;2m11800[39m: [38;5;2m     4734:       432:       It renders the [w * h] rectangle of [i], offset by [(x, y)] from the top[39m
     [38;5;2m11801[39m: [38;5;2m     4735:       433:       left. *)[39m
     [38;5;2m11802[39m: [38;5;2m     4736:       434: [39m
     [38;5;2m11803[39m: [38;5;2m     4737:       435:   val pp : Cap.t -> Format.formatter -> image -> unit[39m
     [38;5;2m11804[39m: [38;5;2m     4738:       436:   (** [pp cap ppf i] renders [i] to the pretty-printer [ppf].[39m
     [38;5;2m11805[39m: [38;5;2m     4739:       437: [39m
     [38;5;2m11806[39m: [38;5;2m     4740:       438:       {b Note} [pp] is generally meant for development and debugging. It tries[39m
     [38;5;2m11807[39m: [38;5;2m     4741:       439:       to be reasonable, but dedicated IO modules handle the actual output[39m
     [38;5;2m11808[39m: [38;5;2m     4742:       440:       better. *)[39m
     [38;5;2m11809[39m: [38;5;2m     4743:       441: [39m
     [38;5;2m11810[39m: [38;5;2m     4744:       442:   (**/**)[39m
     [38;5;2m11811[39m: [38;5;2m     4745:       443:   (* Toplevel. *)[39m
     [38;5;2m11812[39m: [38;5;2m     4746:       444:   val pp_image : Format.formatter -> image -> unit[39m
     [38;5;2m11813[39m: [38;5;2m     4747:       445:   val pp_attr : Format.formatter -> attr -> unit[39m
     [38;5;2m11814[39m: [38;5;2m     4748:       446:   (**/**)[39m
     [38;5;2m11815[39m: [38;5;2m     4749:       447: end[39m
     [38;5;2m11816[39m: [38;5;2m     4750:       448: [39m
     [38;5;2m11817[39m: [38;5;2m     4751:       449: (** Parse and decode escape sequences in character streams. *)[39m
     [38;5;2m11818[39m: [38;5;2m     4752:       450: module Unescape : sig[39m
     [38;5;2m11819[39m: [38;5;2m     4753:       451: [39m
     [38;5;2m11820[39m: [38;5;2m     4754:       452:   (** {1 Input events} *)[39m
     [38;5;2m11821[39m: [38;5;2m     4755:       453: [39m
     [38;5;2m11822[39m: [38;5;2m     4756:       454:   type special = [[39m
     [38;5;2m11823[39m: [38;5;2m     4757:       455:     `Escape[39m
     [38;5;2m11824[39m: [38;5;2m     4758:       456:   | `Enter[39m
     [38;5;2m11825[39m: [38;5;2m     4759:       457:   | `Tab[39m
     [38;5;2m11826[39m: [38;5;2m     4760:       458:   | `Backspace[39m
     [38;5;2m11827[39m: [38;5;2m     4761:       459:   | `Insert[39m
     [38;5;2m11828[39m: [38;5;2m     4762:       460:   | `Delete[39m
     [38;5;2m11829[39m: [38;5;2m     4763:       461:   | `Home | `End[39m
     [38;5;2m11830[39m: [38;5;2m     4764:       462:   | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m11831[39m: [38;5;2m     4765:       463:   | `Page of [ `Up | `Down ][39m
     [38;5;2m11832[39m: [38;5;2m     4766:       464:   | `Function of int[39m
     [38;5;2m11833[39m: [38;5;2m     4767:       465:   ][39m
     [38;5;2m11834[39m: [38;5;2m     4768:       466:   (** A selection of extra keys on the keyboard. *)[39m
     [38;5;2m11835[39m: [38;5;2m     4769:       467: [39m
     [38;5;2m11836[39m: [38;5;2m     4770:       468:   type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m11837[39m: [38;5;2m     4771:       469:   (** Mouse buttons. *)[39m
     [38;5;2m11838[39m: [38;5;2m     4772:       470: [39m
     [38;5;2m11839[39m: [38;5;2m     4773:       471:   type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m11840[39m: [38;5;2m     4774:       472:   (** Modifier state. *)[39m
     [38;5;2m11841[39m: [38;5;2m     4775:       473: [39m
     [38;5;2m11842[39m: [38;5;2m     4776:       474:   type key = [ special | `Uchar of Uchar.t | `ASCII of char ] * mods[39m
     [38;5;2m11843[39m: [38;5;2m     4777:       475:   (** Keypress event. *)[39m
     [38;5;2m11844[39m: [38;5;2m     4778:       476: [39m
     [38;5;2m11845[39m: [38;5;2m     4779:       477:   type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m11846[39m: [38;5;2m     4780:       478:   (** Mouse event. *)[39m
     [38;5;2m11847[39m: [38;5;2m     4781:       479: [39m
     [38;5;2m11848[39m: [38;5;2m     4782:       480:   type paste = [ `Start | `End ][39m
     [38;5;2m11849[39m: [38;5;2m     4783:       481:   (** Paste event. *)[39m
     [38;5;2m11850[39m: [38;5;2m     4784:       482: [39m
     [38;5;2m11851[39m: [38;5;2m     4785:       483:   type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m11852[39m: [38;5;2m     4786:       484:   (** Things that terminals say to applications.[39m
     [38;5;2m11853[39m: [38;5;2m     4787:       485: [39m
     [38;5;2m11854[39m: [38;5;2m     4788:       486:       {ul[39m
     [38;5;2m11855[39m: [38;5;2m     4789:       487:       {- [`Key (k, mods)] is keyboard input.[39m
     [38;5;2m11856[39m: [38;5;2m     4790:       488: [39m
     [38;5;2m11857[39m: [38;5;2m     4791:       489:          [k] is a {{!key}key}, one of:[39m
     [38;5;2m11858[39m: [38;5;2m     4792:       490:          {ul[39m
     [38;5;2m11859[39m: [38;5;2m     4793:       491:          {- [`ASCII c] where [c] is a [char] in the[39m
     [38;5;2m11860[39m: [38;5;2m     4794:       492:             {{: https://tools.ietf.org/html/rfc20}ASCII} range;}[39m
     [38;5;2m11861[39m: [38;5;2m     4795:       493:          {- [`Uchar u] where [u] is any other {{!Uchar.t}unicode character}; or}[39m
     [38;5;2m11862[39m: [38;5;2m     4796:       494:          {- a {{!special}special key}.}}[39m
     [38;5;2m11863[39m: [38;5;2m     4797:       495: [39m
     [38;5;2m11864[39m: [38;5;2m     4798:       496:          [`ASCII] and [`Uchar] together represent the textual part of the input.[39m
     [38;5;2m11865[39m: [38;5;2m     4799:       497:          These characters are guaranteed not to be {{!ctrls}control[39m
     [38;5;2m11866[39m: [38;5;2m     4800:       498:          characters}, and are safe to use when constructing images. ASCII is[39m
     [38;5;2m11867[39m: [38;5;2m     4801:       499:          separated from the rest of Unicode for convenient pattern-matching.[39m
     [38;5;2m11868[39m: [38;5;2m     4802:       500: [39m
     [38;5;2m11869[39m: [38;5;2m     4803:       501:          [mods] are the extra {{!mods}modifier keys}.[39m
     [38;5;2m11870[39m: [38;5;2m     4804:       502: [39m
     [38;5;2m11871[39m: [38;5;2m     4805:       503:          }[39m
     [38;5;2m11872[39m: [38;5;2m     4806:       504:       {- [`Mouse (event, (x, y), mods)] is mouse input.[39m
     [38;5;2m11873[39m: [38;5;2m     4807:       505: [39m
     [38;5;2m11874[39m: [38;5;2m     4808:       506:          [event] is the actual mouse event: {{!button}[button]} press, release,[39m
     [38;5;2m11875[39m: [38;5;2m     4809:       507:          or motion of the mouse with buttons depressed.[39m
     [38;5;2m11876[39m: [38;5;2m     4810:       508: [39m
     [38;5;2m11877[39m: [38;5;2m     4811:       509:          [(x, y)] are column and row position of the mouse. The origin is[39m
     [38;5;2m11878[39m: [38;5;2m     4812:       510:          [(0,0)], the upper-left corner.[39m
     [38;5;2m11879[39m: [38;5;2m     4813:       511: [39m
     [38;5;2m11880[39m: [38;5;2m     4814:       512:          {b Note} Every [`Press (`Left|`Middle|`Right)] generates a corresponding[39m
     [38;5;2m11881[39m: [38;5;2m     4815:       513:          [`Release], but there is no portable way to detect which button was[39m
     [38;5;2m11882[39m: [38;5;2m     4816:       514:          released. [`Scroll (`Up|`Down)] presses are not followed by releases.[39m
     [38;5;2m11883[39m: [38;5;2m     4817:       515: [39m
     [38;5;2m11884[39m: [38;5;2m     4818:       516:          }[39m
     [38;5;2m11885[39m: [38;5;2m     4819:       517:       {- [`Paste (`Start|`End)] are {e bracketed paste} events, signalling the[39m
     [38;5;2m11886[39m: [38;5;2m     4820:       518:          beginning and end of a sequence of events pasted into the terminal.[39m
     [38;5;2m11887[39m: [38;5;2m     4821:       519: [39m
     [38;5;2m11888[39m: [38;5;2m     4822:       520:          {b Note} This mechanism is useful, but not reliable. The pasted text[39m
     [38;5;2m11889[39m: [38;5;2m     4823:       521:          could contain spurious start-of-paste or end-of-paste markers, or they[39m
     [38;5;2m11890[39m: [38;5;2m     4824:       522:          could be entered by hand. }}[39m
     [38;5;2m11891[39m: [38;5;2m     4825:       523: [39m
     [38;5;2m11892[39m: [38;5;2m     4826:       524:       Terminal input protocols are historical cruft, and heavily overload the[39m
     [38;5;2m11893[39m: [38;5;2m     4827:       525:       ASCII range. For instance:[39m
     [38;5;2m11894[39m: [38;5;2m     4828:       526:       {ul[39m
     [38;5;2m11895[39m: [38;5;2m     4829:       527:       {- It is impossible to distinguish lower- and upper-case ASCII characters[39m
     [38;5;2m11896[39m: [38;5;2m     4830:       528:          if {b Ctrl} is pressed;}[39m
     [38;5;2m11897[39m: [38;5;2m     4831:       529:       {- several combinations of key-presses are aliased as special keys; and}[39m
     [38;5;2m11898[39m: [38;5;2m     4832:       530:       {- in a UTF-8 encoded stream, there is no representation for non-ASCII[39m
     [38;5;2m11899[39m: [38;5;2m     4833:       531:          characters with modifier keys.}}[39m
     [38;5;2m11900[39m: [38;5;2m     4834:       532: [39m
     [38;5;2m11901[39m: [38;5;2m     4835:       533:       This means that many values that inhabit the [event] type are impossible,[39m
     [38;5;2m11902[39m: [38;5;2m     4836:       534:       while some reflect multiple different user actions. Limitations include:[39m
     [38;5;2m11903[39m: [38;5;2m     4837:       535: [39m
     [38;5;2m11904[39m: [38;5;2m     4838:       536:       {ul[39m
     [38;5;2m11905[39m: [38;5;2m     4839:       537:       {- [`Shift] is reported only with special keys, and not all of them.}[39m
     [38;5;2m11906[39m: [38;5;2m     4840:       538:       {- [`Meta] and [`Control] are reported with mouse events, key events with[39m
     [38;5;2m11907[39m: [38;5;2m     4841:       539:          special keys, and key events with values in the ranges [0x40-0x5f][39m
     [38;5;2m11908[39m: [38;5;2m     4842:       540:          ([@] to [_]) and [0x60-0x7e] ([`] to [~]). If {b Ctrl} is pressed, the higher[39m
     [38;5;2m11909[39m: [38;5;2m     4843:       541:          range is mapped into the lower range.}[39m
     [38;5;2m11910[39m: [38;5;2m     4844:       542:       {- Terminals will variously under-report modifier key state.}}[39m
     [38;5;2m11911[39m: [38;5;2m     4845:       543: [39m
     [38;5;2m11912[39m: [38;5;2m     4846:       544:       Perform own experiments before relying on elaborate key combinations. *)[39m
     [38;5;2m11913[39m: [38;5;2m     4847:       545: [39m
     [38;5;2m11914[39m: [38;5;2m     4848:       546:   val uchar : [< `Uchar of Uchar.t | `ASCII of char ] -> Uchar.t[39m
     [38;5;2m11915[39m: [38;5;2m     4849:       547:   (** [uchar x] is the {!Uchar.t} corresponding to [x]. This operations merges[39m
     [38;5;2m11916[39m: [38;5;2m     4850:       548:       the ASCII and Unicode variants of {{!key}key}. *)[39m
     [38;5;2m11917[39m: [38;5;2m     4851:       549: [39m
     [38;5;2m11918[39m: [38;5;2m     4852:       550:   (** {1 Decoding filter}[39m
     [38;5;2m11919[39m: [38;5;2m     4853:       551: [39m
     [38;5;2m11920[39m: [38;5;2m     4854:       552:       Simple IO-less terminal input processor. It can be used for building[39m
     [38;5;2m11921[39m: [38;5;2m     4855:       553:       custom terminal input abstractions. *)[39m
     [38;5;2m11922[39m: [38;5;2m     4856:       554: [39m
     [38;5;2m11923[39m: [38;5;2m     4857:       555:   type t[39m
     [38;5;2m11924[39m: [38;5;2m     4858:       556:   (** Input decoding filter.[39m
     [38;5;2m11925[39m: [38;5;2m     4859:       557: [39m
     [38;5;2m11926[39m: [38;5;2m     4860:       558:       The filter should be {{!input}fed} strings, which it first decodes from[39m
     [38;5;2m11927[39m: [38;5;2m     4861:       559:       UTF-8, and then extracts the input events.[39m
     [38;5;2m11928[39m: [38;5;2m     4862:       560: [39m
     [38;5;2m11929[39m: [38;5;2m     4863:       561:       Malformed UTF-8 input bytes and unrecognized escape sequences are silently[39m
     [38;5;2m11930[39m: [38;5;2m     4864:       562:       discarded. *)[39m
     [38;5;2m11931[39m: [38;5;2m     4865:       563: [39m
     [38;5;2m11932[39m: [38;5;2m     4866:       564:   val create : unit -> t[39m
     [38;5;2m11933[39m: [38;5;2m     4867:       565:   (** [create ()] is a new, empty filter. *)[39m
     [38;5;2m11934[39m: [38;5;2m     4868:       566: [39m
     [38;5;2m11935[39m: [38;5;2m     4869:       567:   val input : t -> bytes -> int -> int -> unit[39m
     [38;5;2m11936[39m: [38;5;2m     4870:       568:   (** [input t buffer i len] feeds [len] bytes of [string] into [t], starting[39m
     [38;5;2m11937[39m: [38;5;2m     4871:       569:       from position [len].[39m
     [38;5;2m11938[39m: [38;5;2m     4872:       570: [39m
     [38;5;2m11939[39m: [38;5;2m     4873:       571:       [len = 0] signals the end of input.[39m
     [38;5;2m11940[39m: [38;5;2m     4874:       572: [39m
     [38;5;2m11941[39m: [38;5;2m     4875:       573:       [buffer] is immediately processed and can be reused after the call[39m
     [38;5;2m11942[39m: [38;5;2m     4876:       574:       returns. *)[39m
     [38;5;2m11943[39m: [38;5;2m     4877:       575: [39m
     [38;5;2m11944[39m: [38;5;2m     4878:       576:   val next : t -> [ event | `Await | `End ][39m
     [38;5;2m11945[39m: [38;5;2m     4879:       577:   (** [next t] is the next event in the filter's input stream:[39m
     [38;5;2m11946[39m: [38;5;2m     4880:       578: [39m
     [38;5;2m11947[39m: [38;5;2m     4881:       579:       {ul[39m
     [38;5;2m11948[39m: [38;5;2m     4882:       580:       {- [#event], an input {{!event}[event]}.}[39m
     [38;5;2m11949[39m: [38;5;2m     4883:       581:       {- [`Await] if the filter needs more {{!input}input}.}[39m
     [38;5;2m11950[39m: [38;5;2m     4884:       582:       {- [`End] if the input had ended.}} *)[39m
     [38;5;2m11951[39m: [38;5;2m     4885:       583: [39m
     [38;5;2m11952[39m: [38;5;2m     4886:       584:   val pending : t -> bool[39m
     [38;5;2m11953[39m: [38;5;2m     4887:       585:   (** [pending t] is [true] if a call to [next], without any intervening input,[39m
     [38;5;2m11954[39m: [38;5;2m     4888:       586:       would {e not} return [`Await]. *)[39m
     [38;5;2m11955[39m: [38;5;2m     4889:       587: [39m
     [38;5;2m11956[39m: [38;5;2m     4890:       588:   (** {1 Low-level parsing}[39m
     [38;5;2m11957[39m: [38;5;2m     4891:       589: [39m
     [38;5;2m11958[39m: [38;5;2m     4892:       590:       {b Warning} The parsing interface is subject to change.[39m
     [38;5;2m11959[39m: [38;5;2m     4893:       591: [39m
     [38;5;2m11960[39m: [38;5;2m     4894:       592:       Implementation of small parts of[39m
     [38;5;2m11961[39m: [38;5;2m     4895:       593:       {{: http://www.ecma-international.org/publications/standards/Ecma-035.htm}ECMA-35}[39m
     [38;5;2m11962[39m: [38;5;2m     4896:       594:       and[39m
     [38;5;2m11963[39m: [38;5;2m     4897:       595:       {{: http://www.ecma-international.org/publications/standards/Ecma-048.htm}ECMA-48},[39m
     [38;5;2m11964[39m: [38;5;2m     4898:       596:       as needed by terminal emulators in common use. *)[39m
     [38;5;2m11965[39m: [38;5;2m     4899:       597: [39m
     [38;5;2m11966[39m: [38;5;2m     4900:       598:   val decode : Uchar.t list -> event list[39m
     [38;5;2m11967[39m: [38;5;2m     4901:       599:   (** [decode us] are the events encoded by [us].[39m
     [38;5;2m11968[39m: [38;5;2m     4902:       600: [39m
     [38;5;2m11969[39m: [38;5;2m     4903:       601:       [us] are assumed to have been generated in a burst, and the end of the[39m
     [38;5;2m11970[39m: [38;5;2m     4904:       602:       list is taken to mean a pause.[39m
     [38;5;2m11971[39m: [38;5;2m     4905:       603:       Therefore, [decode us1 @ decode us2 <> decode (us1 @ us2)] if [us1] ends[39m
     [38;5;2m11972[39m: [38;5;2m     4906:       604:       with a partial escape sequence, including a lone [\x1b].[39m
     [38;5;2m11973[39m: [38;5;2m     4907:       605: [39m
     [38;5;2m11974[39m: [38;5;2m     4908:       606:       Unsupported escape sequences are silently discarded. *)[39m
     [38;5;2m11975[39m: [38;5;2m     4909:       607: end[39m
     [38;5;2m11976[39m: [38;5;2m     4910:       608: [39m
     [38;5;2m11977[39m: [38;5;2m     4911:       609: (**/**)[39m
     [38;5;2m11978[39m: [38;5;2m     4912:       610: (** {1 Private}[39m
     [38;5;2m11979[39m: [38;5;2m     4913:       611: [39m
     [38;5;2m11980[39m: [38;5;2m     4914:       612:     These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m11981[39m: [38;5;2m     4915:       613: [39m
     [38;5;2m11982[39m: [38;5;2m     4916:       614: module Operation : sig[39m
     [38;5;2m11983[39m: [38;5;2m     4917:       615:   type t[39m
     [38;5;2m11984[39m: [38;5;2m     4918:       616:   val of_image : (int * int) -> int * int -> image -> t list[39m
     [38;5;2m11985[39m: [38;5;2m     4919:       617: end[39m
     [38;5;2m11986[39m: [38;5;2m     4920:       618: [39m
     [38;5;2m11987[39m: [38;5;2m     4921:       619: module Tmachine : sig[39m
     [38;5;2m11988[39m: [38;5;2m     4922:       620: [39m
     [38;5;2m11989[39m: [38;5;2m     4923:       621:   type t[39m
     [38;5;2m11990[39m: [38;5;2m     4924:       622: [39m
     [38;5;2m11991[39m: [38;5;2m     4925:       623:   val create  : mouse:bool -> bpaste:bool -> Cap.t -> t[39m
     [38;5;2m11992[39m: [38;5;2m     4926:       624:   val release : t -> bool[39m
     [38;5;2m11993[39m: [38;5;2m     4927:       625:   val output  : t -> Buffer.t -> unit[39m
     [38;5;2m11994[39m: [38;5;2m     4928:       626: [39m
     [38;5;2m11995[39m: [38;5;2m     4929:       627:   val refresh  : t -> unit[39m
     [38;5;2m11996[39m: [38;5;2m     4930:       628:   val cursor   : t -> (int * int) option -> unit[39m
     [38;5;2m11997[39m: [38;5;2m     4931:       629:   val image    : t -> image -> unit[39m
     [38;5;2m11998[39m: [38;5;2m     4932:       630: [39m
     [38;5;2m11999[39m: [38;5;2m     4933:       631:   val set_size : t -> int * int -> unit[39m
     [38;5;2m12000[39m: [38;5;2m     4934:       632: [39m
     [38;5;2m12001[39m: [38;5;2m     4935:       633:   val size : t -> int * int[39m
     [38;5;2m12002[39m: [38;5;2m     4936:       634:   val dead : t -> bool[39m
     [38;5;2m12003[39m: [38;5;2m     4937:       635: end[39m
     [38;5;2m12004[39m: [38;5;2m     4938:       636: [39m
     [38;5;2m12005[39m: [38;5;2m     4939:       637: module Direct : sig[39m
     [38;5;2m12006[39m: [38;5;2m     4940:       638:   val move_cursor : Buffer.t -> Cap.t -> [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m12007[39m: [38;5;2m     4941:       639:   val show_cursor : Buffer.t -> Cap.t -> bool -> unit[39m
     [38;5;2m12008[39m: [38;5;2m     4942:       640: end[39m
     [38;5;2m12009[39m: [38;5;2m     4943:       641: (**/**)[39m
     [38;5;2m12010[39m: [38;5;2m     4944:       642: [39m
     [38;5;2m12011[39m: [38;5;2m     4945:       643: (** {1:basics Basics}[39m
     [38;5;2m12012[39m: [38;5;2m     4946:       644: [39m
     [38;5;2m12013[39m: [38;5;2m     4947:       645:     Print a red-on-black ["Wow!"] above its right-shifted copy:[39m
     [38;5;2m12014[39m: [38;5;2m     4948:       646: {[[39m
     [38;5;2m12015[39m: [38;5;2m     4949:       647: let wow = I.string A.(fg red ++ bg black) "Wow!" in[39m
     [38;5;2m12016[39m: [38;5;2m     4950:       648: I.(wow <-> (void 2 0 <|> wow)) |> Notty_unix.output_image[39m
     [38;5;2m12017[39m: [38;5;2m     4951:       649: ]}[39m
     [38;5;2m12018[39m: [38;5;2m     4952:       650: [39m
     [38;5;2m12019[39m: [38;5;2m     4953:       651:     {2:meaning The meaning of images}[39m
     [38;5;2m12020[39m: [38;5;2m     4954:       652: [39m
     [38;5;2m12021[39m: [38;5;2m     4955:       653:     An {{!image}[image]} value is a rectangle of styled character cells. It has a[39m
     [38;5;2m12022[39m: [38;5;2m     4956:       654:     width and height, but is not anchored to an origin. A single character with[39m
     [38;5;2m12023[39m: [38;5;2m     4957:       655:     associated display attributes, or a short fragment of text, are simple[39m
     [38;5;2m12024[39m: [38;5;2m     4958:       656:     examples of images.[39m
     [38;5;2m12025[39m: [38;5;2m     4959:       657: [39m
     [38;5;2m12026[39m: [38;5;2m     4960:       658:     Images are created by combining text fragments with {{!attributes}display[39m
     [38;5;2m12027[39m: [38;5;2m     4961:       659:     attributes}, and composed by placing them {{!I.(<|>)}beside} each other,[39m
     [38;5;2m12028[39m: [38;5;2m     4962:       660:     {{!I.(<->)}above} each other, and {{!I.(</>)}over} each other.[39m
     [38;5;2m12029[39m: [38;5;2m     4963:       661: [39m
     [38;5;2m12030[39m: [38;5;2m     4964:       662:     Once constructed, an image can be rendered, and only at that point it obtains[39m
     [38;5;2m12031[39m: [38;5;2m     4965:       663:     absolute placement.[39m
     [38;5;2m12032[39m: [38;5;2m     4966:       664: [39m
     [38;5;2m12033[39m: [38;5;2m     4967:       665:     Consult {{!I}[I]} for more details.[39m
     [38;5;2m12034[39m: [38;5;2m     4968:       666: [39m
     [38;5;2m12035[39m: [38;5;2m     4969:       667:     {2:attributes Display attributes}[39m
     [38;5;2m12036[39m: [38;5;2m     4970:       668: [39m
     [38;5;2m12037[39m: [38;5;2m     4971:       669:     {{!attr}[attr]} values describe the styling characteristics of fragments of[39m
     [38;5;2m12038[39m: [38;5;2m     4972:       670:     text.[39m
     [38;5;2m12039[39m: [38;5;2m     4973:       671: [39m
     [38;5;2m12040[39m: [38;5;2m     4974:       672:     They combine a foreground and a background {{!A.color}[color]} with a[39m
     [38;5;2m12041[39m: [38;5;2m     4975:       673:     set of {{!A.style}[styles]}. Either color can be {e unset}, which corresponds to[39m
     [38;5;2m12042[39m: [38;5;2m     4976:       674:     the terminal's default foreground (resp. background) color.[39m
     [38;5;2m12043[39m: [38;5;2m     4977:       675: [39m
     [38;5;2m12044[39m: [38;5;2m     4978:       676:     Attributes are used to construct primitive images.[39m
     [38;5;2m12045[39m: [38;5;2m     4979:       677: [39m
     [38;5;2m12046[39m: [38;5;2m     4980:       678:     Consult {{!A}[A]} for more details.[39m
     [38;5;2m12047[39m: [38;5;2m     4981:       679: [39m
     [38;5;2m12048[39m: [38;5;2m     4982:       680:     {2:ctrls Control characters}[39m
     [38;5;2m12049[39m: [38;5;2m     4983:       681: [39m
     [38;5;2m12050[39m: [38;5;2m     4984:       682:     These are taken to be characters in the ranges [0x00-0x1f] ({b C0}), [0x7f][39m
     [38;5;2m12051[39m: [38;5;2m     4985:       683:     (BACKSPACE), [0x80-0x9f] ({b C1}). This is the[39m
     [38;5;2m12052[39m: [38;5;2m     4986:       684:     {{: http://unicode.org/reports/tr44/#General_Category_Values}Unicode[39m
     [38;5;2m12053[39m: [38;5;2m     4987:       685:     general category} {b Cc}.[39m
     [38;5;2m12054[39m: [38;5;2m     4988:       686: [39m
     [38;5;2m12055[39m: [38;5;2m     4989:       687:     As control characters directly influence the cursor positioning, they[39m
     [38;5;2m12056[39m: [38;5;2m     4990:       688:     cannot be used to create images.[39m
     [38;5;2m12057[39m: [38;5;2m     4991:       689: [39m
     [38;5;2m12058[39m: [38;5;2m     4992:       690:     This, in particular, means that images cannot contain [U+000a] (NEWLINE).[39m
     [38;5;2m12059[39m: [38;5;2m     4993:       691: [39m
     [38;5;2m12060[39m: [38;5;2m     4994:       692:     {1:limitations Limitations}[39m
     [38;5;2m12061[39m: [38;5;2m     4995:       693: [39m
     [38;5;2m12062[39m: [38;5;2m     4996:       694:     [Notty] does not use Terminfo. If your terminal is particularly[39m
     [38;5;2m12063[39m: [38;5;2m     4997:       695:     idiosyncratic, things might fail to work. Get in touch with the author to[39m
     [38;5;2m12064[39m: [38;5;2m     4998:       696:     expand support.[39m
     [38;5;2m12065[39m: [38;5;2m     4999:       697: [39m
     [38;5;2m12066[39m: [38;5;2m     5000:       698:     [Notty] assumes that the terminal is using UTF-8 for input and output.[39m
     [38;5;2m12067[39m: [38;5;2m     5001:       699:     Things might break arbitrarily if this is not the case.[39m
     [38;5;2m12068[39m: [38;5;2m     5002:       700: [39m
     [38;5;2m12069[39m: [38;5;2m     5003:       701:     For performance considerations, consult the {{!perf}performance model}.[39m
     [38;5;2m12070[39m: [38;5;2m     5004:       702: [39m
     [38;5;2m12071[39m: [38;5;2m     5005:       703:     {2:cwidth Unicode vs. Text geometry}[39m
     [38;5;2m12072[39m: [38;5;2m     5006:       704: [39m
     [38;5;2m12073[39m: [38;5;2m     5007:       705:     [Notty] uses [Uucp.Break.tty_width_hint] to guess the width of text[39m
     [38;5;2m12074[39m: [38;5;2m     5008:       706:     fragments when computing geometry, and it suffers from the same[39m
     [38;5;2m12075[39m: [38;5;2m     5009:       707:     shortcomings:[39m
     [38;5;2m12076[39m: [38;5;2m     5010:       708: [39m
     [38;5;2m12077[39m: [38;5;2m     5011:       709:     {ul[39m
     [38;5;2m12078[39m: [38;5;2m     5012:       710:     {- Geometry in general works for alphabets and east Asian scripts, mostly[39m
     [38;5;2m12079[39m: [38;5;2m     5013:       711:         works for abjad scripts, and is a matter of luck for abugidas.}[39m
     [38;5;2m12080[39m: [38;5;2m     5014:       712:     {- East Asian scripts work better when in[39m
     [38;5;2m12081[39m: [38;5;2m     5015:       713:         {{:http://unicode.org/glossary/#normalization_form_c}NFC}.}[39m
     [38;5;2m12082[39m: [38;5;2m     5016:       714:     {- For proper emoji display, [Uucp] and the terminal have to agree on the[39m
     [38;5;2m12083[39m: [38;5;2m     5017:       715:        Unicode version.}}[39m
     [38;5;2m12084[39m: [38;5;2m     5018:       716: [39m
     [38;5;2m12085[39m: [38;5;2m     5019:       717:     When in doubt, see[39m
     [38;5;2m12086[39m: [38;5;2m     5020:       718:     {{: http://erratique.ch/software/uucp/doc/Uucp.Break.html#VALtty_width_hint}[39m
     [38;5;2m12087[39m: [38;5;2m     5021:       719:     [Uucp.Break.tty_width_hint]}.[39m
     [38;5;2m12088[39m: [38;5;2m     5022:       720: [39m
     [38;5;2m12089[39m: [38;5;2m     5023:       721:     Unicode has special interaction with {{!I.hcrop}horizontal cropping}:[39m
     [38;5;2m12090[39m: [38;5;2m     5024:       722:     {ul[39m
     [38;5;2m12091[39m: [38;5;2m     5025:       723:     {- Strings within images are cropped at {{:[39m
     [38;5;2m12092[39m: [38;5;2m     5026:       724:         http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries}grapheme[39m
     [38;5;2m12093[39m: [38;5;2m     5027:       725:         cluster} boundaries. This means that scalar value sequences that are[39m
     [38;5;2m12094[39m: [38;5;2m     5028:       726:         rendered combined, or overlaid, stay unbroken.}[39m
     [38;5;2m12095[39m: [38;5;2m     5029:       727:     {- When a crop splits a wide character in two, the remaining half is[39m
     [38;5;2m12096[39m: [38;5;2m     5030:       728:         replaced by [U+0020] (SPACE). Hence, character-cell-accurate cropping is[39m
     [38;5;2m12097[39m: [38;5;2m     5031:       729:         possible even in the presence of characters that horizontally occupy[39m
     [38;5;2m12098[39m: [38;5;2m     5032:       730:         more than one cell.}}[39m
     [38;5;2m12099[39m: [38;5;2m     5033:       731: [39m
     [38;5;2m12100[39m: [38;5;2m     5034:       732:     {1:examples Examples}[39m
     [38;5;2m12101[39m: [38;5;2m     5035:       733: [39m
     [38;5;2m12102[39m: [38;5;2m     5036:       734:     We assume a toplevel with [Notty] support ([#require "notty.top"]).[39m
     [38;5;2m12103[39m: [38;5;2m     5037:       735: [39m
     [38;5;2m12104[39m: [38;5;2m     5038:       736:     {2 Hello}[39m
     [38;5;2m12105[39m: [38;5;2m     5039:       737: [39m
     [38;5;2m12106[39m: [38;5;2m     5040:       738:     ["Rad!"] with default foreground and background:[39m
     [38;5;2m12107[39m: [38;5;2m     5041:       739: [39m
     [38;5;2m12108[39m: [38;5;2m     5042:       740:     {[I.string A.empty "Rad!"]}[39m
     [38;5;2m12109[39m: [38;5;2m     5043:       741: [39m
     [38;5;2m12110[39m: [38;5;2m     5044:       742:     Everything has to start somewhere.[39m
     [38;5;2m12111[39m: [38;5;2m     5045:       743: [39m
     [38;5;2m12112[39m: [38;5;2m     5046:       744:     {2 Colors}[39m
     [38;5;2m12113[39m: [38;5;2m     5047:       745: [39m
     [38;5;2m12114[39m: [38;5;2m     5048:       746:     ["Rad!"] in rad letters:[39m
     [38;5;2m12115[39m: [38;5;2m     5049:       747: [39m
     [38;5;2m12116[39m: [38;5;2m     5050:       748:     {[I.string A.(fg lightred) "Rad!"]}[39m
     [38;5;2m12117[39m: [38;5;2m     5051:       749: [39m
     [38;5;2m12118[39m: [38;5;2m     5052:       750:     {2 Padding and spacing}[39m
     [38;5;2m12119[39m: [38;5;2m     5053:       751: [39m
     [38;5;2m12120[39m: [38;5;2m     5054:       752: {[[39m
     [38;5;2m12121[39m: [38;5;2m     5055:       753: let a1 = A.(fg lightwhite ++ bg red)[39m
     [38;5;2m12122[39m: [38;5;2m     5056:       754: and a2 = A.(fg red)[39m
     [38;5;2m12123[39m: [38;5;2m     5057:       755: ]}[39m
     [38;5;2m12124[39m: [38;5;2m     5058:       756: [39m
     [38;5;2m12125[39m: [38;5;2m     5059:       757:     ["Rad"] and [" stuff!"] in different colors:[39m
     [38;5;2m12126[39m: [38;5;2m     5060:       758: [39m
     [38;5;2m12127[39m: [38;5;2m     5061:       759:     {[I.(string a1 "Rad" <|> string a2 " stuff!")]}[39m
     [38;5;2m12128[39m: [38;5;2m     5062:       760: [39m
     [38;5;2m12129[39m: [38;5;2m     5063:       761:     The second word hanging on a line below:[39m
     [38;5;2m12130[39m: [38;5;2m     5064:       762: [39m
     [38;5;2m12131[39m: [38;5;2m     5065:       763:     {[I.(string a1 "Rad" <|> (string a2 "stuff!" |> vpad 1 0))]}[39m
     [38;5;2m12132[39m: [38;5;2m     5066:       764: [39m
     [38;5;2m12133[39m: [38;5;2m     5067:       765:     {2 More geometry}[39m
     [38;5;2m12134[39m: [38;5;2m     5068:       766: [39m
     [38;5;2m12135[39m: [38;5;2m     5069:       767:     Sierpinski triangle:[39m
     [38;5;2m12136[39m: [38;5;2m     5070:       768: [39m
     [38;5;2m12137[39m: [38;5;2m     5071:       769: {[[39m
     [38;5;2m12138[39m: [38;5;2m     5072:       770: let square = "\xe2\x96\xaa"[39m
     [38;5;2m12139[39m: [38;5;2m     5073:       771: [39m
     [38;5;2m12140[39m: [38;5;2m     5074:       772: let rec sierp n =[39m
     [38;5;2m12141[39m: [38;5;2m     5075:       773:   if n > 1 then[39m
     [38;5;2m12142[39m: [38;5;2m     5076:       774:     let ss = sierp (pred n) in I.(ss <-> (ss <|> ss))[39m
     [38;5;2m12143[39m: [38;5;2m     5077:       775:   else I.(string A.(fg magenta) square |> hpad 1 0)[39m
     [38;5;2m12144[39m: [38;5;2m     5078:       776: ]}[39m
     [38;5;2m12145[39m: [38;5;2m     5079:       777: [39m
     [38;5;2m12146[39m: [38;5;2m     5080:       778:     {[sierp 8]}[39m
     [38;5;2m12147[39m: [38;5;2m     5081:       779: [39m
     [38;5;2m12148[39m: [38;5;2m     5082:       780:     A triangle overlaid over its shifted copy:[39m
     [38;5;2m12149[39m: [38;5;2m     5083:       781: [39m
     [38;5;2m12150[39m: [38;5;2m     5084:       782:     {[let s = sierp 6 in I.(s </> vpad 1 0 s)]}[39m
     [38;5;2m12151[39m: [38;5;2m     5085:       783: [39m
     [38;5;2m12152[39m: [38;5;2m     5086:       784:     Blinkenlights:[39m
     [38;5;2m12153[39m: [38;5;2m     5087:       785: [39m
     [38;5;2m12154[39m: [38;5;2m     5088:       786: {[[39m
     [38;5;2m12155[39m: [38;5;2m     5089:       787: let rad n color =[39m
     [38;5;2m12156[39m: [38;5;2m     5090:       788:   let a1 = A.fg color in[39m
     [38;5;2m12157[39m: [38;5;2m     5091:       789:   let a2 = A.(st blink ++ a1) in[39m
     [38;5;2m12158[39m: [38;5;2m     5092:       790:   I.((string a2 "Rad" |> hpad n 0) <->[39m
     [38;5;2m12159[39m: [38;5;2m     5093:       791:      (string a1 "(⌐■_■)" |> hpad (n + 7) 0))[39m
     [38;5;2m12160[39m: [38;5;2m     5094:       792: [39m
     [38;5;2m12161[39m: [38;5;2m     5095:       793: let colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m12162[39m: [38;5;2m     5096:       794: ]}[39m
     [38;5;2m12163[39m: [38;5;2m     5097:       795: [39m
     [38;5;2m12164[39m: [38;5;2m     5098:       796: {[[39m
     [38;5;2m12165[39m: [38;5;2m     5099:       797: colors |> List.mapi I.(fun i c -> rad i c |> pad ~t:i ~l:(2 * i))[39m
     [38;5;2m12166[39m: [38;5;2m     5100:       798:        |> I.zcat[39m
     [38;5;2m12167[39m: [38;5;2m     5101:       799: ]}[39m
     [38;5;2m12168[39m: [38;5;2m     5102:       800: [39m
     [38;5;2m12169[39m: [38;5;2m     5103:       801:     {b Note} Usage of {{!A.blink}[blink]} might be regulated by law in some[39m
     [38;5;2m12170[39m: [38;5;2m     5104:       802:     jurisdictions.[39m
     [38;5;2m12171[39m: [38;5;2m     5105:       803: [39m
     [38;5;2m12172[39m: [38;5;2m     5106:       804:     {2 Pretty-printing}[39m
     [38;5;2m12173[39m: [38;5;2m     5107:       805: [39m
     [38;5;2m12174[39m: [38;5;2m     5108:       806:     Images can be pretty-printed into:[39m
     [38;5;2m12175[39m: [38;5;2m     5109:       807: [39m
     [38;5;2m12176[39m: [38;5;2m     5110:       808:     {[I.strf "(%d)" 42]}[39m
     [38;5;2m12177[39m: [38;5;2m     5111:       809: [39m
     [38;5;2m12178[39m: [38;5;2m     5112:       810:     Attributes can be applied to the entire format string, or by decorating[39m
     [38;5;2m12179[39m: [38;5;2m     5113:       811:     {e user-defined printers} that are supplied with [%a] conversions:[39m
     [38;5;2m12180[39m: [38;5;2m     5114:       812: [39m
     [38;5;2m12181[39m: [38;5;2m     5115:       813:     {[let pp = Format.pp_print_int]}[39m
     [38;5;2m12182[39m: [38;5;2m     5116:       814: [39m
     [38;5;2m12183[39m: [38;5;2m     5117:       815:     {[I.strf ~attr:A.(fg lightwhite) "(%a)" (I.pp_attr A.(fg green) pp) 42]}[39m
     [38;5;2m12184[39m: [38;5;2m     5118:       816: [39m
     [38;5;2m12185[39m: [38;5;2m     5119:       817:     {2 Now with output}[39m
     [38;5;2m12186[39m: [38;5;2m     5120:       818: [39m
     [38;5;2m12187[39m: [38;5;2m     5121:       819:     The core module has no real IO. Examples above are simple [image]-valued[39m
     [38;5;2m12188[39m: [38;5;2m     5122:       820:     expressions, displayed by the pretty-printer that is installed by the[39m
     [38;5;2m12189[39m: [38;5;2m     5123:       821:     toplevel support. Self-contained programs need a separate IO module:[39m
     [38;5;2m12190[39m: [38;5;2m     5124:       822: [39m
     [38;5;2m12191[39m: [38;5;2m     5125:       823:     {[#require "notty.unix"]}[39m
     [38;5;2m12192[39m: [38;5;2m     5126:       824: [39m
     [38;5;2m12193[39m: [38;5;2m     5127:       825:     {[sierp 8 |> Notty_unix.output_image]}[39m
     [38;5;2m12194[39m: [38;5;2m     5128:       826: [39m
     [38;5;2m12195[39m: [38;5;2m     5129:       827:     (Note the difference in cropping behavior.)[39m
     [38;5;2m12196[39m: [38;5;2m     5130:       828: [39m
     [38;5;2m12197[39m: [38;5;2m     5131:       829:     Computations can be adapted to the current terminal size. A line can stretch[39m
     [38;5;2m12198[39m: [38;5;2m     5132:       830:     end-to-end:[39m
     [38;5;2m12199[39m: [38;5;2m     5133:       831: [39m
     [38;5;2m12200[39m: [38;5;2m     5134:       832: {[[39m
     [38;5;2m12201[39m: [38;5;2m     5135:       833: Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m12202[39m: [38;5;2m     5136:       834:   let i1 = I.string A.(fg green) "very"[39m
     [38;5;2m12203[39m: [38;5;2m     5137:       835:   and i2 = I.string A.(fg yellow) "melon" in[39m
     [38;5;2m12204[39m: [38;5;2m     5138:       836:   I.(i1 <|> void (w - width i1 - width i2) 1 <|> i2)[39m
     [38;5;2m12205[39m: [38;5;2m     5139:       837: ]}[39m
     [38;5;2m12206[39m: [38;5;2m     5140:       838: [39m
     [38;5;2m12207[39m: [38;5;2m     5141:       839:     The largest triangle that horizontally fits into the terminal:[39m
     [38;5;2m12208[39m: [38;5;2m     5142:       840: [39m
     [38;5;2m12209[39m: [38;5;2m     5143:       841: {[[39m
     [38;5;2m12210[39m: [38;5;2m     5144:       842: Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m12211[39m: [38;5;2m     5145:       843:   let steps = int_of_float ((log (float w)) /. log 2.) in[39m
     [38;5;2m12212[39m: [38;5;2m     5146:       844:   sierp steps |> I.vpad 0 1[39m
     [38;5;2m12213[39m: [38;5;2m     5147:       845: ]}[39m
     [38;5;2m12214[39m: [38;5;2m     5148:       846: [39m
     [38;5;2m12215[39m: [38;5;2m     5149:       847:     {2 Simple interaction}[39m
     [38;5;2m12216[39m: [38;5;2m     5150:       848: [39m
     [38;5;2m12217[39m: [38;5;2m     5151:       849:     Interactive Sierpinski:[39m
     [38;5;2m12218[39m: [38;5;2m     5152:       850: [39m
     [38;5;2m12219[39m: [38;5;2m     5153:       851:     {[open Notty_unix]}[39m
     [38;5;2m12220[39m: [38;5;2m     5154:       852: [39m
     [38;5;2m12221[39m: [38;5;2m     5155:       853: {[[39m
     [38;5;2m12222[39m: [38;5;2m     5156:       854: let img (double, n) =[39m
     [38;5;2m12223[39m: [38;5;2m     5157:       855:   let s = sierp n in[39m
     [38;5;2m12224[39m: [38;5;2m     5158:       856:   if double then I.(s </> vpad 1 0 s) else s[39m
     [38;5;2m12225[39m: [38;5;2m     5159:       857: in[39m
     [38;5;2m12226[39m: [38;5;2m     5160:       858: let rec update t state = Term.image t (img state); loop t state[39m
     [38;5;2m12227[39m: [38;5;2m     5161:       859: and loop t (double, n as state) =[39m
     [38;5;2m12228[39m: [38;5;2m     5162:       860:   match Term.event t with[39m
     [38;5;2m12229[39m: [38;5;2m     5163:       861:   | `Key (`Enter,_)        -> ()[39m
     [38;5;2m12230[39m: [38;5;2m     5164:       862:   | `Key (`Arrow `Left,_)  -> update t (double, max 1 (n - 1))[39m
     [38;5;2m12231[39m: [38;5;2m     5165:       863:   | `Key (`Arrow `Right,_) -> update t (double, min 8 (n + 1))[39m
     [38;5;2m12232[39m: [38;5;2m     5166:       864:   | `Key (`ASCII ' ', _)   -> update t (not double, n)[39m
     [38;5;2m12233[39m: [38;5;2m     5167:       865:   | `Resize _              -> update t state[39m
     [38;5;2m12234[39m: [38;5;2m     5168:       866:   | _                      -> loop t state[39m
     [38;5;2m12235[39m: [38;5;2m     5169:       867: in[39m
     [38;5;2m12236[39m: [38;5;2m     5170:       868: let t = Term.create ()[39m
     [38;5;2m12237[39m: [38;5;2m     5171:       869: in[39m
     [38;5;2m12238[39m: [38;5;2m     5172:       870: update t (false, 1); Term.release t[39m
     [38;5;2m12239[39m: [38;5;2m     5173:       871: ]}[39m
     [38;5;2m12240[39m: [38;5;2m     5174:       872: [39m
     [38;5;2m12241[39m: [38;5;2m     5175:       873:     The program uses a fullscreen {{!Notty_unix.Term}terminal} and loops reading[39m
     [38;5;2m12242[39m: [38;5;2m     5176:       874:     the {{!Notty_unix.Term.event}input}. LEFT and RIGHT control the iteration[39m
     [38;5;2m12243[39m: [38;5;2m     5177:       875:     count, and SPACE toggles double-drawing. Resizing the window causes a[39m
     [38;5;2m12244[39m: [38;5;2m     5178:       876:     redraw. When the loop exits on ENTER, the terminal is[39m
     [38;5;2m12245[39m: [38;5;2m     5179:       877:     {{!Notty_unix.Term.release}cleaned up}.[39m
     [38;5;2m12246[39m: [38;5;2m     5180:       878: [39m
     [38;5;2m12247[39m: [38;5;2m     5181:       879:     {1:perf Performance model}[39m
     [38;5;2m12248[39m: [38;5;2m     5182:       880: [39m
     [38;5;2m12249[39m: [38;5;2m     5183:       881:     This section is only relevant if using [Notty] becomes your bottleneck.[39m
     [38;5;2m12250[39m: [38;5;2m     5184:       882: [39m
     [38;5;2m12251[39m: [38;5;2m     5185:       883:     {b TL;DR} Shared sub-expressions do not share work, so operators stick with[39m
     [38;5;2m12252[39m: [38;5;2m     5186:       884:     you.[39m
     [38;5;2m12253[39m: [38;5;2m     5187:       885: [39m
     [38;5;2m12254[39m: [38;5;2m     5188:       886:     The main performance parameter is {e image complexity}. This roughly[39m
     [38;5;2m12255[39m: [38;5;2m     5189:       887:     corresponds to the number of image {{!I.imgcomp}composition} and[39m
     [38;5;2m12256[39m: [38;5;2m     5190:       888:     {{!I.imgcrop}cropping} operators in the fully expanded [image] term,[39m
     [38;5;2m12257[39m: [38;5;2m     5191:       889:     {b ignoring all sharing}.[39m
     [38;5;2m12258[39m: [38;5;2m     5192:       890: [39m
     [38;5;2m12259[39m: [38;5;2m     5193:       891:     Outline numbers:[39m
     [38;5;2m12260[39m: [38;5;2m     5194:       892: [39m
     [38;5;2m12261[39m: [38;5;2m     5195:       893:     {ul[39m
     [38;5;2m12262[39m: [38;5;2m     5196:       894:     {- Highly complex images can be rendered and pushed out to a full-screen[39m
     [38;5;2m12263[39m: [38;5;2m     5197:       895:        terminal more than 1000 times per second.}[39m
     [38;5;2m12264[39m: [38;5;2m     5198:       896:     {- With more realistic images, this number is closer to 30,000.}[39m
     [38;5;2m12265[39m: [38;5;2m     5199:       897:     {- Input processing is somewhere around 50MB/s.}}[39m
     [38;5;2m12266[39m: [38;5;2m     5200:       898: [39m
     [38;5;2m12267[39m: [38;5;2m     5201:       899: [39m
     [38;5;2m12268[39m: [38;5;2m     5202:       900:     Image complexity [cplx] of an image [i] is:[39m
     [38;5;2m12269[39m: [38;5;2m     5203:       901:     {ul[39m
     [38;5;2m12270[39m: [38;5;2m     5204:       902:     {- For a {{!I.imgprims}primitive} [i], [cplx i = 1].}[39m
     [38;5;2m12271[39m: [38;5;2m     5205:       903:     {- For a {{!I.imgcomp}composition} operator [op],[39m
     [38;5;2m12272[39m: [38;5;2m     5206:       904:        [cplx (op i1 i2) = 1 + cplx i1 + cplx i2].}[39m
     [38;5;2m12273[39m: [38;5;2m     5207:       905:     {- For a {{!I.imgcomp}crop} [cr],[39m
     [38;5;2m12274[39m: [38;5;2m     5208:       906:        [cplx (cr i1) = 1 + cplx i1 - k], where [k] is the combined complexity of[39m
     [38;5;2m12275[39m: [38;5;2m     5209:       907:        all the {e maximal} sub-terms that do not contribute to the output.}}[39m
     [38;5;2m12276[39m: [38;5;2m     5210:       908: [39m
     [38;5;2m12277[39m: [38;5;2m     5211:       909:     For example (assuming an image [i]):[39m
     [38;5;2m12278[39m: [38;5;2m     5212:       910: [39m
     [38;5;2m12279[39m: [38;5;2m     5213:       911: {[[39m
     [38;5;2m12280[39m: [38;5;2m     5214:       912:   let img1 = I.((i <|> i) <-> (i <|> i))[39m
     [38;5;2m12281[39m: [38;5;2m     5215:       913:   let img2 = I.(let x = i <|> i in x <-> x)[39m
     [38;5;2m12282[39m: [38;5;2m     5216:       914:   let img3 = I.(((i <|> i) <|> i) <|> i)[39m
     [38;5;2m12283[39m: [38;5;2m     5217:       915: ]}[39m
     [38;5;2m12284[39m: [38;5;2m     5218:       916: [39m
     [38;5;2m12285[39m: [38;5;2m     5219:       917:     Complexity of each of these is [4 * cplx i + 3]. This might be surprising[39m
     [38;5;2m12286[39m: [38;5;2m     5220:       918:     for [img2].[39m
     [38;5;2m12287[39m: [38;5;2m     5221:       919: [39m
     [38;5;2m12288[39m: [38;5;2m     5222:       920:     If [width i = 1], [cplx (hcrop 1 0 img1) = 3 + 2 * cplx i], and[39m
     [38;5;2m12289[39m: [38;5;2m     5223:       921:     [cplx (hcrop 2 0 img3) = 2 + 2 * cplx i].[39m
     [38;5;2m12290[39m: [38;5;2m     5224:       922: [39m
     [38;5;2m12291[39m: [38;5;2m     5225:       923:     While [Notty] strives to be accommodating to all usage scenarios, these are[39m
     [38;5;2m12292[39m: [38;5;2m     5226:       924:     the things to keep in mind if the rendering becomes slow:[39m
     [38;5;2m12293[39m: [38;5;2m     5227:       925: [39m
     [38;5;2m12294[39m: [38;5;2m     5228:       926:     {ol[39m
     [38;5;2m12295[39m: [38;5;2m     5229:       927:     {- Image composition is cheap.[39m
     [38;5;2m12296[39m: [38;5;2m     5230:       928: [39m
     [38;5;2m12297[39m: [38;5;2m     5231:       929:        Combining images performs a negligible amount of computation.[39m
     [38;5;2m12298[39m: [38;5;2m     5232:       930: [39m
     [38;5;2m12299[39m: [38;5;2m     5233:       931:        Constructing primitive images that contain scalar values outside of the[39m
     [38;5;2m12300[39m: [38;5;2m     5234:       932:        ASCII range does a little more work upfront and is worth holding onto.[39m
     [38;5;2m12301[39m: [38;5;2m     5235:       933: [39m
     [38;5;2m12302[39m: [38;5;2m     5236:       934:        }[39m
     [38;5;2m12303[39m: [38;5;2m     5237:       935:     {- {{!Render}Rendering} depends on image complexity.[39m
     [38;5;2m12304[39m: [38;5;2m     5238:       936: [39m
     [38;5;2m12305[39m: [38;5;2m     5239:       937:        As a consequence, this real-world example of wrapping renders in time[39m
     [38;5;2m12306[39m: [38;5;2m     5240:       938:        O(n{^ 2}) in the number of lines:[39m
     [38;5;2m12307[39m: [38;5;2m     5241:       939: [39m
     [38;5;2m12308[39m: [38;5;2m     5242:       940: {[[39m
     [38;5;2m12309[39m: [38;5;2m     5243:       941: let wrap1 width img =[39m
     [38;5;2m12310[39m: [38;5;2m     5244:       942:   let rec go img = img ::[39m
     [38;5;2m12311[39m: [38;5;2m     5245:       943:     if I.width img > width then go (I.hcrop width 0 img) else [][39m
     [38;5;2m12312[39m: [38;5;2m     5246:       944:   in go img |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m12313[39m: [38;5;2m     5247:       945: ]}[39m
     [38;5;2m12314[39m: [38;5;2m     5248:       946: [39m
     [38;5;2m12315[39m: [38;5;2m     5249:       947:        Although [crop] is applied only [lines] times, the image complexity of[39m
     [38;5;2m12316[39m: [38;5;2m     5250:       948:        each line depends on the number of preceding lines.[39m
     [38;5;2m12317[39m: [38;5;2m     5251:       949: [39m
     [38;5;2m12318[39m: [38;5;2m     5252:       950:        An O(n) version does not iterate [crop]:[39m
     [38;5;2m12319[39m: [38;5;2m     5253:       951: [39m
     [38;5;2m12320[39m: [38;5;2m     5254:       952: {[[39m
     [38;5;2m12321[39m: [38;5;2m     5255:       953: let wrap2 width img =[39m
     [38;5;2m12322[39m: [38;5;2m     5256:       954:   let rec go off = I.hcrop off 0 img ::[39m
     [38;5;2m12323[39m: [38;5;2m     5257:       955:     if I.width img - off > width then go (off + width) else [][39m
     [38;5;2m12324[39m: [38;5;2m     5258:       956:   in go 0 |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m12325[39m: [38;5;2m     5259:       957: ]}[39m
     [38;5;2m12326[39m: [38;5;2m     5260:       958:        }[39m
     [38;5;2m12327[39m: [38;5;2m     5261:       959:     {- Rendering depends on the {e output} dimensions, but not on the {e image}[39m
     [38;5;2m12328[39m: [38;5;2m     5262:       960:        dimensions.[39m
     [38;5;2m12329[39m: [38;5;2m     5263:       961: [39m
     [38;5;2m12330[39m: [38;5;2m     5264:       962:        Rendering an image to [w * h] implicitly crops it to its leftmost [w][39m
     [38;5;2m12331[39m: [38;5;2m     5265:       963:        columns and topmost [h] rows. While [w] and [h] will have an impact on[39m
     [38;5;2m12332[39m: [38;5;2m     5266:       964:        the rendering performance, the complexity of the (cropped) image tends to[39m
     [38;5;2m12333[39m: [38;5;2m     5267:       965:        be more important.}}[39m
     [38;5;2m12334[39m: [38;5;2m     5268:       966: [39m
     [38;5;2m12335[39m: [38;5;2m     5269:       967: *)[39m
     [38;5;2m12336[39m: [38;5;2m     5270: Added regular file ../notty/src/notty_top.ml:[39m
     [38;5;2m12337[39m: [38;5;2m     5271:         1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m12338[39m: [38;5;2m     5272:         2:    See LICENSE.md. *)[39m
     [38;5;2m12339[39m: [38;5;2m     5273:         3: [39m
     [38;5;2m12340[39m: [38;5;2m     5274:         4: (* Force linking with Notty for e.g. Omod. *)[39m
     [38;5;2m12341[39m: [38;5;2m     5275:         5: let _ = Sys.opaque_identity Notty.I.empty[39m
     [38;5;2m12342[39m: [38;5;2m     5276:         6: [39m
     [38;5;2m12343[39m: [38;5;2m     5277:         7: #if OCAML_VERSION >= (4,14,0)[39m
     [38;5;2m12344[39m: [38;5;2m     5278:         8: let _ = Toploop.use_silently Format.err_formatter (Toploop.File "notty_top_init.ml")[39m
     [38;5;2m12345[39m: [38;5;2m     5279:         9: #else[39m
     [38;5;2m12346[39m: [38;5;2m     5280:        10: let _ = Toploop.use_silently Format.err_formatter "notty_top_init.ml"[39m
     [38;5;2m12347[39m: [38;5;2m     5281:        11: #endif[39m
     [38;5;2m12348[39m: [38;5;2m     5282: Added regular file ../notty/src/notty_top_init.ml:[39m
     [38;5;2m12349[39m: [38;5;2m     5283:         1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m12350[39m: [38;5;2m     5284:         2:    See LICENSE.md. *)[39m
     [38;5;2m12351[39m: [38;5;2m     5285:         3: [39m
     [38;5;2m12352[39m: [38;5;2m     5286:         4: open Notty;;[39m
     [38;5;2m12353[39m: [38;5;2m     5287:         5: [39m
     [38;5;2m12354[39m: [38;5;2m     5288:         6: #install_printer Notty.Render.pp_image;;[39m
     [38;5;2m12355[39m: [38;5;2m     5289:         7: #install_printer Notty.Render.pp_attr;;[39m
     [38;5;2m12356[39m: [38;5;2m     5290: Added regular file ../notty/src-lwt/dune:[39m
     [38;5;2m12357[39m: [38;5;2m     5291:         1: (library[39m
     [38;5;2m12358[39m: [38;5;2m     5292:         2:   (public_name notty.lwt)[39m
     [38;5;2m12359[39m: [38;5;2m     5293:         3:   (synopsis "Notty Lwt+Unix IO")[39m
     [38;5;2m12360[39m: [38;5;2m     5294:         4:   (name notty_lwt)[39m
     [38;5;2m12361[39m: [38;5;2m     5295:         5:   (wrapped false)[39m
     [38;5;2m12362[39m: [38;5;2m     5296:         6:   (optional)[39m
     [38;5;2m12363[39m: [38;5;2m     5297:         7:   (libraries notty notty.unix lwt lwt.unix))[39m
     [38;5;2m12364[39m: [38;5;2m     5298: Added regular file ../notty/src-lwt/notty_lwt.ml:[39m
     [38;5;2m12365[39m: [38;5;2m     5299:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m12366[39m: [38;5;2m     5300:         2:    See LICENSE.md. *)[39m
     [38;5;2m12367[39m: [38;5;2m     5301:         3: [39m
     [38;5;2m12368[39m: [38;5;2m     5302:         4: open Lwt.Infix[39m
     [38;5;2m12369[39m: [38;5;2m     5303:         5: [39m
     [38;5;2m12370[39m: [38;5;2m     5304:         6: open Notty[39m
     [38;5;2m12371[39m: [38;5;2m     5305:         7: open Notty_unix[39m
     [38;5;2m12372[39m: [38;5;2m     5306:         8: open Private[39m
     [38;5;2m12373[39m: [38;5;2m     5307:         9: [39m
     [38;5;2m12374[39m: [38;5;2m     5308:        10: [39m
     [38;5;2m12375[39m: [38;5;2m     5309:        11: type ('a, 'b) either = Left of 'a | Right of 'b[39m
     [38;5;2m12376[39m: [38;5;2m     5310:        12: let left  x = Left x[39m
     [38;5;2m12377[39m: [38;5;2m     5311:        13: let right y = Right y[39m
     [38;5;2m12378[39m: [38;5;2m     5312:        14: [39m
     [38;5;2m12379[39m: [38;5;2m     5313:        15: let (</>) a b = Lwt.pick [(a >|= left); (b >|= right)][39m
     [38;5;2m12380[39m: [38;5;2m     5314:        16: let (<??>) a b = (a >|= left) <?> (b >|= right)[39m
     [38;5;2m12381[39m: [38;5;2m     5315:        17: [39m
     [38;5;2m12382[39m: [38;5;2m     5316:        18: let whenopt f = function Some x -> f x | None -> ()[39m
     [38;5;2m12383[39m: [38;5;2m     5317:        19: [39m
     [38;5;2m12384[39m: [38;5;2m     5318:        20: let rec write fd buf off = function[39m
     [38;5;2m12385[39m: [38;5;2m     5319:        21:   | 0 -> Lwt.return_unit[39m
     [38;5;2m12386[39m: [38;5;2m     5320:        22:   | n -> Lwt_unix.write fd buf off n >>= fun w -> write fd buf (off + w) (n - w)[39m
     [38;5;2m12387[39m: [38;5;2m     5321:        23: [39m
     [38;5;2m12388[39m: [38;5;2m     5322:        24: module Lwt_condition = struct[39m
     [38;5;2m12389[39m: [38;5;2m     5323:        25: [39m
     [38;5;2m12390[39m: [38;5;2m     5324:        26:   include Lwt_condition[39m
     [38;5;2m12391[39m: [38;5;2m     5325:        27: [39m
     [38;5;2m12392[39m: [38;5;2m     5326:        28:   let map f c =[39m
     [38;5;2m12393[39m: [38;5;2m     5327:        29:     let d = create () in[39m
     [38;5;2m12394[39m: [38;5;2m     5328:        30:     let rec go () = wait c >>= fun x -> broadcast d (f x); go ()[39m
     [38;5;2m12395[39m: [38;5;2m     5329:        31:     in (Lwt.async go; d)[39m
     [38;5;2m12396[39m: [38;5;2m     5330:        32: [39m
     [38;5;2m12397[39m: [38;5;2m     5331:        33:   let unburst ~t c =[39m
     [38;5;2m12398[39m: [38;5;2m     5332:        34:     let d = create () in[39m
     [38;5;2m12399[39m: [38;5;2m     5333:        35:     let rec delay x = Lwt_unix.sleep t </> wait c >>= function[39m
     [38;5;2m12400[39m: [38;5;2m     5334:        36:       | Left () -> broadcast d x; start ()[39m
     [38;5;2m12401[39m: [38;5;2m     5335:        37:       | Right x -> delay x[39m
     [38;5;2m12402[39m: [38;5;2m     5336:        38:     and start () = wait c >>= delay in[39m
     [38;5;2m12403[39m: [38;5;2m     5337:        39:     Lwt.async start; d[39m
     [38;5;2m12404[39m: [38;5;2m     5338:        40: end[39m
     [38;5;2m12405[39m: [38;5;2m     5339:        41: [39m
     [38;5;2m12406[39m: [38;5;2m     5340:        42: module Term = struct[39m
     [38;5;2m12407[39m: [38;5;2m     5341:        43: [39m
     [38;5;2m12408[39m: [38;5;2m     5342:        44:   let winches = lazy ([39m
     [38;5;2m12409[39m: [38;5;2m     5343:        45:     let c = Lwt_condition.create () in[39m
     [38;5;2m12410[39m: [38;5;2m     5344:        46:     let `Revert _ = set_winch_handler (Lwt_condition.broadcast c) in[39m
     [38;5;2m12411[39m: [38;5;2m     5345:        47:     c[39m
     [38;5;2m12412[39m: [38;5;2m     5346:        48:   )[39m
     [38;5;2m12413[39m: [38;5;2m     5347:        49: [39m
     [38;5;2m12414[39m: [38;5;2m     5348:        50:   let winch () = Lazy.force winches |> Lwt_condition.wait[39m
     [38;5;2m12415[39m: [38;5;2m     5349:        51: [39m
     [38;5;2m12416[39m: [38;5;2m     5350:        52:   let bsize = 1024[39m
     [38;5;2m12417[39m: [38;5;2m     5351:        53: [39m
     [38;5;2m12418[39m: [38;5;2m     5352:        54:   let input_stream ~nosig fd stop =[39m
     [38;5;2m12419[39m: [38;5;2m     5353:        55:     let `Revert f = setup_tcattr ~nosig (Lwt_unix.unix_file_descr fd) in[39m
     [38;5;2m12420[39m: [38;5;2m     5354:        56:     let stream =[39m
     [38;5;2m12421[39m: [38;5;2m     5355:        57:       let flt  = Unescape.create ()[39m
     [38;5;2m12422[39m: [38;5;2m     5356:        58:       and ibuf = Bytes.create bsize in[39m
     [38;5;2m12423[39m: [38;5;2m     5357:        59:       let rec next () =[39m
     [38;5;2m12424[39m: [38;5;2m     5358:        60:         match Unescape.next flt with[39m
     [38;5;2m12425[39m: [38;5;2m     5359:        61:         | #Unescape.event as r -> Lwt.return_some r[39m
     [38;5;2m12426[39m: [38;5;2m     5360:        62:         | `End   -> Lwt.return_none[39m
     [38;5;2m12427[39m: [38;5;2m     5361:        63:         | `Await ->[39m
     [38;5;2m12428[39m: [38;5;2m     5362:        64:             (Lwt_unix.read fd ibuf 0 bsize <??> stop) >>= function[39m
     [38;5;2m12429[39m: [38;5;2m     5363:        65:               | Left n  -> Unescape.input flt ibuf 0 n; next ()[39m
     [38;5;2m12430[39m: [38;5;2m     5364:        66:               | Right _ -> Lwt.return_none[39m
     [38;5;2m12431[39m: [38;5;2m     5365:        67:       in Lwt_stream.from next in[39m
     [38;5;2m12432[39m: [38;5;2m     5366:        68:     Lwt.async (fun () -> Lwt_stream.closed stream >|= f);[39m
     [38;5;2m12433[39m: [38;5;2m     5367:        69:     stream[39m
     [38;5;2m12434[39m: [38;5;2m     5368:        70: [39m
     [38;5;2m12435[39m: [38;5;2m     5369:        71:   type t = {[39m
     [38;5;2m12436[39m: [38;5;2m     5370:        72:     ochan  : Lwt_io.output_channel[39m
     [38;5;2m12437[39m: [38;5;2m     5371:        73:   ; trm    : Tmachine.t[39m
     [38;5;2m12438[39m: [38;5;2m     5372:        74:   ; buf    : Buffer.t[39m
     [38;5;2m12439[39m: [38;5;2m     5373:        75:   ; fds    : Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m12440[39m: [38;5;2m     5374:        76:   ; events : [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m12441[39m: [38;5;2m     5375:        77:   ; stop   : (unit -> unit)[39m
     [38;5;2m12442[39m: [38;5;2m     5376:        78:   }[39m
     [38;5;2m12443[39m: [38;5;2m     5377:        79: [39m
     [38;5;2m12444[39m: [38;5;2m     5378:        80:   let write t =[39m
     [38;5;2m12445[39m: [38;5;2m     5379:        81:     Tmachine.output t.trm t.buf;[39m
     [38;5;2m12446[39m: [38;5;2m     5380:        82:     let out = Buffer.contents t.buf in (* XXX There goes 0copy. :/ *)[39m
     [38;5;2m12447[39m: [38;5;2m     5381:        83:     Buffer.clear t.buf; Lwt_io.write t.ochan out[39m
     [38;5;2m12448[39m: [38;5;2m     5382:        84: [39m
     [38;5;2m12449[39m: [38;5;2m     5383:        85:   let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m12450[39m: [38;5;2m     5384:        86:   let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m12451[39m: [38;5;2m     5385:        87:   let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m12452[39m: [38;5;2m     5386:        88:   let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m12453[39m: [38;5;2m     5387:        89:   let size t         = Tmachine.size t.trm[39m
     [38;5;2m12454[39m: [38;5;2m     5388:        90: [39m
     [38;5;2m12455[39m: [38;5;2m     5389:        91:   let release t =[39m
     [38;5;2m12456[39m: [38;5;2m     5390:        92:     if Tmachine.release t.trm then[39m
     [38;5;2m12457[39m: [38;5;2m     5391:        93:       ( t.stop (); write t >>= fun () -> Lwt_io.flush t.ochan )[39m
     [38;5;2m12458[39m: [38;5;2m     5392:        94:     else Lwt.return_unit[39m
     [38;5;2m12459[39m: [38;5;2m     5393:        95: [39m
     [38;5;2m12460[39m: [38;5;2m     5394:        96:   let resizef fd stop on_resize =[39m
     [38;5;2m12461[39m: [38;5;2m     5395:        97:     if Unix.isatty fd then[39m
     [38;5;2m12462[39m: [38;5;2m     5396:        98:       let rcond = Lwt_condition.([39m
     [38;5;2m12463[39m: [38;5;2m     5397:        99:         Lazy.force winches |> unburst ~t:0.1 |> map (fun () -> winsize fd)) in[39m
     [38;5;2m12464[39m: [38;5;2m     5398:       100:       let rec monitor () =[39m
     [38;5;2m12465[39m: [38;5;2m     5399:       101:         (Lwt_condition.wait rcond <?> stop) >>= function[39m
     [38;5;2m12466[39m: [38;5;2m     5400:       102:           | Some dim -> on_resize dim; monitor ()[39m
     [38;5;2m12467[39m: [38;5;2m     5401:       103:           | None     -> Lwt.return_unit in[39m
     [38;5;2m12468[39m: [38;5;2m     5402:       104:       Lwt.async monitor;[39m
     [38;5;2m12469[39m: [38;5;2m     5403:       105:       Lwt_stream.from (fun () -> Lwt_condition.wait rcond <?> stop)[39m
     [38;5;2m12470[39m: [38;5;2m     5404:       106:         |> Lwt_stream.map (fun dim -> `Resize dim)[39m
     [38;5;2m12471[39m: [38;5;2m     5405:       107:     else Lwt_stream.of_list [][39m
     [38;5;2m12472[39m: [38;5;2m     5406:       108: [39m
     [38;5;2m12473[39m: [38;5;2m     5407:       109:   let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m12474[39m: [38;5;2m     5408:       110:              ?(input=Lwt_unix.stdin) ?(output=Lwt_unix.stdout) () =[39m
     [38;5;2m12475[39m: [38;5;2m     5409:       111:     let fd = Lwt_unix.unix_file_descr output in[39m
     [38;5;2m12476[39m: [38;5;2m     5410:       112:     let (stop, stopw) = Lwt.wait () in[39m
     [38;5;2m12477[39m: [38;5;2m     5411:       113:     let rec t = lazy {[39m
     [38;5;2m12478[39m: [38;5;2m     5412:       114:         trm    = Tmachine.create ~mouse ~bpaste (cap_for_fd fd)[39m
     [38;5;2m12479[39m: [38;5;2m     5413:       115:       ; ochan  = Lwt_io.(of_fd ~mode:output) output[39m
     [38;5;2m12480[39m: [38;5;2m     5414:       116:       ; buf    = Buffer.create 4096[39m
     [38;5;2m12481[39m: [38;5;2m     5415:       117:       ; fds    = (input, output)[39m
     [38;5;2m12482[39m: [38;5;2m     5416:       118:       ; stop   = (fun () -> Lwt.wakeup stopw None)[39m
     [38;5;2m12483[39m: [38;5;2m     5417:       119:       ; events = Lwt_stream.choose[39m
     [38;5;2m12484[39m: [38;5;2m     5418:       120:           [ input_stream ~nosig input stop[39m
     [38;5;2m12485[39m: [38;5;2m     5419:       121:           ; resizef fd stop @@ fun dim ->[39m
     [38;5;2m12486[39m: [38;5;2m     5420:       122:               let t = Lazy.force t in Buffer.reset t.buf; set_size t dim ][39m
     [38;5;2m12487[39m: [38;5;2m     5421:       123:       } in[39m
     [38;5;2m12488[39m: [38;5;2m     5422:       124:     let t = Lazy.force t in[39m
     [38;5;2m12489[39m: [38;5;2m     5423:       125:     winsize fd |> whenopt (set_size t);[39m
     [38;5;2m12490[39m: [38;5;2m     5424:       126:     Lwt.async (fun () -> write t); (* XXX async? *)[39m
     [38;5;2m12491[39m: [38;5;2m     5425:       127:     if dispose then Lwt_main.at_exit (fun () -> release t);[39m
     [38;5;2m12492[39m: [38;5;2m     5426:       128:     t[39m
     [38;5;2m12493[39m: [38;5;2m     5427:       129: [39m
     [38;5;2m12494[39m: [38;5;2m     5428:       130:   let events t = t.events[39m
     [38;5;2m12495[39m: [38;5;2m     5429:       131:   let fds    t = t.fds[39m
     [38;5;2m12496[39m: [38;5;2m     5430:       132: end[39m
     [38;5;2m12497[39m: [38;5;2m     5431:       133: [39m
     [38;5;2m12498[39m: [38;5;2m     5432:       134: let winsize fd = winsize (Lwt_unix.unix_file_descr fd)[39m
     [38;5;2m12499[39m: [38;5;2m     5433:       135: [39m
     [38;5;2m12500[39m: [38;5;2m     5434:       136: include Gen_output (struct[39m
     [38;5;2m12501[39m: [38;5;2m     5435:       137:   type fd = Lwt_unix.file_descr and k = unit Lwt.t[39m
     [38;5;2m12502[39m: [38;5;2m     5436:       138:   let (def, to_fd) = Lwt_unix.(stdout, unix_file_descr)[39m
     [38;5;2m12503[39m: [38;5;2m     5437:       139:   and write fd buf = Buffer.(write fd (to_bytes buf) 0 (length buf))[39m
     [38;5;2m12504[39m: [38;5;2m     5438:       140: end)[39m
     [38;5;2m12505[39m: [38;5;2m     5439: Added regular file ../notty/src-lwt/notty_lwt.mli:[39m
     [38;5;2m12506[39m: [38;5;2m     5440:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m12507[39m: [38;5;2m     5441:         2:    See LICENSE.md. *)[39m
     [38;5;2m12508[39m: [38;5;2m     5442:         3: [39m
     [38;5;2m12509[39m: [38;5;2m     5443:         4: (** [Notty] IO [Lwt] on [Unix].[39m
     [38;5;2m12510[39m: [38;5;2m     5444:         5: [39m
     [38;5;2m12511[39m: [38;5;2m     5445:         6:     This is an IO module for {!Notty}.[39m
     [38;5;2m12512[39m: [38;5;2m     5446:         7: [39m
     [38;5;2m12513[39m: [38;5;2m     5447:         8:     It mirrors {!Notty_unix} and the corresponding operations behave[39m
     [38;5;2m12514[39m: [38;5;2m     5448:         9:     analogously. Consult its documentation for more info.[39m
     [38;5;2m12515[39m: [38;5;2m     5449:        10: [39m
     [38;5;2m12516[39m: [38;5;2m     5450:        11:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m12517[39m: [38;5;2m     5451:        12: [39m
     [38;5;2m12518[39m: [38;5;2m     5452:        13: open Notty[39m
     [38;5;2m12519[39m: [38;5;2m     5453:        14: [39m
     [38;5;2m12520[39m: [38;5;2m     5454:        15: (** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m12521[39m: [38;5;2m     5455:        16: [39m
     [38;5;2m12522[39m: [38;5;2m     5456:        17: (** Terminal IO with concurrency.[39m
     [38;5;2m12523[39m: [38;5;2m     5457:        18: [39m
     [38;5;2m12524[39m: [38;5;2m     5458:        19:     For more info, see {!Notty_unix.Term}. *)[39m
     [38;5;2m12525[39m: [38;5;2m     5459:        20: module Term : sig[39m
     [38;5;2m12526[39m: [38;5;2m     5460:        21: [39m
     [38;5;2m12527[39m: [38;5;2m     5461:        22:   type t[39m
     [38;5;2m12528[39m: [38;5;2m     5462:        23: [39m
     [38;5;2m12529[39m: [38;5;2m     5463:        24:   (** {1 Construction and destruction} *)[39m
     [38;5;2m12530[39m: [38;5;2m     5464:        25: [39m
     [38;5;2m12531[39m: [38;5;2m     5465:        26:   val create : ?dispose:bool ->[39m
     [38;5;2m12532[39m: [38;5;2m     5466:        27:                ?nosig:bool ->[39m
     [38;5;2m12533[39m: [38;5;2m     5467:        28:                ?mouse:bool ->[39m
     [38;5;2m12534[39m: [38;5;2m     5468:        29:                ?bpaste:bool ->[39m
     [38;5;2m12535[39m: [38;5;2m     5469:        30:                ?input:Lwt_unix.file_descr ->[39m
     [38;5;2m12536[39m: [38;5;2m     5470:        31:                ?output:Lwt_unix.file_descr ->[39m
     [38;5;2m12537[39m: [38;5;2m     5471:        32:                unit -> t[39m
     [38;5;2m12538[39m: [38;5;2m     5472:        33:   (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a new[39m
     [38;5;2m12539[39m: [38;5;2m     5473:        34:       {{!t}terminal}.[39m
     [38;5;2m12540[39m: [38;5;2m     5474:        35: [39m
     [38;5;2m12541[39m: [38;5;2m     5475:        36:       {b Note} [~dispose] arranges for the terminal to be disposed of at the end[39m
     [38;5;2m12542[39m: [38;5;2m     5476:        37:       of the [Lwt] main loop, and not at process exit.[39m
     [38;5;2m12543[39m: [38;5;2m     5477:        38: [39m
     [38;5;2m12544[39m: [38;5;2m     5478:        39:       See {!Notty_unix.Term.create}. *)[39m
     [38;5;2m12545[39m: [38;5;2m     5479:        40: [39m
     [38;5;2m12546[39m: [38;5;2m     5480:        41:   val release : t -> unit Lwt.t[39m
     [38;5;2m12547[39m: [38;5;2m     5481:        42: [39m
     [38;5;2m12548[39m: [38;5;2m     5482:        43:   (** {1 Commands} *)[39m
     [38;5;2m12549[39m: [38;5;2m     5483:        44: [39m
     [38;5;2m12550[39m: [38;5;2m     5484:        45:   val image   : t -> image -> unit Lwt.t[39m
     [38;5;2m12551[39m: [38;5;2m     5485:        46:   val refresh : t -> unit Lwt.t[39m
     [38;5;2m12552[39m: [38;5;2m     5486:        47:   val cursor  : t -> (int * int) option -> unit Lwt.t[39m
     [38;5;2m12553[39m: [38;5;2m     5487:        48: [39m
     [38;5;2m12554[39m: [38;5;2m     5488:        49:   (** {1 Events} *)[39m
     [38;5;2m12555[39m: [38;5;2m     5489:        50: [39m
     [38;5;2m12556[39m: [38;5;2m     5490:        51:   val events : t -> [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m12557[39m: [38;5;2m     5491:        52:   (** [events t] is the stream of incoming events.[39m
     [38;5;2m12558[39m: [38;5;2m     5492:        53: [39m
     [38;5;2m12559[39m: [38;5;2m     5493:        54:       Invoking {{!release}release} will terminate this stream.[39m
     [38;5;2m12560[39m: [38;5;2m     5494:        55: [39m
     [38;5;2m12561[39m: [38;5;2m     5495:        56:       Events are:[39m
     [38;5;2m12562[39m: [38;5;2m     5496:        57:       {ul[39m
     [38;5;2m12563[39m: [38;5;2m     5497:        58:       {- [#Unescape.event], an {{!Notty.Unescape.event}event} from the input[39m
     [38;5;2m12564[39m: [38;5;2m     5498:        59:          fd; or}[39m
     [38;5;2m12565[39m: [38;5;2m     5499:        60:       {- [`Resize (cols, rows)] whenever the terminal size changes.}}[39m
     [38;5;2m12566[39m: [38;5;2m     5500:        61: [39m
     [38;5;2m12567[39m: [38;5;2m     5501:        62:       {b Note} This stream is unique; for the same [t], [events t] always[39m
     [38;5;2m12568[39m: [38;5;2m     5502:        63:       returns the same stream. *)[39m
     [38;5;2m12569[39m: [38;5;2m     5503:        64: [39m
     [38;5;2m12570[39m: [38;5;2m     5504:        65:   (** {1 Properties} *)[39m
     [38;5;2m12571[39m: [38;5;2m     5505:        66: [39m
     [38;5;2m12572[39m: [38;5;2m     5506:        67:   val size : t -> int * int[39m
     [38;5;2m12573[39m: [38;5;2m     5507:        68: [39m
     [38;5;2m12574[39m: [38;5;2m     5508:        69:   val fds : t -> Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m12575[39m: [38;5;2m     5509:        70: [39m
     [38;5;2m12576[39m: [38;5;2m     5510:        71:   (** {1 Window size change notifications}[39m
     [38;5;2m12577[39m: [38;5;2m     5511:        72: [39m
     [38;5;2m12578[39m: [38;5;2m     5512:        73:       {{!create}Creating} a terminal will install a [SIGWINCH] handler.[39m
     [38;5;2m12579[39m: [38;5;2m     5513:        74:       The handler should not be replaced directly. This API allows the user to[39m
     [38;5;2m12580[39m: [38;5;2m     5514:        75:       monitor deliveries of the signal.[39m
     [38;5;2m12581[39m: [38;5;2m     5515:        76: [39m
     [38;5;2m12582[39m: [38;5;2m     5516:        77:       See {!Notty_unix.Term.Winch}. *)[39m
     [38;5;2m12583[39m: [38;5;2m     5517:        78: [39m
     [38;5;2m12584[39m: [38;5;2m     5518:        79:   val winch : unit -> unit Lwt.t[39m
     [38;5;2m12585[39m: [38;5;2m     5519:        80:   (** [winch ()] is a thread completing after the next [SIGWINCH]. A single[39m
     [38;5;2m12586[39m: [38;5;2m     5520:        81:       signal delivery will cause the completion of all waiting [winch] threads. *)[39m
     [38;5;2m12587[39m: [38;5;2m     5521:        82: end[39m
     [38;5;2m12588[39m: [38;5;2m     5522:        83: [39m
     [38;5;2m12589[39m: [38;5;2m     5523:        84: (** {1:inline Inline output} *)[39m
     [38;5;2m12590[39m: [38;5;2m     5524:        85: [39m
     [38;5;2m12591[39m: [38;5;2m     5525:        86: val winsize : Lwt_unix.file_descr -> (int * int) option[39m
     [38;5;2m12592[39m: [38;5;2m     5526:        87: [39m
     [38;5;2m12593[39m: [38;5;2m     5527:        88: val eol : image -> image[39m
     [38;5;2m12594[39m: [38;5;2m     5528:        89: [39m
     [38;5;2m12595[39m: [38;5;2m     5529:        90: val output_image :[39m
     [38;5;2m12596[39m: [38;5;2m     5530:        91:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> image -> unit Lwt.t[39m
     [38;5;2m12597[39m: [38;5;2m     5531:        92: [39m
     [38;5;2m12598[39m: [38;5;2m     5532:        93: val output_image_size :[39m
     [38;5;2m12599[39m: [38;5;2m     5533:        94:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> (int * int -> image) -> unit Lwt.t[39m
     [38;5;2m12600[39m: [38;5;2m     5534:        95: [39m
     [38;5;2m12601[39m: [38;5;2m     5535:        96: val show_cursor : ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> bool -> unit Lwt.t[39m
     [38;5;2m12602[39m: [38;5;2m     5536:        97: [39m
     [38;5;2m12603[39m: [38;5;2m     5537:        98: val move_cursor :[39m
     [38;5;2m12604[39m: [38;5;2m     5538:        99:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr ->[39m
     [38;5;2m12605[39m: [38;5;2m     5539:       100:     [ `Home | `By of int * int | `To of int * int ] -> unit Lwt.t[39m
     [38;5;2m12606[39m: [38;5;2m     5540: Added regular file ../notty/src-unix/dune:[39m
     [38;5;2m12607[39m: [38;5;2m     5541:         1: (library[39m
     [38;5;2m12608[39m: [38;5;2m     5542:         2:   (public_name notty.unix)[39m
     [38;5;2m12609[39m: [38;5;2m     5543:         3:   (synopsis "Notty Unix IO")[39m
     [38;5;2m12610[39m: [38;5;2m     5544:         4:   (name notty_unix)[39m
     [38;5;2m12611[39m: [38;5;2m     5545:         5:   (wrapped false)[39m
     [38;5;2m12612[39m: [38;5;2m     5546:         6:   (c_names winsize)[39m
     [38;5;2m12613[39m: [38;5;2m     5547:         7:   (c_flags (-Wall -Wextra -O3))[39m
     [38;5;2m12614[39m: [38;5;2m     5548:         8:   (optional)[39m
     [38;5;2m12615[39m: [38;5;2m     5549:         9:   (libraries notty unix))[39m
     [38;5;2m12616[39m: [38;5;2m     5550:        10: [39m
     [38;5;2m12617[39m: [38;5;2m     5551:        11: (include_subdirs unqualified)[39m
     [38;5;2m12618[39m: [38;5;2m     5552: Added regular file ../notty/src-unix/native/winsize.c:[39m
     [38;5;2m12619[39m: [38;5;2m     5553:         1: #include <sys/ioctl.h>[39m
     [38;5;2m12620[39m: [38;5;2m     5554:         2: #include <signal.h>[39m
     [38;5;2m12621[39m: [38;5;2m     5555:         3: #include <caml/mlvalues.h>[39m
     [38;5;2m12622[39m: [38;5;2m     5556:         4: [39m
     [38;5;2m12623[39m: [38;5;2m     5557:         5: CAMLprim value caml_notty_winsize (value vfd) {[39m
     [38;5;2m12624[39m: [38;5;2m     5558:         6:   int fd = Int_val (vfd);[39m
     [38;5;2m12625[39m: [38;5;2m     5559:         7:   struct winsize w;[39m
     [38;5;2m12626[39m: [38;5;2m     5560:         8:   if (ioctl (fd, TIOCGWINSZ, &w) >= 0)[39m
     [38;5;2m12627[39m: [38;5;2m     5561:         9:     return Val_int ((w.ws_col << 16) + ((w.ws_row & 0x7fff) << 1));[39m
     [38;5;2m12628[39m: [38;5;2m     5562:        10:   return Val_int (0);[39m
     [38;5;2m12629[39m: [38;5;2m     5563:        11: }[39m
     [38;5;2m12630[39m: [38;5;2m     5564:        12: [39m
     [38;5;2m12631[39m: [38;5;2m     5565:        13: #define __unit() value unit __attribute__((unused))[39m
     [38;5;2m12632[39m: [38;5;2m     5566:        14: [39m
     [38;5;2m12633[39m: [38;5;2m     5567:        15: CAMLprim value caml_notty_winch_number (__unit()) {[39m
     [38;5;2m12634[39m: [38;5;2m     5568:        16:   return Val_int (SIGWINCH);[39m
     [38;5;2m12635[39m: [38;5;2m     5569:        17: }[39m
     [38;5;2m12636[39m: [38;5;2m     5570: Added regular file ../notty/src-unix/notty_unix.ml:[39m
     [38;5;2m12637[39m: [38;5;2m     5571:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m12638[39m: [38;5;2m     5572:         2:    See LICENSE.md. *)[39m
     [38;5;2m12639[39m: [38;5;2m     5573:         3: [39m
     [38;5;2m12640[39m: [38;5;2m     5574:         4: open Notty[39m
     [38;5;2m12641[39m: [38;5;2m     5575:         5: [39m
     [38;5;2m12642[39m: [38;5;2m     5576:         6: external c_winsize : Unix.file_descr -> int = "caml_notty_winsize" [@@noalloc][39m
     [38;5;2m12643[39m: [38;5;2m     5577:         7: external winch_number : unit -> int = "caml_notty_winch_number" [@@noalloc][39m
     [38;5;2m12644[39m: [38;5;2m     5578:         8: [39m
     [38;5;2m12645[39m: [38;5;2m     5579:         9: let iter f = function Some x -> f x | _ -> ()[39m
     [38;5;2m12646[39m: [38;5;2m     5580:        10: let value x = function Some a -> a | _ -> x[39m
     [38;5;2m12647[39m: [38;5;2m     5581:        11: [39m
     [38;5;2m12648[39m: [38;5;2m     5582:        12: let winsize fd = match c_winsize fd with[39m
     [38;5;2m12649[39m: [38;5;2m     5583:        13:   | 0  -> None[39m
     [38;5;2m12650[39m: [38;5;2m     5584:        14:   | wh -> Some (wh lsr 16, wh lsr 1 land 0x7fff)[39m
     [38;5;2m12651[39m: [38;5;2m     5585:        15: [39m
     [38;5;2m12652[39m: [38;5;2m     5586:        16: module Private = struct[39m
     [38;5;2m12653[39m: [38;5;2m     5587:        17: [39m
     [38;5;2m12654[39m: [38;5;2m     5588:        18:   let once f = let v = lazy (f ()) in fun () -> Lazy.force v[39m
     [38;5;2m12655[39m: [38;5;2m     5589:        19: [39m
     [38;5;2m12656[39m: [38;5;2m     5590:        20:   let cap_for_fd =[39m
     [38;5;2m12657[39m: [38;5;2m     5591:        21:     let open Cap in[39m
     [38;5;2m12658[39m: [38;5;2m     5592:        22:     match Sys.getenv "TERM" with[39m
     [38;5;2m12659[39m: [38;5;2m     5593:        23:     | exception Not_found -> fun _ -> dumb[39m
     [38;5;2m12660[39m: [38;5;2m     5594:        24:     | (""|"dumb")         -> fun _ -> dumb[39m
     [38;5;2m12661[39m: [38;5;2m     5595:        25:     | _                   -> fun fd -> if Unix.isatty fd then ansi else dumb[39m
     [38;5;2m12662[39m: [38;5;2m     5596:        26: [39m
     [38;5;2m12663[39m: [38;5;2m     5597:        27:   let setup_tcattr ~nosig fd =[39m
     [38;5;2m12664[39m: [38;5;2m     5598:        28:     let open Unix in try[39m
     [38;5;2m12665[39m: [38;5;2m     5599:        29:       let tc = tcgetattr fd in[39m
     [38;5;2m12666[39m: [38;5;2m     5600:        30:       let tc1 = { tc with c_icanon = false; c_echo = false } in[39m
     [38;5;2m12667[39m: [38;5;2m     5601:        31:       tcsetattr fd TCSANOW[39m
     [38;5;2m12668[39m: [38;5;2m     5602:        32:         ( if nosig then { tc1 with c_isig = false; c_ixon = false } else tc1 );[39m
     [38;5;2m12669[39m: [38;5;2m     5603:        33:       `Revert (once @@ fun _ -> tcsetattr fd TCSANOW tc)[39m
     [38;5;2m12670[39m: [38;5;2m     5604:        34:     with Unix_error (ENOTTY, _, _) -> `Revert ignore[39m
     [38;5;2m12671[39m: [38;5;2m     5605:        35: [39m
     [38;5;2m12672[39m: [38;5;2m     5606:        36:   let set_winch_handler f =[39m
     [38;5;2m12673[39m: [38;5;2m     5607:        37:     let signum = winch_number () in[39m
     [38;5;2m12674[39m: [38;5;2m     5608:        38:     let old_hdl = Sys.(signal signum (Signal_handle (fun _ -> f ()))) in[39m
     [38;5;2m12675[39m: [38;5;2m     5609:        39:     `Revert (once @@ fun () -> Sys.set_signal signum old_hdl)[39m
     [38;5;2m12676[39m: [38;5;2m     5610:        40: [39m
     [38;5;2m12677[39m: [38;5;2m     5611:        41:   module Gen_output (O : sig[39m
     [38;5;2m12678[39m: [38;5;2m     5612:        42:     type fd[39m
     [38;5;2m12679[39m: [38;5;2m     5613:        43:     type k[39m
     [38;5;2m12680[39m: [38;5;2m     5614:        44:     val def   : fd[39m
     [38;5;2m12681[39m: [38;5;2m     5615:        45:     val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m12682[39m: [38;5;2m     5616:        46:     val write : fd -> Buffer.t -> k[39m
     [38;5;2m12683[39m: [38;5;2m     5617:        47:   end) = struct[39m
     [38;5;2m12684[39m: [38;5;2m     5618:        48: [39m
     [38;5;2m12685[39m: [38;5;2m     5619:        49:     let scratch = lazy (Buffer.create 4096)[39m
     [38;5;2m12686[39m: [38;5;2m     5620:        50: [39m
     [38;5;2m12687[39m: [38;5;2m     5621:        51:     let output ?cap ?(fd = O.def) f =[39m
     [38;5;2m12688[39m: [38;5;2m     5622:        52:       let cap = cap |> value (cap_for_fd (O.to_fd fd)) in[39m
     [38;5;2m12689[39m: [38;5;2m     5623:        53:       let buf = Lazy.force scratch in[39m
     [38;5;2m12690[39m: [38;5;2m     5624:        54:       Buffer.reset buf; f buf cap fd; O.write fd buf[39m
     [38;5;2m12691[39m: [38;5;2m     5625:        55: [39m
     [38;5;2m12692[39m: [38;5;2m     5626:        56:     let output_image_size ?cap ?fd f =[39m
     [38;5;2m12693[39m: [38;5;2m     5627:        57:       output ?cap ?fd @@ fun buf cap fd ->[39m
     [38;5;2m12694[39m: [38;5;2m     5628:        58:         let size = winsize (O.to_fd fd) in[39m
     [38;5;2m12695[39m: [38;5;2m     5629:        59:         let i = f (value (80, 24) size) in[39m
     [38;5;2m12696[39m: [38;5;2m     5630:        60:         let dim = match size with[39m
     [38;5;2m12697[39m: [38;5;2m     5631:        61:           | Some (w, _) -> I.(w, height i)[39m
     [38;5;2m12698[39m: [38;5;2m     5632:        62:           | None        -> I.(width i, height i) in[39m
     [38;5;2m12699[39m: [38;5;2m     5633:        63:         Render.to_buffer buf cap (0, 0) dim i[39m
     [38;5;2m12700[39m: [38;5;2m     5634:        64: [39m
     [38;5;2m12701[39m: [38;5;2m     5635:        65:     let show_cursor ?cap ?fd x =[39m
     [38;5;2m12702[39m: [38;5;2m     5636:        66:       output ?cap ?fd @@ fun buf cap _ -> Direct.show_cursor buf cap x[39m
     [38;5;2m12703[39m: [38;5;2m     5637:        67: [39m
     [38;5;2m12704[39m: [38;5;2m     5638:        68:     let move_cursor ?cap ?fd x =[39m
     [38;5;2m12705[39m: [38;5;2m     5639:        69:       output ?cap ?fd @@ fun buf cap _ -> Direct.move_cursor buf cap x[39m
     [38;5;2m12706[39m: [38;5;2m     5640:        70: [39m
     [38;5;2m12707[39m: [38;5;2m     5641:        71:     let output_image ?cap ?fd i = output_image_size ?cap ?fd (fun _ -> i)[39m
     [38;5;2m12708[39m: [38;5;2m     5642:        72: [39m
     [38;5;2m12709[39m: [38;5;2m     5643:        73:     let eol i = I.(i <-> void 0 1)[39m
     [38;5;2m12710[39m: [38;5;2m     5644:        74:   end[39m
     [38;5;2m12711[39m: [38;5;2m     5645:        75: end[39m
     [38;5;2m12712[39m: [38;5;2m     5646:        76: [39m
     [38;5;2m12713[39m: [38;5;2m     5647:        77: open Private[39m
     [38;5;2m12714[39m: [38;5;2m     5648:        78: [39m
     [38;5;2m12715[39m: [38;5;2m     5649:        79: module Term = struct[39m
     [38;5;2m12716[39m: [38;5;2m     5650:        80: [39m
     [38;5;2m12717[39m: [38;5;2m     5651:        81:   module Winch = struct[39m
     [38;5;2m12718[39m: [38;5;2m     5652:        82: [39m
     [38;5;2m12719[39m: [38;5;2m     5653:        83:     let h  = Hashtbl.create 3[39m
     [38;5;2m12720[39m: [38;5;2m     5654:        84:     and id = ref 0[39m
     [38;5;2m12721[39m: [38;5;2m     5655:        85: [39m
     [38;5;2m12722[39m: [38;5;2m     5656:        86:     let add fd f =[39m
     [38;5;2m12723[39m: [38;5;2m     5657:        87:       let n = !id in[39m
     [38;5;2m12724[39m: [38;5;2m     5658:        88:       set_winch_handler (fun () -> Hashtbl.iter (fun _ f -> f ()) h) |> ignore;[39m
     [38;5;2m12725[39m: [38;5;2m     5659:        89:       Hashtbl.add h n (fun () -> winsize fd |> iter f); incr id;[39m
     [38;5;2m12726[39m: [38;5;2m     5660:        90:       `Revert (fun () -> Hashtbl.remove h n)[39m
     [38;5;2m12727[39m: [38;5;2m     5661:        91:   end[39m
     [38;5;2m12728[39m: [38;5;2m     5662:        92: [39m
     [38;5;2m12729[39m: [38;5;2m     5663:        93:   module Input = struct[39m
     [38;5;2m12730[39m: [38;5;2m     5664:        94: [39m
     [38;5;2m12731[39m: [38;5;2m     5665:        95:     type t = {[39m
     [38;5;2m12732[39m: [38;5;2m     5666:        96:       fd      : Unix.file_descr[39m
     [38;5;2m12733[39m: [38;5;2m     5667:        97:     ; flt     : Unescape.t[39m
     [38;5;2m12734[39m: [38;5;2m     5668:        98:     ; ibuf    : bytes[39m
     [38;5;2m12735[39m: [38;5;2m     5669:        99:     ; cleanup : unit -> unit[39m
     [38;5;2m12736[39m: [38;5;2m     5670:       100:     }[39m
     [38;5;2m12737[39m: [38;5;2m     5671:       101: [39m
     [38;5;2m12738[39m: [38;5;2m     5672:       102:     let bsize = 1024[39m
     [38;5;2m12739[39m: [38;5;2m     5673:       103: [39m
     [38;5;2m12740[39m: [38;5;2m     5674:       104:     let create ~nosig fd =[39m
     [38;5;2m12741[39m: [38;5;2m     5675:       105:       let flt  = Unescape.create ()[39m
     [38;5;2m12742[39m: [38;5;2m     5676:       106:       and ibuf = Bytes.create bsize[39m
     [38;5;2m12743[39m: [38;5;2m     5677:       107:       and `Revert cleanup = setup_tcattr ~nosig fd in[39m
     [38;5;2m12744[39m: [38;5;2m     5678:       108:       { fd; flt; ibuf; cleanup }[39m
     [38;5;2m12745[39m: [38;5;2m     5679:       109: [39m
     [38;5;2m12746[39m: [38;5;2m     5680:       110:     let rec event t =[39m
     [38;5;2m12747[39m: [38;5;2m     5681:       111:       match Unescape.next t.flt with[39m
     [38;5;2m12748[39m: [38;5;2m     5682:       112:       | #Unescape.event | `End as r -> r[39m
     [38;5;2m12749[39m: [38;5;2m     5683:       113:       | `Await ->[39m
     [38;5;2m12750[39m: [38;5;2m     5684:       114:           let n = Unix.read t.fd t.ibuf 0 bsize in[39m
     [38;5;2m12751[39m: [38;5;2m     5685:       115:           Unescape.input t.flt t.ibuf 0 n; event t[39m
     [38;5;2m12752[39m: [38;5;2m     5686:       116:   end[39m
     [38;5;2m12753[39m: [38;5;2m     5687:       117: [39m
     [38;5;2m12754[39m: [38;5;2m     5688:       118:   type t = {[39m
     [38;5;2m12755[39m: [38;5;2m     5689:       119:     output   : out_channel[39m
     [38;5;2m12756[39m: [38;5;2m     5690:       120:   ; trm      : Tmachine.t[39m
     [38;5;2m12757[39m: [38;5;2m     5691:       121:   ; buf      : Buffer.t[39m
     [38;5;2m12758[39m: [38;5;2m     5692:       122:   ; input    : Input.t[39m
     [38;5;2m12759[39m: [38;5;2m     5693:       123:   ; fds      : Unix.file_descr * Unix.file_descr[39m
     [38;5;2m12760[39m: [38;5;2m     5694:       124:   ; unwinch  : (unit -> unit) Lazy.t[39m
     [38;5;2m12761[39m: [38;5;2m     5695:       125:   ; mutable winched : bool[39m
     [38;5;2m12762[39m: [38;5;2m     5696:       126:   }[39m
     [38;5;2m12763[39m: [38;5;2m     5697:       127: [39m
     [38;5;2m12764[39m: [38;5;2m     5698:       128:   let write t =[39m
     [38;5;2m12765[39m: [38;5;2m     5699:       129:     Buffer.clear t.buf;[39m
     [38;5;2m12766[39m: [38;5;2m     5700:       130:     Tmachine.output t.trm t.buf;[39m
     [38;5;2m12767[39m: [38;5;2m     5701:       131:     Buffer.output_buffer t.output t.buf; flush t.output[39m
     [38;5;2m12768[39m: [38;5;2m     5702:       132: [39m
     [38;5;2m12769[39m: [38;5;2m     5703:       133:   let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m12770[39m: [38;5;2m     5704:       134:   let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m12771[39m: [38;5;2m     5705:       135:   let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m12772[39m: [38;5;2m     5706:       136:   let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m12773[39m: [38;5;2m     5707:       137:   let size t         = Tmachine.size t.trm[39m
     [38;5;2m12774[39m: [38;5;2m     5708:       138: [39m
     [38;5;2m12775[39m: [38;5;2m     5709:       139:   let release t =[39m
     [38;5;2m12776[39m: [38;5;2m     5710:       140:     if Tmachine.release t.trm then[39m
     [38;5;2m12777[39m: [38;5;2m     5711:       141:       ( Lazy.force t.unwinch ();[39m
     [38;5;2m12778[39m: [38;5;2m     5712:       142:         t.input.Input.cleanup ();[39m
     [38;5;2m12779[39m: [38;5;2m     5713:       143:         write t )[39m
     [38;5;2m12780[39m: [38;5;2m     5714:       144: [39m
     [38;5;2m12781[39m: [38;5;2m     5715:       145:   let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m12782[39m: [38;5;2m     5716:       146:              ?(input=Unix.stdin) ?(output=Unix.stdout) () =[39m
     [38;5;2m12783[39m: [38;5;2m     5717:       147:     let rec t = {[39m
     [38;5;2m12784[39m: [38;5;2m     5718:       148:         output  = Unix.out_channel_of_descr output[39m
     [38;5;2m12785[39m: [38;5;2m     5719:       149:       ; trm     = Tmachine.create ~mouse ~bpaste (cap_for_fd input)[39m
     [38;5;2m12786[39m: [38;5;2m     5720:       150:       ; buf     = Buffer.create 4096[39m
     [38;5;2m12787[39m: [38;5;2m     5721:       151:       ; input   = Input.create ~nosig input[39m
     [38;5;2m12788[39m: [38;5;2m     5722:       152:       ; fds     = (input, output)[39m
     [38;5;2m12789[39m: [38;5;2m     5723:       153:       ; winched = false[39m
     [38;5;2m12790[39m: [38;5;2m     5724:       154:       ; unwinch = lazy ([39m
     [38;5;2m12791[39m: [38;5;2m     5725:       155:           let `Revert f = Winch.add output @@ fun dim ->[39m
     [38;5;2m12792[39m: [38;5;2m     5726:       156:             Buffer.reset t.buf; t.winched <- true; set_size t dim in f)[39m
     [38;5;2m12793[39m: [38;5;2m     5727:       157:     } in[39m
     [38;5;2m12794[39m: [38;5;2m     5728:       158:     winsize output |> iter (set_size t);[39m
     [38;5;2m12795[39m: [38;5;2m     5729:       159:     (Lazy.force t.unwinch |> ignore) [@ocaml.warning "-5"];[39m
     [38;5;2m12796[39m: [38;5;2m     5730:       160:     if dispose then at_exit (fun () -> release t);[39m
     [38;5;2m12797[39m: [38;5;2m     5731:       161:     write t;[39m
     [38;5;2m12798[39m: [38;5;2m     5732:       162:     t[39m
     [38;5;2m12799[39m: [38;5;2m     5733:       163: [39m
     [38;5;2m12800[39m: [38;5;2m     5734:       164:   let rec event = function[39m
     [38;5;2m12801[39m: [38;5;2m     5735:       165:     | t when Tmachine.dead t.trm -> `End[39m
     [38;5;2m12802[39m: [38;5;2m     5736:       166:     | t when t.winched -> t.winched <- false; `Resize (size t)[39m
     [38;5;2m12803[39m: [38;5;2m     5737:       167:     | t -> Unix.(try Input.event t.input with Unix_error (EINTR, _, _) -> event t)[39m
     [38;5;2m12804[39m: [38;5;2m     5738:       168: [39m
     [38;5;2m12805[39m: [38;5;2m     5739:       169:   let pending t =[39m
     [38;5;2m12806[39m: [38;5;2m     5740:       170:     not (Tmachine.dead t.trm) &&[39m
     [38;5;2m12807[39m: [38;5;2m     5741:       171:     (t.winched || Unescape.pending t.input.Input.flt)[39m
     [38;5;2m12808[39m: [38;5;2m     5742:       172: [39m
     [38;5;2m12809[39m: [38;5;2m     5743:       173:   let fds t = t.fds[39m
     [38;5;2m12810[39m: [38;5;2m     5744:       174: end[39m
     [38;5;2m12811[39m: [38;5;2m     5745:       175: [39m
     [38;5;2m12812[39m: [38;5;2m     5746:       176: include Gen_output (struct[39m
     [38;5;2m12813[39m: [38;5;2m     5747:       177:   type fd = out_channel and k = unit[39m
     [38;5;2m12814[39m: [38;5;2m     5748:       178:   let def   = stdout[39m
     [38;5;2m12815[39m: [38;5;2m     5749:       179:   and to_fd = Unix.descr_of_out_channel[39m
     [38;5;2m12816[39m: [38;5;2m     5750:       180:   and write = Buffer.output_buffer[39m
     [38;5;2m12817[39m: [38;5;2m     5751:       181: end)[39m
     [38;5;2m12818[39m: [38;5;2m     5752: Added regular file ../notty/src-unix/notty_unix.mli:[39m
     [38;5;2m12819[39m: [38;5;2m     5753:         1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m12820[39m: [38;5;2m     5754:         2:    See LICENSE.md. *)[39m
     [38;5;2m12821[39m: [38;5;2m     5755:         3: [39m
     [38;5;2m12822[39m: [38;5;2m     5756:         4: (** [Notty] IO for pure [Unix].[39m
     [38;5;2m12823[39m: [38;5;2m     5757:         5: [39m
     [38;5;2m12824[39m: [38;5;2m     5758:         6:     This is an IO module for {!Notty}.[39m
     [38;5;2m12825[39m: [38;5;2m     5759:         7: [39m
     [38;5;2m12826[39m: [38;5;2m     5760:         8:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m12827[39m: [38;5;2m     5761:         9: [39m
     [38;5;2m12828[39m: [38;5;2m     5762:        10: open Notty[39m
     [38;5;2m12829[39m: [38;5;2m     5763:        11: [39m
     [38;5;2m12830[39m: [38;5;2m     5764:        12: (** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m12831[39m: [38;5;2m     5765:        13: [39m
     [38;5;2m12832[39m: [38;5;2m     5766:        14: (** Terminal IO abstraction for fullscreen, interactive applications.[39m
     [38;5;2m12833[39m: [38;5;2m     5767:        15: [39m
     [38;5;2m12834[39m: [38;5;2m     5768:        16:     This module provides both input and output. It assumes exclusive ownership of[39m
     [38;5;2m12835[39m: [38;5;2m     5769:        17:     the IO streams between {{!create}initialization} and {{!release}shutdown}. *)[39m
     [38;5;2m12836[39m: [38;5;2m     5770:        18: module Term : sig[39m
     [38;5;2m12837[39m: [38;5;2m     5771:        19: [39m
     [38;5;2m12838[39m: [38;5;2m     5772:        20:   type t[39m
     [38;5;2m12839[39m: [38;5;2m     5773:        21:   (** Representation of the terminal, giving structured access to IO. *)[39m
     [38;5;2m12840[39m: [38;5;2m     5774:        22: [39m
     [38;5;2m12841[39m: [38;5;2m     5775:        23:   (** {1 Construction and destruction} *)[39m
     [38;5;2m12842[39m: [38;5;2m     5776:        24: [39m
     [38;5;2m12843[39m: [38;5;2m     5777:        25:   val create : ?dispose:bool ->[39m
     [38;5;2m12844[39m: [38;5;2m     5778:        26:                ?nosig:bool ->[39m
     [38;5;2m12845[39m: [38;5;2m     5779:        27:                ?mouse:bool ->[39m
     [38;5;2m12846[39m: [38;5;2m     5780:        28:                ?bpaste:bool ->[39m
     [38;5;2m12847[39m: [38;5;2m     5781:        29:                ?input:Unix.file_descr ->[39m
     [38;5;2m12848[39m: [38;5;2m     5782:        30:                ?output:Unix.file_descr ->[39m
     [38;5;2m12849[39m: [38;5;2m     5783:        31:                unit -> t[39m
     [38;5;2m12850[39m: [38;5;2m     5784:        32:   (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a fresh[39m
     [38;5;2m12851[39m: [38;5;2m     5785:        33:       {{!t}terminal}. It has the following side effects:[39m
     [38;5;2m12852[39m: [38;5;2m     5786:        34:       {ul[39m
     [38;5;2m12853[39m: [38;5;2m     5787:        35:       {- [Unix.tcsetattr] is applied to [input] to disable {e echo} and[39m
     [38;5;2m12854[39m: [38;5;2m     5788:        36:          {e canonical mode}.}[39m
     [38;5;2m12855[39m: [38;5;2m     5789:        37:       {- [output] is set to {e alternate screen mode}, and the cursor is[39m
     [38;5;2m12856[39m: [38;5;2m     5790:        38:          hidden. Mouse and {e bracketed paste} reporting are (optionally)[39m
     [38;5;2m12857[39m: [38;5;2m     5791:        39:          enabled.}[39m
     [38;5;2m12858[39m: [38;5;2m     5792:        40:       {- [SIGWINCH] signal, normally ignored, is handled.}}[39m
     [38;5;2m12859[39m: [38;5;2m     5793:        41: [39m
     [38;5;2m12860[39m: [38;5;2m     5794:        42:       [~dispose] arranges for automatic {{!release}cleanup} of the terminal[39m
     [38;5;2m12861[39m: [38;5;2m     5795:        43:       before the process terminates. The downside is that a reference to this[39m
     [38;5;2m12862[39m: [38;5;2m     5796:        44:       terminal is retained until the program exits. Defaults to [true].[39m
     [38;5;2m12863[39m: [38;5;2m     5797:        45: [39m
     [38;5;2m12864[39m: [38;5;2m     5798:        46:       [~nosig] additionally turns off signal delivery and flow control[39m
     [38;5;2m12865[39m: [38;5;2m     5799:        47:       ({e isig} and {e ixon}) on input. Inhibits automatic handling of[39m
     [38;5;2m12866[39m: [38;5;2m     5800:        48:       {e CTRL-\{C,Z,\,S,Q\}}. Defaults to [true].[39m
     [38;5;2m12867[39m: [38;5;2m     5801:        49: [39m
     [38;5;2m12868[39m: [38;5;2m     5802:        50:       [~mouse] activates mouse reporting. Defaults to [true].[39m
     [38;5;2m12869[39m: [38;5;2m     5803:        51: [39m
     [38;5;2m12870[39m: [38;5;2m     5804:        52:       [~bpaste] activates bracketed paste reporting. Defaults to [true].[39m
     [38;5;2m12871[39m: [38;5;2m     5805:        53: [39m
     [38;5;2m12872[39m: [38;5;2m     5806:        54:       [~input] is the input file descriptor. Defaults to [stdin].[39m
     [38;5;2m12873[39m: [38;5;2m     5807:        55: [39m
     [38;5;2m12874[39m: [38;5;2m     5808:        56:       [~output] is the output file descriptor. Defaults to [stdout]. *)[39m
     [38;5;2m12875[39m: [38;5;2m     5809:        57: [39m
     [38;5;2m12876[39m: [38;5;2m     5810:        58:   val release : t -> unit[39m
     [38;5;2m12877[39m: [38;5;2m     5811:        59:   (** Dispose of this terminal. Original behavior of input fd is reinstated,[39m
     [38;5;2m12878[39m: [38;5;2m     5812:        60:       cursor is restored, mouse reporting disabled, and alternate mode is[39m
     [38;5;2m12879[39m: [38;5;2m     5813:        61:       terminated.[39m
     [38;5;2m12880[39m: [38;5;2m     5814:        62: [39m
     [38;5;2m12881[39m: [38;5;2m     5815:        63:       It is an error to use the {{!cmds}commands} on a released terminal, and[39m
     [38;5;2m12882[39m: [38;5;2m     5816:        64:       will raise [Invalid_argument], while [release] itself is idempotent. *)[39m
     [38;5;2m12883[39m: [38;5;2m     5817:        65: [39m
     [38;5;2m12884[39m: [38;5;2m     5818:        66:   (** {1:cmds Commands} *)[39m
     [38;5;2m12885[39m: [38;5;2m     5819:        67: [39m
     [38;5;2m12886[39m: [38;5;2m     5820:        68:   val image : t -> image -> unit[39m
     [38;5;2m12887[39m: [38;5;2m     5821:        69:   (** [image t i] sets [i] as [t]'s current image and redraws the terminal. *)[39m
     [38;5;2m12888[39m: [38;5;2m     5822:        70: [39m
     [38;5;2m12889[39m: [38;5;2m     5823:        71:   val refresh : t -> unit[39m
     [38;5;2m12890[39m: [38;5;2m     5824:        72:   (** [refresh t] redraws the terminal using the current image.[39m
     [38;5;2m12891[39m: [38;5;2m     5825:        73: [39m
     [38;5;2m12892[39m: [38;5;2m     5826:        74:       Useful if the output might have become garbled. *)[39m
     [38;5;2m12893[39m: [38;5;2m     5827:        75: [39m
     [38;5;2m12894[39m: [38;5;2m     5828:        76:   val cursor : t -> (int * int) option -> unit[39m
     [38;5;2m12895[39m: [38;5;2m     5829:        77:   (** [cursor t pos] sets and redraws the cursor.[39m
     [38;5;2m12896[39m: [38;5;2m     5830:        78: [39m
     [38;5;2m12897[39m: [38;5;2m     5831:        79:       [None] hides it. [Some (x, y)] places it at column [x] and row [y], with[39m
     [38;5;2m12898[39m: [38;5;2m     5832:        80:       the origin at [(0, 0)], mapping to the upper-left corner. *)[39m
     [38;5;2m12899[39m: [38;5;2m     5833:        81: [39m
     [38;5;2m12900[39m: [38;5;2m     5834:        82:   (** {1 Events} *)[39m
     [38;5;2m12901[39m: [38;5;2m     5835:        83: [39m
     [38;5;2m12902[39m: [38;5;2m     5836:        84:   val event : t -> [ Unescape.event | `Resize of (int * int) | `End ][39m
     [38;5;2m12903[39m: [38;5;2m     5837:        85:   (** Wait for a new event. [event t] can be:[39m
     [38;5;2m12904[39m: [38;5;2m     5838:        86:       {ul[39m
     [38;5;2m12905[39m: [38;5;2m     5839:        87:       {- [#Unescape.event], an {{!Notty.Unescape.event}[event]} from the input fd;}[39m
     [38;5;2m12906[39m: [38;5;2m     5840:        88:       {- [`End] if the input fd is closed, or the terminal was released; or}[39m
     [38;5;2m12907[39m: [38;5;2m     5841:        89:       {- [`Resize (cols, rows)] giving the current size of the output tty, if a[39m
     [38;5;2m12908[39m: [38;5;2m     5842:        90:          [SIGWINCH] was delivered before or during this call to [event].}}[39m
     [38;5;2m12909[39m: [38;5;2m     5843:        91: [39m
     [38;5;2m12910[39m: [38;5;2m     5844:        92:       {b Note} [event] is buffered. Calls can either block or immediately[39m
     [38;5;2m12911[39m: [38;5;2m     5845:        93:       return. Use {{!pending}[pending]} to detect when the next call would not[39m
     [38;5;2m12912[39m: [38;5;2m     5846:        94:       block. *)[39m
     [38;5;2m12913[39m: [38;5;2m     5847:        95: [39m
     [38;5;2m12914[39m: [38;5;2m     5848:        96:   val pending : t -> bool[39m
     [38;5;2m12915[39m: [38;5;2m     5849:        97:   (** [pending t] is [true] if the next call to {{!event}[event]} would not[39m
     [38;5;2m12916[39m: [38;5;2m     5850:        98:       block and the terminal has not yet been released. *)[39m
     [38;5;2m12917[39m: [38;5;2m     5851:        99: [39m
     [38;5;2m12918[39m: [38;5;2m     5852:       100:   (** {1 Properties} *)[39m
     [38;5;2m12919[39m: [38;5;2m     5853:       101: [39m
     [38;5;2m12920[39m: [38;5;2m     5854:       102:   val size : t -> int * int[39m
     [38;5;2m12921[39m: [38;5;2m     5855:       103:   (** [size t] is the current size of the terminal's output tty. *)[39m
     [38;5;2m12922[39m: [38;5;2m     5856:       104: [39m
     [38;5;2m12923[39m: [38;5;2m     5857:       105:   val fds : t -> Unix.file_descr * Unix.file_descr[39m
     [38;5;2m12924[39m: [38;5;2m     5858:       106:   (** [fds t] are [t]'s input and output file descriptors. *)[39m
     [38;5;2m12925[39m: [38;5;2m     5859:       107: [39m
     [38;5;2m12926[39m: [38;5;2m     5860:       108:   (** {1 Window size change notifications} *)[39m
     [38;5;2m12927[39m: [38;5;2m     5861:       109: [39m
     [38;5;2m12928[39m: [38;5;2m     5862:       110:   (** Manual [SIGWINCH] handling.[39m
     [38;5;2m12929[39m: [38;5;2m     5863:       111: [39m
     [38;5;2m12930[39m: [38;5;2m     5864:       112:       Unix delivers notifications about tty size changes through the [SIGWINCH][39m
     [38;5;2m12931[39m: [38;5;2m     5865:       113:       signal. A handler for this signal is installed as soon as a new terminal[39m
     [38;5;2m12932[39m: [38;5;2m     5866:       114:       is {{!create}created}. Replacing the global [SIGWINCH] handler using[39m
     [38;5;2m12933[39m: [38;5;2m     5867:       115:       the [Sys] module will cause this module to malfunction, as the size change[39m
     [38;5;2m12934[39m: [38;5;2m     5868:       116:       notifications will no longer be delivered.[39m
     [38;5;2m12935[39m: [38;5;2m     5869:       117: [39m
     [38;5;2m12936[39m: [38;5;2m     5870:       118:       You might still want to ignore resizes reported by {{!event}[event]} and[39m
     [38;5;2m12937[39m: [38;5;2m     5871:       119:       directly listen to [SIGWINCH]. This module allows installing such[39m
     [38;5;2m12938[39m: [38;5;2m     5872:       120:       listeners without conflicting with the rest of the machinery. *)[39m
     [38;5;2m12939[39m: [38;5;2m     5873:       121:   module Winch : sig[39m
     [38;5;2m12940[39m: [38;5;2m     5874:       122: [39m
     [38;5;2m12941[39m: [38;5;2m     5875:       123:     val add : Unix.file_descr -> ((int * int) -> unit) -> [`Revert of unit -> unit][39m
     [38;5;2m12942[39m: [38;5;2m     5876:       124:     (** [add fd f] registers a [SIGWINCH] handler. Every time the signal is[39m
     [38;5;2m12943[39m: [38;5;2m     5877:       125:         delivered, [f] is called with the current size of the tty backing [fd].[39m
     [38;5;2m12944[39m: [38;5;2m     5878:       126:         If [fd] is not a tty, [f] is never called.[39m
     [38;5;2m12945[39m: [38;5;2m     5879:       127: [39m
     [38;5;2m12946[39m: [38;5;2m     5880:       128:         Return value is a function that removes the handler [f].[39m
     [38;5;2m12947[39m: [38;5;2m     5881:       129: [39m
     [38;5;2m12948[39m: [38;5;2m     5882:       130:         Handlers are called in an unspecified order. *)[39m
     [38;5;2m12949[39m: [38;5;2m     5883:       131: [39m
     [38;5;2m12950[39m: [38;5;2m     5884:       132:   end[39m
     [38;5;2m12951[39m: [38;5;2m     5885:       133: end[39m
     [38;5;2m12952[39m: [38;5;2m     5886:       134: [39m
     [38;5;2m12953[39m: [38;5;2m     5887:       135: (** {1:inline Inline output}[39m
     [38;5;2m12954[39m: [38;5;2m     5888:       136: [39m
     [38;5;2m12955[39m: [38;5;2m     5889:       137:     These operations do not assume exclusive access to the output. This means[39m
     [38;5;2m12956[39m: [38;5;2m     5890:       138:     that they can be combined with other means of producing output. At the same[39m
     [38;5;2m12957[39m: [38;5;2m     5891:       139:     time, it means that they are affected by the current terminal state, and[39m
     [38;5;2m12958[39m: [38;5;2m     5892:       140:     that this state is not tracked. *)[39m
     [38;5;2m12959[39m: [38;5;2m     5893:       141: [39m
     [38;5;2m12960[39m: [38;5;2m     5894:       142: val winsize : Unix.file_descr -> (int * int) option[39m
     [38;5;2m12961[39m: [38;5;2m     5895:       143: (** [winsize fd] is [Some (columns, rows)], the current dimensions of [fd]'s[39m
     [38;5;2m12962[39m: [38;5;2m     5896:       144:     backing tty, or [None], when [fd] is not backed by a tty. *)[39m
     [38;5;2m12963[39m: [38;5;2m     5897:       145: [39m
     [38;5;2m12964[39m: [38;5;2m     5898:       146: val eol : image -> image[39m
     [38;5;2m12965[39m: [38;5;2m     5899:       147: (** [eol image] is [image], producing an extra newline when printed. *)[39m
     [38;5;2m12966[39m: [38;5;2m     5900:       148: [39m
     [38;5;2m12967[39m: [38;5;2m     5901:       149: val output_image :[39m
     [38;5;2m12968[39m: [38;5;2m     5902:       150:   ?cap:Cap.t -> ?fd:out_channel -> image -> unit[39m
     [38;5;2m12969[39m: [38;5;2m     5903:       151: (** [output_image ?cap ?fd image] writes [image] to [fd].[39m
     [38;5;2m12970[39m: [38;5;2m     5904:       152: [39m
     [38;5;2m12971[39m: [38;5;2m     5905:       153:     The image is displayed in its full height. If the output is a tty, image[39m
     [38;5;2m12972[39m: [38;5;2m     5906:       154:     width is clipped to the output width. Otherwise, full width is used.[39m
     [38;5;2m12973[39m: [38;5;2m     5907:       155: [39m
     [38;5;2m12974[39m: [38;5;2m     5908:       156:     [~cap] is the {{!caps}optional} terminal capability set.[39m
     [38;5;2m12975[39m: [38;5;2m     5909:       157: [39m
     [38;5;2m12976[39m: [38;5;2m     5910:       158:     [~fd] defaults to [stdout]. *)[39m
     [38;5;2m12977[39m: [38;5;2m     5911:       159: [39m
     [38;5;2m12978[39m: [38;5;2m     5912:       160: val output_image_size : ?cap:Cap.t -> ?fd:out_channel -> (int * int -> image) -> unit[39m
     [38;5;2m12979[39m: [38;5;2m     5913:       161: (** [output_image_size ?cap ?fd f] is[39m
     [38;5;2m12980[39m: [38;5;2m     5914:       162:     [output_image ?cap ?fd (f size)] where [size] are [fd]'s current[39m
     [38;5;2m12981[39m: [38;5;2m     5915:       163:     {{!winsize}output dimensions}.[39m
     [38;5;2m12982[39m: [38;5;2m     5916:       164: [39m
     [38;5;2m12983[39m: [38;5;2m     5917:       165:     If [fd] is not backed by a tty, as a matter of convenience, [f] is applied[39m
     [38;5;2m12984[39m: [38;5;2m     5918:       166:     to [(80, 24)]. Use {!Unix.isatty} or {{!winsize}[winsize]} to detect whether[39m
     [38;5;2m12985[39m: [38;5;2m     5919:       167:     the output has a well-defined size. *)[39m
     [38;5;2m12986[39m: [38;5;2m     5920:       168: [39m
     [38;5;2m12987[39m: [38;5;2m     5921:       169: val show_cursor : ?cap:Cap.t -> ?fd:out_channel -> bool -> unit[39m
     [38;5;2m12988[39m: [38;5;2m     5922:       170: (** [show_cursor ?cap ?fd visible] toggles the cursor visibility on [fd]. *)[39m
     [38;5;2m12989[39m: [38;5;2m     5923:       171: [39m
     [38;5;2m12990[39m: [38;5;2m     5924:       172: val move_cursor :[39m
     [38;5;2m12991[39m: [38;5;2m     5925:       173:   ?cap:Cap.t -> ?fd:out_channel ->[39m
     [38;5;2m12992[39m: [38;5;2m     5926:       174:     [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m12993[39m: [38;5;2m     5927:       175: (** [move_cursor ?cap ?fd motion] moves the cursor on [fd].[39m
     [38;5;2m12994[39m: [38;5;2m     5928:       176: [39m
     [38;5;2m12995[39m: [38;5;2m     5929:       177:     [motion] is one of:[39m
     [38;5;2m12996[39m: [38;5;2m     5930:       178:     {ul[39m
     [38;5;2m12997[39m: [38;5;2m     5931:       179:     {- [`To (column, line)], positioning the cursor to [(column, line)]. Origin[39m
     [38;5;2m12998[39m: [38;5;2m     5932:       180:        is [(0, 0)], the upper-left corner of the screen.}[39m
     [38;5;2m12999[39m: [38;5;2m     5933:       181:     {- [`Home], moving the cursor the beginning of line.}[39m
     [38;5;2m13000[39m: [38;5;2m     5934:       182:     {- [`By (columns, lines)], moving the cursor [columns] to the right (left if[39m
     [38;5;2m13001[39m: [38;5;2m     5935:       183:        negative) and [lines] down (up if negative).[39m
     [38;5;2m13002[39m: [38;5;2m     5936:       184: [39m
     [38;5;2m13003[39m: [38;5;2m     5937:       185:        {b Note} Behavior is terminal dependent if the movement overshoots the[39m
     [38;5;2m13004[39m: [38;5;2m     5938:       186:        output size.}} *)[39m
     [38;5;2m13005[39m: [38;5;2m     5939:       187: [39m
     [38;5;2m13006[39m: [38;5;2m     5940:       188: (** {1:caps Capability detection}[39m
     [38;5;2m13007[39m: [38;5;2m     5941:       189: [39m
     [38;5;2m13008[39m: [38;5;2m     5942:       190:     All [image] output requires {{!Notty.Cap.t}terminal capabilities}.[39m
     [38;5;2m13009[39m: [38;5;2m     5943:       191: [39m
     [38;5;2m13010[39m: [38;5;2m     5944:       192:     When not provided, capabilities are auto-detected, by checking that the[39m
     [38;5;2m13011[39m: [38;5;2m     5945:       193:     output is a tty, that the environment variable [$TERM] is set, and that it[39m
     [38;5;2m13012[39m: [38;5;2m     5946:       194:     is not set to either [""] or ["dumb"]. If these conditions hold,[39m
     [38;5;2m13013[39m: [38;5;2m     5947:       195:     {{!Notty.Cap.ansi}ANSI} escapes are used. Otherwise, {{!Notty.Cap.dumb}no}[39m
     [38;5;2m13014[39m: [38;5;2m     5948:       196:     escapes are used. *)[39m
     [38;5;2m13015[39m: [38;5;2m     5949:       197: [39m
     [38;5;2m13016[39m: [38;5;2m     5950:       198: (**/**)[39m
     [38;5;2m13017[39m: [38;5;2m     5951:       199: (** {1 Private}[39m
     [38;5;2m13018[39m: [38;5;2m     5952:       200: [39m
     [38;5;2m13019[39m: [38;5;2m     5953:       201:     These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m13020[39m: [38;5;2m     5954:       202: module Private : sig[39m
     [38;5;2m13021[39m: [38;5;2m     5955:       203: [39m
     [38;5;2m13022[39m: [38;5;2m     5956:       204:   val cap_for_fd        : Unix.file_descr -> Cap.t[39m
     [38;5;2m13023[39m: [38;5;2m     5957:       205:   val setup_tcattr      : nosig:bool -> Unix.file_descr -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m13024[39m: [38;5;2m     5958:       206:   val set_winch_handler : (unit -> unit) -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m13025[39m: [38;5;2m     5959:       207: [39m
     [38;5;2m13026[39m: [38;5;2m     5960:       208:   module Gen_output (O : sig[39m
     [38;5;2m13027[39m: [38;5;2m     5961:       209:     type fd[39m
     [38;5;2m13028[39m: [38;5;2m     5962:       210:     type k[39m
     [38;5;2m13029[39m: [38;5;2m     5963:       211:     val def   : fd[39m
     [38;5;2m13030[39m: [38;5;2m     5964:       212:     val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m13031[39m: [38;5;2m     5965:       213:     val write : fd -> Buffer.t -> k[39m
     [38;5;2m13032[39m: [38;5;2m     5966:       214:   end ) : sig[39m
     [38;5;2m13033[39m: [38;5;2m     5967:       215:     val output_image : ?cap:Cap.t -> ?fd:O.fd -> image -> O.k[39m
     [38;5;2m13034[39m: [38;5;2m     5968:       216:     val output_image_size : ?cap:Cap.t -> ?fd:O.fd -> (int * int -> image) -> O.k[39m
     [38;5;2m13035[39m: [38;5;2m     5969:       217:     val show_cursor : ?cap:Cap.t -> ?fd:O.fd -> bool -> O.k[39m
     [38;5;2m13036[39m: [38;5;2m     5970:       218:     val move_cursor : ?cap:Cap.t -> ?fd:O.fd -> [ `Home | `By of int * int | `To of int * int ] -> O.k[39m
     [38;5;2m13037[39m: [38;5;2m     5971:       219:     val eol : image -> image[39m
     [38;5;2m13038[39m: [38;5;2m     5972:       220:   end[39m
     [38;5;2m13039[39m: [38;5;2m     5973:       221: end[39m
     [38;5;2m13040[39m: [38;5;2m     5974:       222: (**/**)[39m
     [38;5;2m13041[39m: [38;5;2m     5975: Added executable file ../notty/support/gen_unicode_props.ml:[39m
     [38;5;2m13042[39m: [38;5;2m     5976:         1: #!/usr/bin/env ocaml[39m
     [38;5;2m13043[39m: [38;5;2m     5977:         2: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m13044[39m: [38;5;2m     5978:         3:    See LICENSE.md. *)[39m
     [38;5;2m13045[39m: [38;5;2m     5979:         4: [39m
     [38;5;2m13046[39m: [38;5;2m     5980:         5: #use "topfind"[39m
     [38;5;2m13047[39m: [38;5;2m     5981:         6: #require "uucp"[39m
     [38;5;2m13048[39m: [38;5;2m     5982:         7: [39m
     [38;5;2m13049[39m: [38;5;2m     5983:         8: let filter p seq i = seq (fun x -> if p x then i x)[39m
     [38;5;2m13050[39m: [38;5;2m     5984:         9: let map f seq i = seq (fun x -> i (f x))[39m
     [38;5;2m13051[39m: [38;5;2m     5985:        10: let uchars it =[39m
     [38;5;2m13052[39m: [38;5;2m     5986:        11:   let rec go it u = it u; go it (Uchar.succ u) in[39m
     [38;5;2m13053[39m: [38;5;2m     5987:        12:   try go it Uchar.min with Invalid_argument _ -> ()[39m
     [38;5;2m13054[39m: [38;5;2m     5988:        13: let to_list seq =[39m
     [38;5;2m13055[39m: [38;5;2m     5989:        14:   let xs = ref [] in[39m
     [38;5;2m13056[39m: [38;5;2m     5990:        15:   seq (fun x -> xs := x :: !xs);[39m
     [38;5;2m13057[39m: [38;5;2m     5991:        16:   List.rev !xs[39m
     [38;5;2m13058[39m: [38;5;2m     5992:        17: [39m
     [38;5;2m13059[39m: [38;5;2m     5993:        18: let intervals_kv seq i =[39m
     [38;5;2m13060[39m: [38;5;2m     5994:        19:   let s = ref None in[39m
     [38;5;2m13061[39m: [38;5;2m     5995:        20:   let f (x, v) = match !s with[39m
     [38;5;2m13062[39m: [38;5;2m     5996:        21:   | None -> s := Some (x, x, v)[39m
     [38;5;2m13063[39m: [38;5;2m     5997:        22:   | Some (a, b, v0) when v = v0 && x = Uchar.succ b -> s := Some (a, x, v0)[39m
     [38;5;2m13064[39m: [38;5;2m     5998:        23:   | Some e -> i e; s := Some (x, x, v) in[39m
     [38;5;2m13065[39m: [38;5;2m     5999:        24:   seq f;[39m
     [38;5;2m13066[39m: [38;5;2m     6000:        25:   match !s with Some e -> i e | _ -> ()[39m
     [38;5;2m13067[39m: [38;5;2m     6001:        26: [39m
     [38;5;2m13068[39m: [38;5;2m     6002:        27: let intervals_p seq =[39m
     [38;5;2m13069[39m: [38;5;2m     6003:        28:   map (fun x -> x, ()) seq |> intervals_kv |> map (fun (a, b, _) -> a, b)[39m
     [38;5;2m13070[39m: [38;5;2m     6004:        29: [39m
     [38;5;2m13071[39m: [38;5;2m     6005:        30: (* Condenses code points into continuous range. *)[39m
     [38;5;2m13072[39m: [38;5;2m     6006:        31: let pack_u u = let i = Uchar.to_int u in if i > 0xd7ff then i - 0x800 else i[39m
     [38;5;2m13073[39m: [38;5;2m     6007:        32: let unpack_u i = Uchar.of_int (if i < 0xd800 then i else i + 0x800)[39m
     [38;5;2m13074[39m: [38;5;2m     6008:        33: [39m
     [38;5;2m13075[39m: [38;5;2m     6009:        34: (* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m13076[39m: [38;5;2m     6010:        35:    Root is variable; lower levels are either empty or complete.[39m
     [38;5;2m13077[39m: [38;5;2m     6011:        36: [39m
     [38;5;2m13078[39m: [38;5;2m     6012:        37:    At the moment, packed Uchar.max is 0x10f7ff; this can map up to 0xffffff[39m
     [38;5;2m13079[39m: [38;5;2m     6013:        38:    distinct code points.  *)[39m
     [38;5;2m13080[39m: [38;5;2m     6014:        39: let trie ~default f =[39m
     [38;5;2m13081[39m: [38;5;2m     6015:        40:   let xs = List.init ((pack_u Uchar.max lsr 12) + 1) @@ fun b0 ->[39m
     [38;5;2m13082[39m: [38;5;2m     6016:        41:     let mask = b0 lsl 12 in[39m
     [38;5;2m13083[39m: [38;5;2m     6017:        42:     let arr = Array.init 0x40 @@ fun b1 ->[39m
     [38;5;2m13084[39m: [38;5;2m     6018:        43:       let mask = mask lor (b1 lsl 6) in[39m
     [38;5;2m13085[39m: [38;5;2m     6019:        44:       let v b2 = match unpack_u (mask lor b2) with[39m
     [38;5;2m13086[39m: [38;5;2m     6020:        45:       | x -> f x[39m
     [38;5;2m13087[39m: [38;5;2m     6021:        46:       | exception Invalid_argument _ -> default in[39m
     [38;5;2m13088[39m: [38;5;2m     6022:        47:       match (for b2 = 0 to 0x3f do if v b2 <> default then raise Exit done) with[39m
     [38;5;2m13089[39m: [38;5;2m     6023:        48:       | exception Exit -> String.init 0x40 (fun b2 -> Char.chr (v b2))[39m
     [38;5;2m13090[39m: [38;5;2m     6024:        49:       | () -> ""[39m
     [38;5;2m13091[39m: [38;5;2m     6025:        50:     in[39m
     [38;5;2m13092[39m: [38;5;2m     6026:        51:     if Array.for_all ((=) "") arr then [||] else arr[39m
     [38;5;2m13093[39m: [38;5;2m     6027:        52:   in[39m
     [38;5;2m13094[39m: [38;5;2m     6028:        53:   let rec trim = function [||]::xs -> trim xs | xs -> xs in[39m
     [38;5;2m13095[39m: [38;5;2m     6029:        54:   List.rev (trim (List.rev xs)) |> Array.of_list[39m
     [38;5;2m13096[39m: [38;5;2m     6030:        55: [39m
     [38;5;2m13097[39m: [38;5;2m     6031:        56: let pf = Format.fprintf[39m
     [38;5;2m13098[39m: [38;5;2m     6032:        57: let strf = Format.sprintf[39m
     [38;5;2m13099[39m: [38;5;2m     6033:        58: let pp_iter ?(sep = fun _ _ -> ()) iter pp ppf x =[39m
     [38;5;2m13100[39m: [38;5;2m     6034:        59:   let fst = ref true in[39m
     [38;5;2m13101[39m: [38;5;2m     6035:        60:   let f x = (if !fst then fst := false else sep ppf ()); pp ppf x in[39m
     [38;5;2m13102[39m: [38;5;2m     6036:        61:   iter f x[39m
     [38;5;2m13103[39m: [38;5;2m     6037:        62: let pp_u ppf u = pf ppf "0x%04x" (Uchar.to_int u)[39m
     [38;5;2m13104[39m: [38;5;2m     6038:        63: let pp_as_array iter pp ppf x =[39m
     [38;5;2m13105[39m: [38;5;2m     6039:        64:   let sep ppf () = pf ppf ";@ " in[39m
     [38;5;2m13106[39m: [38;5;2m     6040:        65:   pf ppf "@[<2>[|%a|]@]" (pp_iter ~sep iter pp) x[39m
     [38;5;2m13107[39m: [38;5;2m     6041:        66: [39m
     [38;5;2m13108[39m: [38;5;2m     6042:        67: let intern ppf_ml iter =[39m
     [38;5;2m13109[39m: [38;5;2m     6043:        68:   let t = Hashtbl.create 16 in[39m
     [38;5;2m13110[39m: [38;5;2m     6044:        69:   let n = ref 0 in[39m
     [38;5;2m13111[39m: [38;5;2m     6045:        70:   iter (fun s -> if not (Hashtbl.mem t s) then begin[39m
     [38;5;2m13112[39m: [38;5;2m     6046:        71:     let name = strf "s%03d" !n in[39m
     [38;5;2m13113[39m: [38;5;2m     6047:        72:     Hashtbl.add t s name; incr n;[39m
     [38;5;2m13114[39m: [38;5;2m     6048:        73:     pf ppf_ml "let %s = %S@." name s[39m
     [38;5;2m13115[39m: [38;5;2m     6049:        74:   end);[39m
     [38;5;2m13116[39m: [38;5;2m     6050:        75:   pf ppf_ml "@.";[39m
     [38;5;2m13117[39m: [38;5;2m     6051:        76:   (fun ppf s -> match Hashtbl.find_opt t s with[39m
     [38;5;2m13118[39m: [38;5;2m     6052:        77:    | Some name -> pf ppf "%s" name[39m
     [38;5;2m13119[39m: [38;5;2m     6053:        78:    | None -> pf ppf "%S" s)[39m
     [38;5;2m13120[39m: [38;5;2m     6054:        79: [39m
     [38;5;2m13121[39m: [38;5;2m     6055:        80: let dump_interval_map (ppf_mli, ppf_ml) ~name ~desc seq =[39m
     [38;5;2m13122[39m: [38;5;2m     6056:        81:   pf ppf_mli "(* %s *)@.val %s: int array * int array * int array@.@." desc name;[39m
     [38;5;2m13123[39m: [38;5;2m     6057:        82:   let xs = to_list (intervals_kv seq) in[39m
     [38;5;2m13124[39m: [38;5;2m     6058:        83:   let aa = List.map (fun (a, _, _) -> a) xs[39m
     [38;5;2m13125[39m: [38;5;2m     6059:        84:   and bb = List.map (fun (_, b, _) -> b) xs[39m
     [38;5;2m13126[39m: [38;5;2m     6060:        85:   and cc = List.map (fun (_, _, c) -> c) xs in[39m
     [38;5;2m13127[39m: [38;5;2m     6061:        86:   let pp_arr pp = pp_as_array List.iter pp in[39m
     [38;5;2m13128[39m: [38;5;2m     6062:        87:   let pp_arr_u = pp_arr pp_u and pp_arr_i = pp_arr Format.pp_print_int in[39m
     [38;5;2m13129[39m: [38;5;2m     6063:        88:   pf ppf_ml "@[<2>let %s =@ @[<1>(%a,@ %a,@ %a)@]@]@.@."[39m
     [38;5;2m13130[39m: [38;5;2m     6064:        89:      name pp_arr_u aa pp_arr_u bb pp_arr_i cc[39m
     [38;5;2m13131[39m: [38;5;2m     6065:        90: [39m
     [38;5;2m13132[39m: [38;5;2m     6066:        91: let dump_trie_map (ppf_mli, ppf_ml) ~name ~desc ~default f =[39m
     [38;5;2m13133[39m: [38;5;2m     6067:        92:   pf ppf_mli "(* %s *)@.val %s: string array array@.@." desc name;[39m
     [38;5;2m13134[39m: [38;5;2m     6068:        93:   let xs = trie ~default f in[39m
     [38;5;2m13135[39m: [38;5;2m     6069:        94:   let pp_s = intern ppf_ml Array.(fun i -> i ""; iter (iter i) xs) in[39m
     [38;5;2m13136[39m: [38;5;2m     6070:        95:   pf ppf_ml "@[<2>let %s =@ %a@]" name[39m
     [38;5;2m13137[39m: [38;5;2m     6071:        96:     Array.(pp_as_array iter (pp_as_array iter pp_s)) xs[39m
     [38;5;2m13138[39m: [38;5;2m     6072:        97: [39m
     [38;5;2m13139[39m: [38;5;2m     6073:        98: let pp_header ppf = Format.fprintf ppf[39m
     [38;5;2m13140[39m: [38;5;2m     6074:        99: "(* Do not edit.[39m
     [38;5;2m13141[39m: [38;5;2m     6075:       100:  *[39m
     [38;5;2m13142[39m: [38;5;2m     6076:       101:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m13143[39m: [38;5;2m     6077:       102:  * using `%s`.[39m
     [38;5;2m13144[39m: [38;5;2m     6078:       103:  *[39m
     [38;5;2m13145[39m: [38;5;2m     6079:       104:  * Unicode version %s.[39m
     [38;5;2m13146[39m: [38;5;2m     6080:       105:  *)[39m
     [38;5;2m13147[39m: [38;5;2m     6081:       106: [39m
     [38;5;2m13148[39m: [38;5;2m     6082:       107: " Sys.argv.(0) Uucp.unicode_version[39m
     [38;5;2m13149[39m: [38;5;2m     6083:       108: [39m
     [38;5;2m13150[39m: [38;5;2m     6084:       109: let extract (ppmli, ppml as ppfs) =[39m
     [38;5;2m13151[39m: [38;5;2m     6085:       110: [39m
     [38;5;2m13152[39m: [38;5;2m     6086:       111:   pp_header ppmli; pp_header ppml;[39m
     [38;5;2m13153[39m: [38;5;2m     6087:       112: [39m
     [38;5;2m13154[39m: [38;5;2m     6088:       113:   dump_interval_map ppfs[39m
     [38;5;2m13155[39m: [38;5;2m     6089:       114:     ~name:"tty_width_hint"[39m
     [38;5;2m13156[39m: [38;5;2m     6090:       115:     ~desc:"Uucp.Break.tty_width_hint"[39m
     [38;5;2m13157[39m: [38;5;2m     6091:       116:     (* w = -1 is easy to detect.[39m
     [38;5;2m13158[39m: [38;5;2m     6092:       117:        w = 1 covers the most intervals, so we default it. *)[39m
     [38;5;2m13159[39m: [38;5;2m     6093:       118:     (uchars |> map (fun u -> u, Uucp.Break.tty_width_hint u)[39m
     [38;5;2m13160[39m: [38;5;2m     6094:       119:             |> filter (fun (_, w) -> w <> -1 && w <> 1));[39m
     [38;5;2m13161[39m: [38;5;2m     6095:       120: [39m
     [38;5;2m13162[39m: [38;5;2m     6096:       121:   (* dump_interval_map ppfs *)[39m
     [38;5;2m13163[39m: [38;5;2m     6097:       122:   (*   ~name:"grapheme_cluster_boundary" *)[39m
     [38;5;2m13164[39m: [38;5;2m     6098:       123:   (*   ~desc:"Uucp.Break.Low.grapheme_cluster." *)[39m
     [38;5;2m13165[39m: [38;5;2m     6099:       124:   (*   (1* No single value dominates the histogram. *1) *)[39m
     [38;5;2m13166[39m: [38;5;2m     6100:       125:   (*   (uchars |> map (fun u -> u, Uucp.Break.Low.grapheme_cluster u)); *)[39m
     [38;5;2m13167[39m: [38;5;2m     6101:       126: [39m
     [38;5;2m13168[39m: [38;5;2m     6102:       127:   dump_trie_map ppfs[39m
     [38;5;2m13169[39m: [38;5;2m     6103:       128:     ~name:"grapheme_cluster_boundary"[39m
     [38;5;2m13170[39m: [38;5;2m     6104:       129:     ~desc:"Uucp.Break.Low.grapheme_cluster."[39m
     [38;5;2m13171[39m: [38;5;2m     6105:       130:     ~default:16 (* 16 - `XX - is by far the most prevalent value *)[39m
     [38;5;2m13172[39m: [38;5;2m     6106:       131:     Uucp.Break.Low.grapheme_cluster;[39m
     [38;5;2m13173[39m: [38;5;2m     6107:       132: [39m
     [38;5;2m13174[39m: [38;5;2m     6108:       133:   ()[39m
     [38;5;2m13175[39m: [38;5;2m     6109:       134: [39m
     [38;5;2m13176[39m: [38;5;2m     6110:       135: let file = "src/no-uucp/notty_uucp_data"[39m
     [38;5;2m13177[39m: [38;5;2m     6111:       136: [39m
     [38;5;2m13178[39m: [38;5;2m     6112:       137: let with_new name f =[39m
     [38;5;2m13179[39m: [38;5;2m     6113:       138:   let o = open_out_gen [Open_trunc; Open_creat; Open_wronly] 0o664 name in[39m
     [38;5;2m13180[39m: [38;5;2m     6114:       139:   let ppf = Format.formatter_of_out_channel o in[39m
     [38;5;2m13181[39m: [38;5;2m     6115:       140:   f ppf; Format.pp_print_flush ppf (); close_out o[39m
     [38;5;2m13182[39m: [38;5;2m     6116:       141: [39m
     [38;5;2m13183[39m: [38;5;2m     6117:       142: let () =[39m
     [38;5;2m13184[39m: [38;5;2m     6118:       143:   Format.printf "Dumping Unicode v%s data to %s.@." Uucp.unicode_version file;[39m
     [38;5;2m13185[39m: [38;5;2m     6119:       144:   with_new (file ^ ".mli") @@ fun ppmli ->[39m
     [38;5;2m13186[39m: [38;5;2m     6120:       145:     with_new (file ^ ".ml") @@ fun ppml ->[39m
     [38;5;2m13187[39m: [38;5;2m     6121:       146:       extract (ppmli, ppml)[39m
     [38;5;2m13188[39m: [38;5;2m     6122: Removed regular file ../test/dune:[39m
     [38;5;2m13189[39m: [38;5;2m     6123:    1     : (test[39m
     [38;5;2m13190[39m: [38;5;2m     6124:    2     :  (name jj_tui))[39m
     [38;5;2m13191[39m: [38;5;2m     6125: Removed regular file ../test/jj_tui.ml:[39m
     [38;5;2m13192[39m: [38;5;2m     6126:     (empty)[39m
     [38;5;2m13193[39m: [38;5;2mAdded regular file test/dune:[39m
     [38;5;2m13194[39m: [38;5;2m        1: (test[39m
     [38;5;2m13195[39m: [38;5;2m        2:  (name jj_tui)[39m
     [38;5;2m13196[39m: [38;5;2m        3:  (libraries jj_tui)[39m
     [38;5;2m13197[39m: [38;5;2m        4:  (preprocess[39m
     [38;5;2m13198[39m: [38;5;2m        5:   (pps ppx_jane ppx_expect)))[39m
     [38;5;2m13199[39m: [38;5;2mAdded regular file test/jj_tui.ml:[39m
     [38;5;2m13200[39m: [38;5;2m    (empty)[39m
     [38;5;2m13201[39m: [38;5;2mAdded regular file testing/hi:[39m
     [38;5;2m13202[39m: [38;5;2m        1: hiiiiiii[39m
     [38;5;2m13203[39m: [38;5;2m        2: hiiiiiiiiiiii[39m
     [38;5;2m13204[39m: [38;5;2m        3: hiiiiiiiiiiii[39m
     [38;5;2m13205[39m: [38;5;2mAdded regular file testing/other/file:[39m
     [38;5;2m13206[39m: [38;5;2m        1: hello Im other[39m
     [38;5;2m13207[39m: [38;5;2mRemoved regular file ../jj_tui.install:[39m
     [38;5;2m13208[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m13209[39m: [38;5;2m   2     :   "_build/install/default/lib/jj_tui/META"[39m
     [38;5;2m13210[39m: [38;5;2m   3     :   "_build/install/default/lib/jj_tui/dune-package"[39m
     [38;5;2m13211[39m: [38;5;2m   4     :   "_build/install/default/lib/jj_tui/opam"[39m
     [38;5;2m13212[39m: [38;5;2m   5     : ][39m
     [38;5;2m13213[39m: [38;5;2m   6     : bin: [[39m
     [38;5;2m13214[39m: [38;5;2m   7     :   "_build/install/default/bin/jj_tui"[39m
     [38;5;2m13215[39m: [38;5;2m   8     : ][39m
     [38;5;2m13216[39m: [38;5;2mRemoved regular file ../jj_tui.opam:[39m
     [38;5;2m13217[39m: [38;5;2m   1     : # This file is generated by dune, edit dune-project instead[39m
     [38;5;2m13218[39m: [38;5;2m   2     : opam-version: "2.0"[39m
     [38;5;2m13219[39m: [38;5;2m   3     : synopsis: "A short synopsis"[39m
     [38;5;2m13220[39m: [38;5;2m   4     : description: "A longer description"[39m
     [38;5;2m13221[39m: [38;5;2m   5     : maintainer: ["Maintainer Name"][39m
     [38;5;2m13222[39m: [38;5;2m   6     : authors: ["Author Name"][39m
     [38;5;2m13223[39m: [38;5;2m   7     : license: "LICENSE"[39m
     [38;5;2m13224[39m: [38;5;2m   8     : tags: ["topics" "to describe" "your" "project"][39m
     [38;5;2m13225[39m: [38;5;2m   9     : homepage: "https://github.com/username/reponame"[39m
     [38;5;2m13226[39m: [38;5;2m  10     : doc: "https://url/to/documentation"[39m
     [38;5;2m13227[39m: [38;5;2m  11     : bug-reports: "https://github.com/username/reponame/issues"[39m
     [38;5;2m13228[39m: [38;5;2m  12     : depends: [[39m
     [38;5;2m13229[39m: [38;5;2m  13     :   "ocaml"[39m
     [38;5;2m13230[39m: [38;5;2m  14     :   "dune" {>= "3.9"}[39m
     [38;5;2m13231[39m: [38;5;2m  15     :   "odoc" {with-doc}[39m
     [38;5;2m13232[39m: [38;5;2m  16     : ][39m
     [38;5;2m13233[39m: [38;5;2m  17     : build: [[39m
     [38;5;2m13234[39m: [38;5;2m  18     :   ["dune" "subst"] {dev}[39m
     [38;5;2m13235[39m: [38;5;2m  19     :   [[39m
     [38;5;2m13236[39m: [38;5;2m  20     :     "dune"[39m
     [38;5;2m13237[39m: [38;5;2m  21     :     "build"[39m
     [38;5;2m13238[39m: [38;5;2m  22     :     "-p"[39m
     [38;5;2m13239[39m: [38;5;2m  23     :     name[39m
     [38;5;2m13240[39m: [38;5;2m  24     :     "-j"[39m
     [38;5;2m13241[39m: [38;5;2m  25     :     jobs[39m
     [38;5;2m13242[39m: [38;5;2m  26     :     "@install"[39m
     [38;5;2m13243[39m: [38;5;2m  27     :     "@runtest" {with-test}[39m
     [38;5;2m13244[39m: [38;5;2m  28     :     "@doc" {with-doc}[39m
     [38;5;2m13245[39m: [38;5;2m  29     :   ][39m
     [38;5;2m13246[39m: [38;5;2m  30     : ][39m
     [38;5;2m13247[39m: [38;5;2m  31     : dev-repo: "git+https://github.com/username/reponame.git"[39m
     [38;5;2m13248[39m: [38;5;2mRemoved regular file ../lib/dune:[39m
     [38;5;2m13249[39m: [38;5;2m   1     : (library[39m
     [38;5;2m13250[39m: [38;5;2m   2     :  (name jj_tui)[39m
     [38;5;2m13251[39m: [38;5;2m   3     :  (libraries core stdio core_unix.command_unix )[39m
     [38;5;2m13252[39m: [38;5;2m   4     :  )[39m
     [38;5;2m13253[39m: [38;5;2m   5     : [39m
     [38;5;2m13254[39m: [38;5;2mRemoved regular file ../lib/process.ml:[39m
     [38;5;2m13255[39m: [38;5;2m   1     : [39m
     [38;5;2m13256[39m: [38;5;2m   2     : let mk_home_cmd cmd =[39m
     [38;5;2m13257[39m: [38;5;2m   3     :   let home_dir = Unix.getenv "HOME" in[39m
     [38;5;2m13258[39m: [38;5;2m   4     :   Printf.sprintf "HOME=%s %s" home_dir cmd[39m
     [38;5;2m13259[39m: [38;5;2m   5     : [39m
     [38;5;2m13260[39m: [38;5;2m   6     : let proc_silent cmd =[39m
     [38;5;2m13261[39m: [38;5;2m   7     :   let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
     [38;5;2m13262[39m: [38;5;2m   8     :   ()[39m
     [38;5;2m13263[39m: [38;5;2m   9     : [39m
     [38;5;2m13264[39m: [38;5;2m  10     : let proc cmd =[39m
     [38;5;2m13265[39m: [38;5;2m  11     :   Printf.eprintf "🐚  %s\n%!" cmd;[39m
     [38;5;2m13266[39m: [38;5;2m  12     :   proc_silent cmd[39m
     [38;5;2m13267[39m: [38;5;2m  13     : [39m
     [38;5;2m13268[39m: [38;5;2m  14     : let collect_chan (channel : in_channel) : string =[39m
     [38;5;2m13269[39m: [38;5;2m  15     :   let rec loop acc =[39m
     [38;5;2m13270[39m: [38;5;2m  16     :     match input_line channel with[39m
     [38;5;2m13271[39m: [38;5;2m  17     :     | exception End_of_file -> acc[39m
     [38;5;2m13272[39m: [38;5;2m  18     :     | line -> loop (acc ^ line ^ "\n")[39m
     [38;5;2m13273[39m: [38;5;2m  19     :   in[39m
     [38;5;2m13274[39m: [38;5;2m  20     :   loop ""[39m
     [38;5;2m13275[39m: [38;5;2m  21     : [39m
     [38;5;2m13276[39m: [38;5;2m  22     : let proc_stdout cmd =[39m
     [38;5;2m13277[39m: [38;5;2m  23     :   let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
     [38;5;2m13278[39m: [38;5;2m  24     :     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m13279[39m: [38;5;2m  25     :   in[39m
     [38;5;2m13280[39m: [38;5;2m  26     :   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m13281[39m: [38;5;2m  27     :   let _ = Unix.close_process_full process in[39m
     [38;5;2m13282[39m: [38;5;2m  28     :   String.trim stdout_result[39m
     [38;5;2m13283[39m: [38;5;2m  29     : [39m
     [38;5;2m13284[39m: [38;5;2m  30     : let proc_stdOutAndErr cmd =[39m
     [38;5;2m13285[39m: [38;5;2m  31     :   let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
     [38;5;2m13286[39m: [38;5;2m  32     :     Unix.open_process_full (mk_home_cmd cmd) [||][39m
     [38;5;2m13287[39m: [38;5;2m  33     :   in[39m
     [38;5;2m13288[39m: [38;5;2m  34     :   let stdout_result = collect_chan proc_stdout in[39m
     [38;5;2m13289[39m: [38;5;2m  35     :   let stderr_result = collect_chan proc_stderr in[39m
     [38;5;2m13290[39m: [38;5;2m  36     :   let _ = Unix.close_process_full process in[39m
     [38;5;2m13291[39m: [38;5;2m  37     :   String.trim (stdout_result^stderr_result)[39m
     [38;5;2m13292[39m: [38;5;2mRemoved regular file ../minttea/leaves.install:[39m
     [38;5;2m13293[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m13294[39m: [38;5;2m   2     :   "_build/install/default/lib/leaves/META"[39m
     [38;5;2m13295[39m: [38;5;2m   3     :   "_build/install/default/lib/leaves/cursor.ml"[39m
     [38;5;2m13296[39m: [38;5;2m   4     :   "_build/install/default/lib/leaves/cursor.mli"[39m
     [38;5;2m13297[39m: [38;5;2m   5     :   "_build/install/default/lib/leaves/dune-package"[39m
     [38;5;2m13298[39m: [38;5;2m   6     :   "_build/install/default/lib/leaves/filtered_list.ml"[39m
     [38;5;2m13299[39m: [38;5;2m   7     :   "_build/install/default/lib/leaves/filtered_list.mli"[39m
     [38;5;2m13300[39m: [38;5;2m   8     :   "_build/install/default/lib/leaves/forms.ml"[39m
     [38;5;2m13301[39m: [38;5;2m   9     :   "_build/install/default/lib/leaves/fps.ml"[39m
     [38;5;2m13302[39m: [38;5;2m  10     :   "_build/install/default/lib/leaves/fps.mli"[39m
     [38;5;2m13303[39m: [38;5;2m  11     :   "_build/install/default/lib/leaves/leaves.a"[39m
     [38;5;2m13304[39m: [38;5;2m  12     :   "_build/install/default/lib/leaves/leaves.cma"[39m
     [38;5;2m13305[39m: [38;5;2m  13     :   "_build/install/default/lib/leaves/leaves.cmi"[39m
     [38;5;2m13306[39m: [38;5;2m  14     :   "_build/install/default/lib/leaves/leaves.cmt"[39m
     [38;5;2m13307[39m: [38;5;2m  15     :   "_build/install/default/lib/leaves/leaves.cmx"[39m
     [38;5;2m13308[39m: [38;5;2m  16     :   "_build/install/default/lib/leaves/leaves.cmxa"[39m
     [38;5;2m13309[39m: [38;5;2m  17     :   "_build/install/default/lib/leaves/leaves.ml"[39m
     [38;5;2m13310[39m: [38;5;2m  18     :   "_build/install/default/lib/leaves/leaves__Cursor.cmi"[39m
     [38;5;2m13311[39m: [38;5;2m  19     :   "_build/install/default/lib/leaves/leaves__Cursor.cmt"[39m
     [38;5;2m13312[39m: [38;5;2m  20     :   "_build/install/default/lib/leaves/leaves__Cursor.cmti"[39m
     [38;5;2m13313[39m: [38;5;2m  21     :   "_build/install/default/lib/leaves/leaves__Cursor.cmx"[39m
     [38;5;2m13314[39m: [38;5;2m  22     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmi"[39m
     [38;5;2m13315[39m: [38;5;2m  23     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmt"[39m
     [38;5;2m13316[39m: [38;5;2m  24     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmti"[39m
     [38;5;2m13317[39m: [38;5;2m  25     :   "_build/install/default/lib/leaves/leaves__Filtered_list.cmx"[39m
     [38;5;2m13318[39m: [38;5;2m  26     :   "_build/install/default/lib/leaves/leaves__Forms.cmi"[39m
     [38;5;2m13319[39m: [38;5;2m  27     :   "_build/install/default/lib/leaves/leaves__Forms.cmt"[39m
     [38;5;2m13320[39m: [38;5;2m  28     :   "_build/install/default/lib/leaves/leaves__Forms.cmx"[39m
     [38;5;2m13321[39m: [38;5;2m  29     :   "_build/install/default/lib/leaves/leaves__Fps.cmi"[39m
     [38;5;2m13322[39m: [38;5;2m  30     :   "_build/install/default/lib/leaves/leaves__Fps.cmt"[39m
     [38;5;2m13323[39m: [38;5;2m  31     :   "_build/install/default/lib/leaves/leaves__Fps.cmti"[39m
     [38;5;2m13324[39m: [38;5;2m  32     :   "_build/install/default/lib/leaves/leaves__Fps.cmx"[39m
     [38;5;2m13325[39m: [38;5;2m  33     :   "_build/install/default/lib/leaves/leaves__Paginator.cmi"[39m
     [38;5;2m13326[39m: [38;5;2m  34     :   "_build/install/default/lib/leaves/leaves__Paginator.cmt"[39m
     [38;5;2m13327[39m: [38;5;2m  35     :   "_build/install/default/lib/leaves/leaves__Paginator.cmti"[39m
     [38;5;2m13328[39m: [38;5;2m  36     :   "_build/install/default/lib/leaves/leaves__Paginator.cmx"[39m
     [38;5;2m13329[39m: [38;5;2m  37     :   "_build/install/default/lib/leaves/leaves__Progress.cmi"[39m
     [38;5;2m13330[39m: [38;5;2m  38     :   "_build/install/default/lib/leaves/leaves__Progress.cmt"[39m
     [38;5;2m13331[39m: [38;5;2m  39     :   "_build/install/default/lib/leaves/leaves__Progress.cmti"[39m
     [38;5;2m13332[39m: [38;5;2m  40     :   "_build/install/default/lib/leaves/leaves__Progress.cmx"[39m
     [38;5;2m13333[39m: [38;5;2m  41     :   "_build/install/default/lib/leaves/leaves__Spinner.cmi"[39m
     [38;5;2m13334[39m: [38;5;2m  42     :   "_build/install/default/lib/leaves/leaves__Spinner.cmt"[39m
     [38;5;2m13335[39m: [38;5;2m  43     :   "_build/install/default/lib/leaves/leaves__Spinner.cmti"[39m
     [38;5;2m13336[39m: [38;5;2m  44     :   "_build/install/default/lib/leaves/leaves__Spinner.cmx"[39m
     [38;5;2m13337[39m: [38;5;2m  45     :   "_build/install/default/lib/leaves/leaves__Sprite.cmi"[39m
     [38;5;2m13338[39m: [38;5;2m  46     :   "_build/install/default/lib/leaves/leaves__Sprite.cmt"[39m
     [38;5;2m13339[39m: [38;5;2m  47     :   "_build/install/default/lib/leaves/leaves__Sprite.cmti"[39m
     [38;5;2m13340[39m: [38;5;2m  48     :   "_build/install/default/lib/leaves/leaves__Sprite.cmx"[39m
     [38;5;2m13341[39m: [38;5;2m  49     :   "_build/install/default/lib/leaves/leaves__Table.cmi"[39m
     [38;5;2m13342[39m: [38;5;2m  50     :   "_build/install/default/lib/leaves/leaves__Table.cmt"[39m
     [38;5;2m13343[39m: [38;5;2m  51     :   "_build/install/default/lib/leaves/leaves__Table.cmx"[39m
     [38;5;2m13344[39m: [38;5;2m  52     :   "_build/install/default/lib/leaves/leaves__Text_input.cmi"[39m
     [38;5;2m13345[39m: [38;5;2m  53     :   "_build/install/default/lib/leaves/leaves__Text_input.cmt"[39m
     [38;5;2m13346[39m: [38;5;2m  54     :   "_build/install/default/lib/leaves/leaves__Text_input.cmti"[39m
     [38;5;2m13347[39m: [38;5;2m  55     :   "_build/install/default/lib/leaves/leaves__Text_input.cmx"[39m
     [38;5;2m13348[39m: [38;5;2m  56     :   "_build/install/default/lib/leaves/opam"[39m
     [38;5;2m13349[39m: [38;5;2m  57     :   "_build/install/default/lib/leaves/paginator.ml"[39m
     [38;5;2m13350[39m: [38;5;2m  58     :   "_build/install/default/lib/leaves/paginator.mli"[39m
     [38;5;2m13351[39m: [38;5;2m  59     :   "_build/install/default/lib/leaves/progress.ml"[39m
     [38;5;2m13352[39m: [38;5;2m  60     :   "_build/install/default/lib/leaves/progress.mli"[39m
     [38;5;2m13353[39m: [38;5;2m  61     :   "_build/install/default/lib/leaves/spinner.ml"[39m
     [38;5;2m13354[39m: [38;5;2m  62     :   "_build/install/default/lib/leaves/spinner.mli"[39m
     [38;5;2m13355[39m: [38;5;2m  63     :   "_build/install/default/lib/leaves/sprite.ml"[39m
     [38;5;2m13356[39m: [38;5;2m  64     :   "_build/install/default/lib/leaves/sprite.mli"[39m
     [38;5;2m13357[39m: [38;5;2m  65     :   "_build/install/default/lib/leaves/table.ml"[39m
     [38;5;2m13358[39m: [38;5;2m  66     :   "_build/install/default/lib/leaves/text_input.ml"[39m
     [38;5;2m13359[39m: [38;5;2m  67     :   "_build/install/default/lib/leaves/text_input.mli"[39m
     [38;5;2m13360[39m: [38;5;2m  68     : ][39m
     [38;5;2m13361[39m: [38;5;2m  69     : libexec: [[39m
     [38;5;2m13362[39m: [38;5;2m  70     :   "_build/install/default/lib/leaves/leaves.cmxs"[39m
     [38;5;2m13363[39m: [38;5;2m  71     : ][39m
     [38;5;2m13364[39m: [38;5;2m  72     : doc: [[39m
     [38;5;2m13365[39m: [38;5;2m  73     :   "_build/install/default/doc/leaves/CHANGES.md"[39m
     [38;5;2m13366[39m: [38;5;2m  74     :   "_build/install/default/doc/leaves/LICENSE.md"[39m
     [38;5;2m13367[39m: [38;5;2m  75     :   "_build/install/default/doc/leaves/README.md"[39m
     [38;5;2m13368[39m: [38;5;2m  76     : ][39m
     [38;5;2m13369[39m: [38;5;2mRemoved regular file ../minttea/minttea.install:[39m
     [38;5;2m13370[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m13371[39m: [38;5;2m   2     :   "_build/install/default/lib/minttea/META"[39m
     [38;5;2m13372[39m: [38;5;2m   3     :   "_build/install/default/lib/minttea/app.ml"[39m
     [38;5;2m13373[39m: [38;5;2m   4     :   "_build/install/default/lib/minttea/command.ml"[39m
     [38;5;2m13374[39m: [38;5;2m   5     :   "_build/install/default/lib/minttea/dune-package"[39m
     [38;5;2m13375[39m: [38;5;2m   6     :   "_build/install/default/lib/minttea/event.ml"[39m
     [38;5;2m13376[39m: [38;5;2m   7     :   "_build/install/default/lib/minttea/io_loop.ml"[39m
     [38;5;2m13377[39m: [38;5;2m   8     :   "_build/install/default/lib/minttea/minttea.a"[39m
     [38;5;2m13378[39m: [38;5;2m   9     :   "_build/install/default/lib/minttea/minttea.cma"[39m
     [38;5;2m13379[39m: [38;5;2m  10     :   "_build/install/default/lib/minttea/minttea.cmi"[39m
     [38;5;2m13380[39m: [38;5;2m  11     :   "_build/install/default/lib/minttea/minttea.cmt"[39m
     [38;5;2m13381[39m: [38;5;2m  12     :   "_build/install/default/lib/minttea/minttea.cmti"[39m
     [38;5;2m13382[39m: [38;5;2m  13     :   "_build/install/default/lib/minttea/minttea.cmx"[39m
     [38;5;2m13383[39m: [38;5;2m  14     :   "_build/install/default/lib/minttea/minttea.cmxa"[39m
     [38;5;2m13384[39m: [38;5;2m  15     :   "_build/install/default/lib/minttea/minttea.ml"[39m
     [38;5;2m13385[39m: [38;5;2m  16     :   "_build/install/default/lib/minttea/minttea.mli"[39m
     [38;5;2m13386[39m: [38;5;2m  17     :   "_build/install/default/lib/minttea/minttea__.cmi"[39m
     [38;5;2m13387[39m: [38;5;2m  18     :   "_build/install/default/lib/minttea/minttea__.cmt"[39m
     [38;5;2m13388[39m: [38;5;2m  19     :   "_build/install/default/lib/minttea/minttea__.cmx"[39m
     [38;5;2m13389[39m: [38;5;2m  20     :   "_build/install/default/lib/minttea/minttea__.ml"[39m
     [38;5;2m13390[39m: [38;5;2m  21     :   "_build/install/default/lib/minttea/minttea__App.cmi"[39m
     [38;5;2m13391[39m: [38;5;2m  22     :   "_build/install/default/lib/minttea/minttea__App.cmt"[39m
     [38;5;2m13392[39m: [38;5;2m  23     :   "_build/install/default/lib/minttea/minttea__App.cmx"[39m
     [38;5;2m13393[39m: [38;5;2m  24     :   "_build/install/default/lib/minttea/minttea__Command.cmi"[39m
     [38;5;2m13394[39m: [38;5;2m  25     :   "_build/install/default/lib/minttea/minttea__Command.cmt"[39m
     [38;5;2m13395[39m: [38;5;2m  26     :   "_build/install/default/lib/minttea/minttea__Command.cmx"[39m
     [38;5;2m13396[39m: [38;5;2m  27     :   "_build/install/default/lib/minttea/minttea__Event.cmi"[39m
     [38;5;2m13397[39m: [38;5;2m  28     :   "_build/install/default/lib/minttea/minttea__Event.cmt"[39m
     [38;5;2m13398[39m: [38;5;2m  29     :   "_build/install/default/lib/minttea/minttea__Event.cmx"[39m
     [38;5;2m13399[39m: [38;5;2m  30     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmi"[39m
     [38;5;2m13400[39m: [38;5;2m  31     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmt"[39m
     [38;5;2m13401[39m: [38;5;2m  32     :   "_build/install/default/lib/minttea/minttea__Io_loop.cmx"[39m
     [38;5;2m13402[39m: [38;5;2m  33     :   "_build/install/default/lib/minttea/minttea__Program.cmi"[39m
     [38;5;2m13403[39m: [38;5;2m  34     :   "_build/install/default/lib/minttea/minttea__Program.cmt"[39m
     [38;5;2m13404[39m: [38;5;2m  35     :   "_build/install/default/lib/minttea/minttea__Program.cmx"[39m
     [38;5;2m13405[39m: [38;5;2m  36     :   "_build/install/default/lib/minttea/minttea__Renderer.cmi"[39m
     [38;5;2m13406[39m: [38;5;2m  37     :   "_build/install/default/lib/minttea/minttea__Renderer.cmt"[39m
     [38;5;2m13407[39m: [38;5;2m  38     :   "_build/install/default/lib/minttea/minttea__Renderer.cmti"[39m
     [38;5;2m13408[39m: [38;5;2m  39     :   "_build/install/default/lib/minttea/minttea__Renderer.cmx"[39m
     [38;5;2m13409[39m: [38;5;2m  40     :   "_build/install/default/lib/minttea/opam"[39m
     [38;5;2m13410[39m: [38;5;2m  41     :   "_build/install/default/lib/minttea/program.ml"[39m
     [38;5;2m13411[39m: [38;5;2m  42     :   "_build/install/default/lib/minttea/renderer.ml"[39m
     [38;5;2m13412[39m: [38;5;2m  43     :   "_build/install/default/lib/minttea/renderer.mli"[39m
     [38;5;2m13413[39m: [38;5;2m  44     : ][39m
     [38;5;2m13414[39m: [38;5;2m  45     : libexec: [[39m
     [38;5;2m13415[39m: [38;5;2m  46     :   "_build/install/default/lib/minttea/minttea.cmxs"[39m
     [38;5;2m13416[39m: [38;5;2m  47     : ][39m
     [38;5;2m13417[39m: [38;5;2m  48     : doc: [[39m
     [38;5;2m13418[39m: [38;5;2m  49     :   "_build/install/default/doc/minttea/CHANGES.md"[39m
     [38;5;2m13419[39m: [38;5;2m  50     :   "_build/install/default/doc/minttea/LICENSE.md"[39m
     [38;5;2m13420[39m: [38;5;2m  51     :   "_build/install/default/doc/minttea/README.md"[39m
     [38;5;2m13421[39m: [38;5;2m  52     : ][39m
     [38;5;2m13422[39m: [38;5;2mRemoved regular file ../minttea/spices.install:[39m
     [38;5;2m13423[39m: [38;5;2m   1     : lib: [[39m
     [38;5;2m13424[39m: [38;5;2m   2     :   "_build/install/default/lib/spices/META"[39m
     [38;5;2m13425[39m: [38;5;2m   3     :   "_build/install/default/lib/spices/border.ml"[39m
     [38;5;2m13426[39m: [38;5;2m   4     :   "_build/install/default/lib/spices/dune-package"[39m
     [38;5;2m13427[39m: [38;5;2m   5     :   "_build/install/default/lib/spices/formatter.ml"[39m
     [38;5;2m13428[39m: [38;5;2m   6     :   "_build/install/default/lib/spices/gradient.ml"[39m
     [38;5;2m13429[39m: [38;5;2m   7     :   "_build/install/default/lib/spices/opam"[39m
     [38;5;2m13430[39m: [38;5;2m   8     :   "_build/install/default/lib/spices/spices.a"[39m
     [38;5;2m13431[39m: [38;5;2m   9     :   "_build/install/default/lib/spices/spices.cma"[39m
     [38;5;2m13432[39m: [38;5;2m  10     :   "_build/install/default/lib/spices/spices.cmi"[39m
     [38;5;2m13433[39m: [38;5;2m  11     :   "_build/install/default/lib/spices/spices.cmt"[39m
     [38;5;2m13434[39m: [38;5;2m  12     :   "_build/install/default/lib/spices/spices.cmti"[39m
     [38;5;2m13435[39m: [38;5;2m  13     :   "_build/install/default/lib/spices/spices.cmx"[39m
     [38;5;2m13436[39m: [38;5;2m  14     :   "_build/install/default/lib/spices/spices.cmxa"[39m
     [38;5;2m13437[39m: [38;5;2m  15     :   "_build/install/default/lib/spices/spices.ml"[39m
     [38;5;2m13438[39m: [38;5;2m  16     :   "_build/install/default/lib/spices/spices.mli"[39m
     [38;5;2m13439[39m: [38;5;2m  17     :   "_build/install/default/lib/spices/spices__.cmi"[39m
     [38;5;2m13440[39m: [38;5;2m  18     :   "_build/install/default/lib/spices/spices__.cmt"[39m
     [38;5;2m13441[39m: [38;5;2m  19     :   "_build/install/default/lib/spices/spices__.cmx"[39m
     [38;5;2m13442[39m: [38;5;2m  20     :   "_build/install/default/lib/spices/spices__.ml"[39m
     [38;5;2m13443[39m: [38;5;2m  21     :   "_build/install/default/lib/spices/spices__Border.cmi"[39m
     [38;5;2m13444[39m: [38;5;2m  22     :   "_build/install/default/lib/spices/spices__Border.cmt"[39m
     [38;5;2m13445[39m: [38;5;2m  23     :   "_build/install/default/lib/spices/spices__Border.cmx"[39m
     [38;5;2m13446[39m: [38;5;2m  24     :   "_build/install/default/lib/spices/spices__Formatter.cmi"[39m
     [38;5;2m13447[39m: [38;5;2m  25     :   "_build/install/default/lib/spices/spices__Formatter.cmt"[39m
     [38;5;2m13448[39m: [38;5;2m  26     :   "_build/install/default/lib/spices/spices__Formatter.cmx"[39m
     [38;5;2m13449[39m: [38;5;2m  27     :   "_build/install/default/lib/spices/spices__Gradient.cmi"[39m
     [38;5;2m13450[39m: [38;5;2m  28     :   "_build/install/default/lib/spices/spices__Gradient.cmt"[39m
     [38;5;2m13451[39m: [38;5;2m  29     :   "_build/install/default/lib/spices/spices__Gradient.cmx"[39m
     [38;5;2m13452[39m: [38;5;2m  30     : ][39m
     [38;5;2m13453[39m: [38;5;2m  31     : libexec: [[39m
     [38;5;2m13454[39m: [38;5;2m  32     :   "_build/install/default/lib/spices/spices.cmxs"[39m
     [38;5;2m13455[39m: [38;5;2m  33     : ][39m
     [38;5;2m13456[39m: [38;5;2m  34     : doc: [[39m
     [38;5;2m13457[39m: [38;5;2m  35     :   "_build/install/default/doc/spices/CHANGES.md"[39m
     [38;5;2m13458[39m: [38;5;2m  36     :   "_build/install/default/doc/spices/LICENSE.md"[39m
     [38;5;2m13459[39m: [38;5;2m  37     :   "_build/install/default/doc/spices/README.md"[39m
     [38;5;2m13460[39m: [38;5;2m  38     : ][39m
     [38;5;2m13461[39m: [38;5;2mAdded regular file ../notty/.gitignore:[39m
     [38;5;2m13462[39m: [38;5;2m        1: _build[39m
     [38;5;2m13463[39m: [38;5;2m        2: *.install[39m
     [38;5;2m13464[39m: [38;5;2m        3: *.native[39m
     [38;5;2m13465[39m: [38;5;2m        4: *.byte[39m
     [38;5;2m13466[39m: [38;5;2m        5: .merlin[39m
     [38;5;2m13467[39m: [38;5;2m        6: [39m
     [38;5;2m13468[39m: [38;5;2m        7: tmp[39m
     [38;5;2m13469[39m: [38;5;2m        8: *~[39m
     [38;5;2m13470[39m: [38;5;2m        9: \.\#*[39m
     [38;5;2m13471[39m: [38;5;2m       10: \#*#[39m
     [38;5;2m13472[39m: [38;5;2m       11: [39m
     [38;5;2m13473[39m: [38;5;2m       12: *.json[39m
     [38;5;2m13474[39m: [38;5;2m       13: gmon.out[39m
     [38;5;2m13475[39m: [38;5;2m       14: rondom[39m
     [38;5;2m13476[39m: [38;5;2mAdded regular file ../notty/.ocamlinit:[39m
     [38;5;2m13477[39m: [38;5;2m        1: #require "uucp,uuseg,uutf"[39m
     [38;5;2m13478[39m: [38;5;2m        2: [39m
     [38;5;2m13479[39m: [38;5;2m        3: #directory "_build/default/src"[39m
     [38;5;2m13480[39m: [38;5;2m        4: #directory "_build/default/src/.notty.objs/byte"[39m
     [38;5;2m13481[39m: [38;5;2m        5: #directory "_build/default/src-unix"[39m
     [38;5;2m13482[39m: [38;5;2m        6: #directory "_build/default/src-unix/.notty_unix.objs/byte"[39m
     [38;5;2m13483[39m: [38;5;2m        7: #directory "_build/default/src-lwt"[39m
     [38;5;2m13484[39m: [38;5;2m        8: #directory "_build/default/src-lwt/.notty_lwt.objs/byte"[39m
     [38;5;2m13485[39m: [38;5;2m        9: [39m
     [38;5;2m13486[39m: [38;5;2m       10: #load "notty.cma"[39m
     [38;5;2m13487[39m: [38;5;2m       11: #load "notty_unix.cma"[39m
     [38;5;2m13488[39m: [38;5;2m       12: #load "notty_lwt.cma"[39m
     [38;5;2m13489[39m: [38;5;2m       13: [39m
     [38;5;2m13490[39m: [38;5;2m       14: #use "src/notty_top_init.ml"[39m
     [38;5;2m13491[39m: [38;5;2mAdded regular file ../notty/CHANGES.md:[39m
     [38;5;2m13492[39m: [38;5;2m        1: ## v0.2.3 (2022-09-02)[39m
     [38;5;2m13493[39m: [38;5;2m        2: [39m
     [38;5;2m13494[39m: [38;5;2m        3: * Moved to Dune.[39m
     [38;5;2m13495[39m: [38;5;2m        4: * Renders faster, uses less memory.[39m
     [38;5;2m13496[39m: [38;5;2m        5: * Nested uses of `I.pp_attr` within `I.strf` now stack, instead of replacing.[39m
     [38;5;2m13497[39m: [38;5;2m        6: * Removed dependency on Uucp. Uses internal data instead (Unicode 13).[39m
     [38;5;2m13498[39m: [38;5;2m        7: * Support OCaml 4.08 - 4.14. Thanks to @kit-ty-kate for the 4.14 fixes.[39m
     [38;5;2m13499[39m: [38;5;2m        8: [39m
     [38;5;2m13500[39m: [38;5;2m        9: ## v0.2.2 (2019-02-19)[39m
     [38;5;2m13501[39m: [38;5;2m       10: [39m
     [38;5;2m13502[39m: [38;5;2m       11: * Fix a long-standing terminal cleanup bug. Reported by @ttamttam, fix by @cfcs.[39m
     [38;5;2m13503[39m: [38;5;2m       12: [39m
     [38;5;2m13504[39m: [38;5;2m       13: ## v0.2.1 (2017-11-06)[39m
     [38;5;2m13505[39m: [38;5;2m       14: [39m
     [38;5;2m13506[39m: [38;5;2m       15: * OCaml 4.06 compatible.[39m
     [38;5;2m13507[39m: [38;5;2m       16: * Cache the internal representation of Unicode strings.[39m
     [38;5;2m13508[39m: [38;5;2m       17: * Remove `I.ichar`. **breaking**[39m
     [38;5;2m13509[39m: [38;5;2m       18: [39m
     [38;5;2m13510[39m: [38;5;2m       19: ## v0.2.0 (2017-10-31)[39m
     [38;5;2m13511[39m: [38;5;2m       20: [39m
     [38;5;2m13512[39m: [38;5;2m       21: * All-around speed and memory improvements.[39m
     [38;5;2m13513[39m: [38;5;2m       22: * Draw over lines cell-by-cell instead of using erase-and-skip.[39m
     [38;5;2m13514[39m: [38;5;2m       23:   Slower, but flicker-free drawing.[39m
     [38;5;2m13515[39m: [38;5;2m       24: * `Term.create`: optionally inhibit synthetic TTY signals.[39m
     [38;5;2m13516[39m: [38;5;2m       25: * Cursor origin moved from `(1, 1)` to `(0, 0)`. **breaking**[39m
     [38;5;2m13517[39m: [38;5;2m       26: * `#key` renamed to `#special`. **breaking**[39m
     [38;5;2m13518[39m: [38;5;2m       27: * Added `Term.fds` to get connected file descriptors.[39m
     [38;5;2m13519[39m: [38;5;2m       28: * Added `A.equal` and `I.equal`.[39m
     [38;5;2m13520[39m: [38;5;2m       29: * Switched over to `Uchar.t`. **breaking**[39m
     [38;5;2m13521[39m: [38;5;2m       30: * Separated ASCII from the rest of Unicode input. **breaking**[39m
     [38;5;2m13522[39m: [38;5;2m       31: * Added image pretty-printer `I.pp`.[39m
     [38;5;2m13523[39m: [38;5;2m       32: * Added `notty.top` for use in the toplevel.[39m
     [38;5;2m13524[39m: [38;5;2m       33: * Removed `I.tile`. **breaking**[39m
     [38;5;2m13525[39m: [38;5;2m       34: * Added `I.tabulate`, generalizing `I.tile`.[39m
     [38;5;2m13526[39m: [38;5;2m       35: * Added support for 24-bit color.[39m
     [38;5;2m13527[39m: [38;5;2m       36: * Added `Notty_*.show_cursor` and `Notty_*.move_cursor` for manual cursor[39m
     [38;5;2m13528[39m: [38;5;2m       37:   positioning in inline mode.[39m
     [38;5;2m13529[39m: [38;5;2m       38: * Removed `output_image_endline`. Can be replaced by `eol`. **breaking**[39m
     [38;5;2m13530[39m: [38;5;2m       39: * `Notty_*.output_image` lost the `~clear` parameter. Can be replaced in various[39m
     [38;5;2m13531[39m: [38;5;2m       40:   ways by cursor positioning.[39m
     [38;5;2m13532[39m: [38;5;2m       41: * `Notty_unix.output_image ~chan` renamed to `~fd`. **breaking**[39m
     [38;5;2m13533[39m: [38;5;2m       42: * Added support for bracketed paste.[39m
     [38;5;2m13534[39m: [38;5;2m       43: * More example programs.[39m
     [38;5;2m13535[39m: [38;5;2m       44: [39m
     [38;5;2m13536[39m: [38;5;2m       45: ## v0.1.1 (2016-02-09)[39m
     [38;5;2m13537[39m: [38;5;2m       46: * `Term.input` -> `Term.event`[39m
     [38;5;2m13538[39m: [38;5;2m       47: * Option to redraw the line[39m
     [38;5;2m13539[39m: [38;5;2m       48: [39m
     [38;5;2m13540[39m: [38;5;2m       49: ## v0.1.0 (2016-02-09)[39m
     [38;5;2m13541[39m: [38;5;2m       50: * Initial release[39m
     [38;5;2m13542[39m: [38;5;2mAdded regular file ../notty/LICENSE.md:[39m
     [38;5;2m13543[39m: [38;5;2m        1: Copyright (c) 2016-2017 David Kaloper Meršinjak[39m
     [38;5;2m13544[39m: [38;5;2m        2: [39m
     [38;5;2m13545[39m: [38;5;2m        3: Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m13546[39m: [38;5;2m        4: purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m13547[39m: [38;5;2m        5: copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m13548[39m: [38;5;2m        6: [39m
     [38;5;2m13549[39m: [38;5;2m        7: THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m13550[39m: [38;5;2m        8: WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m13551[39m: [38;5;2m        9: MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m13552[39m: [38;5;2m       10: ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m13553[39m: [38;5;2m       11: WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m13554[39m: [38;5;2m       12: ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m13555[39m: [38;5;2m       13: OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m13556[39m: [38;5;2mAdded regular file ../notty/README.md:[39m
     [38;5;2m13557[39m: [38;5;2m        1: # Notty — Declaring terminals[39m
     [38;5;2m13558[39m: [38;5;2m        2: [39m
     [38;5;2m13559[39m: [38;5;2m        3: <a href="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO" alt="dumper"><img src="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO.png" width="400"/></a>[39m
     [38;5;2m13560[39m: [38;5;2m        4: <a href="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I" alt="input"><img src="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I.png" width="400"/></a>[39m
     [38;5;2m13561[39m: [38;5;2m        5: <a href="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc" alt="microdots"><img src="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc.png" width="400"/></a>[39m
     [38;5;2m13562[39m: [38;5;2m        6: <a href="https://asciinema.org/a/NgpF9Im8qfUICC39GDDAe9Ede" alt="rain"><img src="https://asciinema.org/a/R94gnHTQhCFJAsWpRfVlZWcUB.png" width="400"/></a>[39m
     [38;5;2m13563[39m: [38;5;2m        7: [39m
     [38;5;2m13564[39m: [38;5;2m        8: Notty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m13565[39m: [38;5;2m        9: of composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m13566[39m: [38;5;2m       10: model, providing something simpler and more expressive.[39m
     [38;5;2m13567[39m: [38;5;2m       11: [39m
     [38;5;2m13568[39m: [38;5;2m       12: The core layout engine and IO codecs are pure platform-independent OCaml.[39m
     [38;5;2m13569[39m: [38;5;2m       13: Distribution includes modules with input and output facilities for Unix, and Lwt[39m
     [38;5;2m13570[39m: [38;5;2m       14: on Unix.[39m
     [38;5;2m13571[39m: [38;5;2m       15: [39m
     [38;5;2m13572[39m: [38;5;2m       16: As an attempt to redefine terminal programming, Notty has to be[39m
     [38;5;2m13573[39m: [38;5;2m       17: _opinionated_. It assumes Unicode throughout, does not have universal support[39m
     [38;5;2m13574[39m: [38;5;2m       18: for various terminals out there, and has a peculiar programming and rendering[39m
     [38;5;2m13575[39m: [38;5;2m       19: model.[39m
     [38;5;2m13576[39m: [38;5;2m       20: [39m
     [38;5;2m13577[39m: [38;5;2m       21: Notty's core API was heavily influenced by Haskell's [Vty][vty].[39m
     [38;5;2m13578[39m: [38;5;2m       22: [39m
     [38;5;2m13579[39m: [38;5;2m       23: ## Where to start[39m
     [38;5;2m13580[39m: [38;5;2m       24: [39m
     [38;5;2m13581[39m: [38;5;2m       25: Check out the [documentation], [examples], or peek directly into the [interface][39m
     [38;5;2m13582[39m: [38;5;2m       26: file.[39m
     [38;5;2m13583[39m: [38;5;2m       27: [39m
     [38;5;2m13584[39m: [38;5;2m       28: Building with `dune build @ex` will produce several little example programs that[39m
     [38;5;2m13585[39m: [38;5;2m       29: also double as tests.[39m
     [38;5;2m13586[39m: [38;5;2m       30: [39m
     [38;5;2m13587[39m: [38;5;2m       31: ```OCaml[39m
     [38;5;2m13588[39m: [38;5;2m       32: (* Game of Life with ZX Spectrum kitsch. *)[39m
     [38;5;2m13589[39m: [38;5;2m       33: [39m
     [38;5;2m13590[39m: [38;5;2m       34: let dot : image = I.uchar A.(fg lightred) (Uchar.of_int 0x25cf) 1 1[39m
     [38;5;2m13591[39m: [38;5;2m       35: [39m
     [38;5;2m13592[39m: [38;5;2m       36: let background step (n, m) =[39m
     [38;5;2m13593[39m: [38;5;2m       37:   let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m13594[39m: [38;5;2m       38:   if k > 0 then I.char A.(fg (gray k)) '.' 1 1 else I.void 1 1[39m
     [38;5;2m13595[39m: [38;5;2m       39: [39m
     [38;5;2m13596[39m: [38;5;2m       40: let render (w, h) step life : image =[39m
     [38;5;2m13597[39m: [38;5;2m       41:   I.tabulate w (h - 1) @@ fun x y ->[39m
     [38;5;2m13598[39m: [38;5;2m       42:     let pt = (x, y) in[39m
     [38;5;2m13599[39m: [38;5;2m       43:     if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m13600[39m: [38;5;2m       44: ```[39m
     [38;5;2m13601[39m: [38;5;2m       45: [39m
     [38;5;2m13602[39m: [38;5;2m       46: [documentation]: https://pqwy.github.io/notty/doc[39m
     [38;5;2m13603[39m: [38;5;2m       47: [examples]: http://pqwy.github.io/notty/doc/Notty.html#examples[39m
     [38;5;2m13604[39m: [38;5;2m       48: [interface]: https://github.com/pqwy/notty/blob/master/src/notty.mli[39m
     [38;5;2m13605[39m: [38;5;2m       49: [vty]: https://hackage.haskell.org/package/vty[39m
     [38;5;2m13606[39m: [38;5;2m       50: [39m
     [38;5;2m13607[39m: [38;5;2m       51: ## What?[39m
     [38;5;2m13608[39m: [38;5;2m       52: [39m
     [38;5;2m13609[39m: [38;5;2m       53: - _Notty?_[39m
     [38;5;2m13610[39m: [38;5;2m       54:   [39m
     [38;5;2m13611[39m: [38;5;2m       55:   Terminals are tedious to program for. Notty tries to abstract the tedium away,[39m
     [38;5;2m13612[39m: [38;5;2m       56:   leaving you with a more pleasant programming surface that's quite unlike a TTY.[39m
     [38;5;2m13613[39m: [38;5;2m       57:   Hence, _No-TTY_.[39m
     [38;5;2m13614[39m: [38;5;2m       58: [39m
     [38;5;2m13615[39m: [38;5;2m       59: - A new kind of Rust terminal?[39m
     [38;5;2m13616[39m: [38;5;2m       60: [39m
     [38;5;2m13617[39m: [38;5;2m       61:   This Notty has no connection to any other body of code named Notty.[39m
     [38;5;2m13618[39m: [38;5;2m       62: [39m
     [38;5;2m13619[39m: [38;5;2m       63: - Why make yet another terminal output library?[39m
     [38;5;2m13620[39m: [38;5;2m       64:   [39m
     [38;5;2m13621[39m: [38;5;2m       65:   Because:[39m
     [38;5;2m13622[39m: [38;5;2m       66:   * It allows one to *describe* what should be seen, as opposed to *commanding*[39m
     [38;5;2m13623[39m: [38;5;2m       67:     a terminal.[39m
     [38;5;2m13624[39m: [38;5;2m       68:   * It's pretty compact. Both bells and whistles can be implemented separately.[39m
     [38;5;2m13625[39m: [38;5;2m       69:   * Core is easy to glue onto various IO backends.[39m
     [38;5;2m13626[39m: [38;5;2m       70:   * Pure platform-independent OCaml.[39m
     [38;5;2m13627[39m: [38;5;2mAdded regular file ../notty/benchmarks/dune:[39m
     [38;5;2m13628[39m: [38;5;2m        1: (executable[39m
     [38;5;2m13629[39m: [38;5;2m        2:   (name speed)[39m
     [38;5;2m13630[39m: [38;5;2m        3:   (libraries notty notty.unix common unmark unmark.cli))[39m
     [38;5;2m13631[39m: [38;5;2mAdded regular file ../notty/benchmarks/speed.ml:[39m
     [38;5;2m13632[39m: [38;5;2m        1: (* Copyright (c) 2016-2019 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m13633[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m13634[39m: [38;5;2m        3: [39m
     [38;5;2m13635[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m13636[39m: [38;5;2m        5: open Common[39m
     [38;5;2m13637[39m: [38;5;2m        6: open Common.Images[39m
     [38;5;2m13638[39m: [38;5;2m        7: [39m
     [38;5;2m13639[39m: [38;5;2m        8: [39m
     [38;5;2m13640[39m: [38;5;2m        9: let decode ?(n=1) str =[39m
     [38;5;2m13641[39m: [38;5;2m       10:   let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m13642[39m: [38;5;2m       11:   let us = str |> Uutf.String.fold_utf_8 f [] |> List.rev in[39m
     [38;5;2m13643[39m: [38;5;2m       12:   for _ = 1 to n do Unescape.decode us |> ignore done[39m
     [38;5;2m13644[39m: [38;5;2m       13: [39m
     [38;5;2m13645[39m: [38;5;2m       14: let input ?(n=1) str =[39m
     [38;5;2m13646[39m: [38;5;2m       15:   let buf = Bytes.unsafe_of_string str in[39m
     [38;5;2m13647[39m: [38;5;2m       16:   let rec go f n = match Unescape.next f with[39m
     [38;5;2m13648[39m: [38;5;2m       17:     | #Unescape.event -> go f n[39m
     [38;5;2m13649[39m: [38;5;2m       18:     | `Await when n > 0 ->[39m
     [38;5;2m13650[39m: [38;5;2m       19:         Unescape.input f buf 0 (Bytes.length buf); go f (pred n)[39m
     [38;5;2m13651[39m: [38;5;2m       20:     | `Await -> ()[39m
     [38;5;2m13652[39m: [38;5;2m       21:     | `End   -> assert false in[39m
     [38;5;2m13653[39m: [38;5;2m       22:   go (Unescape.create ()) n[39m
     [38;5;2m13654[39m: [38;5;2m       23: [39m
     [38;5;2m13655[39m: [38;5;2m       24: let escapes =[39m
     [38;5;2m13656[39m: [38;5;2m       25:   "\027[5~\027[6~\027[1~\027[4~\027OP\027OQ\027OR\027OS\027[15~\027[17~" ^[39m
     [38;5;2m13657[39m: [38;5;2m       26:   "\027[18~\027[19~\027[20~\027[21~\027[23~\027[24~"[39m
     [38;5;2m13658[39m: [38;5;2m       27: [39m
     [38;5;2m13659[39m: [38;5;2m       28: let escapes_m =[39m
     [38;5;2m13660[39m: [38;5;2m       29:   "\027[<0;59;7M\027[<32;58;7M\027[<32;57;7M\027[<32;56;7M\027[<32;54;7M" ^[39m
     [38;5;2m13661[39m: [38;5;2m       30:   "\027[<32;53;8M\027[<32;52;8M\027[<32;51;8M\027[<32;50;8M\027[<32;49;8M" ^[39m
     [38;5;2m13662[39m: [38;5;2m       31:   "\027[<32;47;9M\027[<32;46;9M\027[<32;44;9M\027[<32;42;10M\027[<32;41;10M" ^[39m
     [38;5;2m13663[39m: [38;5;2m       32:   "\027[<32;41;11M\027[<32;40;11M\027[<32;41;12M\027[<32;42;12M" ^[39m
     [38;5;2m13664[39m: [38;5;2m       33:   "\027[<32;42;13M\027[<32;43;13M\027[<32;44;13M\027[<0;44;13m"[39m
     [38;5;2m13665[39m: [38;5;2m       34: [39m
     [38;5;2m13666[39m: [38;5;2m       35: let chars = String.(make (length escapes) 'x')[39m
     [38;5;2m13667[39m: [38;5;2m       36: [39m
     [38;5;2m13668[39m: [38;5;2m       37: let buf = Buffer.create 1024[39m
     [38;5;2m13669[39m: [38;5;2m       38: let buf_render off dim image =[39m
     [38;5;2m13670[39m: [38;5;2m       39:   Buffer.clear buf; Render.to_buffer buf Cap.ansi off dim image[39m
     [38;5;2m13671[39m: [38;5;2m       40: [39m
     [38;5;2m13672[39m: [38;5;2m       41: [39m
     [38;5;2m13673[39m: [38;5;2m       42: open Unmark[39m
     [38;5;2m13674[39m: [38;5;2m       43: [39m
     [38;5;2m13675[39m: [38;5;2m       44: let strf = Format.asprintf[39m
     [38;5;2m13676[39m: [38;5;2m       45: let group_of name xs f = group name (List.map f xs)[39m
     [38;5;2m13677[39m: [38;5;2m       46: let bench_fmt fmt = Format.kasprintf bench fmt[39m
     [38;5;2m13678[39m: [38;5;2m       47: let group_fmt fmt = Format.kasprintf group fmt[39m
     [38;5;2m13679[39m: [38;5;2m       48: [39m
     [38;5;2m13680[39m: [38;5;2m       49: let render =[39m
     [38;5;2m13681[39m: [38;5;2m       50: [39m
     [38;5;2m13682[39m: [38;5;2m       51:   let clip i = I.(width i |> min 200, height i |> min 200) in[39m
     [38;5;2m13683[39m: [38;5;2m       52:   let ops i = Operation.of_image (0, 0) (clip i) i[39m
     [38;5;2m13684[39m: [38;5;2m       53:   and render i = buf_render (0, 0) (clip i) i in[39m
     [38;5;2m13685[39m: [38;5;2m       54: [39m
     [38;5;2m13686[39m: [38;5;2m       55:   group "render" [[39m
     [38;5;2m13687[39m: [38;5;2m       56:     group "rasterize" [[39m
     [38;5;2m13688[39m: [38;5;2m       57:       bench "i2" (fun () -> ops i2)[39m
     [38;5;2m13689[39m: [38;5;2m       58:     ; bench "i3" (fun () -> ops i3)[39m
     [38;5;2m13690[39m: [38;5;2m       59:     ; bench "i4" (fun () -> ops i4)[39m
     [38;5;2m13691[39m: [38;5;2m       60:     ; bench "i5" (fun () -> ops i5)[39m
     [38;5;2m13692[39m: [38;5;2m       61:     ];[39m
     [38;5;2m13693[39m: [38;5;2m       62:     group "render" [[39m
     [38;5;2m13694[39m: [38;5;2m       63:       bench "i2" (fun () -> render i2)[39m
     [38;5;2m13695[39m: [38;5;2m       64:     ; bench "i3" (fun () -> render i3)[39m
     [38;5;2m13696[39m: [38;5;2m       65:     ; bench "i4" (fun () -> render i4)[39m
     [38;5;2m13697[39m: [38;5;2m       66:     ; bench "i5" (fun () -> render i5)[39m
     [38;5;2m13698[39m: [38;5;2m       67:     ];[39m
     [38;5;2m13699[39m: [38;5;2m       68:     group_f "draw" (fun t -> [[39m
     [38;5;2m13700[39m: [38;5;2m       69:       bench "i3" (fun () -> Term.image t i3)[39m
     [38;5;2m13701[39m: [38;5;2m       70:     ; bench "i5" (fun () -> Term.image t i5)[39m
     [38;5;2m13702[39m: [38;5;2m       71:     ]) ~init:Term.create ~fini:Term.release[39m
     [38;5;2m13703[39m: [38;5;2m       72: ][39m
     [38;5;2m13704[39m: [38;5;2m       73: [39m
     [38;5;2m13705[39m: [38;5;2m       74: let input = group "input" [[39m
     [38;5;2m13706[39m: [38;5;2m       75:   group "decode" [[39m
     [38;5;2m13707[39m: [38;5;2m       76:     bench "escapes"     (fun () -> decode ~n:100 escapes);[39m
     [38;5;2m13708[39m: [38;5;2m       77:     bench "CSI escapes" (fun () -> decode ~n:100 escapes_m);[39m
     [38;5;2m13709[39m: [38;5;2m       78:     bench "chars"       (fun () -> decode ~n:100 chars);[39m
     [38;5;2m13710[39m: [38;5;2m       79:   ];[39m
     [38;5;2m13711[39m: [38;5;2m       80:   group "input" [[39m
     [38;5;2m13712[39m: [38;5;2m       81:     bench "escapes"     (fun () -> input ~n:100 escapes);[39m
     [38;5;2m13713[39m: [38;5;2m       82:     bench "CSI escapes" (fun () -> input ~n:100 escapes_m);[39m
     [38;5;2m13714[39m: [38;5;2m       83:     bench "chars"       (fun () -> input ~n:100 chars);[39m
     [38;5;2m13715[39m: [38;5;2m       84:   ][39m
     [38;5;2m13716[39m: [38;5;2m       85: ][39m
     [38;5;2m13717[39m: [38;5;2m       86: [39m
     [38;5;2m13718[39m: [38;5;2m       87: let construct =[39m
     [38;5;2m13719[39m: [38;5;2m       88: [39m
     [38;5;2m13720[39m: [38;5;2m       89:   let strings = [[39m
     [38;5;2m13721[39m: [38;5;2m       90:       "s1", "a"[39m
     [38;5;2m13722[39m: [38;5;2m       91:     ; "s2", "abcdefghij"[39m
     [38;5;2m13723[39m: [38;5;2m       92:     ; "s3", String.repeat 10 "abcdefghij"[39m
     [38;5;2m13724[39m: [38;5;2m       93:     ; "s4", String.repeat 100 "abcdefghij"[39m
     [38;5;2m13725[39m: [38;5;2m       94:     ; "u1", "☭"[39m
     [38;5;2m13726[39m: [38;5;2m       95:     ; "u2", String.repeat 10 "☭"[39m
     [38;5;2m13727[39m: [38;5;2m       96:     ; "u3", String.repeat 100 "☭"[39m
     [38;5;2m13728[39m: [38;5;2m       97:     ; "u4", String.repeat 1000 "☭" ] in[39m
     [38;5;2m13729[39m: [38;5;2m       98: [39m
     [38;5;2m13730[39m: [38;5;2m       99:   group "construct" [[39m
     [38;5;2m13731[39m: [38;5;2m      100: [39m
     [38;5;2m13732[39m: [38;5;2m      101:     group "make" (strings |> List.map @@ fun (n, s) ->[39m
     [38;5;2m13733[39m: [38;5;2m      102:       bench n (fun () -> I.string A.empty s))[39m
     [38;5;2m13734[39m: [38;5;2m      103: [39m
     [38;5;2m13735[39m: [38;5;2m      104:   ; group "repeat" ([0x40; 0x262d] |> List.map @@ fun x ->[39m
     [38;5;2m13736[39m: [38;5;2m      105:       let u = Uchar.of_int x in[39m
     [38;5;2m13737[39m: [38;5;2m      106:       group_fmt "U+%04x" x ([1; 10; 100] |> List.map @@ fun n ->[39m
     [38;5;2m13738[39m: [38;5;2m      107:         bench_fmt "%dx" n (fun () -> I.uchar A.empty u n 1)))[39m
     [38;5;2m13739[39m: [38;5;2m      108: [39m
     [38;5;2m13740[39m: [38;5;2m      109:   ; bench "pxmatrix" (fun () -> pxmatrix 200 200 @@ fun _ _ -> A.black)[39m
     [38;5;2m13741[39m: [38;5;2m      110:   ][39m
     [38;5;2m13742[39m: [38;5;2m      111: [39m
     [38;5;2m13743[39m: [38;5;2m      112: [39m
     [38;5;2m13744[39m: [38;5;2m      113: let _ = Unmark_cli.main "Notty" [ render; input; construct ][39m
     [38;5;2m13745[39m: [38;5;2mAdded regular file ../notty/dune-project:[39m
     [38;5;2m13746[39m: [38;5;2m        1: (lang dune 1.7)[39m
     [38;5;2m13747[39m: [38;5;2m        2: (name notty)[39m
     [38;5;2m13748[39m: [38;5;2m        3: (version %%VERSION_NUM%%)[39m
     [38;5;2m13749[39m: [38;5;2mAdded regular file ../notty/examples/almondbread.ml:[39m
     [38;5;2m13750[39m: [38;5;2m        1: open Notty[39m
     [38;5;2m13751[39m: [38;5;2m        2: open Common[39m
     [38;5;2m13752[39m: [38;5;2m        3: [39m
     [38;5;2m13753[39m: [38;5;2m        4: let iter = 200[39m
     [38;5;2m13754[39m: [38;5;2m        5: [39m
     [38;5;2m13755[39m: [38;5;2m        6: let member x y =[39m
     [38;5;2m13756[39m: [38;5;2m        7:   let rec go cx cy x y n =[39m
     [38;5;2m13757[39m: [38;5;2m        8:     let xx = x *. x and yy = y *. y in[39m
     [38;5;2m13758[39m: [38;5;2m        9:     if n = 0 || xx +. yy > 4. then n else[39m
     [38;5;2m13759[39m: [38;5;2m       10:       go cx cy (xx -. yy +. cx) (2. *. x *. y +. cy) (n - 1) in[39m
     [38;5;2m13760[39m: [38;5;2m       11:   float (iter - go x y 0. 0. iter) /. float iter[39m
     [38;5;2m13761[39m: [38;5;2m       12: [39m
     [38;5;2m13762[39m: [38;5;2m       13: let pi2   = 2. *. 3.14159[39m
     [38;5;2m13763[39m: [38;5;2m       14: let pi2_3 = pi2 /. 3.[39m
     [38;5;2m13764[39m: [38;5;2m       15: [39m
     [38;5;2m13765[39m: [38;5;2m       16: let mandelbrot x y =[39m
     [38;5;2m13766[39m: [38;5;2m       17:   (* let esc = 1. -. member x y in *)[39m
     [38;5;2m13767[39m: [38;5;2m       18:   (* 23. *. esc *. esc |> truncate |> A.gray *)[39m
     [38;5;2m13768[39m: [38;5;2m       19:   match member x y with[39m
     [38;5;2m13769[39m: [38;5;2m       20:   | 1.  -> A.gray 0[39m
     [38;5;2m13770[39m: [38;5;2m       21:   | esc ->[39m
     [38;5;2m13771[39m: [38;5;2m       22:       let t = esc *. pi2 in[39m
     [38;5;2m13772[39m: [38;5;2m       23:       let f d = (sin (t +. d) *. 128. +. 128.) |> truncate in[39m
     [38;5;2m13773[39m: [38;5;2m       24:       A.rgb_888 ~b:(f (-.pi2_3)) ~g:(f 0.) ~r:(f pi2_3)[39m
     [38;5;2m13774[39m: [38;5;2m       25: [39m
     [38;5;2m13775[39m: [38;5;2m       26: let xlate dx dy f x y = f (x -. dx) (y -. dy)[39m
     [38;5;2m13776[39m: [38;5;2m       27: let scale k f = let k1 = 1./.k in fun x y -> f (x *. k1) (y *. k1)[39m
     [38;5;2m13777[39m: [38;5;2m       28: let rot a f =[39m
     [38;5;2m13778[39m: [38;5;2m       29:   let sina = sin a and cosa = cos a in fun x y ->[39m
     [38;5;2m13779[39m: [38;5;2m       30:     f (x *. cosa -. y *. sina) (x *. sina +. cosa *. y)[39m
     [38;5;2m13780[39m: [38;5;2m       31: [39m
     [38;5;2m13781[39m: [38;5;2m       32: let render_unit f (w, h) =[39m
     [38;5;2m13782[39m: [38;5;2m       33:   let sw = 1. /. float w[39m
     [38;5;2m13783[39m: [38;5;2m       34:   and sh = 1. /. float (2 * h) in[39m
     [38;5;2m13784[39m: [38;5;2m       35:   pxmatrix w h (fun x y -> f (float x *. sw) (float y *. sh))[39m
     [38;5;2m13785[39m: [38;5;2m       36: [39m
     [38;5;2m13786[39m: [38;5;2m       37: let () =[39m
     [38;5;2m13787[39m: [38;5;2m       38:   let pix =[39m
     [38;5;2m13788[39m: [38;5;2m       39:     render_unit @@[39m
     [38;5;2m13789[39m: [38;5;2m       40:     rot (-1.570795) @@ xlate (1.6) (-0.5) @@[39m
     [38;5;2m13790[39m: [38;5;2m       41:     mandelbrot in[39m
     [38;5;2m13791[39m: [38;5;2m       42:   Notty_unix.(output_image_size @@ fun (w, h) -> pix (w, h - 1) |> eol)[39m
     [38;5;2m13792[39m: [38;5;2mAdded regular file ../notty/examples/colors.ml:[39m
     [38;5;2m13793[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m13794[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m13795[39m: [38;5;2m        3: [39m
     [38;5;2m13796[39m: [38;5;2m        4: (**[39m
     [38;5;2m13797[39m: [38;5;2m        5:  * Demonstrates text attributes.[39m
     [38;5;2m13798[39m: [38;5;2m        6:  *)[39m
     [38;5;2m13799[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m13800[39m: [38;5;2m        8: open Common[39m
     [38;5;2m13801[39m: [38;5;2m        9: [39m
     [38;5;2m13802[39m: [38;5;2m       10: let colors = A.[[39m
     [38;5;2m13803[39m: [38;5;2m       11:   "black"        , black[39m
     [38;5;2m13804[39m: [38;5;2m       12: ; "red"          , red[39m
     [38;5;2m13805[39m: [38;5;2m       13: ; "green"        , green[39m
     [38;5;2m13806[39m: [38;5;2m       14: ; "yellow"       , yellow[39m
     [38;5;2m13807[39m: [38;5;2m       15: ; "blue"         , blue[39m
     [38;5;2m13808[39m: [38;5;2m       16: ; "magenta"      , magenta[39m
     [38;5;2m13809[39m: [38;5;2m       17: ; "cyan"         , cyan[39m
     [38;5;2m13810[39m: [38;5;2m       18: ; "white"        , white[39m
     [38;5;2m13811[39m: [38;5;2m       19: ; "lightblack"   , lightblack[39m
     [38;5;2m13812[39m: [38;5;2m       20: ; "lightred"     , lightred[39m
     [38;5;2m13813[39m: [38;5;2m       21: ; "lightgreen"   , lightgreen[39m
     [38;5;2m13814[39m: [38;5;2m       22: ; "lightyellow"  , lightyellow[39m
     [38;5;2m13815[39m: [38;5;2m       23: ; "lightblue"    , lightblue[39m
     [38;5;2m13816[39m: [38;5;2m       24: ; "lightmagenta" , lightmagenta[39m
     [38;5;2m13817[39m: [38;5;2m       25: ; "lightcyan"    , lightcyan[39m
     [38;5;2m13818[39m: [38;5;2m       26: ; "lightwhite"   , lightwhite[39m
     [38;5;2m13819[39m: [38;5;2m       27: ][39m
     [38;5;2m13820[39m: [38;5;2m       28: [39m
     [38;5;2m13821[39m: [38;5;2m       29: let styles = A.[[39m
     [38;5;2m13822[39m: [38;5;2m       30:   "empty"      , empty[39m
     [38;5;2m13823[39m: [38;5;2m       31: ; "bold"       , st bold[39m
     [38;5;2m13824[39m: [38;5;2m       32: ; "italic"     , st italic[39m
     [38;5;2m13825[39m: [38;5;2m       33: ; "underline"  , st underline[39m
     [38;5;2m13826[39m: [38;5;2m       34: ; "blink"      , st blink[39m
     [38;5;2m13827[39m: [38;5;2m       35: ; "reverse"    , st reverse[39m
     [38;5;2m13828[39m: [38;5;2m       36: ; "bold/italic", st bold ++ st italic[39m
     [38;5;2m13829[39m: [38;5;2m       37: ; "rev/underln", st underline ++ st reverse[39m
     [38;5;2m13830[39m: [38;5;2m       38: ; "bold/rev"   , st reverse ++ st bold[39m
     [38;5;2m13831[39m: [38;5;2m       39: ][39m
     [38;5;2m13832[39m: [38;5;2m       40: [39m
     [38;5;2m13833[39m: [38;5;2m       41: let image w =[39m
     [38;5;2m13834[39m: [38;5;2m       42:   let open List in[39m
     [38;5;2m13835[39m: [38;5;2m       43:   let core16 =[39m
     [38;5;2m13836[39m: [38;5;2m       44:     let c1  = map (fun (n, c) -> I.string A.(fg c) n) colors[39m
     [38;5;2m13837[39m: [38;5;2m       45:     and c2  = map (fun (n, c) -> I.string A.(fg black ++ bg c) n) colors[39m
     [38;5;2m13838[39m: [38;5;2m       46:     in I.(vcat c1 <|> void 1 0 <|> vcat c2)[39m
     [38;5;2m13839[39m: [38;5;2m       47:   and attr =[39m
     [38;5;2m13840[39m: [38;5;2m       48:     I.( styles |> map (fun (n, s) -> hpad 0 1 (string s n)) |> hcat) in[39m
     [38;5;2m13841[39m: [38;5;2m       49:   let combine imgs =[39m
     [38;5;2m13842[39m: [38;5;2m       50:     List.map I.(fun (n, i) -> string A.empty n <-> i <-> void 0 1) imgs[39m
     [38;5;2m13843[39m: [38;5;2m       51:     |> I.vcat |> I.pad ~l:1 ~t:1 in[39m
     [38;5;2m13844[39m: [38;5;2m       52:   combine [[39m
     [38;5;2m13845[39m: [38;5;2m       53:     "System colors:",     core16;[39m
     [38;5;2m13846[39m: [38;5;2m       54:     "Color cube, 6x6x6:", Images.c_cube_ix;[39m
     [38;5;2m13847[39m: [38;5;2m       55:     "Grayscale ramp:",    Images.c_gray_ramp;[39m
     [38;5;2m13848[39m: [38;5;2m       56:     "24bit:",             Images.c_rainbow (w - 2) 1;[39m
     [38;5;2m13849[39m: [38;5;2m       57:     "Text styles:",       attr[39m
     [38;5;2m13850[39m: [38;5;2m       58:   ][39m
     [38;5;2m13851[39m: [38;5;2m       59: [39m
     [38;5;2m13852[39m: [38;5;2m       60: let () = Notty_unix.output_image_size @@ fun (w, _) -> image w[39m
     [38;5;2m13853[39m: [38;5;2mAdded regular file ../notty/examples/common.ml:[39m
     [38;5;2m13854[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m13855[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m13856[39m: [38;5;2m        3: [39m
     [38;5;2m13857[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m13858[39m: [38;5;2m        5: open Notty.Infix[39m
     [38;5;2m13859[39m: [38;5;2m        6: [39m
     [38;5;2m13860[39m: [38;5;2m        7: let pow n e = int_of_float (float n ** float e)[39m
     [38;5;2m13861[39m: [38;5;2m        8: [39m
     [38;5;2m13862[39m: [38;5;2m        9: module List = struct[39m
     [38;5;2m13863[39m: [38;5;2m       10: [39m
     [38;5;2m13864[39m: [38;5;2m       11:   include List[39m
     [38;5;2m13865[39m: [38;5;2m       12: [39m
     [38;5;2m13866[39m: [38;5;2m       13:   let rec replicate n a = if n < 1 then [] else a :: replicate (n - 1) a[39m
     [38;5;2m13867[39m: [38;5;2m       14: [39m
     [38;5;2m13868[39m: [38;5;2m       15:   let rec range a b = if a > b then [] else a :: range (a + 1) b[39m
     [38;5;2m13869[39m: [38;5;2m       16: [39m
     [38;5;2m13870[39m: [38;5;2m       17:   let rec intersperse a = function[39m
     [38;5;2m13871[39m: [38;5;2m       18:     | [] | [_] as t -> t[39m
     [38;5;2m13872[39m: [38;5;2m       19:     | x::xs         -> x :: a :: intersperse a xs[39m
     [38;5;2m13873[39m: [38;5;2m       20: [39m
     [38;5;2m13874[39m: [38;5;2m       21:   let rec take n = function[39m
     [38;5;2m13875[39m: [38;5;2m       22:     | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m13876[39m: [38;5;2m       23:     | _ -> [][39m
     [38;5;2m13877[39m: [38;5;2m       24: [39m
     [38;5;2m13878[39m: [38;5;2m       25:   let rec splitat n = function[39m
     [38;5;2m13879[39m: [38;5;2m       26:     | x::xs when n > 0 ->[39m
     [38;5;2m13880[39m: [38;5;2m       27:         let (a, b) = splitat (pred n) xs in (x::a, b)[39m
     [38;5;2m13881[39m: [38;5;2m       28:     | xs -> ([], xs)[39m
     [38;5;2m13882[39m: [38;5;2m       29: [39m
     [38;5;2m13883[39m: [38;5;2m       30:   let rec chunks n xs =[39m
     [38;5;2m13884[39m: [38;5;2m       31:     match splitat n xs with[39m
     [38;5;2m13885[39m: [38;5;2m       32:     | (a, []) -> [a][39m
     [38;5;2m13886[39m: [38;5;2m       33:     | (a, b)  -> a :: chunks n b[39m
     [38;5;2m13887[39m: [38;5;2m       34: [39m
     [38;5;2m13888[39m: [38;5;2m       35:   let rec zip xs ys = match (xs, ys) with[39m
     [38;5;2m13889[39m: [38;5;2m       36:     | ([], _) | (_, []) -> [][39m
     [38;5;2m13890[39m: [38;5;2m       37:     | (x::xs, y::ys) -> (x, y) :: zip xs ys[39m
     [38;5;2m13891[39m: [38;5;2m       38: [39m
     [38;5;2m13892[39m: [38;5;2m       39: end[39m
     [38;5;2m13893[39m: [38;5;2m       40: [39m
     [38;5;2m13894[39m: [38;5;2m       41: module String = struct[39m
     [38;5;2m13895[39m: [38;5;2m       42: [39m
     [38;5;2m13896[39m: [38;5;2m       43:   include String[39m
     [38;5;2m13897[39m: [38;5;2m       44: [39m
     [38;5;2m13898[39m: [38;5;2m       45:   let repeat n str =[39m
     [38;5;2m13899[39m: [38;5;2m       46:     let b = Buffer.create 16 in[39m
     [38;5;2m13900[39m: [38;5;2m       47:     for _ = 1 to n do Buffer.add_string b str done;[39m
     [38;5;2m13901[39m: [38;5;2m       48:     Buffer.contents b[39m
     [38;5;2m13902[39m: [38;5;2m       49: end[39m
     [38;5;2m13903[39m: [38;5;2m       50: [39m
     [38;5;2m13904[39m: [38;5;2m       51: let tile w h i = I.tabulate w h (fun _ _ -> i)[39m
     [38;5;2m13905[39m: [38;5;2m       52: [39m
     [38;5;2m13906[39m: [38;5;2m       53: (** A few images used in several places. *)[39m
     [38;5;2m13907[39m: [38;5;2m       54: module Images = struct[39m
     [38;5;2m13908[39m: [38;5;2m       55: [39m
     [38;5;2m13909[39m: [38;5;2m       56:   let i1 =[39m
     [38;5;2m13910[39m: [38;5;2m       57:     I.(string A.(fg lightblack) "omgbbq" <->[39m
     [38;5;2m13911[39m: [38;5;2m       58:        string A.(fg white ++ bg red) "@")[39m
     [38;5;2m13912[39m: [38;5;2m       59:     <|> I.(pad ~t:2 @@ string A.(fg green) "xo")[39m
     [38;5;2m13913[39m: [38;5;2m       60: [39m
     [38;5;2m13914[39m: [38;5;2m       61:   let i2 = I.(hpad 1 1 (hcrop 1 1 @@ tile 3 3 i1) <|> i1)[39m
     [38;5;2m13915[39m: [38;5;2m       62: [39m
     [38;5;2m13916[39m: [38;5;2m       63:   let i3 = tile 5 5 i2[39m
     [38;5;2m13917[39m: [38;5;2m       64: [39m
     [38;5;2m13918[39m: [38;5;2m       65:   let i4 =[39m
     [38;5;2m13919[39m: [38;5;2m       66:     let i = I.(i3 <|> crop ~t:1 i3 <|> i3) in[39m
     [38;5;2m13920[39m: [38;5;2m       67:     I.(crop ~l:1 i <-> crop ~r:1 i <-> crop ~b:2 i)[39m
     [38;5;2m13921[39m: [38;5;2m       68: [39m
     [38;5;2m13922[39m: [38;5;2m       69:   let i5 =[39m
     [38;5;2m13923[39m: [38;5;2m       70:     tile 5 1 List.([39m
     [38;5;2m13924[39m: [38;5;2m       71:       range 0 15 |> map (fun i -> I.pad ~t:i ~l:(i*2) i2) |> I.zcat[39m
     [38;5;2m13925[39m: [38;5;2m       72:     )[39m
     [38;5;2m13926[39m: [38;5;2m       73: [39m
     [38;5;2m13927[39m: [38;5;2m       74:   let c_gray_ramp =[39m
     [38;5;2m13928[39m: [38;5;2m       75:     I.tabulate 24 1 (fun g _ -> I.string A.(bg (gray g)) " ")[39m
     [38;5;2m13929[39m: [38;5;2m       76: [39m
     [38;5;2m13930[39m: [38;5;2m       77:   let c_cube_ix =[39m
     [38;5;2m13931[39m: [38;5;2m       78:     I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m13932[39m: [38;5;2m       79:       I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m13933[39m: [38;5;2m       80:         I.string A.(bg (rgb ~r ~g ~b)) " "[39m
     [38;5;2m13934[39m: [38;5;2m       81: [39m
     [38;5;2m13935[39m: [38;5;2m       82:   let c_cube_rgb =[39m
     [38;5;2m13936[39m: [38;5;2m       83:     let f x = [| 0x00; 0x5f; 0x87; 0xaf; 0xd7; 0xff |].(x) in[39m
     [38;5;2m13937[39m: [38;5;2m       84:     I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m13938[39m: [38;5;2m       85:       I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m13939[39m: [38;5;2m       86:         I.string A.(bg (rgb_888 ~r:(f r) ~g:(f g) ~b:(f b))) " "[39m
     [38;5;2m13940[39m: [38;5;2m       87: [39m
     [38;5;2m13941[39m: [38;5;2m       88:   let c_rainbow w h =[39m
     [38;5;2m13942[39m: [38;5;2m       89:     let pi2     = 2. *. 3.14159 in[39m
     [38;5;2m13943[39m: [38;5;2m       90:     let pi2_3   = pi2 /. 3.[39m
     [38;5;2m13944[39m: [38;5;2m       91:     and f t off = sin (t +. off) *. 128. +. 128. |> truncate in[39m
     [38;5;2m13945[39m: [38;5;2m       92:     let color t = A.rgb_888 ~r:(f t (-.pi2_3)) ~g:(f t 0.) ~b:(f t pi2_3) in[39m
     [38;5;2m13946[39m: [38;5;2m       93:     I.tabulate (w - 1) 1 @@ fun x _ ->[39m
     [38;5;2m13947[39m: [38;5;2m       94:       let t = (pi2 *. float x /. float w) +. 3.7 in[39m
     [38;5;2m13948[39m: [38;5;2m       95:       I.char A.(bg (color t)) ' ' 1 h[39m
     [38;5;2m13949[39m: [38;5;2m       96: [39m
     [38;5;2m13950[39m: [38;5;2m       97:   (* U+25CF BLACK CIRCLE *)[39m
     [38;5;2m13951[39m: [38;5;2m       98:   let dot color = I.string (A.fg color) "●"[39m
     [38;5;2m13952[39m: [38;5;2m       99:   (* U+25AA BLACK SMALL SQUARE *)[39m
     [38;5;2m13953[39m: [38;5;2m      100:   let square color = I.string (A.fg color) "▪"[39m
     [38;5;2m13954[39m: [38;5;2m      101: [39m
     [38;5;2m13955[39m: [38;5;2m      102:   let rec cantor = function[39m
     [38;5;2m13956[39m: [38;5;2m      103:     | 0 -> square A.lightblue[39m
     [38;5;2m13957[39m: [38;5;2m      104:     | n ->[39m
     [38;5;2m13958[39m: [38;5;2m      105:         let sub = cantor (pred n) in[39m
     [38;5;2m13959[39m: [38;5;2m      106:         I.hcat (List.replicate (pow 3 n) (square A.lightblue)) <->[39m
     [38;5;2m13960[39m: [38;5;2m      107:         (sub <|> I.void (pow 3 (n - 1)) 0 <|> sub)[39m
     [38;5;2m13961[39m: [38;5;2m      108: [39m
     [38;5;2m13962[39m: [38;5;2m      109:   let checker n m i =[39m
     [38;5;2m13963[39m: [38;5;2m      110:     let w = I.width i in[39m
     [38;5;2m13964[39m: [38;5;2m      111:     I.(tile (n/2) (m/2) (hpad 0 w i <-> hpad w 0 i))[39m
     [38;5;2m13965[39m: [38;5;2m      112: [39m
     [38;5;2m13966[39m: [38;5;2m      113:   let checker1 = checker 20 20 I.(char A.(bg magenta) ' ' 2 1)[39m
     [38;5;2m13967[39m: [38;5;2m      114: [39m
     [38;5;2m13968[39m: [38;5;2m      115:   let rec sierp c n = I.([39m
     [38;5;2m13969[39m: [38;5;2m      116:     if n > 1 then[39m
     [38;5;2m13970[39m: [38;5;2m      117:       let ss = sierp c (pred n) in ss <-> (ss <|> ss)[39m
     [38;5;2m13971[39m: [38;5;2m      118:     else hpad 1 0 (square c)[39m
     [38;5;2m13972[39m: [38;5;2m      119:   )[39m
     [38;5;2m13973[39m: [38;5;2m      120: [39m
     [38;5;2m13974[39m: [38;5;2m      121:   let grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m13975[39m: [38;5;2m      122: [39m
     [38;5;2m13976[39m: [38;5;2m      123:   let outline attr i =[39m
     [38;5;2m13977[39m: [38;5;2m      124:     let (w, h) = I.(width i, height i) in[39m
     [38;5;2m13978[39m: [38;5;2m      125:     let chr x = I.uchar attr (Uchar.of_int x) 1 1[39m
     [38;5;2m13979[39m: [38;5;2m      126:     and hbar  = I.uchar attr (Uchar.of_int 0x2500) w 1[39m
     [38;5;2m13980[39m: [38;5;2m      127:     and vbar  = I.uchar attr (Uchar.of_int 0x2502) 1 h in[39m
     [38;5;2m13981[39m: [38;5;2m      128:     let (a, b, c, d) = (chr 0x256d, chr 0x256e, chr 0x256f, chr 0x2570) in[39m
     [38;5;2m13982[39m: [38;5;2m      129:     grid [ [a; hbar; b]; [vbar; i; vbar]; [d; hbar; c] ][39m
     [38;5;2m13983[39m: [38;5;2m      130: end[39m
     [38;5;2m13984[39m: [38;5;2m      131: [39m
     [38;5;2m13985[39m: [38;5;2m      132: let halfblock = "▄"[39m
     [38;5;2m13986[39m: [38;5;2m      133: [39m
     [38;5;2m13987[39m: [38;5;2m      134: let pxmatrix w h f = I.tabulate w h @@ fun x y ->[39m
     [38;5;2m13988[39m: [38;5;2m      135:   let y = y * 2 in[39m
     [38;5;2m13989[39m: [38;5;2m      136:   I.string A.(bg (f x y) ++ fg (f x (y + 1))) halfblock[39m
     [38;5;2m13990[39m: [38;5;2m      137: [39m
     [38;5;2m13991[39m: [38;5;2m      138: module Term = Notty_unix.Term[39m
     [38;5;2m13992[39m: [38;5;2m      139: [39m
     [38;5;2m13993[39m: [38;5;2m      140: let simpleterm ~imgf ~f ~s =[39m
     [38;5;2m13994[39m: [38;5;2m      141:   let term = Term.create () in[39m
     [38;5;2m13995[39m: [38;5;2m      142:   let imgf (w, h) s =[39m
     [38;5;2m13996[39m: [38;5;2m      143:     I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m13997[39m: [38;5;2m      144:   let rec go s =[39m
     [38;5;2m13998[39m: [38;5;2m      145:     Term.image term (imgf (Term.size term) s);[39m
     [38;5;2m13999[39m: [38;5;2m      146:     match Term.event term with[39m
     [38;5;2m14000[39m: [38;5;2m      147:     | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m14001[39m: [38;5;2m      148:     | `Resize _ -> go s[39m
     [38;5;2m14002[39m: [38;5;2m      149:     | #Unescape.event as e ->[39m
     [38;5;2m14003[39m: [38;5;2m      150:         match f s e with Some s -> go s | _ -> ()[39m
     [38;5;2m14004[39m: [38;5;2m      151:   in go s[39m
     [38;5;2m14005[39m: [38;5;2mAdded regular file ../notty/examples/common_lwt.ml:[39m
     [38;5;2m14006[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14007[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14008[39m: [38;5;2m        3: [39m
     [38;5;2m14009[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m14010[39m: [38;5;2m        5: open Lwt.Infix[39m
     [38;5;2m14011[39m: [38;5;2m        6: [39m
     [38;5;2m14012[39m: [38;5;2m        7: include Common[39m
     [38;5;2m14013[39m: [38;5;2m        8: [39m
     [38;5;2m14014[39m: [38;5;2m        9: module T = Notty_lwt.Term[39m
     [38;5;2m14015[39m: [38;5;2m       10: [39m
     [38;5;2m14016[39m: [38;5;2m       11: let simpleterm_lwt ~imgf ~f ~s =[39m
     [38;5;2m14017[39m: [38;5;2m       12:   let term = T.create () in[39m
     [38;5;2m14018[39m: [38;5;2m       13:   let imgf (w, h) s =[39m
     [38;5;2m14019[39m: [38;5;2m       14:     I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m14020[39m: [38;5;2m       15:   let step e s = match e with[39m
     [38;5;2m14021[39m: [38;5;2m       16:     | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m14022[39m: [38;5;2m       17:         T.release term >|= fun () -> s[39m
     [38;5;2m14023[39m: [38;5;2m       18:     | `Resize dim -> T.image term (imgf dim s) >|= fun () -> s[39m
     [38;5;2m14024[39m: [38;5;2m       19:     | #Unescape.event as e ->[39m
     [38;5;2m14025[39m: [38;5;2m       20:         match f s e with[39m
     [38;5;2m14026[39m: [38;5;2m       21:         | Some s -> T.image term (imgf (T.size term) s) >|= fun () -> s[39m
     [38;5;2m14027[39m: [38;5;2m       22:         | None   -> T.release term >|= fun () -> s[39m
     [38;5;2m14028[39m: [38;5;2m       23:   in[39m
     [38;5;2m14029[39m: [38;5;2m       24:   ( T.image term (imgf (T.size term) s)[39m
     [38;5;2m14030[39m: [38;5;2m       25:     >>= fun () -> Lwt_stream.fold_s step (T.events term) s )[39m
     [38;5;2m14031[39m: [38;5;2m       26:   |> Lwt_main.run |> ignore[39m
     [38;5;2m14032[39m: [38;5;2m       27: [39m
     [38;5;2m14033[39m: [38;5;2m       28: [39m
     [38;5;2m14034[39m: [38;5;2m       29: let timer = function[39m
     [38;5;2m14035[39m: [38;5;2m       30:   | None   -> Lwt.wait () |> fst[39m
     [38;5;2m14036[39m: [38;5;2m       31:   | Some t -> Lwt_unix.sleep t >|= fun _ -> `Timer[39m
     [38;5;2m14037[39m: [38;5;2m       32: [39m
     [38;5;2m14038[39m: [38;5;2m       33: let event e = Lwt_stream.get (T.events e) >|= function[39m
     [38;5;2m14039[39m: [38;5;2m       34:   | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m14040[39m: [38;5;2m       35:   | None -> `End[39m
     [38;5;2m14041[39m: [38;5;2m       36: [39m
     [38;5;2m14042[39m: [38;5;2m       37: let simpleterm_lwt_timed ?delay ~f s0 =[39m
     [38;5;2m14043[39m: [38;5;2m       38:   let term = T.create () in[39m
     [38;5;2m14044[39m: [38;5;2m       39:   let rec loop (e, t) dim s =[39m
     [38;5;2m14045[39m: [38;5;2m       40:     (e <?> t) >>= function[39m
     [38;5;2m14046[39m: [38;5;2m       41:     | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m14047[39m: [38;5;2m       42:         Lwt.return_unit[39m
     [38;5;2m14048[39m: [38;5;2m       43:     | `Resize dim as evt     -> invoke (event term, t) dim s evt[39m
     [38;5;2m14049[39m: [38;5;2m       44:     | #Unescape.event as evt -> invoke (event term, t) dim s evt[39m
     [38;5;2m14050[39m: [38;5;2m       45:     | `Timer as evt          -> invoke (e, timer delay) dim s evt[39m
     [38;5;2m14051[39m: [38;5;2m       46:   and invoke es dim s e =[39m
     [38;5;2m14052[39m: [38;5;2m       47:     match f dim s e with[39m
     [38;5;2m14053[39m: [38;5;2m       48:     | `Continue s    -> loop es dim s[39m
     [38;5;2m14054[39m: [38;5;2m       49:     | `Redraw (s, i) -> T.image term i >>= fun () -> loop es dim s[39m
     [38;5;2m14055[39m: [38;5;2m       50:     | `Stop          -> Lwt.return_unit in[39m
     [38;5;2m14056[39m: [38;5;2m       51:   let size = T.size term in[39m
     [38;5;2m14057[39m: [38;5;2m       52:   loop (event term, timer delay) size s0[39m
     [38;5;2m14058[39m: [38;5;2mAdded regular file ../notty/examples/crops.ml:[39m
     [38;5;2m14059[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14060[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14061[39m: [38;5;2m        3: [39m
     [38;5;2m14062[39m: [38;5;2m        4: (**[39m
     [38;5;2m14063[39m: [38;5;2m        5:  * Demonstrates edge-case behavior of functions that produce rectangle-like[39m
     [38;5;2m14064[39m: [38;5;2m        6:  * things.[39m
     [38;5;2m14065[39m: [38;5;2m        7:  *)[39m
     [38;5;2m14066[39m: [38;5;2m        8: open Notty[39m
     [38;5;2m14067[39m: [38;5;2m        9: open Common[39m
     [38;5;2m14068[39m: [38;5;2m       10: [39m
     [38;5;2m14069[39m: [38;5;2m       11: let hdistribute ?align w imgs =[39m
     [38;5;2m14070[39m: [38;5;2m       12:   let n = List.length imgs in[39m
     [38;5;2m14071[39m: [38;5;2m       13:   I.(List.map (hsnap ?align (w / n)) imgs |> hcat)[39m
     [38;5;2m14072[39m: [38;5;2m       14: [39m
     [38;5;2m14073[39m: [38;5;2m       15: let take w h i = I.(vsnap h i |> hsnap w)[39m
     [38;5;2m14074[39m: [38;5;2m       16: [39m
     [38;5;2m14075[39m: [38;5;2m       17: let () =[39m
     [38;5;2m14076[39m: [38;5;2m       18:   simpleterm ~s:(2, 2)[39m
     [38;5;2m14077[39m: [38;5;2m       19:     ~f:(fun (w, h as s) -> function[39m
     [38;5;2m14078[39m: [38;5;2m       20:         `Key (`Arrow `Left, _) -> Some (w - 1, h)[39m
     [38;5;2m14079[39m: [38;5;2m       21:       | `Key (`Arrow `Right, _) -> Some (w + 1, h)[39m
     [38;5;2m14080[39m: [38;5;2m       22:       | `Key (`Arrow `Up, _) -> Some (w, h - 1)[39m
     [38;5;2m14081[39m: [38;5;2m       23:       | `Key (`Arrow `Down, _) -> Some (w, h + 1)[39m
     [38;5;2m14082[39m: [38;5;2m       24:       | `Key (`ASCII '0', _) -> Some (0, 0)[39m
     [38;5;2m14083[39m: [38;5;2m       25:       | _ -> Some s)[39m
     [38;5;2m14084[39m: [38;5;2m       26:     ~imgf:I.(fun (ow, oh) (w, h) ->[39m
     [38;5;2m14085[39m: [38;5;2m       27:       let (a1, a2, a3) = A.(fg lightmagenta, fg lightred, fg lightblue) in[39m
     [38;5;2m14086[39m: [38;5;2m       28:       strf "Sizing edge behavior. Dim: (%d, %d)" w h <->[39m
     [38;5;2m14087[39m: [38;5;2m       29:       ( hdistribute ow Images.[[39m
     [38;5;2m14088[39m: [38;5;2m       30:           outline a1 (uchar a1 (Uchar.of_int 0x2022) w h)[39m
     [38;5;2m14089[39m: [38;5;2m       31:         ; outline a2 (uchar a2 (Uchar.of_int 0x2022) 300 300 |> take w h)[39m
     [38;5;2m14090[39m: [38;5;2m       32:         ; outline a3 (void w h)[39m
     [38;5;2m14091[39m: [38;5;2m       33:         ] |> vsnap (oh - 4) )[39m
     [38;5;2m14092[39m: [38;5;2m       34:       <->[39m
     [38;5;2m14093[39m: [38;5;2m       35:       hdistribute ow [string a1 "char"; string a2 "crop"; string a3 "void"][39m
     [38;5;2m14094[39m: [38;5;2m       36:     )[39m
     [38;5;2m14095[39m: [38;5;2mAdded regular file ../notty/examples/cursor.ml:[39m
     [38;5;2m14096[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14097[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14098[39m: [38;5;2m        3: [39m
     [38;5;2m14099[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m14100[39m: [38;5;2m        5: open Common[39m
     [38;5;2m14101[39m: [38;5;2m        6: [39m
     [38;5;2m14102[39m: [38;5;2m        7: let rec main t (x, y as pos) =[39m
     [38;5;2m14103[39m: [38;5;2m        8:   let img =[39m
     [38;5;2m14104[39m: [38;5;2m        9:     let dot = I.string A.(bg lightred ++ fg black) "✓" |> I.pad ~l:x ~t:y[39m
     [38;5;2m14105[39m: [38;5;2m       10:     and txt = I.strf ~attr:A.(fg lightblack) "@(%d, %d)" x y in[39m
     [38;5;2m14106[39m: [38;5;2m       11:     I.(txt </> dot) in[39m
     [38;5;2m14107[39m: [38;5;2m       12:   Term.image t img;[39m
     [38;5;2m14108[39m: [38;5;2m       13:   Term.cursor t (Some pos);[39m
     [38;5;2m14109[39m: [38;5;2m       14:   match Term.event t with[39m
     [38;5;2m14110[39m: [38;5;2m       15:   | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m14111[39m: [38;5;2m       16:   | `Resize _ -> main t pos[39m
     [38;5;2m14112[39m: [38;5;2m       17:   | `Mouse ((`Press _ | `Drag), pos, _) -> main t pos[39m
     [38;5;2m14113[39m: [38;5;2m       18:   | `Key (`Arrow d, _) ->[39m
     [38;5;2m14114[39m: [38;5;2m       19:     ( main t @@ match d with[39m
     [38;5;2m14115[39m: [38;5;2m       20:       | `Up    -> (x, y - 1)[39m
     [38;5;2m14116[39m: [38;5;2m       21:       | `Down  -> (x, y + 1)[39m
     [38;5;2m14117[39m: [38;5;2m       22:       | `Left  -> (x - 1, y)[39m
     [38;5;2m14118[39m: [38;5;2m       23:       | `Right -> (x + 1, y) )[39m
     [38;5;2m14119[39m: [38;5;2m       24:   | _ -> main t pos[39m
     [38;5;2m14120[39m: [38;5;2m       25: [39m
     [38;5;2m14121[39m: [38;5;2m       26: let () = main (Term.create ()) (0, 1)[39m
     [38;5;2m14122[39m: [38;5;2mAdded regular file ../notty/examples/cuts.ml:[39m
     [38;5;2m14123[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14124[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14125[39m: [38;5;2m        3: [39m
     [38;5;2m14126[39m: [38;5;2m        4: (**[39m
     [38;5;2m14127[39m: [38;5;2m        5:  * Demonstrates text cropping, particularly of grapheme clusters and wide[39m
     [38;5;2m14128[39m: [38;5;2m        6:  * characters.[39m
     [38;5;2m14129[39m: [38;5;2m        7:  *)[39m
     [38;5;2m14130[39m: [38;5;2m        8: open Notty[39m
     [38;5;2m14131[39m: [38;5;2m        9: open Notty_unix[39m
     [38;5;2m14132[39m: [38;5;2m       10: open Common[39m
     [38;5;2m14133[39m: [38;5;2m       11: [39m
     [38;5;2m14134[39m: [38;5;2m       12: let hpadwith attr c a b i =[39m
     [38;5;2m14135[39m: [38;5;2m       13:   I.(char attr c a 1 <|> i <|> char attr c b 1)[39m
     [38;5;2m14136[39m: [38;5;2m       14: [39m
     [38;5;2m14137[39m: [38;5;2m       15: let cuts i =[39m
     [38;5;2m14138[39m: [38;5;2m       16:   let w = I.width i in[39m
     [38;5;2m14139[39m: [38;5;2m       17:   List.([39m
     [38;5;2m14140[39m: [38;5;2m       18:     range 0 w |> map (fun a ->[39m
     [38;5;2m14141[39m: [38;5;2m       19:       range 0 (w - a) |> map (fun b ->[39m
     [38;5;2m14142[39m: [38;5;2m       20:         i |> I.hcrop a b |> hpadwith A.(fg lightblack) '.' a b[39m
     [38;5;2m14143[39m: [38;5;2m       21:       ) |> I.vcat |> I.hpad 1 1[39m
     [38;5;2m14144[39m: [38;5;2m       22:     ) |> I.hcat |> I.vpad 1 1[39m
     [38;5;2m14145[39m: [38;5;2m       23:   )[39m
     [38;5;2m14146[39m: [38;5;2m       24: [39m
     [38;5;2m14147[39m: [38;5;2m       25: let colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m14148[39m: [38;5;2m       26: [39m
     [38;5;2m14149[39m: [38;5;2m       27: let patterns = [[39m
     [38;5;2m14150[39m: [38;5;2m       28:   "desu"[39m
     [38;5;2m14151[39m: [38;5;2m       29: ; ".▪e\204\129●."[39m
     [38;5;2m14152[39m: [38;5;2m       30: ; "(茶‸茶‶)"[39m
     [38;5;2m14153[39m: [38;5;2m       31: ; "(⌐■_■)"[39m
     [38;5;2m14154[39m: [38;5;2m       32: (* ; "¯\\(ツ)/¯" *)[39m
     [38;5;2m14155[39m: [38;5;2m       33: (* ; "ಠ_ಠ" *)[39m
     [38;5;2m14156[39m: [38;5;2m       34: (* ; "ಡ_ಡ" *)[39m
     [38;5;2m14157[39m: [38;5;2m       35: (* ; "\xe0\xb2\xa0\x5f\xe0\xb1\x83" *)[39m
     [38;5;2m14158[39m: [38;5;2m       36: (* ; "ತಎತ" *)[39m
     [38;5;2m14159[39m: [38;5;2m       37: (* ; "ಥ_ಥ" *)[39m
     [38;5;2m14160[39m: [38;5;2m       38: ; "ᕕ( ᐛ )ᕗ"[39m
     [38;5;2m14161[39m: [38;5;2m       39: (* ; "ᕙ(⇀‸↼‶)ᕗ" *)[39m
     [38;5;2m14162[39m: [38;5;2m       40: (* ; "ᕦ(ò_óˇ)ᕤ" *)[39m
     [38;5;2m14163[39m: [38;5;2m       41: (* ; "(╯ ︵╰ )" *)[39m
     [38;5;2m14164[39m: [38;5;2m       42: (* ; "\x28\x20\xcd\xa1\xc2\xb0\x20\xcd\x9c\xca\x96\x20\xcd\xa1\xc2\xb0\x29" *)[39m
     [38;5;2m14165[39m: [38;5;2m       43: ][39m
     [38;5;2m14166[39m: [38;5;2m       44: [39m
     [38;5;2m14167[39m: [38;5;2m       45: [39m
     [38;5;2m14168[39m: [38;5;2m       46: let () =[39m
     [38;5;2m14169[39m: [38;5;2m       47:   let open I in[39m
     [38;5;2m14170[39m: [38;5;2m       48: [39m
     [38;5;2m14171[39m: [38;5;2m       49:   patterns |> List.map (fun s ->[39m
     [38;5;2m14172[39m: [38;5;2m       50:     cuts (string A.(fg lightmagenta ++ bg lightblack) s)[39m
     [38;5;2m14173[39m: [38;5;2m       51:   ) |> I.vcat |> eol |> output_image ;[39m
     [38;5;2m14174[39m: [38;5;2m       52: [39m
     [38;5;2m14175[39m: [38;5;2m       53:   colors |> List.mapi (fun i c ->[39m
     [38;5;2m14176[39m: [38;5;2m       54:     pad ~l:i ~t:i ([39m
     [38;5;2m14177[39m: [38;5;2m       55:       string A.(fg black ++ bg c ++ st blink) "茶" <|>[39m
     [38;5;2m14178[39m: [38;5;2m       56:       pad ~l:2 ~t:1[39m
     [38;5;2m14179[39m: [38;5;2m       57:         (string A.(fg c ++ st blink) "PARTY!"))[39m
     [38;5;2m14180[39m: [38;5;2m       58:   ) |> zcat |> pad ~l:2 ~t:2 ~b:2 |> output_image[39m
     [38;5;2m14181[39m: [38;5;2mAdded regular file ../notty/examples/dune:[39m
     [38;5;2m14182[39m: [38;5;2m        1: (library[39m
     [38;5;2m14183[39m: [38;5;2m        2:   (name common)[39m
     [38;5;2m14184[39m: [38;5;2m        3:   (modules common)[39m
     [38;5;2m14185[39m: [38;5;2m        4:   (libraries notty notty.unix))[39m
     [38;5;2m14186[39m: [38;5;2m        5: [39m
     [38;5;2m14187[39m: [38;5;2m        6: (library[39m
     [38;5;2m14188[39m: [38;5;2m        7:   (name common_lwt)[39m
     [38;5;2m14189[39m: [38;5;2m        8:   (modules common_lwt)[39m
     [38;5;2m14190[39m: [38;5;2m        9:   (libraries common notty.lwt))[39m
     [38;5;2m14191[39m: [38;5;2m       10: [39m
     [38;5;2m14192[39m: [38;5;2m       11: (executables[39m
     [38;5;2m14193[39m: [38;5;2m       12:   (names testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m14194[39m: [38;5;2m       13:          letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m14195[39m: [38;5;2m       14:          life)[39m
     [38;5;2m14196[39m: [38;5;2m       15:   (modules testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m14197[39m: [38;5;2m       16:            letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m14198[39m: [38;5;2m       17:            life)[39m
     [38;5;2m14199[39m: [38;5;2m       18:   (libraries common common_lwt))[39m
     [38;5;2m14200[39m: [38;5;2m       19: [39m
     [38;5;2m14201[39m: [38;5;2m       20: (alias[39m
     [38;5;2m14202[39m: [38;5;2m       21:   (name ex)[39m
     [38;5;2m14203[39m: [38;5;2m       22:   (package notty)[39m
     [38;5;2m14204[39m: [38;5;2m       23:   (deps testpatterns.exe colors.exe almondbread.exe crops.exe cursor.exe[39m
     [38;5;2m14205[39m: [38;5;2m       24:         cuts.exe emoji.exe inline.exe keys.exe letters.exe mouse.exe[39m
     [38;5;2m14206[39m: [38;5;2m       25:         thisbig.exe runes.exe sierpinski.exe rain.exe sierpinski_lwt.exe[39m
     [38;5;2m14207[39m: [38;5;2m       26:         linear.exe life.exe))[39m
     [38;5;2m14208[39m: [38;5;2mAdded regular file ../notty/examples/emoji.ml:[39m
     [38;5;2m14209[39m: [38;5;2m        1: open Notty[39m
     [38;5;2m14210[39m: [38;5;2m        2: open Common[39m
     [38;5;2m14211[39m: [38;5;2m        3: [39m
     [38;5;2m14212[39m: [38;5;2m        4: let es = [[39m
     [38;5;2m14213[39m: [38;5;2m        5:   [0x2e; 0x2e; 0x2e; 0x2e];[39m
     [38;5;2m14214[39m: [38;5;2m        6:   [0x25aa; 0x25fe; 0x25fc; 0x2b1b];[39m
     [38;5;2m14215[39m: [38;5;2m        7:   [0x1f346; 0x1f351; 0x1f605; 0x1f4a6];[39m
     [38;5;2m14216[39m: [38;5;2m        8:   [0x1f62d; 0x1f52a; 0x1f52a; 0x1f47c];[39m
     [38;5;2m14217[39m: [38;5;2m        9: ][39m
     [38;5;2m14218[39m: [38;5;2m       10: [39m
     [38;5;2m14219[39m: [38;5;2m       11: let image =[39m
     [38;5;2m14220[39m: [38;5;2m       12:   es |> List.(map (map @@ fun x ->[39m
     [38;5;2m14221[39m: [38;5;2m       13:     let i = I.uchar A.(fg lightwhite) (Uchar.of_int x) 1 1 in[39m
     [38;5;2m14222[39m: [38;5;2m       14:     I.(pad ~r:(3 - width i) i)[39m
     [38;5;2m14223[39m: [38;5;2m       15:   )) |> Images.grid |> I.pad ~l:1 |> Images.outline A.(fg lightblack)[39m
     [38;5;2m14224[39m: [38;5;2m       16: [39m
     [38;5;2m14225[39m: [38;5;2m       17: let () = Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m14226[39m: [38;5;2m       18:   I.(pad ~l:((w - width image) / 2) ~b:1 image)[39m
     [38;5;2m14227[39m: [38;5;2mAdded regular file ../notty/examples/inline.ml:[39m
     [38;5;2m14228[39m: [38;5;2m        1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14229[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14230[39m: [38;5;2m        3: [39m
     [38;5;2m14231[39m: [38;5;2m        4: (** Demonstrates manual cursor positioning. *)[39m
     [38;5;2m14232[39m: [38;5;2m        5: [39m
     [38;5;2m14233[39m: [38;5;2m        6: open Notty[39m
     [38;5;2m14234[39m: [38;5;2m        7: open Notty.Infix[39m
     [38;5;2m14235[39m: [38;5;2m        8: open Notty_unix[39m
     [38;5;2m14236[39m: [38;5;2m        9: [39m
     [38;5;2m14237[39m: [38;5;2m       10: let sleep n = flush stdout; Unix.select [] [] [] n |> ignore[39m
     [38;5;2m14238[39m: [38;5;2m       11: [39m
     [38;5;2m14239[39m: [38;5;2m       12: let pp_str attr = I.pp_attr attr Format.pp_print_string[39m
     [38;5;2m14240[39m: [38;5;2m       13: [39m
     [38;5;2m14241[39m: [38;5;2m       14: let rewind n = move_cursor `Home; move_cursor (`By (0, - (max n 0)))[39m
     [38;5;2m14242[39m: [38;5;2m       15: [39m
     [38;5;2m14243[39m: [38;5;2m       16: let output_subst ~prev i =[39m
     [38;5;2m14244[39m: [38;5;2m       17:   let h = I.height prev in[39m
     [38;5;2m14245[39m: [38;5;2m       18:   let d = h - I.height i in[39m
     [38;5;2m14246[39m: [38;5;2m       19:   if d > 0 then ( rewind (d - 1); output_image (I.void 0 d) );[39m
     [38;5;2m14247[39m: [38;5;2m       20:   rewind (h - 1); output_image i[39m
     [38;5;2m14248[39m: [38;5;2m       21: [39m
     [38;5;2m14249[39m: [38;5;2m       22: let cmyk = function[39m
     [38;5;2m14250[39m: [38;5;2m       23:   | 0 -> A.rgb ~r:0 ~g:5 ~b:5[39m
     [38;5;2m14251[39m: [38;5;2m       24:   | 1 -> A.rgb ~r:5 ~g:0 ~b:5[39m
     [38;5;2m14252[39m: [38;5;2m       25:   | 2 -> A.rgb ~r:5 ~g:5 ~b:0[39m
     [38;5;2m14253[39m: [38;5;2m       26:   | 3 -> A.rgb ~r:0 ~g:0 ~b:0[39m
     [38;5;2m14254[39m: [38;5;2m       27:   | _ -> A.rgb ~r:5 ~g:5 ~b:5[39m
     [38;5;2m14255[39m: [38;5;2m       28: [39m
     [38;5;2m14256[39m: [38;5;2m       29: let () =[39m
     [38;5;2m14257[39m: [38;5;2m       30: [39m
     [38;5;2m14258[39m: [38;5;2m       31:   let (w, h) = match winsize Unix.stdout with[39m
     [38;5;2m14259[39m: [38;5;2m       32:     Some dim -> dim | _ -> assert false[39m
     [38;5;2m14260[39m: [38;5;2m       33:   and attr = A.(fg lightwhite ++ bg blue) in[39m
     [38;5;2m14261[39m: [38;5;2m       34:   let img1 =[39m
     [38;5;2m14262[39m: [38;5;2m       35:     I.(string attr "THE BLUE STRIPE ABOVE" <->[39m
     [38;5;2m14263[39m: [38;5;2m       36:          tabulate 1 h (fun _ _ -> I.strf "HIDDEN"))[39m
     [38;5;2m14264[39m: [38;5;2m       37:   and img2 =[39m
     [38;5;2m14265[39m: [38;5;2m       38:     I.(strf "Top line. There's a %a above. ^^^"[39m
     [38;5;2m14266[39m: [38;5;2m       39:          (pp_str attr) "blue stripe" |> vpad 0 2) in[39m
     [38;5;2m14267[39m: [38;5;2m       40: [39m
     [38;5;2m14268[39m: [38;5;2m       41:   output_image img1; output_subst ~prev:img1 img2;[39m
     [38;5;2m14269[39m: [38;5;2m       42: [39m
     [38;5;2m14270[39m: [38;5;2m       43:   output_image I.(string A.(fg white) "[..]" |> eol);[39m
     [38;5;2m14271[39m: [38;5;2m       44:   for i = 0 to 5 do[39m
     [38;5;2m14272[39m: [38;5;2m       45:     let a  = A.(bg (rgb ~r:i ~b:(5 - i) ~g:0)) in[39m
     [38;5;2m14273[39m: [38;5;2m       46:     let bg = I.tabulate 1 i (fun _ -> I.strf "HIDDEN [%d]") |> eol[39m
     [38;5;2m14274[39m: [38;5;2m       47:     and fg = I.char a ' ' 19 (5 - i) <|> I.char a '-' 1 (5 - i) |> eol in[39m
     [38;5;2m14275[39m: [38;5;2m       48:     output_image bg; output_subst ~prev:bg fg;[39m
     [38;5;2m14276[39m: [38;5;2m       49:   done;[39m
     [38;5;2m14277[39m: [38;5;2m       50:   output_image I.(string A.(fg white) "[..]" |> vpad 0 2);[39m
     [38;5;2m14278[39m: [38;5;2m       51: [39m
     [38;5;2m14279[39m: [38;5;2m       52:   let rec go prev n =[39m
     [38;5;2m14280[39m: [38;5;2m       53:     if n <= w then[39m
     [38;5;2m14281[39m: [38;5;2m       54:       let h = log (float n) |> truncate in[39m
     [38;5;2m14282[39m: [38;5;2m       55:       let i = prev <|> I.tabulate 1 h (fun _ y -> I.char A.(bg (cmyk y)) ' ' 1 1) in[39m
     [38;5;2m14283[39m: [38;5;2m       56:       output_subst ~prev i; sleep 0.01; go i (n + 1)[39m
     [38;5;2m14284[39m: [38;5;2m       57:     else output_subst ~prev I.empty in[39m
     [38;5;2m14285[39m: [38;5;2m       58:   show_cursor false;[39m
     [38;5;2m14286[39m: [38;5;2m       59:   go I.empty 1;[39m
     [38;5;2m14287[39m: [38;5;2m       60:   show_cursor true;[39m
     [38;5;2m14288[39m: [38;5;2m       61: [39m
     [38;5;2m14289[39m: [38;5;2m       62:   output_image[39m
     [38;5;2m14290[39m: [38;5;2m       63:     I.(strf "It doesn't say %a anywhere on screen, either."[39m
     [38;5;2m14291[39m: [38;5;2m       64:         (pp_attr A.(fg white) Format.pp_print_string) "hidden" |> eol)[39m
     [38;5;2m14292[39m: [38;5;2m       65: [39m
     [38;5;2m14293[39m: [38;5;2mAdded regular file ../notty/examples/keys.ml:[39m
     [38;5;2m14294[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14295[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14296[39m: [38;5;2m        3: [39m
     [38;5;2m14297[39m: [38;5;2m        4: (**[39m
     [38;5;2m14298[39m: [38;5;2m        5:  * Demonstrates input parsing.[39m
     [38;5;2m14299[39m: [38;5;2m        6:  *)[39m
     [38;5;2m14300[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m14301[39m: [38;5;2m        8: open Common[39m
     [38;5;2m14302[39m: [38;5;2m        9: [39m
     [38;5;2m14303[39m: [38;5;2m       10: let pps = Format.pp_print_string[39m
     [38;5;2m14304[39m: [38;5;2m       11: let ppi = Format.pp_print_int[39m
     [38;5;2m14305[39m: [38;5;2m       12: [39m
     [38;5;2m14306[39m: [38;5;2m       13: let pp_special fmt = function[39m
     [38;5;2m14307[39m: [38;5;2m       14:   | `Escape       -> pps fmt "ESCAPE"[39m
     [38;5;2m14308[39m: [38;5;2m       15:   | `Enter        -> pps fmt "ENTER"[39m
     [38;5;2m14309[39m: [38;5;2m       16:   | `Tab          -> pps fmt "TAB"[39m
     [38;5;2m14310[39m: [38;5;2m       17:   | `Backspace    -> pps fmt "BACKSPACE"[39m
     [38;5;2m14311[39m: [38;5;2m       18:   | `Arrow `Up    -> pps fmt "UP"[39m
     [38;5;2m14312[39m: [38;5;2m       19:   | `Arrow `Down  -> pps fmt "DOWN"[39m
     [38;5;2m14313[39m: [38;5;2m       20:   | `Arrow `Left  -> pps fmt "LEFT"[39m
     [38;5;2m14314[39m: [38;5;2m       21:   | `Arrow `Right -> pps fmt "RIGHT"[39m
     [38;5;2m14315[39m: [38;5;2m       22:   | `Page `Up     -> pps fmt "PAGE UP"[39m
     [38;5;2m14316[39m: [38;5;2m       23:   | `Page `Down   -> pps fmt "PAGE DOWN"[39m
     [38;5;2m14317[39m: [38;5;2m       24:   | `Home         -> pps fmt "HOME"[39m
     [38;5;2m14318[39m: [38;5;2m       25:   | `End          -> pps fmt "END"[39m
     [38;5;2m14319[39m: [38;5;2m       26:   | `Insert       -> pps fmt "INSERT"[39m
     [38;5;2m14320[39m: [38;5;2m       27:   | `Delete       -> pps fmt "DELETE"[39m
     [38;5;2m14321[39m: [38;5;2m       28:   | `Function n   -> pps fmt "FN"; ppi fmt n[39m
     [38;5;2m14322[39m: [38;5;2m       29: [39m
     [38;5;2m14323[39m: [38;5;2m       30: let pp_mods fmt = function[39m
     [38;5;2m14324[39m: [38;5;2m       31:   | [] -> ()[39m
     [38;5;2m14325[39m: [38;5;2m       32:   | ms -> ms |> List.iter (fun m ->[39m
     [38;5;2m14326[39m: [38;5;2m       33:       pps fmt @@ match m with `Meta -> "M" | `Ctrl -> "C" | `Shift -> "S"[39m
     [38;5;2m14327[39m: [38;5;2m       34:     )[39m
     [38;5;2m14328[39m: [38;5;2m       35: [39m
     [38;5;2m14329[39m: [38;5;2m       36: let pp_mouse fmt = function[39m
     [38;5;2m14330[39m: [38;5;2m       37:   | `Release -> pps fmt "Release"[39m
     [38;5;2m14331[39m: [38;5;2m       38:   | `Drag    -> pps fmt "Drag"[39m
     [38;5;2m14332[39m: [38;5;2m       39:   | `Move    -> pps fmt "Move"[39m
     [38;5;2m14333[39m: [38;5;2m       40:   | `Press k ->[39m
     [38;5;2m14334[39m: [38;5;2m       41:       pps fmt "Press ";[39m
     [38;5;2m14335[39m: [38;5;2m       42:       pps fmt @@ match k with[39m
     [38;5;2m14336[39m: [38;5;2m       43:         | `Left         -> "Left"[39m
     [38;5;2m14337[39m: [38;5;2m       44:         | `Middle       -> "Middle"[39m
     [38;5;2m14338[39m: [38;5;2m       45:         | `Right        -> "Right"[39m
     [38;5;2m14339[39m: [38;5;2m       46:         | `Scroll `Up   -> "Scroll Up"[39m
     [38;5;2m14340[39m: [38;5;2m       47:         | `Scroll `Down -> "Scroll Down"[39m
     [38;5;2m14341[39m: [38;5;2m       48: [39m
     [38;5;2m14342[39m: [38;5;2m       49: let pp_u ppf u = Format.fprintf ppf "U+%04X" (Uchar.to_int u)[39m
     [38;5;2m14343[39m: [38;5;2m       50: [39m
     [38;5;2m14344[39m: [38;5;2m       51: let () =[39m
     [38;5;2m14345[39m: [38;5;2m       52:   let magenta = A.(fg lightmagenta ++ bg black)[39m
     [38;5;2m14346[39m: [38;5;2m       53:   and green   = A.(fg lightgreen   ++ bg black)[39m
     [38;5;2m14347[39m: [38;5;2m       54:   and blue    = A.(fg lightblue    ++ bg black) in[39m
     [38;5;2m14348[39m: [38;5;2m       55:   let pp_mods  = I.pp_attr green pp_mods[39m
     [38;5;2m14349[39m: [38;5;2m       56:   and pp_mouse = I.pp_attr blue pp_mouse in[39m
     [38;5;2m14350[39m: [38;5;2m       57:   simpleterm ~s:[][39m
     [38;5;2m14351[39m: [38;5;2m       58:     ~f:(fun xs x -> Some (List.take 100 (x::xs)))[39m
     [38;5;2m14352[39m: [38;5;2m       59:     ~imgf:(fun (_, h) xs ->[39m
     [38;5;2m14353[39m: [38;5;2m       60:       let attr = magenta in[39m
     [38;5;2m14354[39m: [38;5;2m       61:       let msg = I.string A.empty "Push keys."[39m
     [38;5;2m14355[39m: [38;5;2m       62:       and ks = List.map (function[39m
     [38;5;2m14356[39m: [38;5;2m       63:         | `Key ((`ASCII _ | `Uchar _) as c, mods) ->[39m
     [38;5;2m14357[39m: [38;5;2m       64:             let u = Unescape.uchar c in[39m
     [38;5;2m14358[39m: [38;5;2m       65:             I.(uchar blue u 1 1 <|> strf ~attr " %a %a" pp_u u pp_mods mods)[39m
     [38;5;2m14359[39m: [38;5;2m       66:         | `Key (#Unescape.special as k, mods) ->[39m
     [38;5;2m14360[39m: [38;5;2m       67:             I.strf ~attr "%a %a" pp_special k pp_mods mods[39m
     [38;5;2m14361[39m: [38;5;2m       68:         | `Mouse (e, (x, y), mods) ->[39m
     [38;5;2m14362[39m: [38;5;2m       69:             I.strf ~attr "MOUSE %a (%d, %d) %a" pp_mouse e x y pp_mods mods[39m
     [38;5;2m14363[39m: [38;5;2m       70:         | `Paste e ->[39m
     [38;5;2m14364[39m: [38;5;2m       71:             I.strf ~attr "PASTE %s" (if e = `Start then "START" else "END")[39m
     [38;5;2m14365[39m: [38;5;2m       72:         ) xs |> I.vcat in[39m
     [38;5;2m14366[39m: [38;5;2m       73:       I.(vsnap ~align:`Top (h - 3) ks <-> void 0 1 <-> msg |> pad ~l:1 ~t:1))[39m
     [38;5;2m14367[39m: [38;5;2mAdded regular file ../notty/examples/letters.ml:[39m
     [38;5;2m14368[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14369[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14370[39m: [38;5;2m        3: [39m
     [38;5;2m14371[39m: [38;5;2m        4: (**[39m
     [38;5;2m14372[39m: [38;5;2m        5:  * Dancing letters.[39m
     [38;5;2m14373[39m: [38;5;2m        6:  *)[39m
     [38;5;2m14374[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m14375[39m: [38;5;2m        8: open Common[39m
     [38;5;2m14376[39m: [38;5;2m        9: [39m
     [38;5;2m14377[39m: [38;5;2m       10: let nw = 6[39m
     [38;5;2m14378[39m: [38;5;2m       11: and nh = 5[39m
     [38;5;2m14379[39m: [38;5;2m       12: [39m
     [38;5;2m14380[39m: [38;5;2m       13: let () =[39m
     [38;5;2m14381[39m: [38;5;2m       14:   simpleterm ~s:[][39m
     [38;5;2m14382[39m: [38;5;2m       15:     ~f:(fun us -> function[39m
     [38;5;2m14383[39m: [38;5;2m       16:       | `Key ((`Delete|`Backspace), _) ->[39m
     [38;5;2m14384[39m: [38;5;2m       17:           Some (match us with _::xs -> xs | _ -> us)[39m
     [38;5;2m14385[39m: [38;5;2m       18:       | `Key ((`ASCII _|`Uchar _ as u), _) ->[39m
     [38;5;2m14386[39m: [38;5;2m       19:           Some (List.take (nw * nh) (Unescape.uchar u :: us))[39m
     [38;5;2m14387[39m: [38;5;2m       20:       | _  -> Some us)[39m
     [38;5;2m14388[39m: [38;5;2m       21:     ~imgf:(fun _ us ->[39m
     [38;5;2m14389[39m: [38;5;2m       22:       let open List in[39m
     [38;5;2m14390[39m: [38;5;2m       23:       let uus = chunks nw (rev us) in[39m
     [38;5;2m14391[39m: [38;5;2m       24:       mapi (fun i us ->[39m
     [38;5;2m14392[39m: [38;5;2m       25:         mapi (fun j u ->[39m
     [38;5;2m14393[39m: [38;5;2m       26:           I.uchar A.(fg white ++ bg (rgb ~r:0 ~g:i ~b:j)) u 1 1[39m
     [38;5;2m14394[39m: [38;5;2m       27:         ) us |> I.hcat[39m
     [38;5;2m14395[39m: [38;5;2m       28:       ) uus |> I.vcat[39m
     [38;5;2m14396[39m: [38;5;2m       29:       |> I.pad ~t:1 ~l:1[39m
     [38;5;2m14397[39m: [38;5;2m       30:       |> I.hsnap ~align:`Left (nw + 1)[39m
     [38;5;2m14398[39m: [38;5;2m       31:       |> tile nw 1)[39m
     [38;5;2m14399[39m: [38;5;2mAdded regular file ../notty/examples/life.ml:[39m
     [38;5;2m14400[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14401[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14402[39m: [38;5;2m        3: [39m
     [38;5;2m14403[39m: [38;5;2m        4: (*[39m
     [38;5;2m14404[39m: [38;5;2m        5:  * Game of Life with some ZX spectrum kitsch.[39m
     [38;5;2m14405[39m: [38;5;2m        6:  *)[39m
     [38;5;2m14406[39m: [38;5;2m        7: [39m
     [38;5;2m14407[39m: [38;5;2m        8: let flip f a b = f b a[39m
     [38;5;2m14408[39m: [38;5;2m        9: [39m
     [38;5;2m14409[39m: [38;5;2m       10: (** Live, **)[39m
     [38;5;2m14410[39m: [38;5;2m       11: [39m
     [38;5;2m14411[39m: [38;5;2m       12: module Coord = struct[39m
     [38;5;2m14412[39m: [38;5;2m       13:   type t = int * int[39m
     [38;5;2m14413[39m: [38;5;2m       14:   let compare ((a, b) : t) (c, d) =[39m
     [38;5;2m14414[39m: [38;5;2m       15:     match compare a c with 0 -> compare b d | r -> r[39m
     [38;5;2m14415[39m: [38;5;2m       16:   let equal ((a, b) : t) (c, d) = a = c && b = d[39m
     [38;5;2m14416[39m: [38;5;2m       17: end[39m
     [38;5;2m14417[39m: [38;5;2m       18: [39m
     [38;5;2m14418[39m: [38;5;2m       19: module CSet = struct[39m
     [38;5;2m14419[39m: [38;5;2m       20:   include Set.Make (Coord)[39m
     [38;5;2m14420[39m: [38;5;2m       21:   let of_list = List.fold_left (flip add) empty[39m
     [38;5;2m14421[39m: [38;5;2m       22:   let map f s = fold (fun x s -> add (f x) s) s empty[39m
     [38;5;2m14422[39m: [38;5;2m       23: end[39m
     [38;5;2m14423[39m: [38;5;2m       24: [39m
     [38;5;2m14424[39m: [38;5;2m       25: module CMap = struct[39m
     [38;5;2m14425[39m: [38;5;2m       26:   include Map.Make (Coord)[39m
     [38;5;2m14426[39m: [38;5;2m       27:   let preimg p m =[39m
     [38;5;2m14427[39m: [38;5;2m       28:     fold (fun k v s -> if p v then CSet.add k s else s) m CSet.empty[39m
     [38;5;2m14428[39m: [38;5;2m       29: end[39m
     [38;5;2m14429[39m: [38;5;2m       30: [39m
     [38;5;2m14430[39m: [38;5;2m       31: let erem x y = (x mod y + y) mod y[39m
     [38;5;2m14431[39m: [38;5;2m       32: let square (w, h) (a, b as ab) =[39m
     [38;5;2m14432[39m: [38;5;2m       33:   if a < 0 || a >= w || b < 0 || b >= h then (-1, -1) else ab[39m
     [38;5;2m14433[39m: [38;5;2m       34: let torus (w, h) (a, b) = (erem a w, erem b h)[39m
     [38;5;2m14434[39m: [38;5;2m       35: let moebius (w, h) (a, b as ab) =[39m
     [38;5;2m14435[39m: [38;5;2m       36:   if a < 0 || a >= w then (erem a w, h - b - 1) else ab[39m
     [38;5;2m14436[39m: [38;5;2m       37: [39m
     [38;5;2m14437[39m: [38;5;2m       38: let neigh topo (a, b) = [[39m
     [38;5;2m14438[39m: [38;5;2m       39:   (a-1, b); (a+1, b); (a-1, b-1); (a-1, b+1)[39m
     [38;5;2m14439[39m: [38;5;2m       40: ; (a, b-1); (a, b+1); (a+1, b-1); (a+1, b+1)[39m
     [38;5;2m14440[39m: [38;5;2m       41: ] |> List.map topo[39m
     [38;5;2m14441[39m: [38;5;2m       42: [39m
     [38;5;2m14442[39m: [38;5;2m       43: let step topo life =[39m
     [38;5;2m14443[39m: [38;5;2m       44:   let nlive pt =[39m
     [38;5;2m14444[39m: [38;5;2m       45:     List.(neigh topo pt |> filter (flip CSet.mem life) |> length) in[39m
     [38;5;2m14445[39m: [38;5;2m       46:   let f1 pt acc =[39m
     [38;5;2m14446[39m: [38;5;2m       47:     pt :: neigh topo pt |> List.fold_left (fun acc -> function[39m
     [38;5;2m14447[39m: [38;5;2m       48:       | (-1, -1) -> acc[39m
     [38;5;2m14448[39m: [38;5;2m       49:       | pt when CMap.mem pt acc -> acc[39m
     [38;5;2m14449[39m: [38;5;2m       50:       | pt ->[39m
     [38;5;2m14450[39m: [38;5;2m       51:           let n = nlive pt in[39m
     [38;5;2m14451[39m: [38;5;2m       52:           acc |> CMap.add pt[39m
     [38;5;2m14452[39m: [38;5;2m       53:             (if n = 3 || (n = 2 && CSet.mem pt life) then 0 else 1)[39m
     [38;5;2m14453[39m: [38;5;2m       54:     ) acc in[39m
     [38;5;2m14454[39m: [38;5;2m       55:   CSet.fold f1 life CMap.empty |> CMap.preimg ((=) 0)[39m
     [38;5;2m14455[39m: [38;5;2m       56: [39m
     [38;5;2m14456[39m: [38;5;2m       57: let glider = CSet.of_list [(2,1); (3,2); (1,3); (2,3); (3,3)][39m
     [38;5;2m14457[39m: [38;5;2m       58: [39m
     [38;5;2m14458[39m: [38;5;2m       59: (** ...render, **)[39m
     [38;5;2m14459[39m: [38;5;2m       60: [39m
     [38;5;2m14460[39m: [38;5;2m       61: open Notty[39m
     [38;5;2m14461[39m: [38;5;2m       62: open Notty.Infix[39m
     [38;5;2m14462[39m: [38;5;2m       63: [39m
     [38;5;2m14463[39m: [38;5;2m       64: let dot = I.string A.(fg lightred) "●"[39m
     [38;5;2m14464[39m: [38;5;2m       65: [39m
     [38;5;2m14465[39m: [38;5;2m       66: let background step (n, m) =[39m
     [38;5;2m14466[39m: [38;5;2m       67:   let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m14467[39m: [38;5;2m       68:   if k > 0 then I.string A.(fg (gray k)) "." else I.void 1 1[39m
     [38;5;2m14468[39m: [38;5;2m       69: [39m
     [38;5;2m14469[39m: [38;5;2m       70: let render (w, h) step life =[39m
     [38;5;2m14470[39m: [38;5;2m       71:   I.tabulate w (h - 1) (fun x y ->[39m
     [38;5;2m14471[39m: [38;5;2m       72:     let pt = (x, y) in if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m14472[39m: [38;5;2m       73:   ) <->[39m
     [38;5;2m14473[39m: [38;5;2m       74:   I.(strf ~attr:A.(fg lightblack) "[generation %04d]" step |>[39m
     [38;5;2m14474[39m: [38;5;2m       75:       hsnap ~align:`Right w)[39m
     [38;5;2m14475[39m: [38;5;2m       76: [39m
     [38;5;2m14476[39m: [38;5;2m       77: (** ...and interact. **)[39m
     [38;5;2m14477[39m: [38;5;2m       78: [39m
     [38;5;2m14478[39m: [38;5;2m       79: open Lwt.Infix[39m
     [38;5;2m14479[39m: [38;5;2m       80: open Notty_lwt[39m
     [38;5;2m14480[39m: [38;5;2m       81: [39m
     [38;5;2m14481[39m: [38;5;2m       82: let timer () = Lwt_unix.sleep 0.1 >|= fun () -> `Timer[39m
     [38;5;2m14482[39m: [38;5;2m       83: let event term = Lwt_stream.get (Term.events term) >|= function[39m
     [38;5;2m14483[39m: [38;5;2m       84:   | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m14484[39m: [38;5;2m       85:   | None -> `End[39m
     [38;5;2m14485[39m: [38;5;2m       86: [39m
     [38;5;2m14486[39m: [38;5;2m       87: let rec loop term (e, t) (dim, n, life as st) =[39m
     [38;5;2m14487[39m: [38;5;2m       88:   (e <?> t) >>= function[39m
     [38;5;2m14488[39m: [38;5;2m       89:   | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m14489[39m: [38;5;2m       90:       Lwt.return_unit[39m
     [38;5;2m14490[39m: [38;5;2m       91:   | `Timer ->[39m
     [38;5;2m14491[39m: [38;5;2m       92:       Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m14492[39m: [38;5;2m       93:         loop term (e, timer ())[39m
     [38;5;2m14493[39m: [38;5;2m       94:           (dim, n + 1, step (torus dim) life)[39m
     [38;5;2m14494[39m: [38;5;2m       95:   | `Mouse ((`Press `Left|`Drag), (x, y), _) ->[39m
     [38;5;2m14495[39m: [38;5;2m       96:       loop term (event term, t)[39m
     [38;5;2m14496[39m: [38;5;2m       97:         (dim, n, CSet.add (torus dim (x, y)) life)[39m
     [38;5;2m14497[39m: [38;5;2m       98:   | `Resize dim ->[39m
     [38;5;2m14498[39m: [38;5;2m       99:       let life = CSet.map (torus dim) life in[39m
     [38;5;2m14499[39m: [38;5;2m      100:       Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m14500[39m: [38;5;2m      101:         loop term (event term, t) (dim, n, life)[39m
     [38;5;2m14501[39m: [38;5;2m      102:   | _ -> loop term (event term, t) st[39m
     [38;5;2m14502[39m: [38;5;2m      103: [39m
     [38;5;2m14503[39m: [38;5;2m      104: let main () =[39m
     [38;5;2m14504[39m: [38;5;2m      105:   let t = Term.create () in[39m
     [38;5;2m14505[39m: [38;5;2m      106:   loop t (event t, timer ()) (Term.size t, 0, glider)[39m
     [38;5;2m14506[39m: [38;5;2m      107: [39m
     [38;5;2m14507[39m: [38;5;2m      108: let () = Lwt_main.run @@ main ()[39m
     [38;5;2m14508[39m: [38;5;2mAdded regular file ../notty/examples/linear.ml:[39m
     [38;5;2m14509[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14510[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14511[39m: [38;5;2m        3: [39m
     [38;5;2m14512[39m: [38;5;2m        4: (*[39m
     [38;5;2m14513[39m: [38;5;2m        5:  * Elementary Cellular Automata[39m
     [38;5;2m14514[39m: [38;5;2m        6:  *)[39m
     [38;5;2m14515[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m14516[39m: [38;5;2m        8: open Notty.Infix[39m
     [38;5;2m14517[39m: [38;5;2m        9: open Common_lwt[39m
     [38;5;2m14518[39m: [38;5;2m       10: [39m
     [38;5;2m14519[39m: [38;5;2m       11: let flip f a b = f b a[39m
     [38;5;2m14520[39m: [38;5;2m       12: let rec take n = function[39m
     [38;5;2m14521[39m: [38;5;2m       13:   | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m14522[39m: [38;5;2m       14:   | _                -> [][39m
     [38;5;2m14523[39m: [38;5;2m       15: [39m
     [38;5;2m14524[39m: [38;5;2m       16: let getd arr d i =[39m
     [38;5;2m14525[39m: [38;5;2m       17:   if i < 0 || i >= Array.length arr then d else arr.(i)[39m
     [38;5;2m14526[39m: [38;5;2m       18: [39m
     [38;5;2m14527[39m: [38;5;2m       19: let f ~rule a b c =[39m
     [38;5;2m14528[39m: [38;5;2m       20:   if rule land (1 lsl (a lsl 2 + b lsl 1 + c)) > 0 then 1 else 0[39m
     [38;5;2m14529[39m: [38;5;2m       21: [39m
     [38;5;2m14530[39m: [38;5;2m       22: let step ~rule w arr =[39m
     [38;5;2m14531[39m: [38;5;2m       23:   let get = getd arr 0 in[39m
     [38;5;2m14532[39m: [38;5;2m       24:   Array.init w @@ fun i ->[39m
     [38;5;2m14533[39m: [38;5;2m       25:     f ~rule (get (i - 1)) (get i) (get (i + 1))[39m
     [38;5;2m14534[39m: [38;5;2m       26: [39m
     [38;5;2m14535[39m: [38;5;2m       27: let dot  = I.char A.(bg lightwhite) ' ' 1 1[39m
     [38;5;2m14536[39m: [38;5;2m       28: let void = I.void 1 1[39m
     [38;5;2m14537[39m: [38;5;2m       29: [39m
     [38;5;2m14538[39m: [38;5;2m       30: let render ~rule ~h xss =[39m
     [38;5;2m14539[39m: [38;5;2m       31:   let cons k = function[39m
     [38;5;2m14540[39m: [38;5;2m       32:     | 0 -> I.void k 1[39m
     [38;5;2m14541[39m: [38;5;2m       33:     | _ -> I.char A.(bg lightwhite) ' ' k 1 in[39m
     [38;5;2m14542[39m: [38;5;2m       34:   let rec rline s k i arr =[39m
     [38;5;2m14543[39m: [38;5;2m       35:     if i >= Array.length arr then[39m
     [38;5;2m14544[39m: [38;5;2m       36:       cons k s[39m
     [38;5;2m14545[39m: [38;5;2m       37:     else if arr.(i) = s then[39m
     [38;5;2m14546[39m: [38;5;2m       38:       rline s (k + 1) (i + 1) arr[39m
     [38;5;2m14547[39m: [38;5;2m       39:     else cons k s <|> rline (1 - s) 1 (i + 1) arr in[39m
     [38;5;2m14548[39m: [38;5;2m       40:   ( xss |> List.rev |> List.map (rline 0 0 0) |> I.vcat[39m
     [38;5;2m14549[39m: [38;5;2m       41:     |> I.vsnap ~align:`Top (h - 2) ) <->[39m
     [38;5;2m14550[39m: [38;5;2m       42:   ( I.strf ~attr:A.(fg lightgreen ++ bg black) " RULE %d " rule[39m
     [38;5;2m14551[39m: [38;5;2m       43:     |> I.vpad 1 0 )[39m
     [38;5;2m14552[39m: [38;5;2m       44: [39m
     [38;5;2m14553[39m: [38;5;2m       45: let rule = 124 (* 110 mirrored *)[39m
     [38;5;2m14554[39m: [38;5;2m       46: [39m
     [38;5;2m14555[39m: [38;5;2m       47: let main () =[39m
     [38;5;2m14556[39m: [38;5;2m       48:   simpleterm_lwt_timed ~delay:0.1 ([], rule)[39m
     [38;5;2m14557[39m: [38;5;2m       49:   ~f:(fun (w, h) (lines, rule) -> function[39m
     [38;5;2m14558[39m: [38;5;2m       50:     | `Timer ->[39m
     [38;5;2m14559[39m: [38;5;2m       51:         let prev  = match lines with [] -> [|1|] | h::_ -> h in[39m
     [38;5;2m14560[39m: [38;5;2m       52:         let lines = step ~rule w prev :: lines |> take (h - 2) in[39m
     [38;5;2m14561[39m: [38;5;2m       53:         `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m14562[39m: [38;5;2m       54:     | `Resize _ ->[39m
     [38;5;2m14563[39m: [38;5;2m       55:         let lines = lines |> take h in[39m
     [38;5;2m14564[39m: [38;5;2m       56:         `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m14565[39m: [38;5;2m       57:     | `Key (`Arrow `Left, []) ->[39m
     [38;5;2m14566[39m: [38;5;2m       58:         `Redraw (([], rule - 1), render ~rule ~h lines)[39m
     [38;5;2m14567[39m: [38;5;2m       59:     | `Key (`Arrow `Right, []) ->[39m
     [38;5;2m14568[39m: [38;5;2m       60:         `Redraw (([], rule + 1), render ~rule ~h lines)[39m
     [38;5;2m14569[39m: [38;5;2m       61:     | _ -> `Continue (lines, rule)[39m
     [38;5;2m14570[39m: [38;5;2m       62:   )[39m
     [38;5;2m14571[39m: [38;5;2m       63: [39m
     [38;5;2m14572[39m: [38;5;2m       64: let () = Lwt_main.run @@ main ()[39m
     [38;5;2m14573[39m: [38;5;2mAdded regular file ../notty/examples/mouse.ml:[39m
     [38;5;2m14574[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14575[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14576[39m: [38;5;2m        3: [39m
     [38;5;2m14577[39m: [38;5;2m        4: (**[39m
     [38;5;2m14578[39m: [38;5;2m        5:  * Demonstrates mouse input.[39m
     [38;5;2m14579[39m: [38;5;2m        6:  *)[39m
     [38;5;2m14580[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m14581[39m: [38;5;2m        8: open Common[39m
     [38;5;2m14582[39m: [38;5;2m        9: [39m
     [38;5;2m14583[39m: [38;5;2m       10: let lnv = Uchar.of_int 0x2502[39m
     [38;5;2m14584[39m: [38;5;2m       11: and lnh = Uchar.of_int 0x2500[39m
     [38;5;2m14585[39m: [38;5;2m       12: and crs = Uchar.of_int 0x253c[39m
     [38;5;2m14586[39m: [38;5;2m       13: [39m
     [38;5;2m14587[39m: [38;5;2m       14: let clip a b x = min b (max a x)[39m
     [38;5;2m14588[39m: [38;5;2m       15: [39m
     [38;5;2m14589[39m: [38;5;2m       16: let () =[39m
     [38;5;2m14590[39m: [38;5;2m       17:   simpleterm ~s:(`Down, (0, 0), [], 11)[39m
     [38;5;2m14591[39m: [38;5;2m       18:     ~f:(fun (st, pos, mods, scr as s) -> function[39m
     [38;5;2m14592[39m: [38;5;2m       19:       | `Mouse ((`Press `Left|`Drag), pos, mods) -> Some (`Drag, pos, mods, scr)[39m
     [38;5;2m14593[39m: [38;5;2m       20:       | `Mouse (`Press (`Scroll s), _, _) ->[39m
     [38;5;2m14594[39m: [38;5;2m       21:           Some (st, pos, mods, clip 0 23 (scr + match s with `Up -> 1 | _ -> -1))[39m
     [38;5;2m14595[39m: [38;5;2m       22:       | `Mouse (`Release, pos, _) -> Some (`Down, pos, [], scr)[39m
     [38;5;2m14596[39m: [38;5;2m       23:       | _ -> Some s)[39m
     [38;5;2m14597[39m: [38;5;2m       24:     ~imgf:I.(fun (w, h) (st, (x, y), mods, scr) ->[39m
     [38;5;2m14598[39m: [38;5;2m       25:       let cross =[39m
     [38;5;2m14599[39m: [38;5;2m       26:         let a  = match st with `Drag -> A.(fg lightgreen) | `Down -> A.(fg green) in[39m
     [38;5;2m14600[39m: [38;5;2m       27:         (uchar a lnh x 1 |> vpad y 0) <|>[39m
     [38;5;2m14601[39m: [38;5;2m       28:         (uchar a lnv 1 y <-> uchar a crs 1 1 <-> uchar a lnv 1 (h - y)) <|>[39m
     [38;5;2m14602[39m: [38;5;2m       29:         (uchar a lnh (w - x - 1) 1 |> vpad y 0)[39m
     [38;5;2m14603[39m: [38;5;2m       30:         |> crop ~t:1 ~l:1 ~r:3[39m
     [38;5;2m14604[39m: [38;5;2m       31:         |> hpad 1 1[39m
     [38;5;2m14605[39m: [38;5;2m       32:         |> vsnap ~align:`Top (h - 1)[39m
     [38;5;2m14606[39m: [38;5;2m       33:       and scroll =[39m
     [38;5;2m14607[39m: [38;5;2m       34:         List.(range 0 scr |> rev |> map @@ fun level ->[39m
     [38;5;2m14608[39m: [38;5;2m       35:           Images.dot A.(gray level)[39m
     [38;5;2m14609[39m: [38;5;2m       36:         ) |> vcat |> vsnap ~align:`Bottom (h - 1)[39m
     [38;5;2m14610[39m: [38;5;2m       37:       and status =[39m
     [38;5;2m14611[39m: [38;5;2m       38:         let a = A.(fg lightblack ++ bg black) in[39m
     [38;5;2m14612[39m: [38;5;2m       39:         let fa m = if List.mem m mods then A.(fg lightgreen ++ bg black) else a in[39m
     [38;5;2m14613[39m: [38;5;2m       40:         string A.empty "Use the mouse." </>[39m
     [38;5;2m14614[39m: [38;5;2m       41:         (hcat [ string a "["[39m
     [38;5;2m14615[39m: [38;5;2m       42:               ; string (fa `Ctrl) "C"[39m
     [38;5;2m14616[39m: [38;5;2m       43:               ; string (fa `Meta) "M"[39m
     [38;5;2m14617[39m: [38;5;2m       44:               ; strf ~attr:a "] @(%03d, %03d)" x y ][39m
     [38;5;2m14618[39m: [38;5;2m       45:          |> hsnap ~align:`Right w)[39m
     [38;5;2m14619[39m: [38;5;2m       46:       in (cross <|> scroll) <-> status[39m
     [38;5;2m14620[39m: [38;5;2m       47:     )[39m
     [38;5;2m14621[39m: [38;5;2mAdded regular file ../notty/examples/rain.ml:[39m
     [38;5;2m14622[39m: [38;5;2m        1: [39m
     [38;5;2m14623[39m: [38;5;2m        2: let () = Random.self_init ()[39m
     [38;5;2m14624[39m: [38;5;2m        3: [39m
     [38;5;2m14625[39m: [38;5;2m        4: let rec (--) a b = if a > b then [] else a :: succ a -- b[39m
     [38;5;2m14626[39m: [38;5;2m        5: [39m
     [38;5;2m14627[39m: [38;5;2m        6: let utf8_of_code_point =[39m
     [38;5;2m14628[39m: [38;5;2m        7:   let buf = Buffer.create 7 in fun cp ->[39m
     [38;5;2m14629[39m: [38;5;2m        8:     Buffer.clear buf;[39m
     [38;5;2m14630[39m: [38;5;2m        9:     Uutf.Buffer.add_utf_8 buf (Uchar.of_int cp);[39m
     [38;5;2m14631[39m: [38;5;2m       10:     Buffer.contents buf[39m
     [38;5;2m14632[39m: [38;5;2m       11: [39m
     [38;5;2m14633[39m: [38;5;2m       12: let nsym = 4096[39m
     [38;5;2m14634[39m: [38;5;2m       13: let glitch = nsym / 20[39m
     [38;5;2m14635[39m: [38;5;2m       14: let symbols = Array.(concat [[39m
     [38;5;2m14636[39m: [38;5;2m       15:   init 58 (fun x -> utf8_of_code_point (0xff66 + x));[39m
     [38;5;2m14637[39m: [38;5;2m       16:   init 10 (fun x -> utf8_of_code_point (0x30 + x));[39m
     [38;5;2m14638[39m: [38;5;2m       17:   (* init 26 (fun x -> utf8_of_code_point (0x61 + x)); *)[39m
     [38;5;2m14639[39m: [38;5;2m       18:   (* init 14 (fun x -> utf8_of_code_point (0x21 + x)); *)[39m
     [38;5;2m14640[39m: [38;5;2m       19: ])[39m
     [38;5;2m14641[39m: [38;5;2m       20: let sym () = symbols.(Random.int (Array.length symbols))[39m
     [38;5;2m14642[39m: [38;5;2m       21: let syms = Array.init nsym (fun _ -> sym ())[39m
     [38;5;2m14643[39m: [38;5;2m       22: [39m
     [38;5;2m14644[39m: [38;5;2m       23: let gen_wait h = `Wait Random.(int (h / 2))[39m
     [38;5;2m14645[39m: [38;5;2m       24: and gen_line h =[39m
     [38;5;2m14646[39m: [38;5;2m       25:   `Line Random.(0, int (nsym - h), int (h + h / 2) + 1, int 2 + 1)[39m
     [38;5;2m14647[39m: [38;5;2m       26: let gen (w, h as dim) =[39m
     [38;5;2m14648[39m: [38;5;2m       27:   let lines = 1 -- w |> List.map @@ fun _ ->[39m
     [38;5;2m14649[39m: [38;5;2m       28:     if Random.float 1. < 0.1 then gen_line h else gen_wait h in[39m
     [38;5;2m14650[39m: [38;5;2m       29:   (dim, lines)[39m
     [38;5;2m14651[39m: [38;5;2m       30: [39m
     [38;5;2m14652[39m: [38;5;2m       31: let step ((_, h as dim), xs) =[39m
     [38;5;2m14653[39m: [38;5;2m       32:   let xs = xs |> List.map @@ function[39m
     [38;5;2m14654[39m: [38;5;2m       33:       `Wait 0 -> gen_line h[39m
     [38;5;2m14655[39m: [38;5;2m       34:     | `Wait n -> `Wait (n - 1)[39m
     [38;5;2m14656[39m: [38;5;2m       35:     | `Line (i, _, win, k) when i - win + k >= h -> gen_wait h[39m
     [38;5;2m14657[39m: [38;5;2m       36:     | `Line (i, s, win, k) -> `Line (i + k, s, win, k) in[39m
     [38;5;2m14658[39m: [38;5;2m       37:   Random.(for _ = 0 to int glitch do syms.(int nsym) <- sym () done);[39m
     [38;5;2m14659[39m: [38;5;2m       38:   (dim, xs)[39m
     [38;5;2m14660[39m: [38;5;2m       39: [39m
     [38;5;2m14661[39m: [38;5;2m       40: open Notty[39m
     [38;5;2m14662[39m: [38;5;2m       41: open Notty.Infix[39m
     [38;5;2m14663[39m: [38;5;2m       42: [39m
     [38;5;2m14664[39m: [38;5;2m       43: let bgc = A.(bg @@ rgb ~r:0 ~g:0 ~b:0)[39m
     [38;5;2m14665[39m: [38;5;2m       44: [39m
     [38;5;2m14666[39m: [38;5;2m       45: let color i n =[39m
     [38;5;2m14667[39m: [38;5;2m       46:   let chan x = x *. 255. |> truncate[39m
     [38;5;2m14668[39m: [38;5;2m       47:   and t  = float i /. float n in[39m
     [38;5;2m14669[39m: [38;5;2m       48:   let t1 = exp (-. t /. 0.02) |> chan[39m
     [38;5;2m14670[39m: [38;5;2m       49:   and t2 = exp (-. t /. 0.45) |> chan in[39m
     [38;5;2m14671[39m: [38;5;2m       50:   A.rgb_888 ~r:t1 ~b:t1 ~g:t2[39m
     [38;5;2m14672[39m: [38;5;2m       51: [39m
     [38;5;2m14673[39m: [38;5;2m       52: let show ((w, h), xs) =[39m
     [38;5;2m14674[39m: [38;5;2m       53:   let f = function[39m
     [38;5;2m14675[39m: [38;5;2m       54:     `Wait _ -> I.void 1 0[39m
     [38;5;2m14676[39m: [38;5;2m       55:   | `Line (i, sym, win, _) ->[39m
     [38;5;2m14677[39m: [38;5;2m       56:       let last = i - win[39m
     [38;5;2m14678[39m: [38;5;2m       57:       and off = max 0 (i - h + 1) in[39m
     [38;5;2m14679[39m: [38;5;2m       58:       let rec chars w =[39m
     [38;5;2m14680[39m: [38;5;2m       59:         let ix = w + last in[39m
     [38;5;2m14681[39m: [38;5;2m       60:         if 0 <= min ix w then syms.(sym + ix) :: chars (w - 1) else [] in[39m
     [38;5;2m14682[39m: [38;5;2m       61:       let rec images acc i = function[39m
     [38;5;2m14683[39m: [38;5;2m       62:         | []    -> acc[39m
     [38;5;2m14684[39m: [38;5;2m       63:         | x::xs -> let img = I.string A.(fg (color i win) ++ bgc) x in[39m
     [38;5;2m14685[39m: [38;5;2m       64:                    images (img :: acc) (i + 1) xs in[39m
     [38;5;2m14686[39m: [38;5;2m       65:       chars (win - off) |> images [] off[39m
     [38;5;2m14687[39m: [38;5;2m       66:         |> I.vcat |> I.vpad (max 0 (i - win)) 0 in[39m
     [38;5;2m14688[39m: [38;5;2m       67:   (List.map f xs |> I.hcat) </> I.char bgc ' ' w h[39m
     [38;5;2m14689[39m: [38;5;2m       68: [39m
     [38;5;2m14690[39m: [38;5;2m       69: open Notty_unix[39m
     [38;5;2m14691[39m: [38;5;2m       70: [39m
     [38;5;2m14692[39m: [38;5;2m       71: type r = [ Unescape.event | `Resize of int * int | `End | `Timer ][39m
     [38;5;2m14693[39m: [38;5;2m       72: [39m
     [38;5;2m14694[39m: [38;5;2m       73: let event ~delay t =[39m
     [38;5;2m14695[39m: [38;5;2m       74:   if Term.pending t then (Term.event t :> r) else[39m
     [38;5;2m14696[39m: [38;5;2m       75:     let open Unix in[39m
     [38;5;2m14697[39m: [38;5;2m       76:     match select [Term.fds t |> fst] [] [] delay with[39m
     [38;5;2m14698[39m: [38;5;2m       77:     | ([], _, _) -> `Timer[39m
     [38;5;2m14699[39m: [38;5;2m       78:     | (_::_, _, _) -> (Term.event t :> r)[39m
     [38;5;2m14700[39m: [38;5;2m       79:     | exception Unix_error (EINTR, _, _) -> (Term.event t :> r)[39m
     [38;5;2m14701[39m: [38;5;2m       80: [39m
     [38;5;2m14702[39m: [38;5;2m       81: let loop t ~frame st =[39m
     [38;5;2m14703[39m: [38;5;2m       82:   let rec go st deadline =[39m
     [38;5;2m14704[39m: [38;5;2m       83:     let now = Unix.gettimeofday () in[39m
     [38;5;2m14705[39m: [38;5;2m       84:     if deadline <= now then[39m
     [38;5;2m14706[39m: [38;5;2m       85:       ( Term.image t (show st); go (step st) (frame +. deadline) )[39m
     [38;5;2m14707[39m: [38;5;2m       86:     else match event ~delay:(deadline -. now) t with[39m
     [38;5;2m14708[39m: [38;5;2m       87:       | `End | `Key (`Escape, _) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m14709[39m: [38;5;2m       88:       | `Resize _ | `Key (`ASCII ' ', _) -> go (gen (Term.size t)) deadline[39m
     [38;5;2m14710[39m: [38;5;2m       89:       | _ -> go st deadline in[39m
     [38;5;2m14711[39m: [38;5;2m       90:   go st (Unix.gettimeofday ())[39m
     [38;5;2m14712[39m: [38;5;2m       91: [39m
     [38;5;2m14713[39m: [38;5;2m       92: let () =[39m
     [38;5;2m14714[39m: [38;5;2m       93:   let t = Term.create () in[39m
     [38;5;2m14715[39m: [38;5;2m       94:   loop t ~frame:0.075 (gen (Term.size t));[39m
     [38;5;2m14716[39m: [38;5;2m       95:   Term.release t[39m
     [38;5;2m14717[39m: [38;5;2mAdded regular file ../notty/examples/runes.ml:[39m
     [38;5;2m14718[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14719[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14720[39m: [38;5;2m        3: [39m
     [38;5;2m14721[39m: [38;5;2m        4: (**[39m
     [38;5;2m14722[39m: [38;5;2m        5:  * Demonstrates geometry computation with various scripts. A few of those will[39m
     [38;5;2m14723[39m: [38;5;2m        6:  * usually break.[39m
     [38;5;2m14724[39m: [38;5;2m        7:  *)[39m
     [38;5;2m14725[39m: [38;5;2m        8: open Notty[39m
     [38;5;2m14726[39m: [38;5;2m        9: open Notty.Infix[39m
     [38;5;2m14727[39m: [38;5;2m       10: open Common[39m
     [38;5;2m14728[39m: [38;5;2m       11: [39m
     [38;5;2m14729[39m: [38;5;2m       12: let hpad_sp attr l r i =[39m
     [38;5;2m14730[39m: [38;5;2m       13:   let h = I.height i in[39m
     [38;5;2m14731[39m: [38;5;2m       14:   I.(char attr ' ' l h <|> i <|> char attr ' ' r h)[39m
     [38;5;2m14732[39m: [38;5;2m       15: [39m
     [38;5;2m14733[39m: [38;5;2m       16: let vpad_sp attr t b i =[39m
     [38;5;2m14734[39m: [38;5;2m       17:   let w = I.width i in[39m
     [38;5;2m14735[39m: [38;5;2m       18:   I.(char attr ' ' w t <-> i <-> char attr ' ' w b)[39m
     [38;5;2m14736[39m: [38;5;2m       19: [39m
     [38;5;2m14737[39m: [38;5;2m       20: let grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m14738[39m: [38;5;2m       21: [39m
     [38;5;2m14739[39m: [38;5;2m       22: let centered attr xs =[39m
     [38;5;2m14740[39m: [38;5;2m       23:   let lns = List.map I.(string attr) xs in[39m
     [38;5;2m14741[39m: [38;5;2m       24:   let w   = List.fold_left (fun a i -> max a I.(width i)) 0 lns in[39m
     [38;5;2m14742[39m: [38;5;2m       25:   lns |> List.map I.(fun ln ->[39m
     [38;5;2m14743[39m: [38;5;2m       26:     let d = w - I.width ln in[39m
     [38;5;2m14744[39m: [38;5;2m       27:     char attr ' ' (d / 2) 1 <|> ln <|> char attr ' ' (d - d / 2) 1[39m
     [38;5;2m14745[39m: [38;5;2m       28:   ) |> I.vcat[39m
     [38;5;2m14746[39m: [38;5;2m       29: [39m
     [38;5;2m14747[39m: [38;5;2m       30: let note xs = I.([39m
     [38;5;2m14748[39m: [38;5;2m       31:   string A.(st bold) "Note:" <|>[39m
     [38;5;2m14749[39m: [38;5;2m       32:   (xs |> List.map (string A.empty) |> vcat |> hpad 1 0)[39m
     [38;5;2m14750[39m: [38;5;2m       33: )[39m
     [38;5;2m14751[39m: [38;5;2m       34: [39m
     [38;5;2m14752[39m: [38;5;2m       35: let text = [[39m
     [38;5;2m14753[39m: [38;5;2m       36:     "\225\154\160\225\155\135\225\154\187\225\155\171\225\155\146\225\155\166\225\154\166\225\155\171\225\154\160\225\154\177\225\154\169\225\154\160\225\154\162\225\154\177\225\155\171\225\154\160\225\155\129\225\154\177\225\154\170\225\155\171\225\154\183\225\155\150\225\154\187\225\154\185\225\155\166\225\155\154\225\154\179\225\154\162\225\155\151"[39m
     [38;5;2m14754[39m: [38;5;2m[39m
     [38;5;2m14755[39m: [38;5;2m       38:   ; "\225\154\183\225\155\129\225\154\160\225\155\171\225\154\187\225\155\150\225\155\171\225\154\185\225\155\129\225\155\154\225\155\150\225\155\171\225\154\160\225\154\169\225\154\177\225\155\171\225\155\158\225\154\177\225\155\129\225\154\187\225\155\143\225\154\190\225\155\150\225\155\171\225\155\158\225\154\169\225\155\151\225\155\150\225\155\139\225\155\171\225\154\187\225\155\154\225\155\135\225\155\143\225\154\170\225\154\190\225\155\172"[39m
     [38;5;2m14756[39m: [38;5;2m       39:   ; ""[39m
     [38;5;2m14757[39m: [38;5;2m       40:   ; "\227\129\132\227\130\141\227\129\175\227\129\171\227\129\187\227\129\184\227\129\168\227\129\161\227\130\138\227\129\172\227\130\139\227\130\146"[39m
     [38;5;2m14758[39m: [38;5;2m       41:   ; "\227\130\143\227\129\139\227\130\136\227\129\159\227\130\140\227\129\157\227\129\164\227\129\173\227\129\170\227\130\137\227\130\128"[39m
     [38;5;2m14759[39m: [38;5;2m       42:   ; "\227\129\134\227\130\144\227\129\174\227\129\138\227\129\143\227\130\132\227\129\190\227\129\145\227\129\181\227\129\147\227\129\136\227\129\166"[39m
     [38;5;2m14760[39m: [38;5;2m       43:   ; "\227\129\130\227\129\149\227\129\141\227\130\134\227\130\129\227\129\191\227\129\151\227\130\145\227\129\178\227\130\130\227\129\155\227\129\153"[39m
     [38;5;2m14761[39m: [38;5;2m       44:   ; ""[39m
     [38;5;2m14762[39m: [38;5;2m       45:   ; "\227\130\164\227\131\173\227\131\143\227\131\139\227\131\155\227\131\152\227\131\136 \227\131\129\227\131\170\227\131\140\227\131\171\227\131\178 \227\131\175\227\130\171\227\131\168\227\130\191\227\131\172\227\130\189 \227\131\132\227\131\141\227\131\138\227\131\169\227\131\160"[39m
     [38;5;2m14763[39m: [38;5;2m       46:   ; "\227\130\166\227\131\176\227\131\142\227\130\170\227\130\175\227\131\164\227\131\158 \227\130\177\227\131\149\227\130\179\227\130\168\227\131\134 \227\130\162\227\130\181\227\130\173\227\131\166\227\131\161\227\131\159\227\130\183 \227\131\177\227\131\146\227\131\162\227\130\187\227\130\185\227\131\179"[39m
     [38;5;2m14764[39m: [38;5;2m       47:   ; ""[39m
     [38;5;2m14765[39m: [38;5;2m       48:   ; "\237\130\164\236\138\164\236\157\152 \234\179\160\236\156\160\236\161\176\234\177\180\236\157\128 \236\158\133\236\136\160\235\129\188\235\166\172 \235\167\140\235\130\152\236\149\188"[39m
     [38;5;2m14766[39m: [38;5;2m       49:   ; "\237\149\152\234\179\160 \237\138\185\235\179\132\237\149\156 \234\184\176\236\136\160\236\157\128 \237\149\132\236\154\148\236\185\152 \236\149\138\235\139\164"[39m
     [38;5;2m14767[39m: [38;5;2m       50:   ; ""[39m
     [38;5;2m14768[39m: [38;5;2m       51:   ; "\206\158\206\181\207\131\206\186\206\181\207\128\206\172\206\182\207\137 \207\132\225\189\180\206\189 \207\136\207\133\207\135\206\191\207\134\206\184\207\140\207\129\206\177 \206\178\206\180\206\181\206\187\207\133\206\179\206\188\206\175\206\177"[39m
     [38;5;2m14769[39m: [38;5;2m       52:   ; ""[39m
     [38;5;2m14770[39m: [38;5;2m       53:   ; "\208\167\208\181\209\136\209\155\208\181 \209\134e\209\146\208\181\209\154\208\181 \208\188\209\128e\208\182\208\176\209\129\209\130\208\184\208\188 \209\159\208\176\208\186\208\190\208\188 \208\191\208\190\208\177\208\190\209\153\209\136\208\176\208\178\208\176"[39m
     [38;5;2m14771[39m: [38;5;2m       54:   ; "\209\132\208\181\209\128\209\130\208\184\208\187\208\184\208\183\208\176\209\134\208\184\209\152\209\131 \208\179\208\181\208\189\209\129\208\186\208\184\209\133 \209\133\208\184\208\177\209\128\208\184\208\180\208\176!"[39m
     [38;5;2m14772[39m: [38;5;2m       55:   ; ""[39m
     [38;5;2m14773[39m: [38;5;2m       56:   ; "Heiz\195\182lr\195\188cksto\195\159abd\195\164mpfung."[39m
     [38;5;2m14774[39m: [38;5;2m       57:   ; ""[39m
     [38;5;2m14775[39m: [38;5;2m       58:   ; "\208\146 \209\135\208\176\209\137\208\176\209\133 \209\142\208\179\208\176 \208\182\208\184\208\187 \208\177\209\139 \209\134\208\184\209\130\209\128\209\131\209\129? \208\148\208\176, \208\189\208\190 \209\132\208\176\208\187\209\140\209\136\208\184\208\178\209\139\208\185 \209\141\208\186\208\183\208\181\208\188\208\191\208\187\209\143\209\128!"[39m
     [38;5;2m14776[39m: [38;5;2m       59:   ; ""[39m
     [38;5;2m14777[39m: [38;5;2m       60:   ; "\225\131\149\225\131\148\225\131\158\225\131\174\225\131\152\225\131\161 \225\131\162\225\131\167\225\131\144\225\131\157\225\131\161\225\131\144\225\131\156\225\131\152 \225\131\168\225\131\157\225\131\151\225\131\144 \225\131\160\225\131\163\225\131\161\225\131\151\225\131\144\225\131\149\225\131\148\225\131\154\225\131\152"[39m
     [38;5;2m14778[39m: [38;5;2m       61:   ; ""[39m
     [38;5;2m14779[39m: [38;5;2m       62:   ; "Lu\195\173s arg\195\188ia \195\160 J\195\186lia que \194\171bra\195\167\195\181es, f\195\169, ch\195\161,"[39m
     [38;5;2m14780[39m: [38;5;2m       63:   ; "\195\179xido, p\195\180r, z\195\162ng\195\163o\194\187 eram palavras do portugu\195\170s."[39m
     [38;5;2m14781[39m: [38;5;2m       64:   ; ""[39m
     [38;5;2m14782[39m: [38;5;2m       65:   ; "ding ↹ ∀ ⌘ ▓ ◭ ☃ ♠ ♋ ♕ ⚅ ♩ ☭ ✎ 🂡 bats"[39m
     [38;5;2m14783[39m: [38;5;2m       66:   ; ""[39m
     [38;5;2m14784[39m: [38;5;2m[39m
     [38;5;2m14785[39m: [38;5;2m       68:   ; ""[39m
     [38;5;2m14786[39m: [38;5;2m       69:   ; "\215\147\215\146 \215\161\215\167\215\168\215\159 \215\169\215\152 \215\145\215\153\215\157 \215\158\215\144\215\149\215\155\215\150\215\145 \215\149\215\156\215\164\215\170\215\162 \215\158\215\166\215\144 \215\156\215\149 \215\151\215\145\215\168\215\148 \215\144\215\153\215\154 \215\148\215\167\215\156\215\153\215\152\215\148"[39m
     [38;5;2m14787[39m: [38;5;2m       70:   ; ""[39m
     [38;5;2m14788[39m: [38;5;2m       71:   ; "\224\174\175\224\174\190\224\174\174\224\174\177\224\174\191\224\174\168\224\175\141\224\174\164 \224\174\174\224\175\138\224\174\180\224\174\191\224\174\149\224\174\179\224\174\191\224\174\178\224\175\135 \224\174\164\224\174\174\224\174\191\224\174\180\224\175\141\224\174\174\224\175\138\224\174\180\224\174\191 \224\174\170\224\175\139\224\174\178\224\175\141 \224\174\135\224\174\169\224\174\191\224\174\164\224\174\190\224\174\181\224\174\164\224\175\129 \224\174\142\224\174\153\224\175\141\224\174\149\224\175\129\224\174\174\224\175\141 \224\174\149\224\174\190\224\174\163\224\175\139\224\174\174\224\175\141,"[39m
     [38;5;2m14789[39m: [38;5;2m       72:   ; "\224\174\170\224\174\190\224\174\174\224\174\176\224\174\176\224\174\190\224\174\175\224\175\141 \224\174\181\224\174\191\224\174\178\224\174\153\224\175\141\224\174\149\224\175\129\224\174\149\224\174\179\224\174\190\224\174\175\224\175\141, \224\174\137\224\174\178\224\174\149\224\174\169\224\175\136\224\174\164\224\175\141\224\174\164\224\175\129\224\174\174\224\175\141 \224\174\135\224\174\149\224\174\180\224\175\141\224\174\154\224\175\141\224\174\154\224\174\191\224\174\154\224\175\138\224\174\178\224\174\170\224\175\141 \224\174\170\224\174\190\224\174\169\224\175\141\224\174\174\224\175\136 \224\174\149\224\175\134\224\174\159\224\175\141\224\174\159\224\175\129"[39m
     [38;5;2m14790[39m: [38;5;2m       73:   ; ""[39m
     [38;5;2m14791[39m: [38;5;2m       74:   ; "\224\178\172\224\178\190 \224\178\135\224\178\178\224\179\141\224\178\178\224\178\191 \224\178\184\224\178\130\224\178\173\224\178\181\224\178\191\224\178\184\224\179\129 \224\178\135\224\178\130\224\178\166\224\179\134\224\178\168\224\179\141\224\178\168 \224\178\185\224\179\131\224\178\166\224\178\175\224\178\166\224\178\178\224\178\191"[39m
     [38;5;2m14792[39m: [38;5;2m       75:   ; "\224\178\168\224\178\191\224\178\164\224\179\141\224\178\175\224\178\181\224\179\130 \224\178\133\224\178\181\224\178\164\224\178\176\224\178\191\224\178\170 \224\178\184\224\178\164\224\179\141\224\178\175\224\178\190\224\178\181\224\178\164\224\178\190\224\178\176"[39m
     [38;5;2m14793[39m: [38;5;2m       76:   ; ""[39m
     [38;5;2m14794[39m: [38;5;2m       77:   ; "\224\164\139\224\164\183\224\164\191\224\164\175\224\165\139\224\164\130 \224\164\149\224\165\139 \224\164\184\224\164\164\224\164\190\224\164\168\224\165\135 \224\164\181\224\164\190\224\164\178\224\165\135 \224\164\166\224\165\129\224\164\183\224\165\141\224\164\159 \224\164\176\224\164\190\224\164\149\224\165\141\224\164\183\224\164\184\224\165\139\224\164\130 \224\164\149\224\165\135 \224\164\176\224\164\190\224\164\156\224\164\190 \224\164\176\224\164\190\224\164\181\224\164\163 \224\164\149\224\164\190 \224\164\184\224\164\176\224\165\141\224\164\181\224\164\168\224\164\190\224\164\182 \224\164\149\224\164\176\224\164\168\224\165\135 \224\164\181\224\164\190\224\164\178\224\165\135"[39m
     [38;5;2m14795[39m: [38;5;2m       78:   ; "\224\164\181\224\164\191\224\164\183\224\165\141\224\164\163\224\165\129\224\164\181\224\164\164\224\164\190\224\164\176 \224\164\173\224\164\151\224\164\181\224\164\190\224\164\168 \224\164\182\224\165\141\224\164\176\224\165\128\224\164\176\224\164\190\224\164\174, \224\164\133\224\164\175\224\165\139\224\164\167\224\165\141\224\164\175\224\164\190 \224\164\149\224\165\135 \224\164\174\224\164\185\224\164\190\224\164\176\224\164\190\224\164\156 \224\164\166\224\164\182\224\164\176\224\164\165 \224\164\149\224\165\135 \224\164\172\224\164\161\224\164\188\224\165\135 \224\164\184\224\164\170\224\165\129\224\164\164\224\165\141\224\164\176 \224\164\165\224\165\135\224\165\164"[39m
     [38;5;2m14796[39m: [38;5;2m       79: ][39m
     [38;5;2m14797[39m: [38;5;2m       80: [39m
     [38;5;2m14798[39m: [38;5;2m       81: let () =[39m
     [38;5;2m14799[39m: [38;5;2m       82:   let attr = A.(fg lightmagenta) in[39m
     [38;5;2m14800[39m: [38;5;2m       83:   let img = I.([39m
     [38;5;2m14801[39m: [38;5;2m       84:     centered attr text[39m
     [38;5;2m14802[39m: [38;5;2m       85:     |> vpad_sp attr 1 1 |> hpad_sp attr 2 2[39m
     [38;5;2m14803[39m: [38;5;2m       86:     |> Images.outline attr[39m
     [38;5;2m14804[39m: [38;5;2m       87:     |> pad ~t:1 ~b:1 ~l:2 ~r:2[39m
     [38;5;2m14805[39m: [38;5;2m       88:   ) <->[39m
     [38;5;2m14806[39m: [38;5;2m       89:     note [ "Alignment will usually break on the last few scripts."[39m
     [38;5;2m14807[39m: [38;5;2m       90:          ; "This is at the limit of what terminals can do."[39m
     [38;5;2m14808[39m: [38;5;2m       91:          ; ":(" ][39m
     [38;5;2m14809[39m: [38;5;2m       92:   in Notty_unix.(eol img |> output_image)[39m
     [38;5;2m14810[39m: [38;5;2mAdded regular file ../notty/examples/sierpinski.ml:[39m
     [38;5;2m14811[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14812[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14813[39m: [38;5;2m        3: [39m
     [38;5;2m14814[39m: [38;5;2m        4: (**[39m
     [38;5;2m14815[39m: [38;5;2m        5:  * A classic example in combinatory graphics.[39m
     [38;5;2m14816[39m: [38;5;2m        6:  *[39m
     [38;5;2m14817[39m: [38;5;2m        7:  * Demonstrates interaction.[39m
     [38;5;2m14818[39m: [38;5;2m        8:  *)[39m
     [38;5;2m14819[39m: [38;5;2m        9: open Notty[39m
     [38;5;2m14820[39m: [38;5;2m       10: open Common[39m
     [38;5;2m14821[39m: [38;5;2m       11: [39m
     [38;5;2m14822[39m: [38;5;2m       12: let () =[39m
     [38;5;2m14823[39m: [38;5;2m       13:   simpleterm ~s:1[39m
     [38;5;2m14824[39m: [38;5;2m       14:     ~f:(fun s -> function[39m
     [38;5;2m14825[39m: [38;5;2m       15:       | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m14826[39m: [38;5;2m       16:       | `Key (`Arrow a, _) ->[39m
     [38;5;2m14827[39m: [38;5;2m       17:         ( match a with[39m
     [38;5;2m14828[39m: [38;5;2m       18:           | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m14829[39m: [38;5;2m       19:           | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m14830[39m: [38;5;2m       20:       | _ -> Some s)[39m
     [38;5;2m14831[39m: [38;5;2m       21:     ~imgf:I.(fun _ s ->[39m
     [38;5;2m14832[39m: [38;5;2m       22:       string A.empty (string_of_int s) <->[39m
     [38;5;2m14833[39m: [38;5;2m       23:       pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m14834[39m: [38;5;2m       24:     )[39m
     [38;5;2m14835[39m: [38;5;2mAdded regular file ../notty/examples/sierpinski_lwt.ml:[39m
     [38;5;2m14836[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14837[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14838[39m: [38;5;2m        3: [39m
     [38;5;2m14839[39m: [38;5;2m        4: (**[39m
     [38;5;2m14840[39m: [38;5;2m        5:  * Demonstrates Lwt interaction.[39m
     [38;5;2m14841[39m: [38;5;2m        6:  *)[39m
     [38;5;2m14842[39m: [38;5;2m        7: open Notty[39m
     [38;5;2m14843[39m: [38;5;2m        8: open Common_lwt[39m
     [38;5;2m14844[39m: [38;5;2m        9: [39m
     [38;5;2m14845[39m: [38;5;2m       10: let img s = I.([39m
     [38;5;2m14846[39m: [38;5;2m       11:   string A.empty (string_of_int s) <-> hpad 2 0 (Images.sierp A.magenta s)[39m
     [38;5;2m14847[39m: [38;5;2m       12: )[39m
     [38;5;2m14848[39m: [38;5;2m       13: [39m
     [38;5;2m14849[39m: [38;5;2m       14: let () =[39m
     [38;5;2m14850[39m: [38;5;2m       15:   simpleterm_lwt ~s:1[39m
     [38;5;2m14851[39m: [38;5;2m       16:     ~f:(fun s -> function[39m
     [38;5;2m14852[39m: [38;5;2m       17:       | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m14853[39m: [38;5;2m       18:       | `Key (`Arrow a, _) ->[39m
     [38;5;2m14854[39m: [38;5;2m       19:         ( match a with[39m
     [38;5;2m14855[39m: [38;5;2m       20:           | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m14856[39m: [38;5;2m       21:           | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m14857[39m: [38;5;2m       22:       | _ -> Some s)[39m
     [38;5;2m14858[39m: [38;5;2m       23:     ~imgf:I.(fun _ s ->[39m
     [38;5;2m14859[39m: [38;5;2m       24:       string A.empty (string_of_int s) <->[39m
     [38;5;2m14860[39m: [38;5;2m       25:       pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m14861[39m: [38;5;2m       26:     )[39m
     [38;5;2m14862[39m: [38;5;2mAdded regular file ../notty/examples/testpatterns.ml:[39m
     [38;5;2m14863[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14864[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14865[39m: [38;5;2m        3: [39m
     [38;5;2m14866[39m: [38;5;2m        4: (**[39m
     [38;5;2m14867[39m: [38;5;2m        5:  * A few images that exercise image composition, cropping, and padding. This[39m
     [38;5;2m14868[39m: [38;5;2m        6:  * test is a good canary.[39m
     [38;5;2m14869[39m: [38;5;2m        7:  *)[39m
     [38;5;2m14870[39m: [38;5;2m        8: open Common[39m
     [38;5;2m14871[39m: [38;5;2m        9: open Notty_unix[39m
     [38;5;2m14872[39m: [38;5;2m       10: [39m
     [38;5;2m14873[39m: [38;5;2m       11: let () = Images.[i3; i5; checker1] |> List.map eol |> List.iter output_image[39m
     [38;5;2m14874[39m: [38;5;2mAdded regular file ../notty/examples/thisbig.ml:[39m
     [38;5;2m14875[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m14876[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m14877[39m: [38;5;2m        3: [39m
     [38;5;2m14878[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m14879[39m: [38;5;2m        5: open Common[39m
     [38;5;2m14880[39m: [38;5;2m        6: [39m
     [38;5;2m14881[39m: [38;5;2m        7: let () =[39m
     [38;5;2m14882[39m: [38;5;2m        8:   Notty_unix.output_image_size @@ fun (w, h) ->[39m
     [38;5;2m14883[39m: [38;5;2m        9:     Images.outline A.(fg lightblue)[39m
     [38;5;2m14884[39m: [38;5;2m       10:       I.(hsnap (w - 2) @@[39m
     [38;5;2m14885[39m: [38;5;2m       11:           vsnap (h - 3) @@ (* +1 for the prompt *)[39m
     [38;5;2m14886[39m: [38;5;2m       12:             Images.sierp A.lightblue 5)[39m
     [38;5;2m14887[39m: [38;5;2mAdded regular file ../notty/notty.opam:[39m
     [38;5;2m14888[39m: [38;5;2m        1: opam-version: "2.0"[39m
     [38;5;2m14889[39m: [38;5;2m        2: homepage:     "https://github.com/pqwy/notty"[39m
     [38;5;2m14890[39m: [38;5;2m        3: dev-repo:     "git+https://github.com/pqwy/notty.git"[39m
     [38;5;2m14891[39m: [38;5;2m        4: bug-reports:  "https://github.com/pqwy/notty/issues"[39m
     [38;5;2m14892[39m: [38;5;2m        5: doc:          "https://pqwy.github.io/notty/doc"[39m
     [38;5;2m14893[39m: [38;5;2m        6: author:       "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m14894[39m: [38;5;2m        7: maintainer:   "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m14895[39m: [38;5;2m        8: license:      "ISC"[39m
     [38;5;2m14896[39m: [38;5;2m        9: synopsis:     "Declaring terminals"[39m
     [38;5;2m14897[39m: [38;5;2m       10: description:[39m
     [38;5;2m14898[39m: [38;5;2m       11:   "Notty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m14899[39m: [38;5;2m       12:   of composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m14900[39m: [38;5;2m       13:   model, providing something simpler and more expressive."[39m
     [38;5;2m14901[39m: [38;5;2m       14: [39m
     [38;5;2m14902[39m: [38;5;2m       15: build: [ [ "dune" "subst" ] {dev}[39m
     [38;5;2m14903[39m: [38;5;2m       16:          [ "dune" "build" "-p" name "-j" jobs ] ][39m
     [38;5;2m14904[39m: [38;5;2m       17: depends: [[39m
     [38;5;2m14905[39m: [38;5;2m       18:   "ocaml" {>= "4.08.0"}[39m
     [38;5;2m14906[39m: [38;5;2m       19:   "dune" {>= "1.7"}[39m
     [38;5;2m14907[39m: [38;5;2m       20:   "cppo" {build & >= "1.1.0"}[39m
     [38;5;2m14908[39m: [38;5;2m       21:   "uutf" {>= "1.0.0"}[39m
     [38;5;2m14909[39m: [38;5;2m       22: ][39m
     [38;5;2m14910[39m: [38;5;2m       23: depopts: [ "lwt" ][39m
     [38;5;2m14911[39m: [38;5;2m       24: conflicts: [ "lwt" {<"2.5.2"} ][39m
     [38;5;2m14912[39m: [38;5;2mAdded regular file ../notty/src/dune:[39m
     [38;5;2m14913[39m: [38;5;2m        1: (include_subdirs unqualified)[39m
     [38;5;2m14914[39m: [38;5;2m        2: [39m
     [38;5;2m14915[39m: [38;5;2m        3: (library[39m
     [38;5;2m14916[39m: [38;5;2m        4:   (public_name notty)[39m
     [38;5;2m14917[39m: [38;5;2m        5:   (synopsis "Declaring terminals")[39m
     [38;5;2m14918[39m: [38;5;2m        6:   (libraries uutf)[39m
     [38;5;2m14919[39m: [38;5;2m        7:   (wrapped false)[39m
     [38;5;2m14920[39m: [38;5;2m        8:   (modules notty notty_grapheme_cluster notty_uucp notty_uucp_data)[39m
     [38;5;2m14921[39m: [38;5;2m        9:   (private_modules notty_grapheme_cluster notty_uucp notty_uucp_data))[39m
     [38;5;2m14922[39m: [38;5;2m       10: [39m
     [38;5;2m14923[39m: [38;5;2m       11: (library[39m
     [38;5;2m14924[39m: [38;5;2m       12:   (public_name notty.top)[39m
     [38;5;2m14925[39m: [38;5;2m       13:   (synopsis "Notty toplevel support")[39m
     [38;5;2m14926[39m: [38;5;2m       14:   (name notty_top)[39m
     [38;5;2m14927[39m: [38;5;2m       15:   (wrapped false)[39m
     [38;5;2m14928[39m: [38;5;2m       16:   (modules notty_top)[39m
     [38;5;2m14929[39m: [38;5;2m       17:   (preprocess (action (run %{bin:cppo} -V OCAML:%{ocaml_version} %{input-file})))[39m
     [38;5;2m14930[39m: [38;5;2m       18:   (libraries notty compiler-libs.toplevel))[39m
     [38;5;2m14931[39m: [38;5;2m       19: [39m
     [38;5;2m14932[39m: [38;5;2m       20: (install[39m
     [38;5;2m14933[39m: [38;5;2m       21:   (section lib)[39m
     [38;5;2m14934[39m: [38;5;2m       22:   (files (notty_top_init.ml as top/notty_top_init.ml)))[39m
     [38;5;2m14935[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/README.md:[39m
     [38;5;2m14936[39m: [38;5;2m        1: Cannibalized bits of Uucp:[39m
     [38;5;2m14937[39m: [38;5;2m        2: [39m
     [38;5;2m14938[39m: [38;5;2m        3: - `Notty_uucp_data` is generated from an actual Uucp installation.[39m
     [38;5;2m14939[39m: [38;5;2m        4: - `Notty_uucp` uses it to provide the few Unicode properties that Notty needs.[39m
     [38;5;2m14940[39m: [38;5;2m        5: - `Notty_grapheme_cluster` is `Grapheme_cluster` from Uuseg, adapted to use the[39m
     [38;5;2m14941[39m: [38;5;2m        6:   above.[39m
     [38;5;2m14942[39m: [38;5;2m        7: [39m
     [38;5;2m14943[39m: [38;5;2m        8: Compiled size of these is on the order of 70K. Uucp is presently a monolithic 10M.[39m
     [38;5;2m14944[39m: [38;5;2m        9: [39m
     [38;5;2m14945[39m: [38;5;2m       10: The idea is to remove these in favor of the actual Uucp/Uuseg, as soon as it[39m
     [38;5;2m14946[39m: [38;5;2m       11: becomes possible to depend only on the necessary parts of Uucp.[39m
     [38;5;2m14947[39m: [38;5;2m       12: [39m
     [38;5;2m14948[39m: [38;5;2m       13: Uucp and Uuseg are Copyright (c) 2014 Daniel C. Bünzli.[39m
     [38;5;2m14949[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_grapheme_cluster.ml:[39m
     [38;5;2m14950[39m: [38;5;2m        1: (*---------------------------------------------------------------------------[39m
     [38;5;2m14951[39m: [38;5;2m        2:    Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m14952[39m: [38;5;2m        3:    Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m14953[39m: [38;5;2m        4:    %%NAME%% %%VERSION%%[39m
     [38;5;2m14954[39m: [38;5;2m        5:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m14955[39m: [38;5;2m        6: [39m
     [38;5;2m14956[39m: [38;5;2m        7: (* These are the rules as found in [1], with property values aliases [2][39m
     [38;5;2m14957[39m: [38;5;2m        8:    substituted.[39m
     [38;5;2m14958[39m: [38;5;2m        9: [39m
     [38;5;2m14959[39m: [38;5;2m       10:    GB1.               sot ÷ Any[39m
     [38;5;2m14960[39m: [38;5;2m       11:    GB2.               Any ÷ eot[39m
     [38;5;2m14961[39m: [38;5;2m       12:    GB3.                CR × LF[39m
     [38;5;2m14962[39m: [38;5;2m       13:    GB4.        (CN|CR|LF) ÷[39m
     [38;5;2m14963[39m: [38;5;2m       14:    GB5.                   ÷ (CN|CR|LF)[39m
     [38;5;2m14964[39m: [38;5;2m       15:    GB6.                 L × (L|V|LV|LVT)[39m
     [38;5;2m14965[39m: [38;5;2m       16:    GB7.            (LV|V) × (V|T)[39m
     [38;5;2m14966[39m: [38;5;2m       17:    GB8.           (LVT|T) × T[39m
     [38;5;2m14967[39m: [38;5;2m       18:    GB9.                   × (EX|ZWJ)[39m
     [38;5;2m14968[39m: [38;5;2m       19:    GB9a.                  × SM[39m
     [38;5;2m14969[39m: [38;5;2m       20:    GB9b.               PP ×[39m
     [38;5;2m14970[39m: [38;5;2m       21:    GB10. (v10.0.0) (EB|EBG) EX* × EM[39m
     [38;5;2m14971[39m: [38;5;2m       22:    GB11. (v10.0.0)          ZWJ × (GAZ|EBG)[39m
     [38;5;2m14972[39m: [38;5;2m       23:    GB12.  sot (RI RI)* RI × RI[39m
     [38;5;2m14973[39m: [38;5;2m       24:    GB13.   [^RI] (RI RI)* × RI[39m
     [38;5;2m14974[39m: [38;5;2m       25:    GB999.             Any ÷ Any[39m
     [38;5;2m14975[39m: [38;5;2m       26: [39m
     [38;5;2m14976[39m: [38;5;2m       27:    [1]: http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries[39m
     [38;5;2m14977[39m: [38;5;2m       28:    [2]: http://www.unicode.org/Public/7.0.0/ucd/PropertyValueAliases.txt[39m
     [38;5;2m14978[39m: [38;5;2m       29:    [3]: http://www.unicode.org/Public/7.0.0/ucd/auxiliary/GraphemeBreakTest.html[39m
     [38;5;2m14979[39m: [38;5;2m       30: [39m
     [38;5;2m14980[39m: [38;5;2m       31:    By the structure of the rules we see that grapheme clusters[39m
     [38;5;2m14981[39m: [38;5;2m       32:    boundaries can *mostly* be determined by simply looking at the[39m
     [38;5;2m14982[39m: [38;5;2m       33:    grapheme cluster break property value of the character on the left[39m
     [38;5;2m14983[39m: [38;5;2m       34:    and on the right of a boundary. The exceptions are GB10 and GB12-13[39m
     [38;5;2m14984[39m: [38;5;2m       35:    which are handled specially by enriching the segmenter state in[39m
     [38;5;2m14985[39m: [38;5;2m       36:    a horribly ad-hoc fashion. *)[39m
     [38;5;2m14986[39m: [38;5;2m       37: [39m
     [38;5;2m14987[39m: [38;5;2m       38: type ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m14988[39m: [38;5;2m       39: [39m
     [38;5;2m14989[39m: [38;5;2m       40: type gcb =[39m
     [38;5;2m14990[39m: [38;5;2m       41:   | CN | CR | EX | EB | EBG | EM | GAZ | L | LF | LV | LVT | PP | RI[39m
     [38;5;2m14991[39m: [38;5;2m       42:   | SM | T | V | XX | ZWJ | Sot[39m
     [38;5;2m14992[39m: [38;5;2m       43: [39m
     [38;5;2m14993[39m: [38;5;2m       44: (* WARNING. The indexes used here need to be synchronized with those[39m
     [38;5;2m14994[39m: [38;5;2m       45:    assigned by uucp for Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m14995[39m: [38;5;2m       46: [39m
     [38;5;2m14996[39m: [38;5;2m       47: let byte_to_gcb =[39m
     [38;5;2m14997[39m: [38;5;2m       48:   [| CN; CR; EX; EB; EBG; EM; GAZ; L; LF; LV; LVT; PP; RI;[39m
     [38;5;2m14998[39m: [38;5;2m       49:      SM; T; V; XX; ZWJ; |][39m
     [38;5;2m14999[39m: [38;5;2m       50: [39m
     [38;5;2m15000[39m: [38;5;2m       51: let gcb u = byte_to_gcb.(Notty_uucp.grapheme_cluster_boundary u)[39m
     [38;5;2m15001[39m: [38;5;2m       52: [39m
     [38;5;2m15002[39m: [38;5;2m       53: type state =[39m
     [38;5;2m15003[39m: [38;5;2m       54: | Fill  (* get next uchar to decide boundary. *)[39m
     [38;5;2m15004[39m: [38;5;2m       55: | Flush (* an uchar is buffered, client needs to get it out with `Await. *)[39m
     [38;5;2m15005[39m: [38;5;2m       56: | End   (* `End was added. *)[39m
     [38;5;2m15006[39m: [38;5;2m       57: [39m
     [38;5;2m15007[39m: [38;5;2m       58: type t =[39m
     [38;5;2m15008[39m: [38;5;2m       59:   { mutable state : state;                                 (* current state. *)[39m
     [38;5;2m15009[39m: [38;5;2m       60:     mutable left : gcb;            (* break property value left of boundary. *)[39m
     [38;5;2m15010[39m: [38;5;2m       61:     mutable odd_ri : bool;                  (* odd number of RI on the left. *)[39m
     [38;5;2m15011[39m: [38;5;2m       62:     mutable emoji_seq : bool;               (* (EB|EBG) Extend* on the left. *)[39m
     [38;5;2m15012[39m: [38;5;2m       63:     mutable buf : [ `Uchar of Uchar.t ] }                 (* bufferized add. *)[39m
     [38;5;2m15013[39m: [38;5;2m       64: [39m
     [38;5;2m15014[39m: [38;5;2m       65: let nul_buf = `Uchar (Uchar.unsafe_of_int 0x0000)[39m
     [38;5;2m15015[39m: [38;5;2m       66: [39m
     [38;5;2m15016[39m: [38;5;2m       67: let create () =[39m
     [38;5;2m15017[39m: [38;5;2m       68:   { state = Fill; left = Sot;[39m
     [38;5;2m15018[39m: [38;5;2m       69:     odd_ri = false; emoji_seq = false;[39m
     [38;5;2m15019[39m: [38;5;2m       70:     buf = nul_buf (* overwritten *); }[39m
     [38;5;2m15020[39m: [38;5;2m       71: [39m
     [38;5;2m15021[39m: [38;5;2m       72: let break s right = match s.left, right with[39m
     [38;5;2m15022[39m: [38;5;2m       73: | (* GB1 *)   Sot, _ -> true[39m
     [38;5;2m15023[39m: [38;5;2m       74:   (* GB2 is handled by `End *)[39m
     [38;5;2m15024[39m: [38;5;2m       75: | (* GB3 *)   CR, LF -> false[39m
     [38;5;2m15025[39m: [38;5;2m       76: | (* GB4 *)   (CN|CR|LF), _ -> true[39m
     [38;5;2m15026[39m: [38;5;2m       77: | (* GB5 *)   _, (CN|CR|LF) -> true[39m
     [38;5;2m15027[39m: [38;5;2m       78: | (* GB6 *)   L, (L|V|LV|LVT) -> false[39m
     [38;5;2m15028[39m: [38;5;2m       79: | (* GB7 *)   (LV|V), (V|T) -> false[39m
     [38;5;2m15029[39m: [38;5;2m       80: | (* GB8 *)   (LVT|T), T -> false[39m
     [38;5;2m15030[39m: [38;5;2m       81: | (* GB9+a *) _, (EX|ZWJ|SM) -> false[39m
     [38;5;2m15031[39m: [38;5;2m       82: | (* GB9b *)  PP, _ -> false[39m
     [38;5;2m15032[39m: [38;5;2m       83: | (* GB10 *)  _, EM when s.emoji_seq -> false[39m
     [38;5;2m15033[39m: [38;5;2m       84: | (* GB11 *)  ZWJ, (GAZ|EBG) -> false[39m
     [38;5;2m15034[39m: [38;5;2m       85: | (* GB12+13 *) RI, RI when s.odd_ri -> false[39m
     [38;5;2m15035[39m: [38;5;2m       86: | (* GB999 *) _, _ -> true[39m
     [38;5;2m15036[39m: [38;5;2m       87: [39m
     [38;5;2m15037[39m: [38;5;2m       88: let update_left s right =[39m
     [38;5;2m15038[39m: [38;5;2m       89:   s.left <- right;[39m
     [38;5;2m15039[39m: [38;5;2m       90:   match s.left with[39m
     [38;5;2m15040[39m: [38;5;2m       91:   | EX -> (* keep s.emoji_seq as is *) s.odd_ri <- false[39m
     [38;5;2m15041[39m: [38;5;2m       92:   | EB | EBG -> s.emoji_seq <- true; s.odd_ri <- false[39m
     [38;5;2m15042[39m: [38;5;2m       93:   | RI -> s.emoji_seq <- false; s.odd_ri <- not s.odd_ri[39m
     [38;5;2m15043[39m: [38;5;2m       94:   | _ -> s.emoji_seq <- false; s.odd_ri <- false[39m
     [38;5;2m15044[39m: [38;5;2m       95: [39m
     [38;5;2m15045[39m: [38;5;2m       96: let add s = function[39m
     [38;5;2m15046[39m: [38;5;2m       97: | `Uchar u as add ->[39m
     [38;5;2m15047[39m: [38;5;2m       98:     begin match s.state with[39m
     [38;5;2m15048[39m: [38;5;2m       99:     | Fill ->[39m
     [38;5;2m15049[39m: [38;5;2m      100:         let right = gcb u in[39m
     [38;5;2m15050[39m: [38;5;2m      101:         let break = break s right in[39m
     [38;5;2m15051[39m: [38;5;2m      102:         update_left s right;[39m
     [38;5;2m15052[39m: [38;5;2m      103:         if not break then add else[39m
     [38;5;2m15053[39m: [38;5;2m      104:         (s.state <- Flush; s.buf <- add; `Boundary)[39m
     [38;5;2m15054[39m: [38;5;2m      105:     | Flush | End -> assert false[39m
     [38;5;2m15055[39m: [38;5;2m      106:     end[39m
     [38;5;2m15056[39m: [38;5;2m      107: | `Await ->[39m
     [38;5;2m15057[39m: [38;5;2m      108:     begin match s.state with[39m
     [38;5;2m15058[39m: [38;5;2m      109:     | Flush -> s.state <- Fill; (s.buf :> ret)[39m
     [38;5;2m15059[39m: [38;5;2m      110:     | End -> `End[39m
     [38;5;2m15060[39m: [38;5;2m      111:     | Fill -> `Await[39m
     [38;5;2m15061[39m: [38;5;2m      112:     end[39m
     [38;5;2m15062[39m: [38;5;2m      113: | `End ->[39m
     [38;5;2m15063[39m: [38;5;2m      114:     begin match s.state with[39m
     [38;5;2m15064[39m: [38;5;2m      115:     | Fill -> s.state <- End; if s.left = Sot then `End else `Boundary[39m
     [38;5;2m15065[39m: [38;5;2m      116:     | Flush | End -> assert false[39m
     [38;5;2m15066[39m: [38;5;2m      117:     end[39m
     [38;5;2m15067[39m: [38;5;2m      118: [39m
     [38;5;2m15068[39m: [38;5;2m      119: (*---------------------------------------------------------------------------[39m
     [38;5;2m15069[39m: [38;5;2m      120:    Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m15070[39m: [38;5;2m      121: [39m
     [38;5;2m15071[39m: [38;5;2m      122:    Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m15072[39m: [38;5;2m      123:    purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m15073[39m: [38;5;2m      124:    copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m15074[39m: [38;5;2m      125: [39m
     [38;5;2m15075[39m: [38;5;2m      126:    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m15076[39m: [38;5;2m      127:    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m15077[39m: [38;5;2m      128:    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m15078[39m: [38;5;2m      129:    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m15079[39m: [38;5;2m      130:    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m15080[39m: [38;5;2m      131:    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m15081[39m: [38;5;2m      132:    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m15082[39m: [38;5;2m      133:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m15083[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_grapheme_cluster.mli:[39m
     [38;5;2m15084[39m: [38;5;2m        1: (*---------------------------------------------------------------------------[39m
     [38;5;2m15085[39m: [38;5;2m        2:    Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m15086[39m: [38;5;2m        3:    Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m15087[39m: [38;5;2m        4:    %%NAME%% %%VERSION%%[39m
     [38;5;2m15088[39m: [38;5;2m        5:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m15089[39m: [38;5;2m        6: [39m
     [38;5;2m15090[39m: [38;5;2m        7: type ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m15091[39m: [38;5;2m        8: [39m
     [38;5;2m15092[39m: [38;5;2m        9: type t[39m
     [38;5;2m15093[39m: [38;5;2m       10: val create : unit -> t[39m
     [38;5;2m15094[39m: [38;5;2m       11: val add : t -> [ `Await | `End | `Uchar of Uchar.t ] -> ret[39m
     [38;5;2m15095[39m: [38;5;2m       12: [39m
     [38;5;2m15096[39m: [38;5;2m       13: (*---------------------------------------------------------------------------[39m
     [38;5;2m15097[39m: [38;5;2m       14:    Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m15098[39m: [38;5;2m       15: [39m
     [38;5;2m15099[39m: [38;5;2m       16:    Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m15100[39m: [38;5;2m       17:    purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m15101[39m: [38;5;2m       18:    copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m15102[39m: [38;5;2m       19: [39m
     [38;5;2m15103[39m: [38;5;2m       20:    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m15104[39m: [38;5;2m       21:    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m15105[39m: [38;5;2m       22:    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m15106[39m: [38;5;2m       23:    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m15107[39m: [38;5;2m       24:    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m15108[39m: [38;5;2m       25:    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m15109[39m: [38;5;2m       26:    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m15110[39m: [38;5;2m       27:   ---------------------------------------------------------------------------*)[39m
     [38;5;2m15111[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp.ml:[39m
     [38;5;2m15112[39m: [38;5;2m        1: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m15113[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m15114[39m: [38;5;2m        3: [39m
     [38;5;2m15115[39m: [38;5;2m        4: (* Unpacked interval lookup table. *)[39m
     [38;5;2m15116[39m: [38;5;2m        5: let find_i ~def k (xs, _, _ as tab) =[39m
     [38;5;2m15117[39m: [38;5;2m        6:   let rec go i j (los, his, vs as tab) (k: int) def =[39m
     [38;5;2m15118[39m: [38;5;2m        7:     if i > j then def else[39m
     [38;5;2m15119[39m: [38;5;2m        8:     let x = (i + j) / 2 in[39m
     [38;5;2m15120[39m: [38;5;2m        9:     if k < Array.unsafe_get los x then go i (x - 1) tab k def else[39m
     [38;5;2m15121[39m: [38;5;2m       10:     if k > Array.unsafe_get his x then go (x + 1) j tab k def else[39m
     [38;5;2m15122[39m: [38;5;2m       11:       Array.unsafe_get vs x in[39m
     [38;5;2m15123[39m: [38;5;2m       12:   go 0 (Array.length xs - 1) tab k def[39m
     [38;5;2m15124[39m: [38;5;2m       13: [39m
     [38;5;2m15125[39m: [38;5;2m       14: (* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m15126[39m: [38;5;2m       15:    Root is variable; lower levels are either empty or complete. *)[39m
     [38;5;2m15127[39m: [38;5;2m       16: let find_t ~def k tab =[39m
     [38;5;2m15128[39m: [38;5;2m       17:   let k = if k > 0xd7ff then k - 0x800 else k in (* Pack to continuous range. *)[39m
     [38;5;2m15129[39m: [38;5;2m       18:   let b0 = (k lsr 12) land 0xfff in[39m
     [38;5;2m15130[39m: [38;5;2m       19:   if Array.length tab <= b0 then def else[39m
     [38;5;2m15131[39m: [38;5;2m       20:   match Array.unsafe_get tab b0 with[39m
     [38;5;2m15132[39m: [38;5;2m       21:   | [||] -> def[39m
     [38;5;2m15133[39m: [38;5;2m       22:   | arr -> match Array.unsafe_get arr ((k lsr 6) land 0x3f) with[39m
     [38;5;2m15134[39m: [38;5;2m       23:     | "" -> def[39m
     [38;5;2m15135[39m: [38;5;2m       24:     | str -> String.unsafe_get str (k land 0x3f) |> Char.code[39m
     [38;5;2m15136[39m: [38;5;2m       25: [39m
     [38;5;2m15137[39m: [38;5;2m       26: (* We catch w = -1 and default to w = 1 to minimize the table. *)[39m
     [38;5;2m15138[39m: [38;5;2m       27: let tty_width_hint u = match Uchar.to_int u with[39m
     [38;5;2m15139[39m: [38;5;2m       28: | 0 -> 0[39m
     [38;5;2m15140[39m: [38;5;2m       29: | u when u <= 0x001F || 0x007F <= u && u <= 0x009F -> -1[39m
     [38;5;2m15141[39m: [38;5;2m       30: | u when u <= 0x02ff -> 1[39m
     [38;5;2m15142[39m: [38;5;2m       31: | u -> find_i ~def:1 u Notty_uucp_data.tty_width_hint[39m
     [38;5;2m15143[39m: [38;5;2m       32: [39m
     [38;5;2m15144[39m: [38;5;2m       33: let grapheme_cluster_boundary u =[39m
     [38;5;2m15145[39m: [38;5;2m       34:   find_t ~def:16 (Uchar.to_int u) Notty_uucp_data.grapheme_cluster_boundary[39m
     [38;5;2m15146[39m: [38;5;2m       35: [39m
     [38;5;2m15147[39m: [38;5;2m       36: (* let check () = *)[39m
     [38;5;2m15148[39m: [38;5;2m       37: (*   let pp_u ppf u = Format.fprintf ppf "u+%04x" (Uchar.to_int u) in *)[39m
     [38;5;2m15149[39m: [38;5;2m       38: (*   let rec go i u = *)[39m
     [38;5;2m15150[39m: [38;5;2m       39: (*     let w1 = tty_width_hint u *)[39m
     [38;5;2m15151[39m: [38;5;2m       40: (*     and w2 = Uucp.Break.tty_width_hint u in *)[39m
     [38;5;2m15152[39m: [38;5;2m       41: (*     if w1 <> w2 then Format.printf "w: %a here: %d there: %d@." pp_u u w1 w2; *)[39m
     [38;5;2m15153[39m: [38;5;2m       42: (*     let gc1 = grapheme_cluster_boundary u *)[39m
     [38;5;2m15154[39m: [38;5;2m       43: (*     and gc2 = Uucp.Break.Low.grapheme_cluster u in *)[39m
     [38;5;2m15155[39m: [38;5;2m       44: (*     if gc1 <> gc2 then Format.printf "gc: %a here: %d there: %d@." pp_u u gc1 gc2; *)[39m
     [38;5;2m15156[39m: [38;5;2m       45: (*     if u = Uchar.max then i else go (i + 1) (Uchar.succ u) in *)[39m
     [38;5;2m15157[39m: [38;5;2m       46: (*   let n = go 1 Uchar.min in *)[39m
     [38;5;2m15158[39m: [38;5;2m       47: (*   Format.printf "Checked equality for %d code points.@." n *)[39m
     [38;5;2m15159[39m: [38;5;2m       48: [39m
     [38;5;2m15160[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp.mli:[39m
     [38;5;2m15161[39m: [38;5;2m        1: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m15162[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m15163[39m: [38;5;2m        3: [39m
     [38;5;2m15164[39m: [38;5;2m        4: (* This is a local copy of the (very few) relevant [uucp] properties. *)[39m
     [38;5;2m15165[39m: [38;5;2m        5: [39m
     [38;5;2m15166[39m: [38;5;2m        6: val tty_width_hint : Uchar.t -> int[39m
     [38;5;2m15167[39m: [38;5;2m        7: (* [Uucp.Break.tty_width_hint]. *)[39m
     [38;5;2m15168[39m: [38;5;2m        8: [39m
     [38;5;2m15169[39m: [38;5;2m        9: val grapheme_cluster_boundary : Uchar.t -> int[39m
     [38;5;2m15170[39m: [38;5;2m       10: (* [Uucp.Break.Low.grapheme_cluster]. *)[39m
     [38;5;2m15171[39m: [38;5;2m       11: [39m
     [38;5;2m15172[39m: [38;5;2m       12: (* val check : unit -> unit *)[39m
     [38;5;2m15173[39m: [38;5;2m       13: [39m
     [38;5;2m15174[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp_data.ml:[39m
     [38;5;2m15175[39m: [38;5;2m        1: (* Do not edit.[39m
     [38;5;2m15176[39m: [38;5;2m        2:  *[39m
     [38;5;2m15177[39m: [38;5;2m        3:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m15178[39m: [38;5;2m        4:  * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m15179[39m: [38;5;2m        5:  *[39m
     [38;5;2m15180[39m: [38;5;2m        6:  * Unicode version 13.0.0.[39m
     [38;5;2m15181[39m: [38;5;2m        7:  *)[39m
     [38;5;2m15182[39m: [38;5;2m        8: [39m
     [38;5;2m15183[39m: [38;5;2m        9: [39m
     [38;5;2m15184[39m: [38;5;2m       10: let tty_width_hint =[39m
     [38;5;2m15185[39m: [38;5;2m       11:   ([|0x0000; 0x0300; 0x0483; 0x0591; 0x05bf; 0x05c1; 0x05c4; 0x05c7; 0x0600;[39m
     [38;5;2m15186[39m: [38;5;2m       12:      0x0610; 0x061c; 0x064b; 0x0670; 0x06d6; 0x06df; 0x06e7; 0x06ea; 0x070f;[39m
     [38;5;2m15187[39m: [38;5;2m       13:      0x0711; 0x0730; 0x07a6; 0x07eb; 0x07fd; 0x0816; 0x081b; 0x0825; 0x0829;[39m
     [38;5;2m15188[39m: [38;5;2m       14:      0x0859; 0x08d3; 0x093a; 0x093c; 0x0941; 0x094d; 0x0951; 0x0962; 0x0981;[39m
     [38;5;2m15189[39m: [38;5;2m       15:      0x09bc; 0x09c1; 0x09cd; 0x09e2; 0x09fe; 0x0a01; 0x0a3c; 0x0a41; 0x0a47;[39m
     [38;5;2m15190[39m: [38;5;2m       16:      0x0a4b; 0x0a51; 0x0a70; 0x0a75; 0x0a81; 0x0abc; 0x0ac1; 0x0ac7; 0x0acd;[39m
     [38;5;2m15191[39m: [38;5;2m       17:      0x0ae2; 0x0afa; 0x0b01; 0x0b3c; 0x0b3f; 0x0b41; 0x0b4d; 0x0b55; 0x0b62;[39m
     [38;5;2m15192[39m: [38;5;2m       18:      0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c3e; 0x0c46; 0x0c4a; 0x0c55;[39m
     [38;5;2m15193[39m: [38;5;2m       19:      0x0c62; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccc; 0x0ce2; 0x0d00; 0x0d3b;[39m
     [38;5;2m15194[39m: [38;5;2m       20:      0x0d41; 0x0d4d; 0x0d62; 0x0d81; 0x0dca; 0x0dd2; 0x0dd6; 0x0e31; 0x0e34;[39m
     [38;5;2m15195[39m: [38;5;2m       21:      0x0e47; 0x0eb1; 0x0eb4; 0x0ec8; 0x0f18; 0x0f35; 0x0f37; 0x0f39; 0x0f71;[39m
     [38;5;2m15196[39m: [38;5;2m       22:      0x0f80; 0x0f86; 0x0f8d; 0x0f99; 0x0fc6; 0x102d; 0x1032; 0x1039; 0x103d;[39m
     [38;5;2m15197[39m: [38;5;2m       23:      0x1058; 0x105e; 0x1071; 0x1082; 0x1085; 0x108d; 0x109d; 0x1100; 0x135d;[39m
     [38;5;2m15198[39m: [38;5;2m       24:      0x1712; 0x1732; 0x1752; 0x1772; 0x17b4; 0x17b7; 0x17c6; 0x17c9; 0x17dd;[39m
     [38;5;2m15199[39m: [38;5;2m       25:      0x180b; 0x1885; 0x18a9; 0x1920; 0x1927; 0x1932; 0x1939; 0x1a17; 0x1a1b;[39m
     [38;5;2m15200[39m: [38;5;2m       26:      0x1a56; 0x1a58; 0x1a60; 0x1a62; 0x1a65; 0x1a73; 0x1a7f; 0x1ab0; 0x1b00;[39m
     [38;5;2m15201[39m: [38;5;2m       27:      0x1b34; 0x1b36; 0x1b3c; 0x1b42; 0x1b6b; 0x1b80; 0x1ba2; 0x1ba8; 0x1bab;[39m
     [38;5;2m15202[39m: [38;5;2m       28:      0x1be6; 0x1be8; 0x1bed; 0x1bef; 0x1c2c; 0x1c36; 0x1cd0; 0x1cd4; 0x1ce2;[39m
     [38;5;2m15203[39m: [38;5;2m       29:      0x1ced; 0x1cf4; 0x1cf8; 0x1dc0; 0x1dfb; 0x200b; 0x202a; 0x2060; 0x2066;[39m
     [38;5;2m15204[39m: [38;5;2m       30:      0x20d0; 0x231a; 0x2329; 0x23e9; 0x23f0; 0x23f3; 0x25fd; 0x2614; 0x2648;[39m
     [38;5;2m15205[39m: [38;5;2m       31:      0x267f; 0x2693; 0x26a1; 0x26aa; 0x26bd; 0x26c4; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m15206[39m: [38;5;2m       32:      0x26f2; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270a; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m15207[39m: [38;5;2m       33:      0x2753; 0x2757; 0x2795; 0x27b0; 0x27bf; 0x2b1b; 0x2b50; 0x2b55; 0x2cef;[39m
     [38;5;2m15208[39m: [38;5;2m       34:      0x2d7f; 0x2de0; 0x2e80; 0x2e9b; 0x2f00; 0x2ff0; 0x3000; 0x302a; 0x302e;[39m
     [38;5;2m15209[39m: [38;5;2m       35:      0x3041; 0x3099; 0x309b; 0x3105; 0x3131; 0x3190; 0x31f0; 0x3220; 0x3250;[39m
     [38;5;2m15210[39m: [38;5;2m       36:      0x4e00; 0xa490; 0xa66f; 0xa674; 0xa69e; 0xa6f0; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m15211[39m: [38;5;2m       37:      0xa825; 0xa82c; 0xa8c4; 0xa8e0; 0xa8ff; 0xa926; 0xa947; 0xa960; 0xa980;[39m
     [38;5;2m15212[39m: [38;5;2m       38:      0xa9b3; 0xa9b6; 0xa9bc; 0xa9e5; 0xaa29; 0xaa31; 0xaa35; 0xaa43; 0xaa4c;[39m
     [38;5;2m15213[39m: [38;5;2m       39:      0xaa7c; 0xaab0; 0xaab2; 0xaab7; 0xaabe; 0xaac1; 0xaaec; 0xaaf6; 0xabe5;[39m
     [38;5;2m15214[39m: [38;5;2m       40:      0xabe8; 0xabed; 0xac00; 0xf900; 0xfb1e; 0xfe00; 0xfe10; 0xfe20; 0xfe30;[39m
     [38;5;2m15215[39m: [38;5;2m       41:      0xfe54; 0xfe68; 0xfeff; 0xff01; 0xffe0; 0xfff9; 0x101fd; 0x102e0;[39m
     [38;5;2m15216[39m: [38;5;2m       42:      0x10376; 0x10a01; 0x10a05; 0x10a0c; 0x10a38; 0x10a3f; 0x10ae5; 0x10d24;[39m
     [38;5;2m15217[39m: [38;5;2m       43:      0x10eab; 0x10f46; 0x11001; 0x11038; 0x1107f; 0x110b3; 0x110b9; 0x110bd;[39m
     [38;5;2m15218[39m: [38;5;2m       44:      0x110cd; 0x11100; 0x11127; 0x1112d; 0x11173; 0x11180; 0x111b6; 0x111c9;[39m
     [38;5;2m15219[39m: [38;5;2m       45:      0x111cf; 0x1122f; 0x11234; 0x11236; 0x1123e; 0x112df; 0x112e3; 0x11300;[39m
     [38;5;2m15220[39m: [38;5;2m       46:      0x1133b; 0x11340; 0x11366; 0x11370; 0x11438; 0x11442; 0x11446; 0x1145e;[39m
     [38;5;2m15221[39m: [38;5;2m       47:      0x114b3; 0x114ba; 0x114bf; 0x114c2; 0x115b2; 0x115bc; 0x115bf; 0x115dc;[39m
     [38;5;2m15222[39m: [38;5;2m       48:      0x11633; 0x1163d; 0x1163f; 0x116ab; 0x116ad; 0x116b0; 0x116b7; 0x1171d;[39m
     [38;5;2m15223[39m: [38;5;2m       49:      0x11722; 0x11727; 0x1182f; 0x11839; 0x1193b; 0x1193e; 0x11943; 0x119d4;[39m
     [38;5;2m15224[39m: [38;5;2m       50:      0x119da; 0x119e0; 0x11a01; 0x11a33; 0x11a3b; 0x11a47; 0x11a51; 0x11a59;[39m
     [38;5;2m15225[39m: [38;5;2m       51:      0x11a8a; 0x11a98; 0x11c30; 0x11c38; 0x11c3f; 0x11c92; 0x11caa; 0x11cb2;[39m
     [38;5;2m15226[39m: [38;5;2m       52:      0x11cb5; 0x11d31; 0x11d3a; 0x11d3c; 0x11d3f; 0x11d47; 0x11d90; 0x11d95;[39m
     [38;5;2m15227[39m: [38;5;2m       53:      0x11d97; 0x11ef3; 0x13430; 0x16af0; 0x16b30; 0x16f4f; 0x16f8f; 0x16fe0;[39m
     [38;5;2m15228[39m: [38;5;2m       54:      0x16fe4; 0x16ff0; 0x17000; 0x18800; 0x18d00; 0x1b000; 0x1b150; 0x1b164;[39m
     [38;5;2m15229[39m: [38;5;2m       55:      0x1b170; 0x1bc9d; 0x1bca0; 0x1d167; 0x1d173; 0x1d185; 0x1d1aa; 0x1d242;[39m
     [38;5;2m15230[39m: [38;5;2m       56:      0x1da00; 0x1da3b; 0x1da75; 0x1da84; 0x1da9b; 0x1daa1; 0x1e000; 0x1e008;[39m
     [38;5;2m15231[39m: [38;5;2m       57:      0x1e01b; 0x1e023; 0x1e026; 0x1e130; 0x1e2ec; 0x1e8d0; 0x1e944; 0x1f004;[39m
     [38;5;2m15232[39m: [38;5;2m       58:      0x1f0cf; 0x1f18e; 0x1f191; 0x1f200; 0x1f210; 0x1f240; 0x1f250; 0x1f260;[39m
     [38;5;2m15233[39m: [38;5;2m       59:      0x1f300; 0x1f32d; 0x1f337; 0x1f37e; 0x1f3a0; 0x1f3cf; 0x1f3e0; 0x1f3f4;[39m
     [38;5;2m15234[39m: [38;5;2m       60:      0x1f3f8; 0x1f440; 0x1f442; 0x1f4ff; 0x1f54b; 0x1f550; 0x1f57a; 0x1f595;[39m
     [38;5;2m15235[39m: [38;5;2m       61:      0x1f5a4; 0x1f5fb; 0x1f680; 0x1f6cc; 0x1f6d0; 0x1f6d5; 0x1f6eb; 0x1f6f4;[39m
     [38;5;2m15236[39m: [38;5;2m       62:      0x1f7e0; 0x1f90c; 0x1f93c; 0x1f947; 0x1f97a; 0x1f9cd; 0x1fa70; 0x1fa78;[39m
     [38;5;2m15237[39m: [38;5;2m       63:      0x1fa80; 0x1fa90; 0x1fab0; 0x1fac0; 0x1fad0; 0x20000; 0x30000; 0xe0001;[39m
     [38;5;2m15238[39m: [38;5;2m       64:      0xe0020; 0xe0100|],[39m
     [38;5;2m15239[39m: [38;5;2m       65:    [|0x0000; 0x036f; 0x0489; 0x05bd; 0x05bf; 0x05c2; 0x05c5; 0x05c7; 0x0605;[39m
     [38;5;2m15240[39m: [38;5;2m       66:      0x061a; 0x061c; 0x065f; 0x0670; 0x06dd; 0x06e4; 0x06e8; 0x06ed; 0x070f;[39m
     [38;5;2m15241[39m: [38;5;2m       67:      0x0711; 0x074a; 0x07b0; 0x07f3; 0x07fd; 0x0819; 0x0823; 0x0827; 0x082d;[39m
     [38;5;2m15242[39m: [38;5;2m       68:      0x085b; 0x0902; 0x093a; 0x093c; 0x0948; 0x094d; 0x0957; 0x0963; 0x0981;[39m
     [38;5;2m15243[39m: [38;5;2m       69:      0x09bc; 0x09c4; 0x09cd; 0x09e3; 0x09fe; 0x0a02; 0x0a3c; 0x0a42; 0x0a48;[39m
     [38;5;2m15244[39m: [38;5;2m       70:      0x0a4d; 0x0a51; 0x0a71; 0x0a75; 0x0a82; 0x0abc; 0x0ac5; 0x0ac8; 0x0acd;[39m
     [38;5;2m15245[39m: [38;5;2m       71:      0x0ae3; 0x0aff; 0x0b01; 0x0b3c; 0x0b3f; 0x0b44; 0x0b4d; 0x0b56; 0x0b63;[39m
     [38;5;2m15246[39m: [38;5;2m       72:      0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c40; 0x0c48; 0x0c4d; 0x0c56;[39m
     [38;5;2m15247[39m: [38;5;2m       73:      0x0c63; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccd; 0x0ce3; 0x0d01; 0x0d3c;[39m
     [38;5;2m15248[39m: [38;5;2m       74:      0x0d44; 0x0d4d; 0x0d63; 0x0d81; 0x0dca; 0x0dd4; 0x0dd6; 0x0e31; 0x0e3a;[39m
     [38;5;2m15249[39m: [38;5;2m       75:      0x0e4e; 0x0eb1; 0x0ebc; 0x0ecd; 0x0f19; 0x0f35; 0x0f37; 0x0f39; 0x0f7e;[39m
     [38;5;2m15250[39m: [38;5;2m       76:      0x0f84; 0x0f87; 0x0f97; 0x0fbc; 0x0fc6; 0x1030; 0x1037; 0x103a; 0x103e;[39m
     [38;5;2m15251[39m: [38;5;2m       77:      0x1059; 0x1060; 0x1074; 0x1082; 0x1086; 0x108d; 0x109d; 0x115f; 0x135f;[39m
     [38;5;2m15252[39m: [38;5;2m       78:      0x1714; 0x1734; 0x1753; 0x1773; 0x17b5; 0x17bd; 0x17c6; 0x17d3; 0x17dd;[39m
     [38;5;2m15253[39m: [38;5;2m       79:      0x180e; 0x1886; 0x18a9; 0x1922; 0x1928; 0x1932; 0x193b; 0x1a18; 0x1a1b;[39m
     [38;5;2m15254[39m: [38;5;2m       80:      0x1a56; 0x1a5e; 0x1a60; 0x1a62; 0x1a6c; 0x1a7c; 0x1a7f; 0x1ac0; 0x1b03;[39m
     [38;5;2m15255[39m: [38;5;2m       81:      0x1b34; 0x1b3a; 0x1b3c; 0x1b42; 0x1b73; 0x1b81; 0x1ba5; 0x1ba9; 0x1bad;[39m
     [38;5;2m15256[39m: [38;5;2m       82:      0x1be6; 0x1be9; 0x1bed; 0x1bf1; 0x1c33; 0x1c37; 0x1cd2; 0x1ce0; 0x1ce8;[39m
     [38;5;2m15257[39m: [38;5;2m       83:      0x1ced; 0x1cf4; 0x1cf9; 0x1df9; 0x1dff; 0x200f; 0x202e; 0x2064; 0x206f;[39m
     [38;5;2m15258[39m: [38;5;2m       84:      0x20f0; 0x231b; 0x232a; 0x23ec; 0x23f0; 0x23f3; 0x25fe; 0x2615; 0x2653;[39m
     [38;5;2m15259[39m: [38;5;2m       85:      0x267f; 0x2693; 0x26a1; 0x26ab; 0x26be; 0x26c5; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m15260[39m: [38;5;2m       86:      0x26f3; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270b; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m15261[39m: [38;5;2m       87:      0x2755; 0x2757; 0x2797; 0x27b0; 0x27bf; 0x2b1c; 0x2b50; 0x2b55; 0x2cf1;[39m
     [38;5;2m15262[39m: [38;5;2m       88:      0x2d7f; 0x2dff; 0x2e99; 0x2ef3; 0x2fd5; 0x2ffb; 0x3029; 0x302d; 0x303e;[39m
     [38;5;2m15263[39m: [38;5;2m       89:      0x3096; 0x309a; 0x30ff; 0x312f; 0x318e; 0x31e3; 0x321e; 0x3247; 0x4dbf;[39m
     [38;5;2m15264[39m: [38;5;2m       90:      0xa48c; 0xa4c6; 0xa672; 0xa67d; 0xa69f; 0xa6f1; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m15265[39m: [38;5;2m       91:      0xa826; 0xa82c; 0xa8c5; 0xa8f1; 0xa8ff; 0xa92d; 0xa951; 0xa97c; 0xa982;[39m
     [38;5;2m15266[39m: [38;5;2m       92:      0xa9b3; 0xa9b9; 0xa9bd; 0xa9e5; 0xaa2e; 0xaa32; 0xaa36; 0xaa43; 0xaa4c;[39m
     [38;5;2m15267[39m: [38;5;2m       93:      0xaa7c; 0xaab0; 0xaab4; 0xaab8; 0xaabf; 0xaac1; 0xaaed; 0xaaf6; 0xabe5;[39m
     [38;5;2m15268[39m: [38;5;2m       94:      0xabe8; 0xabed; 0xd7a3; 0xfaff; 0xfb1e; 0xfe0f; 0xfe19; 0xfe2f; 0xfe52;[39m
     [38;5;2m15269[39m: [38;5;2m       95:      0xfe66; 0xfe6b; 0xfeff; 0xff60; 0xffe6; 0xfffb; 0x101fd; 0x102e0;[39m
     [38;5;2m15270[39m: [38;5;2m       96:      0x1037a; 0x10a03; 0x10a06; 0x10a0f; 0x10a3a; 0x10a3f; 0x10ae6; 0x10d27;[39m
     [38;5;2m15271[39m: [38;5;2m       97:      0x10eac; 0x10f50; 0x11001; 0x11046; 0x11081; 0x110b6; 0x110ba; 0x110bd;[39m
     [38;5;2m15272[39m: [38;5;2m       98:      0x110cd; 0x11102; 0x1112b; 0x11134; 0x11173; 0x11181; 0x111be; 0x111cc;[39m
     [38;5;2m15273[39m: [38;5;2m       99:      0x111cf; 0x11231; 0x11234; 0x11237; 0x1123e; 0x112df; 0x112ea; 0x11301;[39m
     [38;5;2m15274[39m: [38;5;2m      100:      0x1133c; 0x11340; 0x1136c; 0x11374; 0x1143f; 0x11444; 0x11446; 0x1145e;[39m
     [38;5;2m15275[39m: [38;5;2m      101:      0x114b8; 0x114ba; 0x114c0; 0x114c3; 0x115b5; 0x115bd; 0x115c0; 0x115dd;[39m
     [38;5;2m15276[39m: [38;5;2m      102:      0x1163a; 0x1163d; 0x11640; 0x116ab; 0x116ad; 0x116b5; 0x116b7; 0x1171f;[39m
     [38;5;2m15277[39m: [38;5;2m      103:      0x11725; 0x1172b; 0x11837; 0x1183a; 0x1193c; 0x1193e; 0x11943; 0x119d7;[39m
     [38;5;2m15278[39m: [38;5;2m      104:      0x119db; 0x119e0; 0x11a0a; 0x11a38; 0x11a3e; 0x11a47; 0x11a56; 0x11a5b;[39m
     [38;5;2m15279[39m: [38;5;2m      105:      0x11a96; 0x11a99; 0x11c36; 0x11c3d; 0x11c3f; 0x11ca7; 0x11cb0; 0x11cb3;[39m
     [38;5;2m15280[39m: [38;5;2m      106:      0x11cb6; 0x11d36; 0x11d3a; 0x11d3d; 0x11d45; 0x11d47; 0x11d91; 0x11d95;[39m
     [38;5;2m15281[39m: [38;5;2m      107:      0x11d97; 0x11ef4; 0x13438; 0x16af4; 0x16b36; 0x16f4f; 0x16f92; 0x16fe3;[39m
     [38;5;2m15282[39m: [38;5;2m      108:      0x16fe4; 0x16ff1; 0x187f7; 0x18cd5; 0x18d08; 0x1b11e; 0x1b152; 0x1b167;[39m
     [38;5;2m15283[39m: [38;5;2m      109:      0x1b2fb; 0x1bc9e; 0x1bca3; 0x1d169; 0x1d182; 0x1d18b; 0x1d1ad; 0x1d244;[39m
     [38;5;2m15284[39m: [38;5;2m      110:      0x1da36; 0x1da6c; 0x1da75; 0x1da84; 0x1da9f; 0x1daaf; 0x1e006; 0x1e018;[39m
     [38;5;2m15285[39m: [38;5;2m      111:      0x1e021; 0x1e024; 0x1e02a; 0x1e136; 0x1e2ef; 0x1e8d6; 0x1e94a; 0x1f004;[39m
     [38;5;2m15286[39m: [38;5;2m      112:      0x1f0cf; 0x1f18e; 0x1f19a; 0x1f202; 0x1f23b; 0x1f248; 0x1f251; 0x1f265;[39m
     [38;5;2m15287[39m: [38;5;2m      113:      0x1f320; 0x1f335; 0x1f37c; 0x1f393; 0x1f3ca; 0x1f3d3; 0x1f3f0; 0x1f3f4;[39m
     [38;5;2m15288[39m: [38;5;2m      114:      0x1f43e; 0x1f440; 0x1f4fc; 0x1f53d; 0x1f54e; 0x1f567; 0x1f57a; 0x1f596;[39m
     [38;5;2m15289[39m: [38;5;2m      115:      0x1f5a4; 0x1f64f; 0x1f6c5; 0x1f6cc; 0x1f6d2; 0x1f6d7; 0x1f6ec; 0x1f6fc;[39m
     [38;5;2m15290[39m: [38;5;2m      116:      0x1f7eb; 0x1f93a; 0x1f945; 0x1f978; 0x1f9cb; 0x1f9ff; 0x1fa74; 0x1fa7a;[39m
     [38;5;2m15291[39m: [38;5;2m      117:      0x1fa86; 0x1faa8; 0x1fab6; 0x1fac2; 0x1fad6; 0x2fffd; 0x3fffd; 0xe0001;[39m
     [38;5;2m15292[39m: [38;5;2m      118:      0xe007f; 0xe01ef|],[39m
     [38;5;2m15293[39m: [38;5;2m      119:    [|0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15294[39m: [38;5;2m      120:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15295[39m: [38;5;2m      121:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15296[39m: [38;5;2m      122:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15297[39m: [38;5;2m      123:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 0; 0; 0;[39m
     [38;5;2m15298[39m: [38;5;2m      124:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15299[39m: [38;5;2m      125:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15300[39m: [38;5;2m      126:      0; 0; 0; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m15301[39m: [38;5;2m      127:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 2; 2; 2; 2; 2; 0; 2;[39m
     [38;5;2m15302[39m: [38;5;2m      128:      2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15303[39m: [38;5;2m      129:      0; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2;[39m
     [38;5;2m15304[39m: [38;5;2m      130:      2; 0; 0; 2; 0; 2; 2; 2; 0; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15305[39m: [38;5;2m      131:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15306[39m: [38;5;2m      132:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15307[39m: [38;5;2m      133:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m15308[39m: [38;5;2m      134:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 0;[39m
     [38;5;2m15309[39m: [38;5;2m      135:      0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 2; 2;[39m
     [38;5;2m15310[39m: [38;5;2m      136:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m15311[39m: [38;5;2m      137:      2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0|])[39m
     [38;5;2m15312[39m: [38;5;2m      138: [39m
     [38;5;2m15313[39m: [38;5;2m      139: let s000 = ""[39m
     [38;5;2m15314[39m: [38;5;2m      140: let s001 = "\000\000\000\000\000\000\000\000\000\000\b\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15315[39m: [38;5;2m      141: let s002 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000"[39m
     [38;5;2m15316[39m: [38;5;2m      142: let s003 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15317[39m: [38;5;2m      143: let s004 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15318[39m: [38;5;2m      144: let s005 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15319[39m: [38;5;2m      145: let s006 = "\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15320[39m: [38;5;2m      146: let s007 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002"[39m
     [38;5;2m15321[39m: [38;5;2m      147: let s008 = "\016\002\002\016\002\002\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15322[39m: [38;5;2m      148: let s009 = "\011\011\011\011\011\011\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15323[39m: [38;5;2m      149: let s010 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15324[39m: [38;5;2m      150: let s011 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\011\016\002\002\002\002\002\002\016\016\002\002\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15325[39m: [38;5;2m      151: let s012 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15326[39m: [38;5;2m      152: let s013 = "\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15327[39m: [38;5;2m      153: let s014 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15328[39m: [38;5;2m      154: let s015 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m15329[39m: [38;5;2m      155: let s016 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\016\002\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15330[39m: [38;5;2m      156: let s017 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15331[39m: [38;5;2m      157: let s018 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\011\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15332[39m: [38;5;2m      158: let s019 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\016\r\r"[39m
     [38;5;2m15333[39m: [38;5;2m      159: let s020 = "\r\002\002\002\002\002\002\002\002\r\r\r\r\002\r\r\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15334[39m: [38;5;2m      160: let s021 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\r"[39m
     [38;5;2m15335[39m: [38;5;2m      161: let s022 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016"[39m
     [38;5;2m15336[39m: [38;5;2m      162: let s023 = "\016\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r"[39m
     [38;5;2m15337[39m: [38;5;2m      163: let s024 = "\r\002\002\016\016\016\016\002\002\016\016\002\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15338[39m: [38;5;2m      164: let s025 = "\r\002\002\002\002\002\016\002\002\r\016\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002"[39m
     [38;5;2m15339[39m: [38;5;2m      165: let s026 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002"[39m
     [38;5;2m15340[39m: [38;5;2m      166: let s027 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15341[39m: [38;5;2m      167: let s028 = "\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r"[39m
     [38;5;2m15342[39m: [38;5;2m      168: let s029 = "\002\r\r\016\016\016\r\r\r\016\r\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15343[39m: [38;5;2m      169: let s030 = "\002\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002"[39m
     [38;5;2m15344[39m: [38;5;2m      170: let s031 = "\002\r\r\r\r\016\002\002\002\016\002\002\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15345[39m: [38;5;2m      171: let s032 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002"[39m
     [38;5;2m15346[39m: [38;5;2m      172: let s033 = "\r\r\002\r\r\016\002\r\r\016\r\r\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15347[39m: [38;5;2m      173: let s034 = "\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\002\r"[39m
     [38;5;2m15348[39m: [38;5;2m      174: let s035 = "\r\002\002\002\002\016\r\r\r\016\r\r\r\002\011\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15349[39m: [38;5;2m      175: let s036 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15350[39m: [38;5;2m      176: let s037 = "\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\002\r\r\002\002\002\016\002\016\r\r\r\r\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15351[39m: [38;5;2m      177: let s038 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m15352[39m: [38;5;2m      178: let s039 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15353[39m: [38;5;2m      179: let s040 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m15354[39m: [38;5;2m      180: let s041 = "\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15355[39m: [38;5;2m      181: let s042 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\016\002\016\016\016\016\r\r"[39m
     [38;5;2m15356[39m: [38;5;2m      182: let s043 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m15357[39m: [38;5;2m      183: let s044 = "\002\002\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m15358[39m: [38;5;2m      184: let s045 = "\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15359[39m: [38;5;2m      185: let s046 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\r\002\002\002\002\002\002\016\002\002\r\r\002\002\016"[39m
     [38;5;2m15360[39m: [38;5;2m      186: let s047 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15361[39m: [38;5;2m      187: let s048 = "\016\016\002\016\r\002\002\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15362[39m: [38;5;2m      188: let s049 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007"[39m
     [38;5;2m15363[39m: [38;5;2m      189: let s050 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m15364[39m: [38;5;2m      190: let s051 = "\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m15365[39m: [38;5;2m      191: let s052 = "\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m15366[39m: [38;5;2m      192: let s053 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15367[39m: [38;5;2m      193: let s054 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15368[39m: [38;5;2m      194: let s055 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15369[39m: [38;5;2m      195: let s056 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\002\002\002\002\002\002\002\r\r"[39m
     [38;5;2m15370[39m: [38;5;2m      196: let s057 = "\r\r\r\r\r\r\002\r\r\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15371[39m: [38;5;2m      197: let s058 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15372[39m: [38;5;2m      198: let s059 = "\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15373[39m: [38;5;2m      199: let s060 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\r\r\002\002\r\r\r\016\016\016\016\r\r\002\r\r\r\r\r\r\002\002\002\016\016\016\016"[39m
     [38;5;2m15374[39m: [38;5;2m      200: let s061 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15375[39m: [38;5;2m      201: let s062 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\r\002\002\002\002\002\002\002\016\002\016\002\016\016\002\002\002\002\002\002\002\002\r\r\r\r\r\r\002\002\002\002\002\002\002\002\002\002\016\016\002"[39m
     [38;5;2m15376[39m: [38;5;2m      202: let s063 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15377[39m: [38;5;2m      203: let s064 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15378[39m: [38;5;2m      204: let s065 = "\002\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\r\002\r\r\r"[39m
     [38;5;2m15379[39m: [38;5;2m      205: let s066 = "\r\r\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15380[39m: [38;5;2m      206: let s067 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\r\r\002\002\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15381[39m: [38;5;2m      207: let s068 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\r\r\r\002\r\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15382[39m: [38;5;2m      208: let s069 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\002\002\002\002\002\002\002\002\r\r\002\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15383[39m: [38;5;2m      209: let s070 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\002\002\002\002\002\016\016\016\016\002\016\016\016\016\016\016\002\016\016\r\002\002\016\016\016\016\016\016"[39m
     [38;5;2m15384[39m: [38;5;2m      210: let s071 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002"[39m
     [38;5;2m15385[39m: [38;5;2m      211: let s072 = "\016\016\016\016\016\016\016\016\016\016\016\000\002\017\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15386[39m: [38;5;2m      212: let s073 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15387[39m: [38;5;2m      213: let s074 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15388[39m: [38;5;2m      214: let s075 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15389[39m: [38;5;2m      215: let s076 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m15390[39m: [38;5;2m      216: let s077 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15391[39m: [38;5;2m      217: let s078 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15392[39m: [38;5;2m      218: let s079 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15393[39m: [38;5;2m      219: let s080 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\016\016"[39m
     [38;5;2m15394[39m: [38;5;2m      220: let s081 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15395[39m: [38;5;2m      221: let s082 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15396[39m: [38;5;2m      222: let s083 = "\016\016\002\016\016\016\002\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\r\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15397[39m: [38;5;2m      223: let s084 = "\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m15398[39m: [38;5;2m      224: let s085 = "\r\r\r\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m15399[39m: [38;5;2m      225: let s086 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15400[39m: [38;5;2m      226: let s087 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\016\016\016"[39m
     [38;5;2m15401[39m: [38;5;2m      227: let s088 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\r\r\002\002\r\r"[39m
     [38;5;2m15402[39m: [38;5;2m      228: let s089 = "\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15403[39m: [38;5;2m      229: let s090 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\r\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15404[39m: [38;5;2m      230: let s091 = "\016\016\016\002\016\016\016\016\016\016\016\016\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016"[39m
     [38;5;2m15405[39m: [38;5;2m      231: let s092 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002\002\016\016\002\002\016\016\016\016\016\002\002"[39m
     [38;5;2m15406[39m: [38;5;2m      232: let s093 = "\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\r\r\016\016\016\016\016\r\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15407[39m: [38;5;2m      233: let s094 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\r\r\002\r\r\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15408[39m: [38;5;2m      234: let s095 = "\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n"[39m
     [38;5;2m15409[39m: [38;5;2m      235: let s096 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m15410[39m: [38;5;2m      236: let s097 = "\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m15411[39m: [38;5;2m      237: let s098 = "\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n"[39m
     [38;5;2m15412[39m: [38;5;2m      238: let s099 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m15413[39m: [38;5;2m      239: let s100 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m15414[39m: [38;5;2m      240: let s101 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m15415[39m: [38;5;2m      241: let s102 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\016\016\016\016\016\016\016\016\016\016\016\016\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m15416[39m: [38;5;2m      242: let s103 = "\015\015\015\015\015\015\015\016\016\016\016\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\016\016\016\016"[39m
     [38;5;2m15417[39m: [38;5;2m      243: let s104 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15418[39m: [38;5;2m      244: let s105 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15419[39m: [38;5;2m      245: let s106 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016"[39m
     [38;5;2m15420[39m: [38;5;2m      246: let s107 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m15421[39m: [38;5;2m      247: let s108 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15422[39m: [38;5;2m      248: let s109 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m15423[39m: [38;5;2m      249: let s110 = "\016\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\002"[39m
     [38;5;2m15424[39m: [38;5;2m      250: let s111 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15425[39m: [38;5;2m      251: let s112 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15426[39m: [38;5;2m      252: let s113 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15427[39m: [38;5;2m      253: let s114 = "\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15428[39m: [38;5;2m      254: let s115 = "\r\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15429[39m: [38;5;2m      255: let s116 = "\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m15430[39m: [38;5;2m      256: let s117 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\r\r\002\002\016\016\011\016\016"[39m
     [38;5;2m15431[39m: [38;5;2m      257: let s118 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15432[39m: [38;5;2m      258: let s119 = "\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15433[39m: [38;5;2m      259: let s120 = "\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15434[39m: [38;5;2m      260: let s121 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m15435[39m: [38;5;2m      261: let s122 = "\r\016\011\011\016\016\016\016\016\002\002\002\002\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15436[39m: [38;5;2m      262: let s123 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\r\r\002\r\002\002\016\016\016\016\016\016\002\016"[39m
     [38;5;2m15437[39m: [38;5;2m      263: let s124 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15438[39m: [38;5;2m      264: let s125 = "\002\r\r\r\r\016\016\r\r\016\016\r\r\r\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\r\r\016\016\002\002\002\002\002\002\002\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15439[39m: [38;5;2m      265: let s126 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15440[39m: [38;5;2m      266: let s127 = "\r\r\002\002\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15441[39m: [38;5;2m      267: let s128 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\002\002\r\002\r\r\002\r\002"[39m
     [38;5;2m15442[39m: [38;5;2m      268: let s129 = "\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15443[39m: [38;5;2m      269: let s130 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\016\016\r\r\r\r\002\002\r\002"[39m
     [38;5;2m15444[39m: [38;5;2m      270: let s131 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15445[39m: [38;5;2m      271: let s132 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\r\r\002\r\002"[39m
     [38;5;2m15446[39m: [38;5;2m      272: let s133 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\r\r\002\002\002\002\002\002\r\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15447[39m: [38;5;2m      273: let s134 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\002\002\002\002\r\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15448[39m: [38;5;2m      274: let s135 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016"[39m
     [38;5;2m15449[39m: [38;5;2m      275: let s136 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\r\r\016\r\r\016\016\002\002\r\002\011"[39m
     [38;5;2m15450[39m: [38;5;2m      276: let s137 = "\r\011\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15451[39m: [38;5;2m      277: let s138 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\016\016\002\002\r\r\r\r\002\016\016\016\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15452[39m: [38;5;2m      278: let s139 = "\016\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\011\002\002\002\002\016"[39m
     [38;5;2m15453[39m: [38;5;2m      279: let s140 = "\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15454[39m: [38;5;2m      280: let s141 = "\016\016\016\016\011\011\011\011\011\011\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15455[39m: [38;5;2m      281: let s142 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\002\002\002\016\002\002\002\002\002\002\r\002"[39m
     [38;5;2m15456[39m: [38;5;2m      282: let s143 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\r\002\002\002\002\002\002\002\r\002\002\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15457[39m: [38;5;2m      283: let s144 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\002\016\002\002\016\002"[39m
     [38;5;2m15458[39m: [38;5;2m      284: let s145 = "\002\002\002\002\002\002\011\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15459[39m: [38;5;2m      285: let s146 = "\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\016\002\002\016\r\r\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15460[39m: [38;5;2m      286: let s147 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15461[39m: [38;5;2m      287: let s148 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016"[39m
     [38;5;2m15462[39m: [38;5;2m      288: let s149 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15463[39m: [38;5;2m      289: let s150 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15464[39m: [38;5;2m      290: let s151 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m15465[39m: [38;5;2m      291: let s152 = "\r\r\r\r\r\r\r\r\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15466[39m: [38;5;2m      292: let s153 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15467[39m: [38;5;2m      293: let s154 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15468[39m: [38;5;2m      294: let s155 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\002\016\016\016\r\002\002\002\002\002\000\000\000\000\000\000\000\000\002\002\002\002\002"[39m
     [38;5;2m15469[39m: [38;5;2m      295: let s156 = "\002\002\002\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15470[39m: [38;5;2m      296: let s157 = "\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15471[39m: [38;5;2m      297: let s158 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m15472[39m: [38;5;2m      298: let s159 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15473[39m: [38;5;2m      299: let s160 = "\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15474[39m: [38;5;2m      300: let s161 = "\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\002\002\002\002\002\002\002\016\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15475[39m: [38;5;2m      301: let s162 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15476[39m: [38;5;2m      302: let s163 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15477[39m: [38;5;2m      303: let s164 = "\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m15478[39m: [38;5;2m      304: let s165 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012"[39m
     [38;5;2m15479[39m: [38;5;2m      305: let s166 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m15480[39m: [38;5;2m      306: let s167 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m15481[39m: [38;5;2m      307: let s168 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m15482[39m: [38;5;2m      308: let s169 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m15483[39m: [38;5;2m      309: [39m
     [38;5;2m15484[39m: [38;5;2m      310: let grapheme_cluster_boundary =[39m
     [38;5;2m15485[39m: [38;5;2m      311:   [|[|s001; s002; s003; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15486[39m: [38;5;2m      312:       s004; s005; s000; s000; s000; s000; s006; s000; s000; s000; s007; s008;[39m
     [38;5;2m15487[39m: [38;5;2m      313:       s009; s010; s000; s011; s012; s013; s014; s015; s016; s017; s000; s018;[39m
     [38;5;2m15488[39m: [38;5;2m      314:       s019; s020; s021; s022; s023; s024; s023; s025; s026; s027; s028; s029;[39m
     [38;5;2m15489[39m: [38;5;2m      315:       s030; s031; s032; s033; s034; s035; s036; s037; s038; s039; s040; s041;[39m
     [38;5;2m15490[39m: [38;5;2m      316:       s042; s043; s044; s045|];[39m
     [38;5;2m15491[39m: [38;5;2m      317:     [|s046; s047; s048; s000; s049; s050; s051; s052; s000; s000; s000; s000;[39m
     [38;5;2m15492[39m: [38;5;2m      318:       s000; s053; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15493[39m: [38;5;2m      319:       s000; s000; s000; s000; s054; s055; s056; s057; s058; s000; s059; s000;[39m
     [38;5;2m15494[39m: [38;5;2m      320:       s060; s000; s000; s000; s061; s062; s063; s064; s065; s066; s067; s068;[39m
     [38;5;2m15495[39m: [38;5;2m      321:       s069; s000; s000; s070; s000; s000; s000; s071; s000; s000; s000; s000;[39m
     [38;5;2m15496[39m: [38;5;2m      322:       s000; s000; s000; s000|];[39m
     [38;5;2m15497[39m: [38;5;2m      323:     [|s072; s073; s000; s074; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15498[39m: [38;5;2m      324:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15499[39m: [38;5;2m      325:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15500[39m: [38;5;2m      326:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15501[39m: [38;5;2m      327:       s000; s000; s000; s075; s000; s076; s000; s077; s000; s000; s000; s000;[39m
     [38;5;2m15502[39m: [38;5;2m      328:       s000; s000; s000; s000|];[39m
     [38;5;2m15503[39m: [38;5;2m      329:     [|s078; s000; s079; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15504[39m: [38;5;2m      330:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15505[39m: [38;5;2m      331:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15506[39m: [38;5;2m      332:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15507[39m: [38;5;2m      333:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15508[39m: [38;5;2m      334:       s000; s000; s000; s000|];[39m
     [38;5;2m15509[39m: [38;5;2m      335:     [||]; [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m15510[39m: [38;5;2m      336:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15511[39m: [38;5;2m      337:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15512[39m: [38;5;2m      338:       s000; s080; s081; s082; s000; s000; s000; s000; s083; s000; s084; s085;[39m
     [38;5;2m15513[39m: [38;5;2m      339:       s086; s087; s088; s089; s090; s091; s092; s093; s000; s000; s000; s094;[39m
     [38;5;2m15514[39m: [38;5;2m      340:       s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m15515[39m: [38;5;2m      341:       s100; s101; s095; s096|];[39m
     [38;5;2m15516[39m: [38;5;2m      342:     [|s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m15517[39m: [38;5;2m      343:       s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m15518[39m: [38;5;2m      344:       s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097;[39m
     [38;5;2m15519[39m: [38;5;2m      345:       s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m15520[39m: [38;5;2m      346:       s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m15521[39m: [38;5;2m      347:       s101; s095; s096; s097|];[39m
     [38;5;2m15522[39m: [38;5;2m      348:     [|s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m15523[39m: [38;5;2m      349:       s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m15524[39m: [38;5;2m      350:       s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098;[39m
     [38;5;2m15525[39m: [38;5;2m      351:       s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m15526[39m: [38;5;2m      352:       s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m15527[39m: [38;5;2m      353:       s095; s096; s097; s098|];[39m
     [38;5;2m15528[39m: [38;5;2m      354:     [|s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m15529[39m: [38;5;2m      355:       s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m15530[39m: [38;5;2m      356:       s095; s096; s097; s098; s099; s100; s102; s103; s000; s000; s000; s000;[39m
     [38;5;2m15531[39m: [38;5;2m      357:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15532[39m: [38;5;2m      358:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15533[39m: [38;5;2m      359:       s000; s000; s000; s000|];[39m
     [38;5;2m15534[39m: [38;5;2m      360:     [||];[39m
     [38;5;2m15535[39m: [38;5;2m      361:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15536[39m: [38;5;2m      362:       s104; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15537[39m: [38;5;2m      363:       s105; s000; s000; s002; s000; s000; s081; s106; s000; s000; s000; s000;[39m
     [38;5;2m15538[39m: [38;5;2m      364:       s000; s000; s000; s107; s000; s000; s000; s108; s000; s109; s000; s000;[39m
     [38;5;2m15539[39m: [38;5;2m      365:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15540[39m: [38;5;2m      366:       s000; s000; s000; s000|];[39m
     [38;5;2m15541[39m: [38;5;2m      367:     [|s000; s000; s000; s000; s000; s000; s000; s000; s110; s000; s000; s111;[39m
     [38;5;2m15542[39m: [38;5;2m      368:       s000; s000; s000; s000; s000; s000; s000; s000; s112; s000; s000; s000;[39m
     [38;5;2m15543[39m: [38;5;2m      369:       s000; s000; s113; s000; s000; s114; s000; s000; s115; s116; s117; s118;[39m
     [38;5;2m15544[39m: [38;5;2m      370:       s119; s120; s121; s122; s123; s000; s000; s124; s034; s125; s000; s000;[39m
     [38;5;2m15545[39m: [38;5;2m      371:       s126; s127; s128; s129; s000; s000; s130; s131; s132; s064; s133; s000;[39m
     [38;5;2m15546[39m: [38;5;2m      372:       s134; s000; s000; s000|];[39m
     [38;5;2m15547[39m: [38;5;2m      373:     [|s135; s000; s000; s000; s136; s137; s000; s138; s139; s140; s141; s000;[39m
     [38;5;2m15548[39m: [38;5;2m      374:       s000; s000; s000; s000; s142; s000; s143; s000; s144; s145; s146; s000;[39m
     [38;5;2m15549[39m: [38;5;2m      375:       s000; s000; s000; s147; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15550[39m: [38;5;2m      376:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15551[39m: [38;5;2m      377:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15552[39m: [38;5;2m      378:       s000; s000; s000; s000|];[39m
     [38;5;2m15553[39m: [38;5;2m      379:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15554[39m: [38;5;2m      380:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15555[39m: [38;5;2m      381:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15556[39m: [38;5;2m      382:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15557[39m: [38;5;2m      383:       s148; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15558[39m: [38;5;2m      384:       s000; s000; s000; s000|];[39m
     [38;5;2m15559[39m: [38;5;2m      385:     [||]; [||]; [||];[39m
     [38;5;2m15560[39m: [38;5;2m      386:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s149;[39m
     [38;5;2m15561[39m: [38;5;2m      387:       s150; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15562[39m: [38;5;2m      388:       s000; s000; s000; s000; s000; s151; s152; s153; s000; s000; s000; s000;[39m
     [38;5;2m15563[39m: [38;5;2m      389:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15564[39m: [38;5;2m      390:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15565[39m: [38;5;2m      391:       s000; s000; s000; s000|];[39m
     [38;5;2m15566[39m: [38;5;2m      392:     [||]; [||]; [||]; [||];[39m
     [38;5;2m15567[39m: [38;5;2m      393:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15568[39m: [38;5;2m      394:       s000; s000; s000; s000; s000; s000; s154; s000; s000; s000; s000; s000;[39m
     [38;5;2m15569[39m: [38;5;2m      395:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15570[39m: [38;5;2m      396:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15571[39m: [38;5;2m      397:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15572[39m: [38;5;2m      398:       s000; s000; s000; s000|];[39m
     [38;5;2m15573[39m: [38;5;2m      399:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15574[39m: [38;5;2m      400:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15575[39m: [38;5;2m      401:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15576[39m: [38;5;2m      402:       s000; s155; s156; s000; s000; s157; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15577[39m: [38;5;2m      403:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15578[39m: [38;5;2m      404:       s000; s000; s000; s000|];[39m
     [38;5;2m15579[39m: [38;5;2m      405:     [|s000; s000; s000; s000; s000; s000; s000; s000; s158; s159; s160; s000;[39m
     [38;5;2m15580[39m: [38;5;2m      406:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15581[39m: [38;5;2m      407:       s000; s000; s000; s000; s000; s000; s000; s000; s161; s000; s000; s000;[39m
     [38;5;2m15582[39m: [38;5;2m      408:       s150; s000; s000; s000; s000; s000; s000; s162; s000; s000; s000; s000;[39m
     [38;5;2m15583[39m: [38;5;2m      409:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15584[39m: [38;5;2m      410:       s000; s000; s000; s000|];[39m
     [38;5;2m15585[39m: [38;5;2m      411:     [|s000; s000; s000; s163; s000; s164; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15586[39m: [38;5;2m      412:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15587[39m: [38;5;2m      413:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15588[39m: [38;5;2m      414:       s000; s000; s000; s165; s000; s000; s000; s000; s000; s000; s000; s166;[39m
     [38;5;2m15589[39m: [38;5;2m      415:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15590[39m: [38;5;2m      416:       s000; s000; s000; s000|];[39m
     [38;5;2m15591[39m: [38;5;2m      417:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15592[39m: [38;5;2m      418:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15593[39m: [38;5;2m      419:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15594[39m: [38;5;2m      420:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15595[39m: [38;5;2m      421:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15596[39m: [38;5;2m      422:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15597[39m: [38;5;2m      423:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15598[39m: [38;5;2m      424:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15599[39m: [38;5;2m      425:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15600[39m: [38;5;2m      426:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15601[39m: [38;5;2m      427:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15602[39m: [38;5;2m      428:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15603[39m: [38;5;2m      429:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15604[39m: [38;5;2m      430:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15605[39m: [38;5;2m      431:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15606[39m: [38;5;2m      432:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15607[39m: [38;5;2m      433:     [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m15608[39m: [38;5;2m      434:     [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m15609[39m: [38;5;2m      435:     [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15610[39m: [38;5;2m      436:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15611[39m: [38;5;2m      437:       s000; s000; s000; s000; s000; s000; s000; s000; s167; s004; s168; s168;[39m
     [38;5;2m15612[39m: [38;5;2m      438:       s004; s004; s004; s169; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m15613[39m: [38;5;2m      439:       s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m15614[39m: [38;5;2m      440:       s168; s168; s168; s168|];[39m
     [38;5;2m15615[39m: [38;5;2m      441:     [|s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m15616[39m: [38;5;2m      442:       s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m15617[39m: [38;5;2m      443:       s168; s168; s168; s168; s168; s168; s168; s168; s000; s000; s000; s000;[39m
     [38;5;2m15618[39m: [38;5;2m      444:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15619[39m: [38;5;2m      445:       s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m15620[39m: [38;5;2m      446:       s000; s000; s000; s000|]|][39m
     [38;5;2m15621[39m: [38;5;2mAdded regular file ../notty/src/no-uucp/notty_uucp_data.mli:[39m
     [38;5;2m15622[39m: [38;5;2m        1: (* Do not edit.[39m
     [38;5;2m15623[39m: [38;5;2m        2:  *[39m
     [38;5;2m15624[39m: [38;5;2m        3:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m15625[39m: [38;5;2m        4:  * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m15626[39m: [38;5;2m        5:  *[39m
     [38;5;2m15627[39m: [38;5;2m        6:  * Unicode version 13.0.0.[39m
     [38;5;2m15628[39m: [38;5;2m        7:  *)[39m
     [38;5;2m15629[39m: [38;5;2m        8: [39m
     [38;5;2m15630[39m: [38;5;2m        9: (* Uucp.Break.tty_width_hint *)[39m
     [38;5;2m15631[39m: [38;5;2m       10: val tty_width_hint: int array * int array * int array[39m
     [38;5;2m15632[39m: [38;5;2m       11: [39m
     [38;5;2m15633[39m: [38;5;2m       12: (* Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m15634[39m: [38;5;2m       13: val grapheme_cluster_boundary: string array array[39m
     [38;5;2m15635[39m: [38;5;2m       14: [39m
     [38;5;2m15636[39m: [38;5;2mAdded regular file ../notty/src/notty.ml:[39m
     [38;5;2m15637[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m15638[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m15639[39m: [38;5;2m        3: [39m
     [38;5;2m15640[39m: [38;5;2m        4: let invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m15641[39m: [38;5;2m        5: [39m
     [38;5;2m15642[39m: [38;5;2m        6: let (&.) f g x = f (g x)[39m
     [38;5;2m15643[39m: [38;5;2m        7: [39m
     [38;5;2m15644[39m: [38;5;2m        8: let btw (x : int) a b = a <= x && x <= b[39m
     [38;5;2m15645[39m: [38;5;2m        9: let bit n b = b land (1 lsl n) > 0[39m
     [38;5;2m15646[39m: [38;5;2m       10: [39m
     [38;5;2m15647[39m: [38;5;2m       11: let max (a : int) b = if a > b then a else b[39m
     [38;5;2m15648[39m: [38;5;2m       12: let min (a : int) b = if a < b then a else b[39m
     [38;5;2m15649[39m: [38;5;2m       13: [39m
     [38;5;2m15650[39m: [38;5;2m       14: let is_C0 x = x < 0x20 || x = 0x7f[39m
     [38;5;2m15651[39m: [38;5;2m       15: and is_C1 x = 0x80 <= x && x < 0xa0[39m
     [38;5;2m15652[39m: [38;5;2m       16: let is_ctrl x = is_C0 x || is_C1 x[39m
     [38;5;2m15653[39m: [38;5;2m       17: and is_ascii x = x < 0x80[39m
     [38;5;2m15654[39m: [38;5;2m       18: [39m
     [38;5;2m15655[39m: [38;5;2m       19: let rec concatm z (@) xs =[39m
     [38;5;2m15656[39m: [38;5;2m       20:   let rec accum (@) = function[39m
     [38;5;2m15657[39m: [38;5;2m       21:     | []|[_] as xs -> xs[39m
     [38;5;2m15658[39m: [38;5;2m       22:     | a::b::xs -> (a @ b) :: accum (@) xs in[39m
     [38;5;2m15659[39m: [38;5;2m       23:   match xs with [] -> z | [x] -> x | xs -> concatm z (@) (accum (@) xs)[39m
     [38;5;2m15660[39m: [38;5;2m       24: [39m
     [38;5;2m15661[39m: [38;5;2m       25: let rec linspcm z (@) x n f = match n with[39m
     [38;5;2m15662[39m: [38;5;2m       26:   | 0 -> z[39m
     [38;5;2m15663[39m: [38;5;2m       27:   | 1 -> f x[39m
     [38;5;2m15664[39m: [38;5;2m       28:   | _ -> let m = n / 2 in linspcm z (@) x m f @ linspcm z (@) (x + m) (n - m) f[39m
     [38;5;2m15665[39m: [38;5;2m       29: [39m
     [38;5;2m15666[39m: [38;5;2m       30: let memo (type a) ?(hash=Hashtbl.hash) ?(eq=(=)) ~size f =[39m
     [38;5;2m15667[39m: [38;5;2m       31:   let module H = Ephemeron.K1.Make[39m
     [38;5;2m15668[39m: [38;5;2m       32:     (struct type t = a let (hash, equal) = (hash, eq) end) in[39m
     [38;5;2m15669[39m: [38;5;2m       33:   let t = H.create size in fun x ->[39m
     [38;5;2m15670[39m: [38;5;2m       34:     try H.find t x with Not_found -> let y = f x in H.add t x y; y[39m
     [38;5;2m15671[39m: [38;5;2m       35: [39m
     [38;5;2m15672[39m: [38;5;2m       36: module Buffer = struct[39m
     [38;5;2m15673[39m: [38;5;2m       37:   include Buffer[39m
     [38;5;2m15674[39m: [38;5;2m       38:   let buf = Buffer.create 1024[39m
     [38;5;2m15675[39m: [38;5;2m       39:   let mkstring f = f buf; let res = contents buf in reset buf; res[39m
     [38;5;2m15676[39m: [38;5;2m       40:   let add_decimal b = function[39m
     [38;5;2m15677[39m: [38;5;2m       41:     | x when btw x 0 999 ->[39m
     [38;5;2m15678[39m: [38;5;2m       42:         let d1 = x / 100 and d2 = (x mod 100) / 10 and d3 = x mod 10 in[39m
     [38;5;2m15679[39m: [38;5;2m       43:         if d1 > 0 then 0x30 + d1 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m15680[39m: [38;5;2m       44:         if (d1 + d2) > 0 then 0x30 + d2 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m15681[39m: [38;5;2m       45:         0x30 + d3 |> Char.unsafe_chr |> add_char b[39m
     [38;5;2m15682[39m: [38;5;2m       46:     | x -> string_of_int x |> add_string b[39m
     [38;5;2m15683[39m: [38;5;2m       47:   let add_chars b c n = for _ = 1 to n do add_char b c done[39m
     [38;5;2m15684[39m: [38;5;2m       48: end[39m
     [38;5;2m15685[39m: [38;5;2m       49: [39m
     [38;5;2m15686[39m: [38;5;2m       50: module String = struct[39m
     [38;5;2m15687[39m: [38;5;2m       51:   include String[39m
     [38;5;2m15688[39m: [38;5;2m       52:   let sub0cp s i len = if i > 0 || len < length s then sub s i len else s[39m
     [38;5;2m15689[39m: [38;5;2m       53:   let of_chars_rev = function[39m
     [38;5;2m15690[39m: [38;5;2m       54:     | []  -> ""[39m
     [38;5;2m15691[39m: [38;5;2m       55:     | [c] -> String.make 1 c[39m
     [38;5;2m15692[39m: [38;5;2m       56:     | cs  ->[39m
     [38;5;2m15693[39m: [38;5;2m       57:         let n = List.length cs in[39m
     [38;5;2m15694[39m: [38;5;2m       58:         let rec go bs i = Bytes.(function[39m
     [38;5;2m15695[39m: [38;5;2m       59:           | []    -> unsafe_to_string bs[39m
     [38;5;2m15696[39m: [38;5;2m       60:           | x::xs -> unsafe_set bs i x; go bs (pred i) xs[39m
     [38;5;2m15697[39m: [38;5;2m       61:         ) in go (Bytes.create n) (n - 1) cs[39m
     [38;5;2m15698[39m: [38;5;2m       62: end[39m
     [38;5;2m15699[39m: [38;5;2m       63: [39m
     [38;5;2m15700[39m: [38;5;2m       64: module Option = struct[39m
     [38;5;2m15701[39m: [38;5;2m       65: [39m
     [38;5;2m15702[39m: [38;5;2m       66:   let map f = function Some x -> Some (f x) | _ -> None[39m
     [38;5;2m15703[39m: [38;5;2m       67:   let get def = function Some x -> x | _ -> def[39m
     [38;5;2m15704[39m: [38;5;2m       68:   let to_list = function Some x -> [x] | _ -> [][39m
     [38;5;2m15705[39m: [38;5;2m       69:   let (>>|) a f = map f a[39m
     [38;5;2m15706[39m: [38;5;2m       70:   let (>>=) a f = match a with Some x -> f x | _ -> None[39m
     [38;5;2m15707[39m: [38;5;2m       71: end[39m
     [38;5;2m15708[39m: [38;5;2m       72: [39m
     [38;5;2m15709[39m: [38;5;2m       73: module Text = struct[39m
     [38;5;2m15710[39m: [38;5;2m       74: [39m
     [38;5;2m15711[39m: [38;5;2m       75:   let err_ctrl u = invalid_arg "Notty: control char: U+%02X, %S" (Char.code u)[39m
     [38;5;2m15712[39m: [38;5;2m       76:   let err_malformed = invalid_arg "Notty: malformed UTF-8: %s, %S"[39m
     [38;5;2m15713[39m: [38;5;2m       77: [39m
     [38;5;2m15714[39m: [38;5;2m       78:   type t =[39m
     [38;5;2m15715[39m: [38;5;2m       79:     | Ascii of string * int * int[39m
     [38;5;2m15716[39m: [38;5;2m       80:     | Utf8  of string * int array * int * int[39m
     [38;5;2m15717[39m: [38;5;2m       81: [39m
     [38;5;2m15718[39m: [38;5;2m       82:   let equal t1 t2 = match (t1, t2) with[39m
     [38;5;2m15719[39m: [38;5;2m       83:     | (Utf8 (s1, _, i1, n1), Utf8 (s2, _, i2, n2))[39m
     [38;5;2m15720[39m: [38;5;2m       84:     | (Ascii (s1, i1, n1), Ascii (s2, i2, n2)) -> i1 = i2 && n1 = n2 && s1 = s2[39m
     [38;5;2m15721[39m: [38;5;2m       85:     | _ -> false[39m
     [38;5;2m15722[39m: [38;5;2m       86: [39m
     [38;5;2m15723[39m: [38;5;2m       87:   let width = function Utf8 (_, _, _, w) -> w | Ascii (_, _, w)   -> w[39m
     [38;5;2m15724[39m: [38;5;2m       88: [39m
     [38;5;2m15725[39m: [38;5;2m       89:   let empty = Ascii ("", 0, 0)[39m
     [38;5;2m15726[39m: [38;5;2m       90: [39m
     [38;5;2m15727[39m: [38;5;2m       91:   let is_empty t = width t = 0[39m
     [38;5;2m15728[39m: [38;5;2m       92: [39m
     [38;5;2m15729[39m: [38;5;2m       93:   let graphemes str =[39m
     [38;5;2m15730[39m: [38;5;2m       94:     let module Uuseg = Notty_grapheme_cluster in[39m
     [38;5;2m15731[39m: [38;5;2m       95:     let seg = Uuseg.create () in[39m
     [38;5;2m15732[39m: [38;5;2m       96:     let rec f (is, w as acc) i evt =[39m
     [38;5;2m15733[39m: [38;5;2m       97:       match Uuseg.add seg evt with[39m
     [38;5;2m15734[39m: [38;5;2m       98:       | `Await | `End -> acc[39m
     [38;5;2m15735[39m: [38;5;2m       99:       | `Uchar u      -> f (is, w + Notty_uucp.tty_width_hint u) i `Await[39m
     [38;5;2m15736[39m: [38;5;2m      100:       | `Boundary     ->[39m
     [38;5;2m15737[39m: [38;5;2m      101:           let is = match w with 0 -> is | 1 -> i::is | _ -> i::(-1)::is in[39m
     [38;5;2m15738[39m: [38;5;2m      102:           f (is, 0) i `Await in[39m
     [38;5;2m15739[39m: [38;5;2m      103:     let acc = Uutf.String.fold_utf_8 (fun acc i -> function[39m
     [38;5;2m15740[39m: [38;5;2m      104:       | `Malformed err -> err_malformed err str[39m
     [38;5;2m15741[39m: [38;5;2m      105:       | `Uchar _ as u  -> f acc i u[39m
     [38;5;2m15742[39m: [38;5;2m      106:       ) ([0], 0) str in[39m
     [38;5;2m15743[39m: [38;5;2m      107:     f acc (String.length str) `End |> fst |> List.rev |> Array.of_list (*XXX*)[39m
     [38;5;2m15744[39m: [38;5;2m      108: [39m
     [38;5;2m15745[39m: [38;5;2m      109:   let dead = ' '[39m
     [38;5;2m15746[39m: [38;5;2m      110: [39m
     [38;5;2m15747[39m: [38;5;2m      111:   let to_buffer buf = function[39m
     [38;5;2m15748[39m: [38;5;2m      112:     | Ascii (s, off, w)    -> Buffer.add_substring buf s off w[39m
     [38;5;2m15749[39m: [38;5;2m      113:     | Utf8 (s, ix, off, w) ->[39m
     [38;5;2m15750[39m: [38;5;2m      114:         let x1 = match ix.(off) with[39m
     [38;5;2m15751[39m: [38;5;2m      115:           | -1 -> Buffer.add_char buf dead; ix.(off + 1) | x -> x[39m
     [38;5;2m15752[39m: [38;5;2m      116:         and x2 = ix.(off + w) in[39m
     [38;5;2m15753[39m: [38;5;2m      117:         Buffer.add_substring buf s x1 @@[39m
     [38;5;2m15754[39m: [38;5;2m      118:           (if x2 = -1 then ix.(off + w - 1) else x2) - x1;[39m
     [38;5;2m15755[39m: [38;5;2m      119:         if x2 = -1 then Buffer.add_char buf dead[39m
     [38;5;2m15756[39m: [38;5;2m      120: [39m
     [38;5;2m15757[39m: [38;5;2m      121:   let sub t x w =[39m
     [38;5;2m15758[39m: [38;5;2m      122:     let w1 = width t in[39m
     [38;5;2m15759[39m: [38;5;2m      123:     if w = 0 || x >= w1 then empty else[39m
     [38;5;2m15760[39m: [38;5;2m      124:       let w = min w (w1 - x) in[39m
     [38;5;2m15761[39m: [38;5;2m      125:       if w = w1 then t else match t with[39m
     [38;5;2m15762[39m: [38;5;2m      126:         Ascii (s, off, _) -> Ascii (s, off + x, w)[39m
     [38;5;2m15763[39m: [38;5;2m      127:       | Utf8 (s, ix, off, _) -> Utf8 (s, ix, off + x, w)[39m
     [38;5;2m15764[39m: [38;5;2m      128: [39m
     [38;5;2m15765[39m: [38;5;2m      129:   let is_ascii_or_raise_ctrl s =[39m
     [38;5;2m15766[39m: [38;5;2m      130:     let (@!) s i = String.unsafe_get s i |> Char.code in[39m
     [38;5;2m15767[39m: [38;5;2m      131:     let rec go s acc i n =[39m
     [38;5;2m15768[39m: [38;5;2m      132:       if n = 0 then acc else[39m
     [38;5;2m15769[39m: [38;5;2m      133:         let x = s @! i in[39m
     [38;5;2m15770[39m: [38;5;2m      134:         if is_C0 x then[39m
     [38;5;2m15771[39m: [38;5;2m      135:           err_ctrl s.[i] s[39m
     [38;5;2m15772[39m: [38;5;2m      136:         else if x = 0xc2 && n > 1 && is_C1 (s @! (i + 1)) then[39m
     [38;5;2m15773[39m: [38;5;2m      137:           err_ctrl s.[i + 1] s[39m
     [38;5;2m15774[39m: [38;5;2m      138:         else go s (acc && is_ascii x) (i + 1) (n - 1) in[39m
     [38;5;2m15775[39m: [38;5;2m      139:     go s true 0 (String.length s)[39m
     [38;5;2m15776[39m: [38;5;2m      140: [39m
     [38;5;2m15777[39m: [38;5;2m      141:   let of_ascii s = Ascii (s, 0, String.length s)[39m
     [38;5;2m15778[39m: [38;5;2m      142:   and of_unicode s = let x = graphemes s in Utf8 (s, x, 0, Array.length x - 1)[39m
     [38;5;2m15779[39m: [38;5;2m      143:   let of_unicode = memo ~eq:String.equal ~size:128 of_unicode[39m
     [38;5;2m15780[39m: [38;5;2m      144: [39m
     [38;5;2m15781[39m: [38;5;2m      145:   let of_string = function[39m
     [38;5;2m15782[39m: [38;5;2m      146:     | "" -> empty[39m
     [38;5;2m15783[39m: [38;5;2m      147:     | s  -> if is_ascii_or_raise_ctrl s then of_ascii s else of_unicode s[39m
     [38;5;2m15784[39m: [38;5;2m      148: [39m
     [38;5;2m15785[39m: [38;5;2m      149:   let of_uchars ucs = of_string @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m15786[39m: [38;5;2m      150:     Array.iter (Buffer.add_utf_8_uchar buf) ucs[39m
     [38;5;2m15787[39m: [38;5;2m      151: [39m
     [38;5;2m15788[39m: [38;5;2m      152:   let replicateu w u =[39m
     [38;5;2m15789[39m: [38;5;2m      153:     if is_ctrl (Uchar.to_int u) then[39m
     [38;5;2m15790[39m: [38;5;2m      154:       err_ctrl (Uchar.unsafe_to_char u) "<repeated character>"[39m
     [38;5;2m15791[39m: [38;5;2m      155:     else if w < 1 then empty[39m
     [38;5;2m15792[39m: [38;5;2m      156:     else if is_ascii (Uchar.to_int u) then[39m
     [38;5;2m15793[39m: [38;5;2m      157:       of_ascii (String.make w (Uchar.unsafe_to_char u))[39m
     [38;5;2m15794[39m: [38;5;2m      158:     else of_unicode @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m15795[39m: [38;5;2m      159:       for _ = 1 to w do Buffer.add_utf_8_uchar buf u done[39m
     [38;5;2m15796[39m: [38;5;2m      160: [39m
     [38;5;2m15797[39m: [38;5;2m      161:   let replicatec w c = replicateu w (Uchar.of_char c)[39m
     [38;5;2m15798[39m: [38;5;2m      162: end[39m
     [38;5;2m15799[39m: [38;5;2m      163: [39m
     [38;5;2m15800[39m: [38;5;2m      164: module A = struct[39m
     [38;5;2m15801[39m: [38;5;2m      165: [39m
     [38;5;2m15802[39m: [38;5;2m      166:   type color = int[39m
     [38;5;2m15803[39m: [38;5;2m      167:   type style = int[39m
     [38;5;2m15804[39m: [38;5;2m      168:   type t = { fg : color; bg : color; st : style }[39m
     [38;5;2m15805[39m: [38;5;2m      169: [39m
     [38;5;2m15806[39m: [38;5;2m      170:   let equal t1 t2 = t1.fg = t2.fg && t1.bg = t2.bg && t1.st = t2.st[39m
     [38;5;2m15807[39m: [38;5;2m      171:   let unsafe_color_of_int int= int[39m
     [38;5;2m15808[39m: [38;5;2m      172:   let unsafe_style_of_int int= int[39m
     [38;5;2m15809[39m: [38;5;2m      173: [39m
     [38;5;2m15810[39m: [38;5;2m      174:   let black        = 0x01000000[39m
     [38;5;2m15811[39m: [38;5;2m      175:   and red          = 0x01000001[39m
     [38;5;2m15812[39m: [38;5;2m      176:   and green        = 0x01000002[39m
     [38;5;2m15813[39m: [38;5;2m      177:   and yellow       = 0x01000003[39m
     [38;5;2m15814[39m: [38;5;2m      178:   and blue         = 0x01000004[39m
     [38;5;2m15815[39m: [38;5;2m      179:   and magenta      = 0x01000005[39m
     [38;5;2m15816[39m: [38;5;2m      180:   and cyan         = 0x01000006[39m
     [38;5;2m15817[39m: [38;5;2m      181:   and white        = 0x01000007[39m
     [38;5;2m15818[39m: [38;5;2m      182:   and lightblack   = 0x01000008[39m
     [38;5;2m15819[39m: [38;5;2m      183:   and lightred     = 0x01000009[39m
     [38;5;2m15820[39m: [38;5;2m      184:   and lightgreen   = 0x0100000a[39m
     [38;5;2m15821[39m: [38;5;2m      185:   and lightyellow  = 0x0100000b[39m
     [38;5;2m15822[39m: [38;5;2m      186:   and lightblue    = 0x0100000c[39m
     [38;5;2m15823[39m: [38;5;2m      187:   and lightmagenta = 0x0100000d[39m
     [38;5;2m15824[39m: [38;5;2m      188:   and lightcyan    = 0x0100000e[39m
     [38;5;2m15825[39m: [38;5;2m      189:   and lightwhite   = 0x0100000f[39m
     [38;5;2m15826[39m: [38;5;2m      190: [39m
     [38;5;2m15827[39m: [38;5;2m      191:   let tag c = (c land 0x03000000) lsr 24[39m
     [38;5;2m15828[39m: [38;5;2m      192: [39m
     [38;5;2m15829[39m: [38;5;2m      193:   let rgb ~r ~g ~b =[39m
     [38;5;2m15830[39m: [38;5;2m      194:     if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m15831[39m: [38;5;2m      195:       invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m15832[39m: [38;5;2m      196:     else 0x01000000 lor (r * 36 + g * 6 + b + 16)[39m
     [38;5;2m15833[39m: [38;5;2m      197: [39m
     [38;5;2m15834[39m: [38;5;2m      198:   let gray level =[39m
     [38;5;2m15835[39m: [38;5;2m      199:     if level < 0 || level > 23 then[39m
     [38;5;2m15836[39m: [38;5;2m      200:       invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m15837[39m: [38;5;2m      201:     else 0x01000000 lor (level + 232)[39m
     [38;5;2m15838[39m: [38;5;2m      202: [39m
     [38;5;2m15839[39m: [38;5;2m      203:   let rgb_888 ~r ~g ~b =[39m
     [38;5;2m15840[39m: [38;5;2m      204:     if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m15841[39m: [38;5;2m      205:       invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m15842[39m: [38;5;2m      206:     else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m15843[39m: [38;5;2m      207: [39m
     [38;5;2m15844[39m: [38;5;2m      208:   let i x = x land 0xff[39m
     [38;5;2m15845[39m: [38;5;2m      209:   and r x = x lsr 16 land 0xff[39m
     [38;5;2m15846[39m: [38;5;2m      210:   and g x = x lsr 8 land 0xff[39m
     [38;5;2m15847[39m: [38;5;2m      211:   and b x = x land 0xff[39m
     [38;5;2m15848[39m: [38;5;2m      212: [39m
     [38;5;2m15849[39m: [38;5;2m      213:   let bold      = 1[39m
     [38;5;2m15850[39m: [38;5;2m      214:   and italic    = 2[39m
     [38;5;2m15851[39m: [38;5;2m      215:   and underline = 4[39m
     [38;5;2m15852[39m: [38;5;2m      216:   and blink     = 8[39m
     [38;5;2m15853[39m: [38;5;2m      217:   and reverse   = 16[39m
     [38;5;2m15854[39m: [38;5;2m      218: [39m
     [38;5;2m15855[39m: [38;5;2m      219:   let empty = { fg = 0; bg = 0; st = 0 }[39m
     [38;5;2m15856[39m: [38;5;2m      220: [39m
     [38;5;2m15857[39m: [38;5;2m      221:  let (++) a1 a2 =[39m
     [38;5;2m15858[39m: [38;5;2m      222:    if a1 == empty then a2 else if a2 == empty then a1 else[39m
     [38;5;2m15859[39m: [38;5;2m      223:      { fg = (match a2.fg with 0 -> a1.fg | x -> x)[39m
     [38;5;2m15860[39m: [38;5;2m      224:      ; bg = (match a2.bg with 0 -> a1.bg | x -> x)[39m
     [38;5;2m15861[39m: [38;5;2m      225:      ; st = a1.st lor a2.st }[39m
     [38;5;2m15862[39m: [38;5;2m      226: [39m
     [38;5;2m15863[39m: [38;5;2m      227:   let fg fg = { empty with fg }[39m
     [38;5;2m15864[39m: [38;5;2m      228:   let bg bg = { empty with bg }[39m
     [38;5;2m15865[39m: [38;5;2m      229:   let st st = { empty with st }[39m
     [38;5;2m15866[39m: [38;5;2m      230: end[39m
     [38;5;2m15867[39m: [38;5;2m      231: [39m
     [38;5;2m15868[39m: [38;5;2m      232: module I = struct[39m
     [38;5;2m15869[39m: [38;5;2m      233: [39m
     [38;5;2m15870[39m: [38;5;2m      234:   type dim = int * int[39m
     [38;5;2m15871[39m: [38;5;2m      235: [39m
     [38;5;2m15872[39m: [38;5;2m      236:   type t =[39m
     [38;5;2m15873[39m: [38;5;2m      237:     | Empty[39m
     [38;5;2m15874[39m: [38;5;2m      238:     | Segment  of A.t * Text.t[39m
     [38;5;2m15875[39m: [38;5;2m      239:     | Hcompose of (t * t) * dim[39m
     [38;5;2m15876[39m: [38;5;2m      240:     | Vcompose of (t * t) * dim[39m
     [38;5;2m15877[39m: [38;5;2m      241:     | Zcompose of (t * t) * dim[39m
     [38;5;2m15878[39m: [38;5;2m      242:     | Hcrop    of (t * int * int) * dim[39m
     [38;5;2m15879[39m: [38;5;2m      243:     | Vcrop    of (t * int * int) * dim[39m
     [38;5;2m15880[39m: [38;5;2m      244:     | Void     of dim[39m
     [38;5;2m15881[39m: [38;5;2m      245: [39m
     [38;5;2m15882[39m: [38;5;2m      246:   let width = function[39m
     [38;5;2m15883[39m: [38;5;2m      247:     | Empty -> 0[39m
     [38;5;2m15884[39m: [38;5;2m      248:     | Segment (_, text) -> Text.width text[39m
     [38;5;2m15885[39m: [38;5;2m      249:     | Hcompose (_, (w, _)) -> w[39m
     [38;5;2m15886[39m: [38;5;2m      250:     | Vcompose (_, (w, _)) -> w[39m
     [38;5;2m15887[39m: [38;5;2m      251:     | Zcompose (_, (w, _)) -> w[39m
     [38;5;2m15888[39m: [38;5;2m      252:     | Hcrop    (_, (w, _)) -> w[39m
     [38;5;2m15889[39m: [38;5;2m      253:     | Vcrop    (_, (w, _)) -> w[39m
     [38;5;2m15890[39m: [38;5;2m      254:     | Void         (w, _)  -> w [@@inline][39m
     [38;5;2m15891[39m: [38;5;2m      255: [39m
     [38;5;2m15892[39m: [38;5;2m      256:   let height = function[39m
     [38;5;2m15893[39m: [38;5;2m      257:     | Empty -> 0[39m
     [38;5;2m15894[39m: [38;5;2m      258:     | Segment _ -> 1[39m
     [38;5;2m15895[39m: [38;5;2m      259:     | Hcompose (_, (_, h)) -> h[39m
     [38;5;2m15896[39m: [38;5;2m      260:     | Vcompose (_, (_, h)) -> h[39m
     [38;5;2m15897[39m: [38;5;2m      261:     | Zcompose (_, (_, h)) -> h[39m
     [38;5;2m15898[39m: [38;5;2m      262:     | Hcrop    (_, (_, h)) -> h[39m
     [38;5;2m15899[39m: [38;5;2m      263:     | Vcrop    (_, (_, h)) -> h[39m
     [38;5;2m15900[39m: [38;5;2m      264:     | Void         (_, h)  -> h [@@inline][39m
     [38;5;2m15901[39m: [38;5;2m      265: [39m
     [38;5;2m15902[39m: [38;5;2m      266:   let equal t1 t2 =[39m
     [38;5;2m15903[39m: [38;5;2m      267:     let rec eq t1 t2 = match (t1, t2) with[39m
     [38;5;2m15904[39m: [38;5;2m      268:       | (Empty, Empty) -> true[39m
     [38;5;2m15905[39m: [38;5;2m      269:       | (Segment (a1, t1), Segment (a2, t2)) ->[39m
     [38;5;2m15906[39m: [38;5;2m      270:           A.equal a1 a2 && Text.equal t1 t2[39m
     [38;5;2m15907[39m: [38;5;2m      271:       | (Hcompose ((a, b), _), Hcompose ((c, d), _))[39m
     [38;5;2m15908[39m: [38;5;2m      272:       | (Vcompose ((a, b), _), Vcompose ((c, d), _))[39m
     [38;5;2m15909[39m: [38;5;2m      273:       | (Zcompose ((a, b), _), Zcompose ((c, d), _)) -> eq a c && eq b d[39m
     [38;5;2m15910[39m: [38;5;2m      274:       | (Hcrop ((a, i1, n1), _), Hcrop ((b, i2, n2), _))[39m
     [38;5;2m15911[39m: [38;5;2m      275:       | (Vcrop ((a, i1, n1), _), Vcrop ((b, i2, n2), _)) ->[39m
     [38;5;2m15912[39m: [38;5;2m      276:           i1 = i2 && n1 = n2 && eq a b[39m
     [38;5;2m15913[39m: [38;5;2m      277:       | (Void (a, b), Void (c, d)) -> a = c && b = d[39m
     [38;5;2m15914[39m: [38;5;2m      278:       | _ -> false in[39m
     [38;5;2m15915[39m: [38;5;2m      279:     width t1 = width t2 && height t1 = height t2 && eq t1 t2[39m
     [38;5;2m15916[39m: [38;5;2m      280: [39m
     [38;5;2m15917[39m: [38;5;2m      281:   let empty = Empty[39m
     [38;5;2m15918[39m: [38;5;2m      282: [39m
     [38;5;2m15919[39m: [38;5;2m      283:   let (<|>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m15920[39m: [38;5;2m      284:     | (_, Empty) -> t1[39m
     [38;5;2m15921[39m: [38;5;2m      285:     | (Empty, _) -> t2[39m
     [38;5;2m15922[39m: [38;5;2m      286:     | _          ->[39m
     [38;5;2m15923[39m: [38;5;2m      287:         let w = width t1 + width t2[39m
     [38;5;2m15924[39m: [38;5;2m      288:         and h = max (height t1) (height t2) in[39m
     [38;5;2m15925[39m: [38;5;2m      289:         Hcompose ((t1, t2), (w, h))[39m
     [38;5;2m15926[39m: [38;5;2m      290: [39m
     [38;5;2m15927[39m: [38;5;2m      291:   let (<->) t1 t2 = match (t1, t2) with[39m
     [38;5;2m15928[39m: [38;5;2m      292:     | (_, Empty) -> t1[39m
     [38;5;2m15929[39m: [38;5;2m      293:     | (Empty, _) -> t2[39m
     [38;5;2m15930[39m: [38;5;2m      294:     | _          ->[39m
     [38;5;2m15931[39m: [38;5;2m      295:         let w = max (width t1) (width t2)[39m
     [38;5;2m15932[39m: [38;5;2m      296:         and h = height t1 + height t2 in[39m
     [38;5;2m15933[39m: [38;5;2m      297:         Vcompose ((t1, t2), (w, h))[39m
     [38;5;2m15934[39m: [38;5;2m      298: [39m
     [38;5;2m15935[39m: [38;5;2m      299:   let (</>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m15936[39m: [38;5;2m      300:     | (_, Empty) -> t1[39m
     [38;5;2m15937[39m: [38;5;2m      301:     | (Empty, _) -> t2[39m
     [38;5;2m15938[39m: [38;5;2m      302:     | _          ->[39m
     [38;5;2m15939[39m: [38;5;2m      303:         let w = max (width t1) (width t2)[39m
     [38;5;2m15940[39m: [38;5;2m      304:         and h = max (height t1) (height t2) in[39m
     [38;5;2m15941[39m: [38;5;2m      305:         Zcompose ((t1, t2), (w, h))[39m
     [38;5;2m15942[39m: [38;5;2m      306: [39m
     [38;5;2m15943[39m: [38;5;2m      307:   let void w h =[39m
     [38;5;2m15944[39m: [38;5;2m      308:     if w < 1 && h < 1 then Empty else Void (max 0 w, max 0 h)[39m
     [38;5;2m15945[39m: [38;5;2m      309: [39m
     [38;5;2m15946[39m: [38;5;2m      310:   let lincropinv crop void (++) init fini img =[39m
     [38;5;2m15947[39m: [38;5;2m      311:     match (init >= 0, fini >= 0) with[39m
     [38;5;2m15948[39m: [38;5;2m      312:     | (true, true) -> crop init fini img[39m
     [38;5;2m15949[39m: [38;5;2m      313:     | (true, _   ) -> crop init 0 img ++ void (-fini)[39m
     [38;5;2m15950[39m: [38;5;2m      314:     | (_   , true) -> void (-init) ++ crop 0 fini img[39m
     [38;5;2m15951[39m: [38;5;2m      315:     | _            -> void (-init) ++ img ++ void (-fini)[39m
     [38;5;2m15952[39m: [38;5;2m      316: [39m
     [38;5;2m15953[39m: [38;5;2m      317:   let hcrop =[39m
     [38;5;2m15954[39m: [38;5;2m      318:     let ctor left right img =[39m
     [38;5;2m15955[39m: [38;5;2m      319:       let h = height img and w = width img - left - right in[39m
     [38;5;2m15956[39m: [38;5;2m      320:       if w > 0 then Hcrop ((img, left, right), (w, h)) else void w h[39m
     [38;5;2m15957[39m: [38;5;2m      321:     in lincropinv ctor (fun w -> void w 0) (<|>)[39m
     [38;5;2m15958[39m: [38;5;2m      322: [39m
     [38;5;2m15959[39m: [38;5;2m      323:   let vcrop =[39m
     [38;5;2m15960[39m: [38;5;2m      324:     let ctor top bottom img =[39m
     [38;5;2m15961[39m: [38;5;2m      325:       let w = width img and h = height img - top - bottom in[39m
     [38;5;2m15962[39m: [38;5;2m      326:       if h > 0 then Vcrop ((img, top, bottom), (w, h)) else void w h[39m
     [38;5;2m15963[39m: [38;5;2m      327:     in lincropinv ctor (void 0) (<->)[39m
     [38;5;2m15964[39m: [38;5;2m      328: [39m
     [38;5;2m15965[39m: [38;5;2m      329:   let crop ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m15966[39m: [38;5;2m      330:     let img = if l <> 0 || r <> 0 then hcrop l r img else img in[39m
     [38;5;2m15967[39m: [38;5;2m      331:     if t <> 0 || b <> 0 then vcrop t b img else img[39m
     [38;5;2m15968[39m: [38;5;2m      332: [39m
     [38;5;2m15969[39m: [38;5;2m      333:   let hpad left right img = hcrop (-left) (-right) img[39m
     [38;5;2m15970[39m: [38;5;2m      334: [39m
     [38;5;2m15971[39m: [38;5;2m      335:   let vpad top bottom img = vcrop (-top) (-bottom) img[39m
     [38;5;2m15972[39m: [38;5;2m      336: [39m
     [38;5;2m15973[39m: [38;5;2m      337:   let pad ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m15974[39m: [38;5;2m      338:     crop ~l:(-l) ~r:(-r) ~t:(-t) ~b:(-b) img[39m
     [38;5;2m15975[39m: [38;5;2m      339: [39m
     [38;5;2m15976[39m: [38;5;2m      340:   let hcat = concatm empty (<|>)[39m
     [38;5;2m15977[39m: [38;5;2m      341: [39m
     [38;5;2m15978[39m: [38;5;2m      342:   let vcat = concatm empty (<->)[39m
     [38;5;2m15979[39m: [38;5;2m      343: [39m
     [38;5;2m15980[39m: [38;5;2m      344:   let zcat xs = List.fold_right (</>) xs empty[39m
     [38;5;2m15981[39m: [38;5;2m      345: [39m
     [38;5;2m15982[39m: [38;5;2m      346:   let text attr tx =[39m
     [38;5;2m15983[39m: [38;5;2m      347:     if Text.is_empty tx then void 0 1 else Segment (attr, tx)[39m
     [38;5;2m15984[39m: [38;5;2m      348: [39m
     [38;5;2m15985[39m: [38;5;2m      349:   let string attr s = text attr (Text.of_string s)[39m
     [38;5;2m15986[39m: [38;5;2m      350: [39m
     [38;5;2m15987[39m: [38;5;2m      351:   let uchars attr a = text attr (Text.of_uchars a)[39m
     [38;5;2m15988[39m: [38;5;2m      352: [39m
     [38;5;2m15989[39m: [38;5;2m      353:   let tabulate m n f =[39m
     [38;5;2m15990[39m: [38;5;2m      354:     let m = max m 0 and n = max n 0 in[39m
     [38;5;2m15991[39m: [38;5;2m      355:     linspcm empty (<->) 0 n (fun y -> linspcm empty (<|>) 0 m (fun x -> f x y))[39m
     [38;5;2m15992[39m: [38;5;2m      356: [39m
     [38;5;2m15993[39m: [38;5;2m      357:   let chars ctor attr c w h =[39m
     [38;5;2m15994[39m: [38;5;2m      358:     if w < 1 || h < 1 then void w h else[39m
     [38;5;2m15995[39m: [38;5;2m      359:       let line = text attr (ctor w c) in tabulate 1 h (fun _ _ -> line)[39m
     [38;5;2m15996[39m: [38;5;2m      360: [39m
     [38;5;2m15997[39m: [38;5;2m      361:   let char  = chars Text.replicatec[39m
     [38;5;2m15998[39m: [38;5;2m      362:   let uchar = chars Text.replicateu[39m
     [38;5;2m15999[39m: [38;5;2m      363: [39m
     [38;5;2m16000[39m: [38;5;2m      364:   let hsnap ?(align=`Middle) w img =[39m
     [38;5;2m16001[39m: [38;5;2m      365:     let off = width img - w in match align with[39m
     [38;5;2m16002[39m: [38;5;2m      366:       | `Left   -> hcrop 0 off img[39m
     [38;5;2m16003[39m: [38;5;2m      367:       | `Right  -> hcrop off 0 img[39m
     [38;5;2m16004[39m: [38;5;2m      368:       | `Middle -> let w1 = off / 2 in hcrop w1 (off - w1) img[39m
     [38;5;2m16005[39m: [38;5;2m      369: [39m
     [38;5;2m16006[39m: [38;5;2m      370:   let vsnap ?(align=`Middle) h img =[39m
     [38;5;2m16007[39m: [38;5;2m      371:     let off = height img - h in match align with[39m
     [38;5;2m16008[39m: [38;5;2m      372:       | `Top    -> vcrop 0 off img[39m
     [38;5;2m16009[39m: [38;5;2m      373:       | `Bottom -> vcrop off 0 img[39m
     [38;5;2m16010[39m: [38;5;2m      374:       | `Middle -> let h1 = off / 2 in vcrop h1 (off - h1) img[39m
     [38;5;2m16011[39m: [38;5;2m      375: [39m
     [38;5;2m16012[39m: [38;5;2m      376:   module Fmt = struct[39m
     [38;5;2m16013[39m: [38;5;2m      377: [39m
     [38;5;2m16014[39m: [38;5;2m      378:     open Format[39m
     [38;5;2m16015[39m: [38;5;2m      379: [39m
     [38;5;2m16016[39m: [38;5;2m      380:     type stag += Attr of A.t[39m
     [38;5;2m16017[39m: [38;5;2m      381: [39m
     [38;5;2m16018[39m: [38;5;2m      382:     let push r x = r := x :: !r[39m
     [38;5;2m16019[39m: [38;5;2m      383:     let pop r = r := (match !r with _::xs -> xs | _ -> [])[39m
     [38;5;2m16020[39m: [38;5;2m      384:     let top_a r = match !r with a::_ -> a | _ -> A.empty[39m
     [38;5;2m16021[39m: [38;5;2m      385: [39m
     [38;5;2m16022[39m: [38;5;2m      386:     let create () =[39m
     [38;5;2m16023[39m: [38;5;2m      387:       let img, line, attr = ref empty, ref empty, ref [] in[39m
     [38;5;2m16024[39m: [38;5;2m      388:       let fmt = formatter_of_out_functions {[39m
     [38;5;2m16025[39m: [38;5;2m      389:           out_flush = (fun () ->[39m
     [38;5;2m16026[39m: [38;5;2m      390:             img := !img <-> !line; line := empty; attr := [])[39m
     [38;5;2m16027[39m: [38;5;2m      391:         ; out_newline = (fun () ->[39m
     [38;5;2m16028[39m: [38;5;2m      392:             img := !img <-> !line; line := void 0 1)[39m
     [38;5;2m16029[39m: [38;5;2m      393:         ; out_string = (fun s i n ->[39m
     [38;5;2m16030[39m: [38;5;2m      394:             line := !line <|> string (top_a attr) String.(sub0cp s i n))[39m
     [38;5;2m16031[39m: [38;5;2m      395:         (* Not entirely clear; either or both could be void: *)[39m
     [38;5;2m16032[39m: [38;5;2m      396:         ; out_spaces = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m16033[39m: [38;5;2m      397:         ; out_indent = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m16034[39m: [38;5;2m      398:       } in[39m
     [38;5;2m16035[39m: [38;5;2m      399:       pp_set_formatter_stag_functions fmt {[39m
     [38;5;2m16036[39m: [38;5;2m      400:         (pp_get_formatter_stag_functions fmt ()) with[39m
     [38;5;2m16037[39m: [38;5;2m      401:             mark_open_stag =[39m
     [38;5;2m16038[39m: [38;5;2m      402:               (function Attr a -> push attr A.(top_a attr ++ a); "" | _ -> "")[39m
     [38;5;2m16039[39m: [38;5;2m      403:           ; mark_close_stag = (fun _ -> pop attr; "") };[39m
     [38;5;2m16040[39m: [38;5;2m      404:       pp_set_mark_tags fmt true;[39m
     [38;5;2m16041[39m: [38;5;2m      405:       fmt, fun () -> let i = !img in img := empty; line := empty; attr := []; i[39m
     [38;5;2m16042[39m: [38;5;2m      406: [39m
     [38;5;2m16043[39m: [38;5;2m      407:     let ppf, reset = create ()[39m
     [38;5;2m16044[39m: [38;5;2m      408: [39m
     [38;5;2m16045[39m: [38;5;2m      409:     let kstrf ?(attr = A.empty) ?(w = 1000000) k format =[39m
     [38;5;2m16046[39m: [38;5;2m      410:       let m = ref 0 in[39m
     [38;5;2m16047[39m: [38;5;2m      411:       let f1 _ () =[39m
     [38;5;2m16048[39m: [38;5;2m      412:         m := pp_get_margin ppf ();[39m
     [38;5;2m16049[39m: [38;5;2m      413:         pp_set_margin ppf w;[39m
     [38;5;2m16050[39m: [38;5;2m      414:         pp_open_stag ppf (Attr attr)[39m
     [38;5;2m16051[39m: [38;5;2m      415:       and k _ =[39m
     [38;5;2m16052[39m: [38;5;2m      416:         pp_print_flush ppf ();[39m
     [38;5;2m16053[39m: [38;5;2m      417:         pp_set_margin ppf !m;[39m
     [38;5;2m16054[39m: [38;5;2m      418:         reset () |> k[39m
     [38;5;2m16055[39m: [38;5;2m      419:       in kfprintf k ppf ("%a" ^^ format) f1 ()[39m
     [38;5;2m16056[39m: [38;5;2m      420: [39m
     [38;5;2m16057[39m: [38;5;2m      421:     let strf ?attr ?w format = kstrf ?attr ?w (fun i -> i) format[39m
     [38;5;2m16058[39m: [38;5;2m      422: [39m
     [38;5;2m16059[39m: [38;5;2m      423:     let attr attr f fmt x =[39m
     [38;5;2m16060[39m: [38;5;2m      424:       pp_open_stag fmt (Attr attr); f fmt x; pp_close_stag fmt ()[39m
     [38;5;2m16061[39m: [38;5;2m      425:   end[39m
     [38;5;2m16062[39m: [38;5;2m      426: [39m
     [38;5;2m16063[39m: [38;5;2m      427:   let kstrf, strf, pp_attr = Fmt.(kstrf, strf, attr)[39m
     [38;5;2m16064[39m: [38;5;2m      428: end[39m
     [38;5;2m16065[39m: [38;5;2m      429: [39m
     [38;5;2m16066[39m: [38;5;2m      430: module Operation = struct[39m
     [38;5;2m16067[39m: [38;5;2m      431: [39m
     [38;5;2m16068[39m: [38;5;2m      432:   type t =[39m
     [38;5;2m16069[39m: [38;5;2m      433:     End[39m
     [38;5;2m16070[39m: [38;5;2m      434:   | Skip of int * t[39m
     [38;5;2m16071[39m: [38;5;2m      435:   | Text of A.t * Text.t * t[39m
     [38;5;2m16072[39m: [38;5;2m      436: [39m
     [38;5;2m16073[39m: [38;5;2m      437:   let skip n k = if n = 0 then k else match k with[39m
     [38;5;2m16074[39m: [38;5;2m      438:       End         -> End[39m
     [38;5;2m16075[39m: [38;5;2m      439:     | Skip (m, k) -> Skip (m + n, k)[39m
     [38;5;2m16076[39m: [38;5;2m      440:     | _           -> Skip (n, k) [@@inline][39m
     [38;5;2m16077[39m: [38;5;2m      441: [39m
     [38;5;2m16078[39m: [38;5;2m      442:   let rec scan x w row i k =[39m
     [38;5;2m16079[39m: [38;5;2m      443:     let open I in match i with[39m
     [38;5;2m16080[39m: [38;5;2m      444: [39m
     [38;5;2m16081[39m: [38;5;2m      445:     | Empty | Void _ -> skip w k[39m
     [38;5;2m16082[39m: [38;5;2m      446: [39m
     [38;5;2m16083[39m: [38;5;2m      447:     | Segment _ when row > 0 -> skip w k[39m
     [38;5;2m16084[39m: [38;5;2m      448:     | Segment (attr, text) ->[39m
     [38;5;2m16085[39m: [38;5;2m      449:         let t  = Text.sub text x w in[39m
     [38;5;2m16086[39m: [38;5;2m      450:         let w1 = Text.width t in[39m
     [38;5;2m16087[39m: [38;5;2m      451:         let p  = if w > w1 then skip (w - w1) k else k in[39m
     [38;5;2m16088[39m: [38;5;2m      452:         if w1 > 0 then Text (attr, t, p) else p[39m
     [38;5;2m16089[39m: [38;5;2m      453: [39m
     [38;5;2m16090[39m: [38;5;2m      454:     | Hcompose ((i1, i2), _) ->[39m
     [38;5;2m16091[39m: [38;5;2m      455:         let w1 = width i1[39m
     [38;5;2m16092[39m: [38;5;2m      456:         and w2 = width i2 in[39m
     [38;5;2m16093[39m: [38;5;2m      457:         if x >= w1 + w2 then skip w k else[39m
     [38;5;2m16094[39m: [38;5;2m      458:         if x >= w1 then scan (x - w1) w row i2 k else[39m
     [38;5;2m16095[39m: [38;5;2m      459:         if x + w <= w1 then scan x w row i1 k else[39m
     [38;5;2m16096[39m: [38;5;2m      460:           scan x (w1 - x) row i1 @@ scan 0 (w - w1 + x) row i2 @@ k[39m
     [38;5;2m16097[39m: [38;5;2m      461: [39m
     [38;5;2m16098[39m: [38;5;2m      462:     | Vcompose ((i1, i2), _) ->[39m
     [38;5;2m16099[39m: [38;5;2m      463:         let h1 = height i1[39m
     [38;5;2m16100[39m: [38;5;2m      464:         and h2 = height i2 in[39m
     [38;5;2m16101[39m: [38;5;2m      465:         if row >= h1 + h2 then skip w k else[39m
     [38;5;2m16102[39m: [38;5;2m      466:         if row >= h1 then scan x w (row - h1) i2 k else scan x w row i1 k[39m
     [38;5;2m16103[39m: [38;5;2m      467: [39m
     [38;5;2m16104[39m: [38;5;2m      468:     | Zcompose ((i1, i2), _) ->[39m
     [38;5;2m16105[39m: [38;5;2m      469:         let rec stitch x w row i = function[39m
     [38;5;2m16106[39m: [38;5;2m      470:           | End -> scan x w row i End[39m
     [38;5;2m16107[39m: [38;5;2m      471:           | Text (a, t, ops) as opss ->[39m
     [38;5;2m16108[39m: [38;5;2m      472:               let w1 = Text.width t in[39m
     [38;5;2m16109[39m: [38;5;2m      473:               if w1 >= w then opss else[39m
     [38;5;2m16110[39m: [38;5;2m      474:                 Text (a, t, stitch (x + w1) (w - w1) row i ops)[39m
     [38;5;2m16111[39m: [38;5;2m      475:           | Skip (w1, ops) ->[39m
     [38;5;2m16112[39m: [38;5;2m      476:               scan x w1 row i @@[39m
     [38;5;2m16113[39m: [38;5;2m      477:                 if w1 >= w then ops else stitch (x + w1) (w - w1) row i ops[39m
     [38;5;2m16114[39m: [38;5;2m      478:         in stitch x w row i2 @@ scan x w row i1 @@ k[39m
     [38;5;2m16115[39m: [38;5;2m      479: [39m
     [38;5;2m16116[39m: [38;5;2m      480:     | Hcrop ((i, left, _), (w1, _)) ->[39m
     [38;5;2m16117[39m: [38;5;2m      481:         if x >= w1 then skip w k else[39m
     [38;5;2m16118[39m: [38;5;2m      482:         if x + w <= w1 then scan (x + left) w row i k else[39m
     [38;5;2m16119[39m: [38;5;2m      483:           scan (x + left) (w1 - x) row i @@ skip (w - w1 + x) k[39m
     [38;5;2m16120[39m: [38;5;2m      484: [39m
     [38;5;2m16121[39m: [38;5;2m      485:     | Vcrop ((i, top, _), (_, h1)) ->[39m
     [38;5;2m16122[39m: [38;5;2m      486:         if row < h1 then scan x w (top + row) i k else skip w k[39m
     [38;5;2m16123[39m: [38;5;2m      487: [39m
     [38;5;2m16124[39m: [38;5;2m      488:   let of_image (x, y) (w, h) i =[39m
     [38;5;2m16125[39m: [38;5;2m      489:     List.init h (fun off -> scan x (x + w) (y + off) i End)[39m
     [38;5;2m16126[39m: [38;5;2m      490: end[39m
     [38;5;2m16127[39m: [38;5;2m      491: [39m
     [38;5;2m16128[39m: [38;5;2m      492: module Cap = struct[39m
     [38;5;2m16129[39m: [38;5;2m      493: [39m
     [38;5;2m16130[39m: [38;5;2m      494:   type op = Buffer.t -> unit[39m
     [38;5;2m16131[39m: [38;5;2m      495: [39m
     [38;5;2m16132[39m: [38;5;2m      496:   let (&) op1 op2 buf = op1 buf; op2 buf[39m
     [38;5;2m16133[39m: [38;5;2m      497: [39m
     [38;5;2m16134[39m: [38;5;2m      498:   type t = {[39m
     [38;5;2m16135[39m: [38;5;2m      499:     skip    : int -> op[39m
     [38;5;2m16136[39m: [38;5;2m      500:   ; sgr     : A.t -> op[39m
     [38;5;2m16137[39m: [38;5;2m      501:   ; newline : op[39m
     [38;5;2m16138[39m: [38;5;2m      502:   ; clreol  : op[39m
     [38;5;2m16139[39m: [38;5;2m      503:   ; cursvis : bool -> op[39m
     [38;5;2m16140[39m: [38;5;2m      504:   ; cursat  : int -> int -> op[39m
     [38;5;2m16141[39m: [38;5;2m      505:   ; cubcuf  : int -> op[39m
     [38;5;2m16142[39m: [38;5;2m      506:   ; cuucud  : int -> op[39m
     [38;5;2m16143[39m: [38;5;2m      507:   ; cr      : op[39m
     [38;5;2m16144[39m: [38;5;2m      508:   ; altscr  : bool -> op[39m
     [38;5;2m16145[39m: [38;5;2m      509:   ; mouse   : bool -> op[39m
     [38;5;2m16146[39m: [38;5;2m      510:   ; bpaste  : bool -> op[39m
     [38;5;2m16147[39m: [38;5;2m      511:   }[39m
     [38;5;2m16148[39m: [38;5;2m      512: [39m
     [38;5;2m16149[39m: [38;5;2m      513:   let ((<|), (<.), (<!)) = Buffer.(add_string, add_char, add_decimal)[39m
     [38;5;2m16150[39m: [38;5;2m      514: [39m
     [38;5;2m16151[39m: [38;5;2m      515:   let sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m16152[39m: [38;5;2m      516: [39m
     [38;5;2m16153[39m: [38;5;2m      517:   let sgr { A.fg; bg; st } buf =[39m
     [38;5;2m16154[39m: [38;5;2m      518:     buf <| "\x1b[0";[39m
     [38;5;2m16155[39m: [38;5;2m      519:     let rgb888 buf x =[39m
     [38;5;2m16156[39m: [38;5;2m      520:       buf <! A.r x; buf <. ';'; buf <! A.g x; buf <. ';'; buf <! A.b x in[39m
     [38;5;2m16157[39m: [38;5;2m      521:     ( match A.tag fg with[39m
     [38;5;2m16158[39m: [38;5;2m      522:         0 -> ()[39m
     [38;5;2m16159[39m: [38;5;2m      523:       | 1 -> let c = A.i fg in[39m
     [38;5;2m16160[39m: [38;5;2m      524:              if c < 8  then ( buf <. ';'; buf <! (c + 30) )[39m
     [38;5;2m16161[39m: [38;5;2m      525:              else if c < 16 then ( buf <. ';'; buf <! (c + 82) )[39m
     [38;5;2m16162[39m: [38;5;2m      526:              else ( buf <| ";38;5;"; buf <! c )[39m
     [38;5;2m16163[39m: [38;5;2m      527:       | _ -> buf <| ";38;2;"; rgb888 buf fg );[39m
     [38;5;2m16164[39m: [38;5;2m      528:     ( match A.tag bg with[39m
     [38;5;2m16165[39m: [38;5;2m      529:         0 -> ()[39m
     [38;5;2m16166[39m: [38;5;2m      530:       | 1 -> let c = A.i bg in[39m
     [38;5;2m16167[39m: [38;5;2m      531:              if c < 8  then ( buf <. ';'; buf <! (c + 40) )[39m
     [38;5;2m16168[39m: [38;5;2m      532:              else if c < 16 then ( buf <. ';'; buf <! (c + 92) )[39m
     [38;5;2m16169[39m: [38;5;2m      533:              else ( buf <| ";48;5;"; buf <! c )[39m
     [38;5;2m16170[39m: [38;5;2m      534:       | _ -> buf <| ";48;2;"; rgb888 buf bg );[39m
     [38;5;2m16171[39m: [38;5;2m      535:     if st <> 0 then[39m
     [38;5;2m16172[39m: [38;5;2m      536:       ( let rec go f xs = match (f, xs) with[39m
     [38;5;2m16173[39m: [38;5;2m      537:           | (0, _) | (_, []) -> ()[39m
     [38;5;2m16174[39m: [38;5;2m      538:           | (_, x::xs) -> if f land 1 > 0 then buf <| x; go (f lsr 1) xs in[39m
     [38;5;2m16175[39m: [38;5;2m      539:         go st sts );[39m
     [38;5;2m16176[39m: [38;5;2m      540:     buf <. 'm'[39m
     [38;5;2m16177[39m: [38;5;2m      541: [39m
     [38;5;2m16178[39m: [38;5;2m      542:   let ansi = {[39m
     [38;5;2m16179[39m: [38;5;2m      543:       skip    = (fun n b -> b <| "\x1b[0m"; Buffer.add_chars b ' ' n)[39m
     [38;5;2m16180[39m: [38;5;2m      544:     ; newline = (fun b -> b <| "\x1bE")[39m
     [38;5;2m16181[39m: [38;5;2m      545:     ; altscr  = (fun x b -> b <| if x then "\x1b[?1049h" else "\x1b[?1049l")[39m
     [38;5;2m16182[39m: [38;5;2m      546:     ; cursat  = (fun w h b -> b <| "\x1b["; b <! h; b <. ';'; b <! w; b <. 'H')[39m
     [38;5;2m16183[39m: [38;5;2m      547:     ; cubcuf  = (fun x b -> b <| "\x1b["; b <! abs x; b <. if x < 0 then 'D' else 'C')[39m
     [38;5;2m16184[39m: [38;5;2m      548:     ; cuucud  = (fun y b -> b <| "\x1b["; b <! abs y; b <. if y < 0 then 'A' else 'B')[39m
     [38;5;2m16185[39m: [38;5;2m      549:     ; cr      = (fun b -> b <| "\x1b[1G")[39m
     [38;5;2m16186[39m: [38;5;2m      550:     ; clreol  = (fun b -> b <| "\x1b[K")[39m
     [38;5;2m16187[39m: [38;5;2m      551:     ; cursvis = (fun x b -> b <| if x then "\x1b[34h\x1b[?25h" else "\x1b[?25l")[39m
     [38;5;2m16188[39m: [38;5;2m      552:     ; mouse   = (fun x b -> b <| if x then "\x1b[?1000;1002;1005;1015;1006h"[39m
     [38;5;2m16189[39m: [38;5;2m      553:                                       else "\x1b[?1000;1002;1005;1015;1006l")[39m
     [38;5;2m16190[39m: [38;5;2m      554:     ; bpaste  = (fun x b -> b <| if x then "\x1b[?2004h" else "\x1b[?2004l")[39m
     [38;5;2m16191[39m: [38;5;2m      555:     ; sgr }[39m
     [38;5;2m16192[39m: [38;5;2m      556: [39m
     [38;5;2m16193[39m: [38;5;2m      557:   let no0 _     = ()[39m
     [38;5;2m16194[39m: [38;5;2m      558:   and no1 _ _   = ()[39m
     [38;5;2m16195[39m: [38;5;2m      559:   and no2 _ _ _ = ()[39m
     [38;5;2m16196[39m: [38;5;2m      560: [39m
     [38;5;2m16197[39m: [38;5;2m      561:   let dumb = {[39m
     [38;5;2m16198[39m: [38;5;2m      562:       skip    = (fun n b -> Buffer.add_chars b ' ' n)[39m
     [38;5;2m16199[39m: [38;5;2m      563:     ; newline = (fun b -> b <| "\n")[39m
     [38;5;2m16200[39m: [38;5;2m      564:     ; altscr  = no1[39m
     [38;5;2m16201[39m: [38;5;2m      565:     ; cursat  = no2[39m
     [38;5;2m16202[39m: [38;5;2m      566:     ; cubcuf  = no1[39m
     [38;5;2m16203[39m: [38;5;2m      567:     ; cuucud  = no1[39m
     [38;5;2m16204[39m: [38;5;2m      568:     ; cr      = no0[39m
     [38;5;2m16205[39m: [38;5;2m      569:     ; clreol  = no0[39m
     [38;5;2m16206[39m: [38;5;2m      570:     ; cursvis = no1[39m
     [38;5;2m16207[39m: [38;5;2m      571:     ; sgr     = no1[39m
     [38;5;2m16208[39m: [38;5;2m      572:     ; mouse   = no1[39m
     [38;5;2m16209[39m: [38;5;2m      573:     ; bpaste  = no1[39m
     [38;5;2m16210[39m: [38;5;2m      574:     }[39m
     [38;5;2m16211[39m: [38;5;2m      575: [39m
     [38;5;2m16212[39m: [38;5;2m      576:   let erase cap buf = cap.sgr A.empty buf; cap.clreol buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m16213[39m: [38;5;2m      577:   let cursat0 cap w h = cap.cursat (max w 0 + 1) (max h 0 + 1)[39m
     [38;5;2m16214[39m: [38;5;2m      578: end[39m
     [38;5;2m16215[39m: [38;5;2m      579: [39m
     [38;5;2m16216[39m: [38;5;2m      580: module Render = struct[39m
     [38;5;2m16217[39m: [38;5;2m      581: [39m
     [38;5;2m16218[39m: [38;5;2m      582:   open Cap[39m
     [38;5;2m16219[39m: [38;5;2m      583:   open Operation[39m
     [38;5;2m16220[39m: [38;5;2m      584: [39m
     [38;5;2m16221[39m: [38;5;2m      585:   let skip_op cap buf n = cap.skip n buf[39m
     [38;5;2m16222[39m: [38;5;2m      586:   let text_op cap buf a x = cap.sgr a buf; Text.to_buffer buf x[39m
     [38;5;2m16223[39m: [38;5;2m      587: [39m
     [38;5;2m16224[39m: [38;5;2m      588:   let rec line cap buf = function[39m
     [38;5;2m16225[39m: [38;5;2m      589:     End              -> erase cap buf[39m
     [38;5;2m16226[39m: [38;5;2m      590:   | Skip (n,    End) -> erase cap buf; skip_op cap buf n[39m
     [38;5;2m16227[39m: [38;5;2m      591:   | Text (a, x, End) -> erase cap buf; text_op cap buf a x[39m
     [38;5;2m16228[39m: [38;5;2m      592:   | Skip (n,    ops) -> skip_op cap buf n; line cap buf ops[39m
     [38;5;2m16229[39m: [38;5;2m      593:   | Text (a, x, ops) -> text_op cap buf a x; line cap buf ops[39m
     [38;5;2m16230[39m: [38;5;2m      594: [39m
     [38;5;2m16231[39m: [38;5;2m      595:   let rec lines cap buf = function[39m
     [38;5;2m16232[39m: [38;5;2m      596:     []      -> ()[39m
     [38;5;2m16233[39m: [38;5;2m      597:   | [ln]    -> line cap buf ln; cap.sgr A.empty buf[39m
     [38;5;2m16234[39m: [38;5;2m      598:   | ln::lns -> line cap buf ln; cap.newline buf; lines cap buf lns[39m
     [38;5;2m16235[39m: [38;5;2m      599: [39m
     [38;5;2m16236[39m: [38;5;2m      600:   let to_buffer buf cap off dim img =[39m
     [38;5;2m16237[39m: [38;5;2m      601:     Operation.of_image off dim img |> lines cap buf[39m
     [38;5;2m16238[39m: [38;5;2m      602: [39m
     [38;5;2m16239[39m: [38;5;2m      603:   let pp cap ppf img =[39m
     [38;5;2m16240[39m: [38;5;2m      604:     let open Format in[39m
     [38;5;2m16241[39m: [38;5;2m      605:     let buf = Buffer.create (I.width img * 2) in[39m
     [38;5;2m16242[39m: [38;5;2m      606:     let h, w = I.(height img, width img |> min (pp_get_margin ppf ())) in[39m
     [38;5;2m16243[39m: [38;5;2m      607:     let img = I.(img </> vpad (h - 1) 0 (char A.empty ' ' w 1)) in[39m
     [38;5;2m16244[39m: [38;5;2m      608:     pp_open_vbox ppf 0;[39m
     [38;5;2m16245[39m: [38;5;2m      609:     for y = 0 to h - 1 do[39m
     [38;5;2m16246[39m: [38;5;2m      610:       Buffer.clear buf; to_buffer buf cap (0, y) (w, 1) img;[39m
     [38;5;2m16247[39m: [38;5;2m      611:       pp_print_as ppf w (Buffer.contents buf);[39m
     [38;5;2m16248[39m: [38;5;2m      612:       if y < h - 1 then pp_print_cut ppf ()[39m
     [38;5;2m16249[39m: [38;5;2m      613:     done;[39m
     [38;5;2m16250[39m: [38;5;2m      614:     pp_close_box ppf ()[39m
     [38;5;2m16251[39m: [38;5;2m      615: [39m
     [38;5;2m16252[39m: [38;5;2m      616:   let pp_image = pp Cap.ansi[39m
     [38;5;2m16253[39m: [38;5;2m      617:   let pp_attr ppf a =[39m
     [38;5;2m16254[39m: [38;5;2m      618:     let string_ = I.string A.empty in[39m
     [38;5;2m16255[39m: [38;5;2m      619:     pp_image ppf I.(string_ "<" <|> string a "ATTR" <|> string_ ">")[39m
     [38;5;2m16256[39m: [38;5;2m      620: end[39m
     [38;5;2m16257[39m: [38;5;2m      621: [39m
     [38;5;2m16258[39m: [38;5;2m      622: module Unescape = struct[39m
     [38;5;2m16259[39m: [38;5;2m      623: [39m
     [38;5;2m16260[39m: [38;5;2m      624:   type special = [[39m
     [38;5;2m16261[39m: [38;5;2m      625:     `Escape[39m
     [38;5;2m16262[39m: [38;5;2m      626:   | `Enter[39m
     [38;5;2m16263[39m: [38;5;2m      627:   | `Tab[39m
     [38;5;2m16264[39m: [38;5;2m      628:   | `Backspace[39m
     [38;5;2m16265[39m: [38;5;2m      629:   | `Insert[39m
     [38;5;2m16266[39m: [38;5;2m      630:   | `Delete[39m
     [38;5;2m16267[39m: [38;5;2m      631:   | `Home | `End[39m
     [38;5;2m16268[39m: [38;5;2m      632:   | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m16269[39m: [38;5;2m      633:   | `Page of [ `Up | `Down ][39m
     [38;5;2m16270[39m: [38;5;2m      634:   | `Function of int[39m
     [38;5;2m16271[39m: [38;5;2m      635:   ][39m
     [38;5;2m16272[39m: [38;5;2m      636: [39m
     [38;5;2m16273[39m: [38;5;2m      637:   type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m16274[39m: [38;5;2m      638: [39m
     [38;5;2m16275[39m: [38;5;2m      639:   type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m16276[39m: [38;5;2m      640: [39m
     [38;5;2m16277[39m: [38;5;2m      641:   type key = [ special | `Uchar of Uchar.t  | `ASCII of char ] * mods[39m
     [38;5;2m16278[39m: [38;5;2m      642: [39m
     [38;5;2m16279[39m: [38;5;2m      643:   type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m16280[39m: [38;5;2m      644: [39m
     [38;5;2m16281[39m: [38;5;2m      645:   type paste = [ `Start | `End ][39m
     [38;5;2m16282[39m: [38;5;2m      646: [39m
     [38;5;2m16283[39m: [38;5;2m      647:   type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m16284[39m: [38;5;2m      648: [39m
     [38;5;2m16285[39m: [38;5;2m      649:   type esc =[39m
     [38;5;2m16286[39m: [38;5;2m      650:     C0    of char[39m
     [38;5;2m16287[39m: [38;5;2m      651:   | C1    of char[39m
     [38;5;2m16288[39m: [38;5;2m      652:   | SS2   of char[39m
     [38;5;2m16289[39m: [38;5;2m      653:   | CSI   of string * int list * char[39m
     [38;5;2m16290[39m: [38;5;2m      654:   | Esc_M of int * int * int[39m
     [38;5;2m16291[39m: [38;5;2m      655:   | Uchar of Uchar.t[39m
     [38;5;2m16292[39m: [38;5;2m      656: [39m
     [38;5;2m16293[39m: [38;5;2m      657:   let uchar = function `Uchar u -> u | `ASCII c -> Uchar.of_char c[39m
     [38;5;2m16294[39m: [38;5;2m      658: [39m
     [38;5;2m16295[39m: [38;5;2m      659:   let csi =[39m
     [38;5;2m16296[39m: [38;5;2m      660:     let open Option in[39m
     [38;5;2m16297[39m: [38;5;2m      661:     let rec priv acc = function[39m
     [38;5;2m16298[39m: [38;5;2m      662:       | x::xs when btw x 0x3c 0x3f -> priv (Char.unsafe_chr x::acc) xs[39m
     [38;5;2m16299[39m: [38;5;2m      663:       | xs                         -> param (String.of_chars_rev acc) None [] xs[39m
     [38;5;2m16300[39m: [38;5;2m      664:     and param prv p ps = function[39m
     [38;5;2m16301[39m: [38;5;2m      665:       | x::xs when btw x 0x30 0x39 -> param prv (Some (get 0 p * 10 + x - 0x30)) ps xs[39m
     [38;5;2m16302[39m: [38;5;2m      666:       | 0x3b::xs                   -> param prv None (get 0 p :: ps) xs[39m
     [38;5;2m16303[39m: [38;5;2m      667:       | xs                         -> code prv (List.rev (to_list p @ ps)) xs[39m
     [38;5;2m16304[39m: [38;5;2m      668:     and code prv ps = function (* Conflate two classes because urxvt... *)[39m
     [38;5;2m16305[39m: [38;5;2m      669:       | x::xs when btw x 0x20 0x2f || btw x 0x40 0x7e ->[39m
     [38;5;2m16306[39m: [38;5;2m      670:           Some (CSI (prv, ps, (Char.chr x)), xs)[39m
     [38;5;2m16307[39m: [38;5;2m      671:       | _ -> None in[39m
     [38;5;2m16308[39m: [38;5;2m      672:     priv [][39m
     [38;5;2m16309[39m: [38;5;2m      673: [39m
     [38;5;2m16310[39m: [38;5;2m      674:   let rec demux =[39m
     [38;5;2m16311[39m: [38;5;2m      675:     let chr = Char.chr in function[39m
     [38;5;2m16312[39m: [38;5;2m      676:     | 0x1b::0x5b::0x4d::a::b::c::xs -> Esc_M (a, b, c) :: demux xs[39m
     [38;5;2m16313[39m: [38;5;2m      677:     | 0x1b::0x5b::xs | 0x9b::xs ->[39m
     [38;5;2m16314[39m: [38;5;2m      678:         let (r, xs) = csi xs |> Option.get (C1 '\x5b', xs) in r :: demux xs[39m
     [38;5;2m16315[39m: [38;5;2m      679:     | 0x1b::0x4f::x::xs | 0x8f::x::xs[39m
     [38;5;2m16316[39m: [38;5;2m      680:         when is_ascii x                 -> SS2 (chr x) :: demux xs[39m
     [38;5;2m16317[39m: [38;5;2m      681:     | 0x1b::x::xs when is_C1 (x + 0x40) -> C1 (chr x) :: demux xs[39m
     [38;5;2m16318[39m: [38;5;2m      682:     | x::xs when is_C1 x                -> C1 (chr (x - 0x40)) :: demux xs[39m
     [38;5;2m16319[39m: [38;5;2m      683:     | x::xs when is_C0 x                -> C0 (chr x) :: demux xs[39m
     [38;5;2m16320[39m: [38;5;2m      684:     | x::xs -> Uchar (Uchar.unsafe_of_int x) :: demux xs[39m
     [38;5;2m16321[39m: [38;5;2m      685:     | [] -> [][39m
     [38;5;2m16322[39m: [38;5;2m      686: [39m
     [38;5;2m16323[39m: [38;5;2m      687:   let xtrm_mod_flags = function[39m
     [38;5;2m16324[39m: [38;5;2m      688:     | 2 -> Some [`Shift][39m
     [38;5;2m16325[39m: [38;5;2m      689:     | 3 -> Some [`Meta][39m
     [38;5;2m16326[39m: [38;5;2m      690:     | 4 -> Some [`Shift; `Meta][39m
     [38;5;2m16327[39m: [38;5;2m      691:     | 5 -> Some [`Ctrl][39m
     [38;5;2m16328[39m: [38;5;2m      692:     | 6 -> Some [`Shift; `Ctrl][39m
     [38;5;2m16329[39m: [38;5;2m      693:     | 7 -> Some [`Meta; `Ctrl][39m
     [38;5;2m16330[39m: [38;5;2m      694:     | 8 -> Some [`Shift; `Meta; `Ctrl][39m
     [38;5;2m16331[39m: [38;5;2m      695:     | _ -> None[39m
     [38;5;2m16332[39m: [38;5;2m      696: [39m
     [38;5;2m16333[39m: [38;5;2m      697:   let mods_xtrm = function[39m
     [38;5;2m16334[39m: [38;5;2m      698:     | [1;p] -> xtrm_mod_flags p[39m
     [38;5;2m16335[39m: [38;5;2m      699:     | []    -> Some [][39m
     [38;5;2m16336[39m: [38;5;2m      700:     | _     -> None[39m
     [38;5;2m16337[39m: [38;5;2m      701: [39m
     [38;5;2m16338[39m: [38;5;2m      702:   let mods_rxvt = function[39m
     [38;5;2m16339[39m: [38;5;2m      703:     | '~' -> Some [][39m
     [38;5;2m16340[39m: [38;5;2m      704:     | '$' -> Some [`Shift][39m
     [38;5;2m16341[39m: [38;5;2m      705:     | '^' -> Some [`Ctrl][39m
     [38;5;2m16342[39m: [38;5;2m      706:     | '@' -> Some [`Ctrl; `Shift][39m
     [38;5;2m16343[39m: [38;5;2m      707:     | _ -> None[39m
     [38;5;2m16344[39m: [38;5;2m      708: [39m
     [38;5;2m16345[39m: [38;5;2m      709:   let mods_common ps code = match (ps, code) with[39m
     [38;5;2m16346[39m: [38;5;2m      710:     | ([], '~')  -> Some [][39m
     [38;5;2m16347[39m: [38;5;2m      711:     | ([], c)    -> mods_rxvt c[39m
     [38;5;2m16348[39m: [38;5;2m      712:     | ([p], '~') -> xtrm_mod_flags p[39m
     [38;5;2m16349[39m: [38;5;2m      713:     | _          -> None[39m
     [38;5;2m16350[39m: [38;5;2m      714: [39m
     [38;5;2m16351[39m: [38;5;2m      715:   let mouse_p p =[39m
     [38;5;2m16352[39m: [38;5;2m      716:     let btn = match p land 3 with[39m
     [38;5;2m16353[39m: [38;5;2m      717:       | 0 when bit 6 p -> `Scroll `Up[39m
     [38;5;2m16354[39m: [38;5;2m      718:       | 0              -> `Left[39m
     [38;5;2m16355[39m: [38;5;2m      719:       | 1 when bit 6 p -> `Scroll `Down[39m
     [38;5;2m16356[39m: [38;5;2m      720:       | 1              -> `Middle[39m
     [38;5;2m16357[39m: [38;5;2m      721:       | 2 when bit 6 p -> `ALL (* `Scroll `Left *)[39m
     [38;5;2m16358[39m: [38;5;2m      722:       | 2              -> `Right[39m
     [38;5;2m16359[39m: [38;5;2m      723:       | 3 when bit 6 p -> `ALL (* `Scroll `Right *)[39m
     [38;5;2m16360[39m: [38;5;2m      724:       | _              -> `ALL[39m
     [38;5;2m16361[39m: [38;5;2m      725:     and drag = bit 5 p[39m
     [38;5;2m16362[39m: [38;5;2m      726:     and mods =[39m
     [38;5;2m16363[39m: [38;5;2m      727:       (if bit 3 p then [`Meta] else []) @[39m
     [38;5;2m16364[39m: [38;5;2m      728:       (if bit 4 p then [`Ctrl] else [])[39m
     [38;5;2m16365[39m: [38;5;2m      729:     in (btn, drag, mods)[39m
     [38;5;2m16366[39m: [38;5;2m      730: [39m
     [38;5;2m16367[39m: [38;5;2m      731:   let key k mods = Some (`Key (k, mods))[39m
     [38;5;2m16368[39m: [38;5;2m      732: [39m
     [38;5;2m16369[39m: [38;5;2m      733:   let event_of_control_code =[39m
     [38;5;2m16370[39m: [38;5;2m      734:     let open Option in function[39m
     [38;5;2m16371[39m: [38;5;2m      735:     | Uchar u when Uchar.to_int u |> is_ascii ->[39m
     [38;5;2m16372[39m: [38;5;2m      736:         Some (`Key (`ASCII (Uchar.unsafe_to_char u), []))[39m
     [38;5;2m16373[39m: [38;5;2m      737:     | Uchar u -> Some (`Key (`Uchar u, []))[39m
     [38;5;2m16374[39m: [38;5;2m      738: [39m
     [38;5;2m16375[39m: [38;5;2m      739:     | C0 '\x1b'        -> key `Escape [][39m
     [38;5;2m16376[39m: [38;5;2m      740:     | C0 ('\b'|'\x7f') -> key `Backspace [][39m
     [38;5;2m16377[39m: [38;5;2m      741:     | C0 '\n'          -> key `Enter [][39m
     [38;5;2m16378[39m: [38;5;2m      742:     | C0 '\t'          -> key `Tab [][39m
     [38;5;2m16379[39m: [38;5;2m      743: [39m
     [38;5;2m16380[39m: [38;5;2m      744:     | C0 x -> key (`ASCII Char.(code x + 0x40 |> unsafe_chr)) [`Ctrl][39m
     [38;5;2m16381[39m: [38;5;2m      745:     | C1 x -> key (`ASCII x) [`Meta][39m
     [38;5;2m16382[39m: [38;5;2m      746: [39m
     [38;5;2m16383[39m: [38;5;2m      747:     | CSI ("",[],'Z') -> key `Tab [`Shift][39m
     [38;5;2m16384[39m: [38;5;2m      748: [39m
     [38;5;2m16385[39m: [38;5;2m      749:     | CSI ("",p,'A') -> mods_xtrm p >>= key (`Arrow `Up)[39m
     [38;5;2m16386[39m: [38;5;2m      750:     | CSI ("",p,'B') -> mods_xtrm p >>= key (`Arrow `Down)[39m
     [38;5;2m16387[39m: [38;5;2m      751:     | CSI ("",p,'C') -> mods_xtrm p >>= key (`Arrow `Right)[39m
     [38;5;2m16388[39m: [38;5;2m      752:     | CSI ("",p,'D') -> mods_xtrm p >>= key (`Arrow `Left)[39m
     [38;5;2m16389[39m: [38;5;2m      753: [39m
     [38;5;2m16390[39m: [38;5;2m      754:     | CSI ("",[],'a') -> key (`Arrow `Up) [`Shift][39m
     [38;5;2m16391[39m: [38;5;2m      755:     | CSI ("",[],'b') -> key (`Arrow `Down) [`Shift][39m
     [38;5;2m16392[39m: [38;5;2m      756:     | CSI ("",[],'c') -> key (`Arrow `Right) [`Shift][39m
     [38;5;2m16393[39m: [38;5;2m      757:     | CSI ("",[],'d') -> key (`Arrow `Left) [`Shift][39m
     [38;5;2m16394[39m: [38;5;2m      758:     | SS2 ('A'|'a') -> key (`Arrow `Up) [`Ctrl][39m
     [38;5;2m16395[39m: [38;5;2m      759:     | SS2 ('B'|'b') -> key (`Arrow `Down) [`Ctrl][39m
     [38;5;2m16396[39m: [38;5;2m      760:     | SS2 ('C'|'c') -> key (`Arrow `Right) [`Ctrl][39m
     [38;5;2m16397[39m: [38;5;2m      761:     | SS2 ('D'|'d') -> key (`Arrow `Left) [`Ctrl][39m
     [38;5;2m16398[39m: [38;5;2m      762: [39m
     [38;5;2m16399[39m: [38;5;2m      763:     | CSI ("",5::p,c) -> mods_common p c >>= key (`Page `Up)[39m
     [38;5;2m16400[39m: [38;5;2m      764:     | CSI ("",6::p,c) -> mods_common p c >>= key (`Page `Down)[39m
     [38;5;2m16401[39m: [38;5;2m      765: [39m
     [38;5;2m16402[39m: [38;5;2m      766:     | CSI ("",2::p,c) -> mods_common p c >>= key `Insert[39m
     [38;5;2m16403[39m: [38;5;2m      767:     | CSI ("",3::p,c) -> mods_common p c >>= key `Delete[39m
     [38;5;2m16404[39m: [38;5;2m      768: [39m
     [38;5;2m16405[39m: [38;5;2m      769:     | CSI ("",[4],'h') -> key `Insert [][39m
     [38;5;2m16406[39m: [38;5;2m      770:     | CSI ("",[],'L')  -> key `Insert [`Ctrl][39m
     [38;5;2m16407[39m: [38;5;2m      771:     | CSI ("",[],'P')  -> key `Delete [][39m
     [38;5;2m16408[39m: [38;5;2m      772:     | CSI ("",[],'M')  -> key `Delete [`Ctrl][39m
     [38;5;2m16409[39m: [38;5;2m      773: [39m
     [38;5;2m16410[39m: [38;5;2m      774:     | CSI ("",p,'H')   -> mods_xtrm p >>= key `Home[39m
     [38;5;2m16411[39m: [38;5;2m      775:     | CSI ("",[7|1],c) -> mods_rxvt c >>= key `Home[39m
     [38;5;2m16412[39m: [38;5;2m      776: [39m
     [38;5;2m16413[39m: [38;5;2m      777:     | CSI ("",p,'F')   -> mods_xtrm p >>= key `End[39m
     [38;5;2m16414[39m: [38;5;2m      778:     | CSI ("",[8|4],c) -> mods_rxvt c >>= key `End[39m
     [38;5;2m16415[39m: [38;5;2m      779:     | CSI ("",[],'J')  -> key `End [`Ctrl][39m
     [38;5;2m16416[39m: [38;5;2m      780: [39m
     [38;5;2m16417[39m: [38;5;2m      781:     | SS2 ('P'..'S' as c) -> key (`Function (Char.code c - 0x4f)) [][39m
     [38;5;2m16418[39m: [38;5;2m      782: [39m
     [38;5;2m16419[39m: [38;5;2m      783:     | CSI ("",p,('P'..'S' as c)) ->[39m
     [38;5;2m16420[39m: [38;5;2m      784:         mods_xtrm p >>= key (`Function (Char.code c - 0x4f))[39m
     [38;5;2m16421[39m: [38;5;2m      785: [39m
     [38;5;2m16422[39m: [38;5;2m      786:     | CSI ("",k::p,c) when btw k 11 15 || btw k 17 21 || btw k 23 26 ->[39m
     [38;5;2m16423[39m: [38;5;2m      787:         mods_common p c >>= key (`Function ((k - 10) - (k - 10) / 6))[39m
     [38;5;2m16424[39m: [38;5;2m      788: [39m
     [38;5;2m16425[39m: [38;5;2m      789:     | CSI ("<",[p;x;y],('M'|'m' as c)) ->[39m
     [38;5;2m16426[39m: [38;5;2m      790:         let (btn, drag, mods) = mouse_p p in[39m
     [38;5;2m16427[39m: [38;5;2m      791:         ( match (c, btn, drag) with[39m
     [38;5;2m16428[39m: [38;5;2m      792:           | ('M', (#button as b), false) -> Some (`Press b)[39m
     [38;5;2m16429[39m: [38;5;2m      793:           | ('M', #button, true)         -> Some `Drag[39m
     [38;5;2m16430[39m: [38;5;2m      794:           | ('m', #button, false)        -> Some `Release[39m
     [38;5;2m16431[39m: [38;5;2m      795:           (* | ('M', `ALL   , true)         -> Some `Move *)[39m
     [38;5;2m16432[39m: [38;5;2m      796:           | _                            -> None[39m
     [38;5;2m16433[39m: [38;5;2m      797:         ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m16434[39m: [38;5;2m      798: [39m
     [38;5;2m16435[39m: [38;5;2m      799:     | CSI ("",[p;x;y],'M') | Esc_M (p,x,y) as evt ->[39m
     [38;5;2m16436[39m: [38;5;2m      800:         let (x, y) = match evt with Esc_M _ -> x - 32, y - 32 | _ -> x, y[39m
     [38;5;2m16437[39m: [38;5;2m      801:         and (btn, drag, mods) = mouse_p (p - 32) in[39m
     [38;5;2m16438[39m: [38;5;2m      802:         ( match (btn, drag) with[39m
     [38;5;2m16439[39m: [38;5;2m      803:           | (#button as b, false) -> Some (`Press b)[39m
     [38;5;2m16440[39m: [38;5;2m      804:           | (#button     , true ) -> Some `Drag[39m
     [38;5;2m16441[39m: [38;5;2m      805:           | (`ALL        , false) -> Some `Release[39m
     [38;5;2m16442[39m: [38;5;2m      806:           (* | (`ALL        , true)  -> Some `Move *)[39m
     [38;5;2m16443[39m: [38;5;2m      807:           | _                     -> None[39m
     [38;5;2m16444[39m: [38;5;2m      808:         ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m16445[39m: [38;5;2m      809: [39m
     [38;5;2m16446[39m: [38;5;2m      810:     | CSI ("",[200],'~') -> Some (`Paste `Start)[39m
     [38;5;2m16447[39m: [38;5;2m      811:     | CSI ("",[201],'~') -> Some (`Paste `End)[39m
     [38;5;2m16448[39m: [38;5;2m      812: [39m
     [38;5;2m16449[39m: [38;5;2m      813:     | CSI _ | SS2 _ -> None[39m
     [38;5;2m16450[39m: [38;5;2m      814: [39m
     [38;5;2m16451[39m: [38;5;2m      815:   let rec events = function[39m
     [38;5;2m16452[39m: [38;5;2m      816:     | C0 '\x1b' :: cc :: ccs ->[39m
     [38;5;2m16453[39m: [38;5;2m      817:       ( match event_of_control_code cc with[39m
     [38;5;2m16454[39m: [38;5;2m      818:         | Some (`Key (k, mods)) -> `Key (k, `Meta :: mods) :: events ccs[39m
     [38;5;2m16455[39m: [38;5;2m      819:         | Some _                -> `Key (`Escape, []) :: events (cc::ccs)[39m
     [38;5;2m16456[39m: [38;5;2m      820:         | None                  -> events ccs )[39m
     [38;5;2m16457[39m: [38;5;2m      821:     | cc::ccs -> (event_of_control_code cc |> Option.to_list) @ events ccs[39m
     [38;5;2m16458[39m: [38;5;2m      822:     | [] -> [][39m
     [38;5;2m16459[39m: [38;5;2m      823: [39m
     [38;5;2m16460[39m: [38;5;2m      824:   let decode = events &. demux &. List.map Uchar.to_int[39m
     [38;5;2m16461[39m: [38;5;2m      825: [39m
     [38;5;2m16462[39m: [38;5;2m      826:   type t = (event list * bool) ref[39m
     [38;5;2m16463[39m: [38;5;2m      827: [39m
     [38;5;2m16464[39m: [38;5;2m      828:   let create () = ref ([], false)[39m
     [38;5;2m16465[39m: [38;5;2m      829: [39m
     [38;5;2m16466[39m: [38;5;2m      830:   let next t = match !t with[39m
     [38;5;2m16467[39m: [38;5;2m      831:     | (#event as e::es, eof) -> t := (es, eof) ; e[39m
     [38;5;2m16468[39m: [38;5;2m      832:     | ([], false) -> `Await[39m
     [38;5;2m16469[39m: [38;5;2m      833:     | _           -> `End[39m
     [38;5;2m16470[39m: [38;5;2m      834: [39m
     [38;5;2m16471[39m: [38;5;2m      835:   let list_of_utf8 buf i l =[39m
     [38;5;2m16472[39m: [38;5;2m      836:     let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m16473[39m: [38;5;2m      837:     String.sub0cp (Bytes.unsafe_to_string buf) i l[39m
     [38;5;2m16474[39m: [38;5;2m      838:     |> Uutf.String.fold_utf_8 f [] |> List.rev[39m
     [38;5;2m16475[39m: [38;5;2m      839: [39m
     [38;5;2m16476[39m: [38;5;2m      840:   let input t buf i l = t := match !t with[39m
     [38;5;2m16477[39m: [38;5;2m      841:     | (es, false) when l > 0 -> (es @ (list_of_utf8 buf i l |> decode), false)[39m
     [38;5;2m16478[39m: [38;5;2m      842:     | (es, _)                -> (es, true)[39m
     [38;5;2m16479[39m: [38;5;2m      843: [39m
     [38;5;2m16480[39m: [38;5;2m      844:   let pending t = match !t with ([], false) -> false | _ -> true[39m
     [38;5;2m16481[39m: [38;5;2m      845: end[39m
     [38;5;2m16482[39m: [38;5;2m      846: [39m
     [38;5;2m16483[39m: [38;5;2m      847: module Tmachine = struct[39m
     [38;5;2m16484[39m: [38;5;2m      848: [39m
     [38;5;2m16485[39m: [38;5;2m      849:   open Cap[39m
     [38;5;2m16486[39m: [38;5;2m      850:   (* XXX This is sad. This should be a composable, stateless transducer. *)[39m
     [38;5;2m16487[39m: [38;5;2m      851: [39m
     [38;5;2m16488[39m: [38;5;2m      852:   type t = {[39m
     [38;5;2m16489[39m: [38;5;2m      853:     cap           : Cap.t[39m
     [38;5;2m16490[39m: [38;5;2m      854:   ; mutable write : Buffer.t -> unit[39m
     [38;5;2m16491[39m: [38;5;2m      855:   ; mutable curs  : (int * int) option[39m
     [38;5;2m16492[39m: [38;5;2m      856:   ; mutable dim   : (int * int)[39m
     [38;5;2m16493[39m: [38;5;2m      857:   ; mutable image : I.t[39m
     [38;5;2m16494[39m: [38;5;2m      858:   ; mutable dead  : bool[39m
     [38;5;2m16495[39m: [38;5;2m      859:   }[39m
     [38;5;2m16496[39m: [38;5;2m      860: [39m
     [38;5;2m16497[39m: [38;5;2m      861:   let emit t op =[39m
     [38;5;2m16498[39m: [38;5;2m      862:     if t.dead then[39m
     [38;5;2m16499[39m: [38;5;2m      863:       invalid_arg "Notty: use of released terminal"[39m
     [38;5;2m16500[39m: [38;5;2m      864:     else t.write <- t.write & op[39m
     [38;5;2m16501[39m: [38;5;2m      865: [39m
     [38;5;2m16502[39m: [38;5;2m      866:   let cursor cap = function[39m
     [38;5;2m16503[39m: [38;5;2m      867:     | None        -> cap.cursvis false[39m
     [38;5;2m16504[39m: [38;5;2m      868:     | Some (w, h) -> cap.cursvis true & cursat0 cap w h[39m
     [38;5;2m16505[39m: [38;5;2m      869: [39m
     [38;5;2m16506[39m: [38;5;2m      870:   let create ~mouse ~bpaste cap = {[39m
     [38;5;2m16507[39m: [38;5;2m      871:       cap[39m
     [38;5;2m16508[39m: [38;5;2m      872:     ; curs  = None[39m
     [38;5;2m16509[39m: [38;5;2m      873:     ; dim   = (0, 0)[39m
     [38;5;2m16510[39m: [38;5;2m      874:     ; image = I.empty[39m
     [38;5;2m16511[39m: [38;5;2m      875:     ; dead  = false[39m
     [38;5;2m16512[39m: [38;5;2m      876:     ; write =[39m
     [38;5;2m16513[39m: [38;5;2m      877:         cap.altscr true & cursor cap None & cap.mouse mouse & cap.bpaste bpaste[39m
     [38;5;2m16514[39m: [38;5;2m      878:     }[39m
     [38;5;2m16515[39m: [38;5;2m      879: [39m
     [38;5;2m16516[39m: [38;5;2m      880:   let release t =[39m
     [38;5;2m16517[39m: [38;5;2m      881:     if t.dead then false else[39m
     [38;5;2m16518[39m: [38;5;2m      882:       ( emit t ( t.cap.altscr false & t.cap.cursvis true &[39m
     [38;5;2m16519[39m: [38;5;2m      883:                  t.cap.mouse false & t.cap.bpaste false );[39m
     [38;5;2m16520[39m: [38;5;2m      884:         t.dead <- true; true )[39m
     [38;5;2m16521[39m: [38;5;2m      885: [39m
     [38;5;2m16522[39m: [38;5;2m      886:   let output t buf = t.write buf; t.write <- ignore[39m
     [38;5;2m16523[39m: [38;5;2m      887: [39m
     [38;5;2m16524[39m: [38;5;2m      888:   let refresh ({ dim; image; _ } as t) =[39m
     [38;5;2m16525[39m: [38;5;2m      889:     emit t ( cursor t.cap None & cursat0 t.cap 0 0 &[39m
     [38;5;2m16526[39m: [38;5;2m      890:              (fun buf -> Render.to_buffer buf t.cap (0, 0) dim image) &[39m
     [38;5;2m16527[39m: [38;5;2m      891:              cursor t.cap t.curs )[39m
     [38;5;2m16528[39m: [38;5;2m      892: [39m
     [38;5;2m16529[39m: [38;5;2m      893:   let set_size t dim = t.dim <- dim[39m
     [38;5;2m16530[39m: [38;5;2m      894:   let image t image = t.image <- image; refresh t[39m
     [38;5;2m16531[39m: [38;5;2m      895:   let cursor t curs = t.curs <- curs; emit t (cursor t.cap curs)[39m
     [38;5;2m16532[39m: [38;5;2m      896: [39m
     [38;5;2m16533[39m: [38;5;2m      897:   let size t = t.dim[39m
     [38;5;2m16534[39m: [38;5;2m      898:   let dead t = t.dead[39m
     [38;5;2m16535[39m: [38;5;2m      899: end[39m
     [38;5;2m16536[39m: [38;5;2m      900: [39m
     [38;5;2m16537[39m: [38;5;2m      901: module Direct = struct[39m
     [38;5;2m16538[39m: [38;5;2m      902:   let show_cursor buf cap x = cap.Cap.cursvis x buf[39m
     [38;5;2m16539[39m: [38;5;2m      903:   and move_cursor buf cap cmd = match cmd with[39m
     [38;5;2m16540[39m: [38;5;2m      904:     | `To (w, h) -> Cap.cursat0 cap w h buf[39m
     [38;5;2m16541[39m: [38;5;2m      905:     | `Home      -> cap.Cap.cr buf[39m
     [38;5;2m16542[39m: [38;5;2m      906:     | `By (x, y) ->[39m
     [38;5;2m16543[39m: [38;5;2m      907:         Cap.(if x <> 0 then cap.cubcuf x buf; if y <> 0 then cap.cuucud y buf)[39m
     [38;5;2m16544[39m: [38;5;2m      908: end[39m
     [38;5;2m16545[39m: [38;5;2m      909: [39m
     [38;5;2m16546[39m: [38;5;2m      910: type attr  = A.t[39m
     [38;5;2m16547[39m: [38;5;2m      911: type image = I.t[39m
     [38;5;2m16548[39m: [38;5;2m      912: [39m
     [38;5;2m16549[39m: [38;5;2m      913: module Infix = struct[39m
     [38;5;2m16550[39m: [38;5;2m      914:   let ((<->), (<|>), (</>)) = I.((<->), (<|>), (</>))[39m
     [38;5;2m16551[39m: [38;5;2m      915:   let (++) = A.(++)[39m
     [38;5;2m16552[39m: [38;5;2m      916: end[39m
     [38;5;2m16553[39m: [38;5;2mAdded regular file ../notty/src/notty.mli:[39m
     [38;5;2m16554[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m16555[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m16556[39m: [38;5;2m        3: [39m
     [38;5;2m16557[39m: [38;5;2m        4: (** Declaring terminals.[39m
     [38;5;2m16558[39m: [38;5;2m        5: [39m
     [38;5;2m16559[39m: [38;5;2m        6:     Notty is a terminal library that revolves around construction and[39m
     [38;5;2m16560[39m: [38;5;2m        7:     composition of displayable images.[39m
     [38;5;2m16561[39m: [38;5;2m        8: [39m
     [38;5;2m16562[39m: [38;5;2m        9:     This module provides the core {{!I}[image]} abstraction, standalone[39m
     [38;5;2m16563[39m: [38;5;2m       10:     {{!Render}rendering}, and escape sequence {{!Unescape}parsing}. It does not[39m
     [38;5;2m16564[39m: [38;5;2m       11:     depend on any platform code, and does not interact with the environment.[39m
     [38;5;2m16565[39m: [38;5;2m       12:     Input and output are provided by {!Notty_unix} and {!Notty_lwt}.[39m
     [38;5;2m16566[39m: [38;5;2m       13: [39m
     [38;5;2m16567[39m: [38;5;2m       14:     Consult the {{!basics}basics}, {{!examples}examples} and[39m
     [38;5;2m16568[39m: [38;5;2m       15:     {{!limitations}limitations}.[39m
     [38;5;2m16569[39m: [38;5;2m       16: [39m
     [38;5;2m16570[39m: [38;5;2m       17:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m16571[39m: [38;5;2m       18: [39m
     [38;5;2m16572[39m: [38;5;2m       19: (** {1 Interface} *)[39m
     [38;5;2m16573[39m: [38;5;2m       20: [39m
     [38;5;2m16574[39m: [38;5;2m       21: type attr[39m
     [38;5;2m16575[39m: [38;5;2m       22: (** Visual characteristics of displayed text. *)[39m
     [38;5;2m16576[39m: [38;5;2m       23: [39m
     [38;5;2m16577[39m: [38;5;2m       24: type image[39m
     [38;5;2m16578[39m: [38;5;2m       25: (** Rectangles of styled characters. *)[39m
     [38;5;2m16579[39m: [38;5;2m       26: [39m
     [38;5;2m16580[39m: [38;5;2m       27: (** [A] is for attribute.[39m
     [38;5;2m16581[39m: [38;5;2m       28: [39m
     [38;5;2m16582[39m: [38;5;2m       29:     Construction and composition of styling characteristics of text.[39m
     [38;5;2m16583[39m: [38;5;2m       30: [39m
     [38;5;2m16584[39m: [38;5;2m       31:     Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m16585[39m: [38;5;2m       32: module A : sig[39m
     [38;5;2m16586[39m: [38;5;2m       33: [39m
     [38;5;2m16587[39m: [38;5;2m       34:   (** {1 Colors} *)[39m
     [38;5;2m16588[39m: [38;5;2m       35: [39m
     [38;5;2m16589[39m: [38;5;2m       36:   type color[39m
     [38;5;2m16590[39m: [38;5;2m       37:   (** An ineffable quality of light.[39m
     [38;5;2m16591[39m: [38;5;2m       38: [39m
     [38;5;2m16592[39m: [38;5;2m       39:       There are three kinds of colors:[39m
     [38;5;2m16593[39m: [38;5;2m       40:       {ul[39m
     [38;5;2m16594[39m: [38;5;2m       41:       {- {e Core 16 colors.}[39m
     [38;5;2m16595[39m: [38;5;2m       42: [39m
     [38;5;2m16596[39m: [38;5;2m       43:          ANSI defines 8 color {e names}, with the actual display colors[39m
     [38;5;2m16597[39m: [38;5;2m       44:          considered an implementation detail. Historically, this palette was[39m
     [38;5;2m16598[39m: [38;5;2m       45:          extended with their light (sometimes {e bright} or {e high-intensity})[39m
     [38;5;2m16599[39m: [38;5;2m       46:          counterparts. Their presentation is undefined too, but typically[39m
     [38;5;2m16600[39m: [38;5;2m       47:          produces a brighter shade. These colors - often called the {e ANSI[39m
     [38;5;2m16601[39m: [38;5;2m       48:          colors} - tend to be unpredictable, but ubiquitously supported.[39m
     [38;5;2m16602[39m: [38;5;2m       49: [39m
     [38;5;2m16603[39m: [38;5;2m       50:          }[39m
     [38;5;2m16604[39m: [38;5;2m       51:       {- {e Extended 256-color palette.}[39m
     [38;5;2m16605[39m: [38;5;2m       52: [39m
     [38;5;2m16606[39m: [38;5;2m       53:          This common feature extends the palette by further 240 colors. They[39m
     [38;5;2m16607[39m: [38;5;2m       54:          come in two groups:[39m
     [38;5;2m16608[39m: [38;5;2m       55: [39m
     [38;5;2m16609[39m: [38;5;2m       56:          {ul[39m
     [38;5;2m16610[39m: [38;5;2m       57:          {- The {e color cube}, a 6*6*6 approximation to the usual 24-bit RGB[39m
     [38;5;2m16611[39m: [38;5;2m       58:             color cube; and}[39m
     [38;5;2m16612[39m: [38;5;2m       59:          {- the {e grayscale ramp}, containing (merely) 24 shades of gray.}}[39m
     [38;5;2m16613[39m: [38;5;2m       60: [39m
     [38;5;2m16614[39m: [38;5;2m       61:          XTerm was the first to support this extension. Many terminals have[39m
     [38;5;2m16615[39m: [38;5;2m       62:          since cloned it, so the support is wide, but not universal.[39m
     [38;5;2m16616[39m: [38;5;2m       63: [39m
     [38;5;2m16617[39m: [38;5;2m       64:          As the extended colors are still palette-driven they do not have a[39m
     [38;5;2m16618[39m: [38;5;2m       65:          fixed presentation, and the presentation can be changed in some[39m
     [38;5;2m16619[39m: [38;5;2m       66:          terminals. Default palette tends to match {{:[39m
     [38;5;2m16620[39m: [38;5;2m       67:          https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg}[39m
     [38;5;2m16621[39m: [38;5;2m       68:          XTerm's}.[39m
     [38;5;2m16622[39m: [38;5;2m       69: [39m
     [38;5;2m16623[39m: [38;5;2m       70:          }[39m
     [38;5;2m16624[39m: [38;5;2m       71:       {- {e True color}[39m
     [38;5;2m16625[39m: [38;5;2m       72: [39m
     [38;5;2m16626[39m: [38;5;2m       73:          A recently established convention allows directly sending 24-bit colors[39m
     [38;5;2m16627[39m: [38;5;2m       74:          to the terminal. This has been adopted by a growing minority of[39m
     [38;5;2m16628[39m: [38;5;2m       75:          terminals. A reasonably up-to-date status document maintained by the[39m
     [38;5;2m16629[39m: [38;5;2m       76:          community can be found {{:https://gist.github.com/XVilka/8346728}here}.}}[39m
     [38;5;2m16630[39m: [38;5;2m       77: [39m
     [38;5;2m16631[39m: [38;5;2m       78:       Some of the technical and historical background can be found in {{:[39m
     [38;5;2m16632[39m: [38;5;2m       79:       http://invisible-island.net/xterm/xterm.faq.html#problems_colors}[39m
     [38;5;2m16633[39m: [38;5;2m       80:       XTerm's FAQ}.[39m
     [38;5;2m16634[39m: [38;5;2m       81: [39m
     [38;5;2m16635[39m: [38;5;2m       82:       {b Note} No attempt is made to remap colors depending on the terminal.[39m
     [38;5;2m16636[39m: [38;5;2m       83:       Terminals might ignore, remap, or completely misinterpret unsupported[39m
     [38;5;2m16637[39m: [38;5;2m       84:       colors. *)[39m
     [38;5;2m16638[39m: [38;5;2m       85: [39m
     [38;5;2m16639[39m: [38;5;2m       86:   (** {2:corecolors Core 16 colors}[39m
     [38;5;2m16640[39m: [38;5;2m       87: [39m
     [38;5;2m16641[39m: [38;5;2m       88:       The first 8 have their standard ANSI names. *)[39m
     [38;5;2m16642[39m: [38;5;2m       89:     val unsafe_color_of_int:int->color[39m
     [38;5;2m16643[39m: [38;5;2m       90: [39m
     [38;5;2m16644[39m: [38;5;2m       91:   val black        : color[39m
     [38;5;2m16645[39m: [38;5;2m       92:   val red          : color[39m
     [38;5;2m16646[39m: [38;5;2m       93:   val green        : color[39m
     [38;5;2m16647[39m: [38;5;2m       94:   val yellow       : color[39m
     [38;5;2m16648[39m: [38;5;2m       95:   val blue         : color[39m
     [38;5;2m16649[39m: [38;5;2m       96:   val magenta      : color[39m
     [38;5;2m16650[39m: [38;5;2m       97:   val cyan         : color[39m
     [38;5;2m16651[39m: [38;5;2m       98:   val white        : color[39m
     [38;5;2m16652[39m: [38;5;2m       99:   val lightblack   : color[39m
     [38;5;2m16653[39m: [38;5;2m      100:   val lightred     : color[39m
     [38;5;2m16654[39m: [38;5;2m      101:   val lightgreen   : color[39m
     [38;5;2m16655[39m: [38;5;2m      102:   val lightyellow  : color[39m
     [38;5;2m16656[39m: [38;5;2m      103:   val lightblue    : color[39m
     [38;5;2m16657[39m: [38;5;2m      104:   val lightmagenta : color[39m
     [38;5;2m16658[39m: [38;5;2m      105:   val lightcyan    : color[39m
     [38;5;2m16659[39m: [38;5;2m      106:   val lightwhite   : color[39m
     [38;5;2m16660[39m: [38;5;2m      107: [39m
     [38;5;2m16661[39m: [38;5;2m      108:   (** {2 Extended 256-color palette} *)[39m
     [38;5;2m16662[39m: [38;5;2m      109: [39m
     [38;5;2m16663[39m: [38;5;2m      110:   val rgb : r:int -> g:int -> b:int -> color[39m
     [38;5;2m16664[39m: [38;5;2m      111:   (** [rgb ~r:red ~g:green ~b:blue] is an extended-palette color from the color cube.[39m
     [38;5;2m16665[39m: [38;5;2m      112: [39m
     [38;5;2m16666[39m: [38;5;2m      113:       All three channels must be in the range [0 - 5]. XTerm default palette maps[39m
     [38;5;2m16667[39m: [38;5;2m      114:       this to [0x00], [0x5f], [0x87], [0xaf], [0xd7], and [0xff] independently[39m
     [38;5;2m16668[39m: [38;5;2m      115:       per channel.[39m
     [38;5;2m16669[39m: [38;5;2m      116: [39m
     [38;5;2m16670[39m: [38;5;2m      117:       @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m16671[39m: [38;5;2m      118: [39m
     [38;5;2m16672[39m: [38;5;2m      119:   val gray : int -> color[39m
     [38;5;2m16673[39m: [38;5;2m      120:   (** [gray level] is an extended-palette color from the grayscale ramp.[39m
     [38;5;2m16674[39m: [38;5;2m      121: [39m
     [38;5;2m16675[39m: [38;5;2m      122:       [level] must be in the range [0 - 23]. XTerm default palette maps this to[39m
     [38;5;2m16676[39m: [38;5;2m      123:       [8 + level * 10] on all three channels.[39m
     [38;5;2m16677[39m: [38;5;2m      124: [39m
     [38;5;2m16678[39m: [38;5;2m      125:       @raise Invalid_argument if the [level] is outside the range. *)[39m
     [38;5;2m16679[39m: [38;5;2m      126: [39m
     [38;5;2m16680[39m: [38;5;2m      127:   (** {2 True Color} *)[39m
     [38;5;2m16681[39m: [38;5;2m      128: [39m
     [38;5;2m16682[39m: [38;5;2m      129:   val rgb_888 : r:int -> g:int -> b:int -> color[39m
     [38;5;2m16683[39m: [38;5;2m      130:   (** [rgb_888 ~r:red ~g:green ~b:blue] is a 24-bit color.[39m
     [38;5;2m16684[39m: [38;5;2m      131: [39m
     [38;5;2m16685[39m: [38;5;2m      132:       All three channels must be in the range [0 - 255].[39m
     [38;5;2m16686[39m: [38;5;2m      133: [39m
     [38;5;2m16687[39m: [38;5;2m      134:       @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m16688[39m: [38;5;2m      135: [39m
     [38;5;2m16689[39m: [38;5;2m      136:   (** {1 Text styles} *)[39m
     [38;5;2m16690[39m: [38;5;2m      137: [39m
     [38;5;2m16691[39m: [38;5;2m      138:   type style[39m
     [38;5;2m16692[39m: [38;5;2m      139:   (** Additional text properties. *)[39m
     [38;5;2m16693[39m: [38;5;2m      140: [39m
     [38;5;2m16694[39m: [38;5;2m      141:   val unsafe_style_of_int: int-> style[39m
     [38;5;2m16695[39m: [38;5;2m      142: [39m
     [38;5;2m16696[39m: [38;5;2m      143:   val bold      : style[39m
     [38;5;2m16697[39m: [38;5;2m      144:   val italic    : style[39m
     [38;5;2m16698[39m: [38;5;2m      145:   val underline : style[39m
     [38;5;2m16699[39m: [38;5;2m      146:   val blink     : style[39m
     [38;5;2m16700[39m: [38;5;2m      147:   val reverse   : style[39m
     [38;5;2m16701[39m: [38;5;2m      148: [39m
     [38;5;2m16702[39m: [38;5;2m      149:   (** {1 Attribute construction and composition} *)[39m
     [38;5;2m16703[39m: [38;5;2m      150: [39m
     [38;5;2m16704[39m: [38;5;2m      151:   type t = attr[39m
     [38;5;2m16705[39m: [38;5;2m      152: [39m
     [38;5;2m16706[39m: [38;5;2m      153:   val equal : t -> t -> bool[39m
     [38;5;2m16707[39m: [38;5;2m      154: [39m
     [38;5;2m16708[39m: [38;5;2m      155:   val empty : attr[39m
     [38;5;2m16709[39m: [38;5;2m      156:   (** [empty] is the attribute with the default foreground and background color[39m
     [38;5;2m16710[39m: [38;5;2m      157:       and empty style set. *)[39m
     [38;5;2m16711[39m: [38;5;2m      158: [39m
     [38;5;2m16712[39m: [38;5;2m      159:   val (++) : attr -> attr -> attr[39m
     [38;5;2m16713[39m: [38;5;2m      160:   (** [a1 ++ a2] is the concatenation of [a1] and [a2], the attribute that has[39m
     [38;5;2m16714[39m: [38;5;2m      161:       [a2]'s foreground (resp. background), unless {e unset}, in which case it[39m
     [38;5;2m16715[39m: [38;5;2m      162:       is [a1]'s, and the union of both style sets.[39m
     [38;5;2m16716[39m: [38;5;2m      163: [39m
     [38;5;2m16717[39m: [38;5;2m      164:       [++] is left-associative, and forms a monoid with [empty]. *)[39m
     [38;5;2m16718[39m: [38;5;2m      165: [39m
     [38;5;2m16719[39m: [38;5;2m      166:   val fg : color -> attr[39m
     [38;5;2m16720[39m: [38;5;2m      167:   (** [fg c] is [empty] with foreground [c]. *)[39m
     [38;5;2m16721[39m: [38;5;2m      168: [39m
     [38;5;2m16722[39m: [38;5;2m      169:   val bg : color -> attr[39m
     [38;5;2m16723[39m: [38;5;2m      170:   (** [bg c] is [empty] with background [c]. *)[39m
     [38;5;2m16724[39m: [38;5;2m      171: [39m
     [38;5;2m16725[39m: [38;5;2m      172:   val st : style -> attr[39m
     [38;5;2m16726[39m: [38;5;2m      173:   (** [st s] is [empty] with style [s]. *)[39m
     [38;5;2m16727[39m: [38;5;2m      174: end[39m
     [38;5;2m16728[39m: [38;5;2m      175: [39m
     [38;5;2m16729[39m: [38;5;2m      176: (** [I] is for image.[39m
     [38;5;2m16730[39m: [38;5;2m      177: [39m
     [38;5;2m16731[39m: [38;5;2m      178:     Construction and composition of images.[39m
     [38;5;2m16732[39m: [38;5;2m      179: [39m
     [38;5;2m16733[39m: [38;5;2m      180:     Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m16734[39m: [38;5;2m      181: module I : sig[39m
     [38;5;2m16735[39m: [38;5;2m      182: [39m
     [38;5;2m16736[39m: [38;5;2m      183:   type t = image[39m
     [38;5;2m16737[39m: [38;5;2m      184: [39m
     [38;5;2m16738[39m: [38;5;2m      185:   val height : image -> int[39m
     [38;5;2m16739[39m: [38;5;2m      186:   val width  : image -> int[39m
     [38;5;2m16740[39m: [38;5;2m      187: [39m
     [38;5;2m16741[39m: [38;5;2m      188:   val equal : t -> t -> bool[39m
     [38;5;2m16742[39m: [38;5;2m      189:   (** [equal t1 t2] is [true] iff [t1] and [t2] are constructed by the same term.[39m
     [38;5;2m16743[39m: [38;5;2m      190: [39m
     [38;5;2m16744[39m: [38;5;2m      191:       {b Note} This is a weak form of equality. Images that are not [equal][39m
     [38;5;2m16745[39m: [38;5;2m      192:       could still render the same. *)[39m
     [38;5;2m16746[39m: [38;5;2m      193: [39m
     [38;5;2m16747[39m: [38;5;2m      194:   (** {1:imgprims Primitives} *)[39m
     [38;5;2m16748[39m: [38;5;2m      195: [39m
     [38;5;2m16749[39m: [38;5;2m      196:   val empty : image[39m
     [38;5;2m16750[39m: [38;5;2m      197:   (** [empty] is a zero-sized image. *)[39m
     [38;5;2m16751[39m: [38;5;2m      198: [39m
     [38;5;2m16752[39m: [38;5;2m      199:   val string : attr -> string -> image[39m
     [38;5;2m16753[39m: [38;5;2m      200:   (** [string attr s] is an image containing text [s], styled with [attr].[39m
     [38;5;2m16754[39m: [38;5;2m      201: [39m
     [38;5;2m16755[39m: [38;5;2m      202:       @raise Invalid_argument if [string] is not a valid UTF-8 sequence, or[39m
     [38;5;2m16756[39m: [38;5;2m      203:       contains {{!ctrls}control characters}. *)[39m
     [38;5;2m16757[39m: [38;5;2m      204: [39m
     [38;5;2m16758[39m: [38;5;2m      205:   val uchars : attr -> Uchar.t array -> image[39m
     [38;5;2m16759[39m: [38;5;2m      206:   (** [uchars attr us] is an image containing text [us], styled with [attr].[39m
     [38;5;2m16760[39m: [38;5;2m      207: [39m
     [38;5;2m16761[39m: [38;5;2m      208:       @raise Invalid_argument if [us] contains {{!ctrls}control characters}. *)[39m
     [38;5;2m16762[39m: [38;5;2m      209: [39m
     [38;5;2m16763[39m: [38;5;2m      210:   val char : attr -> char -> int -> int -> image[39m
     [38;5;2m16764[39m: [38;5;2m      211:   (** [char attr c w h] is a [w * h] grid of [c].[39m
     [38;5;2m16765[39m: [38;5;2m      212: [39m
     [38;5;2m16766[39m: [38;5;2m      213:       @raise Invalid_argument if [c] is a {{!ctrls}control character}. *)[39m
     [38;5;2m16767[39m: [38;5;2m      214: [39m
     [38;5;2m16768[39m: [38;5;2m      215:   val uchar : attr -> Uchar.t -> int -> int -> image[39m
     [38;5;2m16769[39m: [38;5;2m      216:   (** [uchar attr u w h] is a [w * h] grid of [u].[39m
     [38;5;2m16770[39m: [38;5;2m      217: [39m
     [38;5;2m16771[39m: [38;5;2m      218:       @raise Invalid_argument if [u] is a {{!ctrls}control character}. *)[39m
     [38;5;2m16772[39m: [38;5;2m      219: [39m
     [38;5;2m16773[39m: [38;5;2m      220:   val void  : int -> int -> image[39m
     [38;5;2m16774[39m: [38;5;2m      221:   (** [void w h] is a [w * h] rectangle of transparent cells.[39m
     [38;5;2m16775[39m: [38;5;2m      222: [39m
     [38;5;2m16776[39m: [38;5;2m      223:       [void] is magical: it has geometry, but no displayable content. This is[39m
     [38;5;2m16777[39m: [38;5;2m      224:       different, for example, from the space character [U+0020], which renders[39m
     [38;5;2m16778[39m: [38;5;2m      225:       as a cell filled with the background color. This means that [void][39m
     [38;5;2m16779[39m: [38;5;2m      226:       interacts specially with {{!(</>)}overlays}.[39m
     [38;5;2m16780[39m: [38;5;2m      227: [39m
     [38;5;2m16781[39m: [38;5;2m      228:       [void 0 0 = empty].[39m
     [38;5;2m16782[39m: [38;5;2m      229:       [void] with only one dimension [0] acts as a spacing element in the other[39m
     [38;5;2m16783[39m: [38;5;2m      230:       dimension. Negative size is treated as [0]. *)[39m
     [38;5;2m16784[39m: [38;5;2m      231: [39m
     [38;5;2m16785[39m: [38;5;2m      232:   (** {1:imgcomp Image composition}[39m
     [38;5;2m16786[39m: [38;5;2m      233: [39m
     [38;5;2m16787[39m: [38;5;2m      234:       Three basic composition modes allow construction of more complex images[39m
     [38;5;2m16788[39m: [38;5;2m      235:       from simpler ones.[39m
     [38;5;2m16789[39m: [38;5;2m      236: [39m
     [38;5;2m16790[39m: [38;5;2m      237:       Composition operators are left-associative and form a monoid with [void].[39m
     [38;5;2m16791[39m: [38;5;2m      238:       *)[39m
     [38;5;2m16792[39m: [38;5;2m      239: [39m
     [38;5;2m16793[39m: [38;5;2m      240:   val (<|>) : image -> image -> image[39m
     [38;5;2m16794[39m: [38;5;2m      241:   (**  [i1 <|> i2] is the horizontal combination of [i1] and [i2].[39m
     [38;5;2m16795[39m: [38;5;2m      242: [39m
     [38;5;2m16796[39m: [38;5;2m      243:       [width (i1 <|> i2) = width i1 + width i2][39m
     [38;5;2m16797[39m: [38;5;2m      244:       [height (i1 <|> i2) = max (height i1) (height i2)][39m
     [38;5;2m16798[39m: [38;5;2m      245: [39m
     [38;5;2m16799[39m: [38;5;2m      246:       Images are top-aligned. The missing region is implicitly filled with[39m
     [38;5;2m16800[39m: [38;5;2m      247:       {{!void}[void]}.[39m
     [38;5;2m16801[39m: [38;5;2m      248: [39m
     [38;5;2m16802[39m: [38;5;2m      249: {v[39m
     [38;5;2m16803[39m: [38;5;2m      250: [x] <|> [y] = [xy][39m
     [38;5;2m16804[39m: [38;5;2m      251:         [y]   [.y][39m
     [38;5;2m16805[39m: [38;5;2m      252: v}[39m
     [38;5;2m16806[39m: [38;5;2m      253: [39m
     [38;5;2m16807[39m: [38;5;2m      254:       where [.] denotes {{!void}[void]}. *)[39m
     [38;5;2m16808[39m: [38;5;2m      255: [39m
     [38;5;2m16809[39m: [38;5;2m      256:   val (<->) : image -> image -> image[39m
     [38;5;2m16810[39m: [38;5;2m      257:   (** [i1 <-> i2] is the vertical combination of [i1] and [i2].[39m
     [38;5;2m16811[39m: [38;5;2m      258: [39m
     [38;5;2m16812[39m: [38;5;2m      259:       [width (i1 <-> i2) = max (width i1) (width i2)][39m
     [38;5;2m16813[39m: [38;5;2m      260:       [height (i1 <-> i2) = height i1 + height i2][39m
     [38;5;2m16814[39m: [38;5;2m      261: [39m
     [38;5;2m16815[39m: [38;5;2m      262:       Images are left-aligned. The missing region is implicitly filled with[39m
     [38;5;2m16816[39m: [38;5;2m      263:       {{!void}[void]}.[39m
     [38;5;2m16817[39m: [38;5;2m      264: [39m
     [38;5;2m16818[39m: [38;5;2m      265: {v[39m
     [38;5;2m16819[39m: [38;5;2m      266: [xx] <-> [y] = [xx][39m
     [38;5;2m16820[39m: [38;5;2m      267:                [y.][39m
     [38;5;2m16821[39m: [38;5;2m      268: v}[39m
     [38;5;2m16822[39m: [38;5;2m      269:       *)[39m
     [38;5;2m16823[39m: [38;5;2m      270: [39m
     [38;5;2m16824[39m: [38;5;2m      271:   val (</>) : image -> image -> image[39m
     [38;5;2m16825[39m: [38;5;2m      272:   (** [i1 </> i2] is [i1] overlaid over [i2].[39m
     [38;5;2m16826[39m: [38;5;2m      273: [39m
     [38;5;2m16827[39m: [38;5;2m      274:       [width (i1 </> i2) = max (width i1) (width i2)][39m
     [38;5;2m16828[39m: [38;5;2m      275:       [height (i1 </> i2) = max (height i1) (height i2)][39m
     [38;5;2m16829[39m: [38;5;2m      276: [39m
     [38;5;2m16830[39m: [38;5;2m      277:       Images are top-left-aligned. In the region of their overlap, only the[39m
     [38;5;2m16831[39m: [38;5;2m      278:       {{!void}[void]} cells of [i1] show fragments of [i2].[39m
     [38;5;2m16832[39m: [38;5;2m      279: [39m
     [38;5;2m16833[39m: [38;5;2m      280: {v[39m
     [38;5;2m16834[39m: [38;5;2m      281: [x.x] </> [yyyy] = [xyxy][39m
     [38;5;2m16835[39m: [38;5;2m      282: v}[39m
     [38;5;2m16836[39m: [38;5;2m      283:       *)[39m
     [38;5;2m16837[39m: [38;5;2m      284: [39m
     [38;5;2m16838[39m: [38;5;2m      285:   (** {1:imgcrop Cropping and padding} *)[39m
     [38;5;2m16839[39m: [38;5;2m      286: [39m
     [38;5;2m16840[39m: [38;5;2m      287:   val hcrop : int -> int -> image -> image[39m
     [38;5;2m16841[39m: [38;5;2m      288:   (** [hcrop left right i] is [i] with [left] leftmost, and [right][39m
     [38;5;2m16842[39m: [38;5;2m      289:       rightmost columns missing. If [left + right >= width i] the result is[39m
     [38;5;2m16843[39m: [38;5;2m      290:       [empty].[39m
     [38;5;2m16844[39m: [38;5;2m      291: [39m
     [38;5;2m16845[39m: [38;5;2m      292:       If either [left] or [right] is negative, instead of being cropped, the[39m
     [38;5;2m16846[39m: [38;5;2m      293:       image is padded on that side.[39m
     [38;5;2m16847[39m: [38;5;2m      294: [39m
     [38;5;2m16848[39m: [38;5;2m      295:       For example:[39m
     [38;5;2m16849[39m: [38;5;2m      296:       {ul[39m
     [38;5;2m16850[39m: [38;5;2m      297:       {- [hcrop 0 1 [abc]] = [[ab]]}[39m
     [38;5;2m16851[39m: [38;5;2m      298:       {- [hcrop 1 1 [abc]] = [[b]]}[39m
     [38;5;2m16852[39m: [38;5;2m      299:       {- [hcrop (-1) 1 [abc]] = [void 1 1 <|> hcrop 0 1 [abc]] = [[.ab]]}[39m
     [38;5;2m16853[39m: [38;5;2m      300:       {- [hcrop 2 2 [abc]] = [empty]}} *)[39m
     [38;5;2m16854[39m: [38;5;2m      301: [39m
     [38;5;2m16855[39m: [38;5;2m      302:   val vcrop : int -> int -> image -> image[39m
     [38;5;2m16856[39m: [38;5;2m      303:   (** [vcrop top bottom i] is the vertical analogue to {{!hcrop}[hcrop]}. *)[39m
     [38;5;2m16857[39m: [38;5;2m      304: [39m
     [38;5;2m16858[39m: [38;5;2m      305:   val crop : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m16859[39m: [38;5;2m      306:   (** [crop ~l:left ~r:right ~t:top ~b:bottom i] is[39m
     [38;5;2m16860[39m: [38;5;2m      307:       [vcrop left right (hcrop top bottom) i].[39m
     [38;5;2m16861[39m: [38;5;2m      308: [39m
     [38;5;2m16862[39m: [38;5;2m      309:       Missing arguments default to [0]. *)[39m
     [38;5;2m16863[39m: [38;5;2m      310: [39m
     [38;5;2m16864[39m: [38;5;2m      311:   val hpad : int -> int -> image -> image[39m
     [38;5;2m16865[39m: [38;5;2m      312:   (** {{!hcrop}[hcrop]} with margins negated. *)[39m
     [38;5;2m16866[39m: [38;5;2m      313: [39m
     [38;5;2m16867[39m: [38;5;2m      314:   val vpad : int -> int -> image -> image[39m
     [38;5;2m16868[39m: [38;5;2m      315:   (** {{!vcrop}[vcrop]} with margins negated. *)[39m
     [38;5;2m16869[39m: [38;5;2m      316: [39m
     [38;5;2m16870[39m: [38;5;2m      317:   val pad : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m16871[39m: [38;5;2m      318:   (** {{!crop}[crop]} with margins negated. *)[39m
     [38;5;2m16872[39m: [38;5;2m      319: [39m
     [38;5;2m16873[39m: [38;5;2m      320: [39m
     [38;5;2m16874[39m: [38;5;2m      321:   (** {1 Additional combinators} *)[39m
     [38;5;2m16875[39m: [38;5;2m      322: [39m
     [38;5;2m16876[39m: [38;5;2m      323:   val hcat : image list -> image[39m
     [38;5;2m16877[39m: [38;5;2m      324:   (** [hcat xs] horizontally concatenates [xs]. See {{!(<|>)}beside}. *)[39m
     [38;5;2m16878[39m: [38;5;2m      325: [39m
     [38;5;2m16879[39m: [38;5;2m      326:   val vcat : image list -> image[39m
     [38;5;2m16880[39m: [38;5;2m      327:   (** [vcat xs] vertically concatenates [xs]. See {{!(<->)}above}. *)[39m
     [38;5;2m16881[39m: [38;5;2m      328: [39m
     [38;5;2m16882[39m: [38;5;2m      329:   val zcat : image list -> image[39m
     [38;5;2m16883[39m: [38;5;2m      330:   (** [zcat xs] overlays [xs]. See {{!(</>)}over}. *)[39m
     [38;5;2m16884[39m: [38;5;2m      331: [39m
     [38;5;2m16885[39m: [38;5;2m      332:   val tabulate : int -> int -> (int -> int -> image) -> image[39m
     [38;5;2m16886[39m: [38;5;2m      333:   (** [tabulate m n f] is the grid of values [f x y] with [x = 0..m-1][39m
     [38;5;2m16887[39m: [38;5;2m      334:       and [y = 0..n-1], where [x] grows to the right, and [y] growns down.[39m
     [38;5;2m16888[39m: [38;5;2m      335: [39m
     [38;5;2m16889[39m: [38;5;2m      336:       [f a y] is to the left of [f b y] if [a < b], and [f x a] is above [f x b][39m
     [38;5;2m16890[39m: [38;5;2m      337:       if [a < b], but the exact alignment is unspecified if the various [f x y][39m
     [38;5;2m16891[39m: [38;5;2m      338:       have different dimensions. *)[39m
     [38;5;2m16892[39m: [38;5;2m      339: [39m
     [38;5;2m16893[39m: [38;5;2m      340:   val hsnap : ?align:[ `Left | `Middle | `Right ] -> int -> image -> image[39m
     [38;5;2m16894[39m: [38;5;2m      341:   (** [hsnap ~align w i] is an image of width strictly [w] obtained by either[39m
     [38;5;2m16895[39m: [38;5;2m      342:       horizontally padding or cropping [i] and positioning it according to[39m
     [38;5;2m16896[39m: [38;5;2m      343:       [~align].[39m
     [38;5;2m16897[39m: [38;5;2m      344: [39m
     [38;5;2m16898[39m: [38;5;2m      345:       [~align] defaults to [`Middle]. *)[39m
     [38;5;2m16899[39m: [38;5;2m      346: [39m
     [38;5;2m16900[39m: [38;5;2m      347:   val vsnap : ?align:[ `Top | `Middle | `Bottom ] -> int -> image -> image[39m
     [38;5;2m16901[39m: [38;5;2m      348:   (** [vsnap ~align h i] is an image of height strictly [h] obtained by either[39m
     [38;5;2m16902[39m: [38;5;2m      349:       vertically padding or cropping [i] and positioning it according to[39m
     [38;5;2m16903[39m: [38;5;2m      350:       [~align].[39m
     [38;5;2m16904[39m: [38;5;2m      351: [39m
     [38;5;2m16905[39m: [38;5;2m      352:       [~align] defaults to [`Middle]. *)[39m
     [38;5;2m16906[39m: [38;5;2m      353: [39m
     [38;5;2m16907[39m: [38;5;2m      354:   (** {1 [Format] interoperability} *)[39m
     [38;5;2m16908[39m: [38;5;2m      355: [39m
     [38;5;2m16909[39m: [38;5;2m      356:   val strf : ?attr:attr -> ?w:int -> ('a, Format.formatter, unit, image) format4 -> 'a[39m
     [38;5;2m16910[39m: [38;5;2m      357:   (** [strf ?attr ?w:width format ...] pretty-prints like[39m
     [38;5;2m16911[39m: [38;5;2m      358:       [Format.asprintf format ...], but returns an [image].[39m
     [38;5;2m16912[39m: [38;5;2m      359: [39m
     [38;5;2m16913[39m: [38;5;2m      360:       [attr] is the (outermost) attribute. Defaults to {!A.empty}.[39m
     [38;5;2m16914[39m: [38;5;2m      361: [39m
     [38;5;2m16915[39m: [38;5;2m      362:       [width] is used to set the margin on the formatter. This is only a hint,[39m
     [38;5;2m16916[39m: [38;5;2m      363:       and does not guarantee the width of the result. Consult[39m
     [38;5;2m16917[39m: [38;5;2m      364:       {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#VALset_margin}[39m
     [38;5;2m16918[39m: [38;5;2m      365:       [Format.set_margin]} for details. Defaults to an unspecified, large[39m
     [38;5;2m16919[39m: [38;5;2m      366:       number.[39m
     [38;5;2m16920[39m: [38;5;2m      367: [39m
     [38;5;2m16921[39m: [38;5;2m      368:       @raise Invalid_argument if the printing process attempts to directly[39m
     [38;5;2m16922[39m: [38;5;2m      369:       output {{!ctrls}control characters}, by embedding them in [format] or a[39m
     [38;5;2m16923[39m: [38;5;2m      370:       string printed with the [%s] conversion, for example.[39m
     [38;5;2m16924[39m: [38;5;2m      371:       {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#fpp}[39m
     [38;5;2m16925[39m: [38;5;2m      372:       Formatted printing} is allowed. *)[39m
     [38;5;2m16926[39m: [38;5;2m      373: [39m
     [38;5;2m16927[39m: [38;5;2m      374:   val kstrf : ?attr:attr -> ?w:int -> (image -> 'a) -> ('b, Format.formatter, unit, 'a) format4 -> 'b[39m
     [38;5;2m16928[39m: [38;5;2m      375:   (** [kstrf ?attr ?w k format ...] is continuation-based [strf ?attr ?w format ...]. *)[39m
     [38;5;2m16929[39m: [38;5;2m      376: [39m
     [38;5;2m16930[39m: [38;5;2m      377:   val pp_attr : attr -> (Format.formatter -> 'a -> unit) -> Format.formatter -> 'a -> unit[39m
     [38;5;2m16931[39m: [38;5;2m      378:   (** [pp_attr a f] is a pretty-printer like [f], except its output is styled[39m
     [38;5;2m16932[39m: [38;5;2m      379:       with [a]. This applies only outside of any styling [f] itself might embed. *)[39m
     [38;5;2m16933[39m: [38;5;2m      380: end[39m
     [38;5;2m16934[39m: [38;5;2m      381: [39m
     [38;5;2m16935[39m: [38;5;2m      382: (** Operators, repeated. *)[39m
     [38;5;2m16936[39m: [38;5;2m      383: module Infix : sig[39m
     [38;5;2m16937[39m: [38;5;2m      384: [39m
     [38;5;2m16938[39m: [38;5;2m      385:   (** {2 [I]}[39m
     [38;5;2m16939[39m: [38;5;2m      386: [39m
     [38;5;2m16940[39m: [38;5;2m      387:       See {{!I}[I]}. *)[39m
     [38;5;2m16941[39m: [38;5;2m      388: [39m
     [38;5;2m16942[39m: [38;5;2m      389:   val (<->) : image -> image -> image[39m
     [38;5;2m16943[39m: [38;5;2m      390:   val (<|>) : image -> image -> image[39m
     [38;5;2m16944[39m: [38;5;2m      391:   val (</>) : image -> image -> image[39m
     [38;5;2m16945[39m: [38;5;2m      392: [39m
     [38;5;2m16946[39m: [38;5;2m      393:   (** {2 [A]}[39m
     [38;5;2m16947[39m: [38;5;2m      394: [39m
     [38;5;2m16948[39m: [38;5;2m      395:       See {{!A}[A]}. *)[39m
     [38;5;2m16949[39m: [38;5;2m      396: [39m
     [38;5;2m16950[39m: [38;5;2m      397:   val (++)  : attr -> attr -> attr[39m
     [38;5;2m16951[39m: [38;5;2m      398: end[39m
     [38;5;2m16952[39m: [38;5;2m      399: [39m
     [38;5;2m16953[39m: [38;5;2m      400: (** {1 Low-level interface}[39m
     [38;5;2m16954[39m: [38;5;2m      401: [39m
     [38;5;2m16955[39m: [38;5;2m      402:     You can ignore it, unless you are porting [Notty] to a new platform not[39m
     [38;5;2m16956[39m: [38;5;2m      403:     supported by the existing IO backends. *)[39m
     [38;5;2m16957[39m: [38;5;2m      404: [39m
     [38;5;2m16958[39m: [38;5;2m      405: (** Terminal capabilities.[39m
     [38;5;2m16959[39m: [38;5;2m      406: [39m
     [38;5;2m16960[39m: [38;5;2m      407:     This module describes how to output things so that a terminal understands[39m
     [38;5;2m16961[39m: [38;5;2m      408:     them. *)[39m
     [38;5;2m16962[39m: [38;5;2m      409: module Cap : sig[39m
     [38;5;2m16963[39m: [38;5;2m      410: [39m
     [38;5;2m16964[39m: [38;5;2m      411:   type t[39m
     [38;5;2m16965[39m: [38;5;2m      412:   (** A set of capabilities that distinguish terminals from one another.[39m
     [38;5;2m16966[39m: [38;5;2m      413: [39m
     [38;5;2m16967[39m: [38;5;2m      414:       A bundle of magic strings, really. *)[39m
     [38;5;2m16968[39m: [38;5;2m      415: [39m
     [38;5;2m16969[39m: [38;5;2m      416:   val ansi : t[39m
     [38;5;2m16970[39m: [38;5;2m      417:   (** The usual ANSI terminal, with colors, text styles and cursor[39m
     [38;5;2m16971[39m: [38;5;2m      418:       positioning. *)[39m
     [38;5;2m16972[39m: [38;5;2m      419: [39m
     [38;5;2m16973[39m: [38;5;2m      420:   val dumb : t[39m
     [38;5;2m16974[39m: [38;5;2m      421:   (** Pure text output. Text attributes are stripped and positioning is done[39m
     [38;5;2m16975[39m: [38;5;2m      422:       with the character [U+0020], SPACE. *)[39m
     [38;5;2m16976[39m: [38;5;2m      423: end[39m
     [38;5;2m16977[39m: [38;5;2m      424: [39m
     [38;5;2m16978[39m: [38;5;2m      425: (** Dump images to string buffers. *)[39m
     [38;5;2m16979[39m: [38;5;2m      426: module Render : sig[39m
     [38;5;2m16980[39m: [38;5;2m      427: [39m
     [38;5;2m16981[39m: [38;5;2m      428:   val to_buffer : Buffer.t -> Cap.t -> int * int -> int * int -> image -> unit[39m
     [38;5;2m16982[39m: [38;5;2m      429:   (** [to_buffer buf cap (x, y) (w, h) i] writes the string representation of[39m
     [38;5;2m16983[39m: [38;5;2m      430:       [i] to [buf], as interpreted by [cap].[39m
     [38;5;2m16984[39m: [38;5;2m      431: [39m
     [38;5;2m16985[39m: [38;5;2m      432:       It renders the [w * h] rectangle of [i], offset by [(x, y)] from the top[39m
     [38;5;2m16986[39m: [38;5;2m      433:       left. *)[39m
     [38;5;2m16987[39m: [38;5;2m      434: [39m
     [38;5;2m16988[39m: [38;5;2m      435:   val pp : Cap.t -> Format.formatter -> image -> unit[39m
     [38;5;2m16989[39m: [38;5;2m      436:   (** [pp cap ppf i] renders [i] to the pretty-printer [ppf].[39m
     [38;5;2m16990[39m: [38;5;2m      437: [39m
     [38;5;2m16991[39m: [38;5;2m      438:       {b Note} [pp] is generally meant for development and debugging. It tries[39m
     [38;5;2m16992[39m: [38;5;2m      439:       to be reasonable, but dedicated IO modules handle the actual output[39m
     [38;5;2m16993[39m: [38;5;2m      440:       better. *)[39m
     [38;5;2m16994[39m: [38;5;2m      441: [39m
     [38;5;2m16995[39m: [38;5;2m      442:   (**/**)[39m
     [38;5;2m16996[39m: [38;5;2m      443:   (* Toplevel. *)[39m
     [38;5;2m16997[39m: [38;5;2m      444:   val pp_image : Format.formatter -> image -> unit[39m
     [38;5;2m16998[39m: [38;5;2m      445:   val pp_attr : Format.formatter -> attr -> unit[39m
     [38;5;2m16999[39m: [38;5;2m      446:   (**/**)[39m
     [38;5;2m17000[39m: [38;5;2m      447: end[39m
     [38;5;2m17001[39m: [38;5;2m      448: [39m
     [38;5;2m17002[39m: [38;5;2m      449: (** Parse and decode escape sequences in character streams. *)[39m
     [38;5;2m17003[39m: [38;5;2m      450: module Unescape : sig[39m
     [38;5;2m17004[39m: [38;5;2m      451: [39m
     [38;5;2m17005[39m: [38;5;2m      452:   (** {1 Input events} *)[39m
     [38;5;2m17006[39m: [38;5;2m      453: [39m
     [38;5;2m17007[39m: [38;5;2m      454:   type special = [[39m
     [38;5;2m17008[39m: [38;5;2m      455:     `Escape[39m
     [38;5;2m17009[39m: [38;5;2m      456:   | `Enter[39m
     [38;5;2m17010[39m: [38;5;2m      457:   | `Tab[39m
     [38;5;2m17011[39m: [38;5;2m      458:   | `Backspace[39m
     [38;5;2m17012[39m: [38;5;2m      459:   | `Insert[39m
     [38;5;2m17013[39m: [38;5;2m      460:   | `Delete[39m
     [38;5;2m17014[39m: [38;5;2m      461:   | `Home | `End[39m
     [38;5;2m17015[39m: [38;5;2m      462:   | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m17016[39m: [38;5;2m      463:   | `Page of [ `Up | `Down ][39m
     [38;5;2m17017[39m: [38;5;2m      464:   | `Function of int[39m
     [38;5;2m17018[39m: [38;5;2m      465:   ][39m
     [38;5;2m17019[39m: [38;5;2m      466:   (** A selection of extra keys on the keyboard. *)[39m
     [38;5;2m17020[39m: [38;5;2m      467: [39m
     [38;5;2m17021[39m: [38;5;2m      468:   type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m17022[39m: [38;5;2m      469:   (** Mouse buttons. *)[39m
     [38;5;2m17023[39m: [38;5;2m      470: [39m
     [38;5;2m17024[39m: [38;5;2m      471:   type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m17025[39m: [38;5;2m      472:   (** Modifier state. *)[39m
     [38;5;2m17026[39m: [38;5;2m      473: [39m
     [38;5;2m17027[39m: [38;5;2m      474:   type key = [ special | `Uchar of Uchar.t | `ASCII of char ] * mods[39m
     [38;5;2m17028[39m: [38;5;2m      475:   (** Keypress event. *)[39m
     [38;5;2m17029[39m: [38;5;2m      476: [39m
     [38;5;2m17030[39m: [38;5;2m      477:   type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m17031[39m: [38;5;2m      478:   (** Mouse event. *)[39m
     [38;5;2m17032[39m: [38;5;2m      479: [39m
     [38;5;2m17033[39m: [38;5;2m      480:   type paste = [ `Start | `End ][39m
     [38;5;2m17034[39m: [38;5;2m      481:   (** Paste event. *)[39m
     [38;5;2m17035[39m: [38;5;2m      482: [39m
     [38;5;2m17036[39m: [38;5;2m      483:   type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m17037[39m: [38;5;2m      484:   (** Things that terminals say to applications.[39m
     [38;5;2m17038[39m: [38;5;2m      485: [39m
     [38;5;2m17039[39m: [38;5;2m      486:       {ul[39m
     [38;5;2m17040[39m: [38;5;2m      487:       {- [`Key (k, mods)] is keyboard input.[39m
     [38;5;2m17041[39m: [38;5;2m      488: [39m
     [38;5;2m17042[39m: [38;5;2m      489:          [k] is a {{!key}key}, one of:[39m
     [38;5;2m17043[39m: [38;5;2m      490:          {ul[39m
     [38;5;2m17044[39m: [38;5;2m      491:          {- [`ASCII c] where [c] is a [char] in the[39m
     [38;5;2m17045[39m: [38;5;2m      492:             {{: https://tools.ietf.org/html/rfc20}ASCII} range;}[39m
     [38;5;2m17046[39m: [38;5;2m      493:          {- [`Uchar u] where [u] is any other {{!Uchar.t}unicode character}; or}[39m
     [38;5;2m17047[39m: [38;5;2m      494:          {- a {{!special}special key}.}}[39m
     [38;5;2m17048[39m: [38;5;2m      495: [39m
     [38;5;2m17049[39m: [38;5;2m      496:          [`ASCII] and [`Uchar] together represent the textual part of the input.[39m
     [38;5;2m17050[39m: [38;5;2m      497:          These characters are guaranteed not to be {{!ctrls}control[39m
     [38;5;2m17051[39m: [38;5;2m      498:          characters}, and are safe to use when constructing images. ASCII is[39m
     [38;5;2m17052[39m: [38;5;2m      499:          separated from the rest of Unicode for convenient pattern-matching.[39m
     [38;5;2m17053[39m: [38;5;2m      500: [39m
     [38;5;2m17054[39m: [38;5;2m      501:          [mods] are the extra {{!mods}modifier keys}.[39m
     [38;5;2m17055[39m: [38;5;2m      502: [39m
     [38;5;2m17056[39m: [38;5;2m      503:          }[39m
     [38;5;2m17057[39m: [38;5;2m      504:       {- [`Mouse (event, (x, y), mods)] is mouse input.[39m
     [38;5;2m17058[39m: [38;5;2m      505: [39m
     [38;5;2m17059[39m: [38;5;2m      506:          [event] is the actual mouse event: {{!button}[button]} press, release,[39m
     [38;5;2m17060[39m: [38;5;2m      507:          or motion of the mouse with buttons depressed.[39m
     [38;5;2m17061[39m: [38;5;2m      508: [39m
     [38;5;2m17062[39m: [38;5;2m      509:          [(x, y)] are column and row position of the mouse. The origin is[39m
     [38;5;2m17063[39m: [38;5;2m      510:          [(0,0)], the upper-left corner.[39m
     [38;5;2m17064[39m: [38;5;2m      511: [39m
     [38;5;2m17065[39m: [38;5;2m      512:          {b Note} Every [`Press (`Left|`Middle|`Right)] generates a corresponding[39m
     [38;5;2m17066[39m: [38;5;2m      513:          [`Release], but there is no portable way to detect which button was[39m
     [38;5;2m17067[39m: [38;5;2m      514:          released. [`Scroll (`Up|`Down)] presses are not followed by releases.[39m
     [38;5;2m17068[39m: [38;5;2m      515: [39m
     [38;5;2m17069[39m: [38;5;2m      516:          }[39m
     [38;5;2m17070[39m: [38;5;2m      517:       {- [`Paste (`Start|`End)] are {e bracketed paste} events, signalling the[39m
     [38;5;2m17071[39m: [38;5;2m      518:          beginning and end of a sequence of events pasted into the terminal.[39m
     [38;5;2m17072[39m: [38;5;2m      519: [39m
     [38;5;2m17073[39m: [38;5;2m      520:          {b Note} This mechanism is useful, but not reliable. The pasted text[39m
     [38;5;2m17074[39m: [38;5;2m      521:          could contain spurious start-of-paste or end-of-paste markers, or they[39m
     [38;5;2m17075[39m: [38;5;2m      522:          could be entered by hand. }}[39m
     [38;5;2m17076[39m: [38;5;2m      523: [39m
     [38;5;2m17077[39m: [38;5;2m      524:       Terminal input protocols are historical cruft, and heavily overload the[39m
     [38;5;2m17078[39m: [38;5;2m      525:       ASCII range. For instance:[39m
     [38;5;2m17079[39m: [38;5;2m      526:       {ul[39m
     [38;5;2m17080[39m: [38;5;2m      527:       {- It is impossible to distinguish lower- and upper-case ASCII characters[39m
     [38;5;2m17081[39m: [38;5;2m      528:          if {b Ctrl} is pressed;}[39m
     [38;5;2m17082[39m: [38;5;2m      529:       {- several combinations of key-presses are aliased as special keys; and}[39m
     [38;5;2m17083[39m: [38;5;2m      530:       {- in a UTF-8 encoded stream, there is no representation for non-ASCII[39m
     [38;5;2m17084[39m: [38;5;2m      531:          characters with modifier keys.}}[39m
     [38;5;2m17085[39m: [38;5;2m      532: [39m
     [38;5;2m17086[39m: [38;5;2m      533:       This means that many values that inhabit the [event] type are impossible,[39m
     [38;5;2m17087[39m: [38;5;2m      534:       while some reflect multiple different user actions. Limitations include:[39m
     [38;5;2m17088[39m: [38;5;2m      535: [39m
     [38;5;2m17089[39m: [38;5;2m      536:       {ul[39m
     [38;5;2m17090[39m: [38;5;2m      537:       {- [`Shift] is reported only with special keys, and not all of them.}[39m
     [38;5;2m17091[39m: [38;5;2m      538:       {- [`Meta] and [`Control] are reported with mouse events, key events with[39m
     [38;5;2m17092[39m: [38;5;2m      539:          special keys, and key events with values in the ranges [0x40-0x5f][39m
     [38;5;2m17093[39m: [38;5;2m      540:          ([@] to [_]) and [0x60-0x7e] ([`] to [~]). If {b Ctrl} is pressed, the higher[39m
     [38;5;2m17094[39m: [38;5;2m      541:          range is mapped into the lower range.}[39m
     [38;5;2m17095[39m: [38;5;2m      542:       {- Terminals will variously under-report modifier key state.}}[39m
     [38;5;2m17096[39m: [38;5;2m      543: [39m
     [38;5;2m17097[39m: [38;5;2m      544:       Perform own experiments before relying on elaborate key combinations. *)[39m
     [38;5;2m17098[39m: [38;5;2m      545: [39m
     [38;5;2m17099[39m: [38;5;2m      546:   val uchar : [< `Uchar of Uchar.t | `ASCII of char ] -> Uchar.t[39m
     [38;5;2m17100[39m: [38;5;2m      547:   (** [uchar x] is the {!Uchar.t} corresponding to [x]. This operations merges[39m
     [38;5;2m17101[39m: [38;5;2m      548:       the ASCII and Unicode variants of {{!key}key}. *)[39m
     [38;5;2m17102[39m: [38;5;2m      549: [39m
     [38;5;2m17103[39m: [38;5;2m      550:   (** {1 Decoding filter}[39m
     [38;5;2m17104[39m: [38;5;2m      551: [39m
     [38;5;2m17105[39m: [38;5;2m      552:       Simple IO-less terminal input processor. It can be used for building[39m
     [38;5;2m17106[39m: [38;5;2m      553:       custom terminal input abstractions. *)[39m
     [38;5;2m17107[39m: [38;5;2m      554: [39m
     [38;5;2m17108[39m: [38;5;2m      555:   type t[39m
     [38;5;2m17109[39m: [38;5;2m      556:   (** Input decoding filter.[39m
     [38;5;2m17110[39m: [38;5;2m      557: [39m
     [38;5;2m17111[39m: [38;5;2m      558:       The filter should be {{!input}fed} strings, which it first decodes from[39m
     [38;5;2m17112[39m: [38;5;2m      559:       UTF-8, and then extracts the input events.[39m
     [38;5;2m17113[39m: [38;5;2m      560: [39m
     [38;5;2m17114[39m: [38;5;2m      561:       Malformed UTF-8 input bytes and unrecognized escape sequences are silently[39m
     [38;5;2m17115[39m: [38;5;2m      562:       discarded. *)[39m
     [38;5;2m17116[39m: [38;5;2m      563: [39m
     [38;5;2m17117[39m: [38;5;2m      564:   val create : unit -> t[39m
     [38;5;2m17118[39m: [38;5;2m      565:   (** [create ()] is a new, empty filter. *)[39m
     [38;5;2m17119[39m: [38;5;2m      566: [39m
     [38;5;2m17120[39m: [38;5;2m      567:   val input : t -> bytes -> int -> int -> unit[39m
     [38;5;2m17121[39m: [38;5;2m      568:   (** [input t buffer i len] feeds [len] bytes of [string] into [t], starting[39m
     [38;5;2m17122[39m: [38;5;2m      569:       from position [len].[39m
     [38;5;2m17123[39m: [38;5;2m      570: [39m
     [38;5;2m17124[39m: [38;5;2m      571:       [len = 0] signals the end of input.[39m
     [38;5;2m17125[39m: [38;5;2m      572: [39m
     [38;5;2m17126[39m: [38;5;2m      573:       [buffer] is immediately processed and can be reused after the call[39m
     [38;5;2m17127[39m: [38;5;2m      574:       returns. *)[39m
     [38;5;2m17128[39m: [38;5;2m      575: [39m
     [38;5;2m17129[39m: [38;5;2m      576:   val next : t -> [ event | `Await | `End ][39m
     [38;5;2m17130[39m: [38;5;2m      577:   (** [next t] is the next event in the filter's input stream:[39m
     [38;5;2m17131[39m: [38;5;2m      578: [39m
     [38;5;2m17132[39m: [38;5;2m      579:       {ul[39m
     [38;5;2m17133[39m: [38;5;2m      580:       {- [#event], an input {{!event}[event]}.}[39m
     [38;5;2m17134[39m: [38;5;2m      581:       {- [`Await] if the filter needs more {{!input}input}.}[39m
     [38;5;2m17135[39m: [38;5;2m      582:       {- [`End] if the input had ended.}} *)[39m
     [38;5;2m17136[39m: [38;5;2m      583: [39m
     [38;5;2m17137[39m: [38;5;2m      584:   val pending : t -> bool[39m
     [38;5;2m17138[39m: [38;5;2m      585:   (** [pending t] is [true] if a call to [next], without any intervening input,[39m
     [38;5;2m17139[39m: [38;5;2m      586:       would {e not} return [`Await]. *)[39m
     [38;5;2m17140[39m: [38;5;2m      587: [39m
     [38;5;2m17141[39m: [38;5;2m      588:   (** {1 Low-level parsing}[39m
     [38;5;2m17142[39m: [38;5;2m      589: [39m
     [38;5;2m17143[39m: [38;5;2m      590:       {b Warning} The parsing interface is subject to change.[39m
     [38;5;2m17144[39m: [38;5;2m      591: [39m
     [38;5;2m17145[39m: [38;5;2m      592:       Implementation of small parts of[39m
     [38;5;2m17146[39m: [38;5;2m      593:       {{: http://www.ecma-international.org/publications/standards/Ecma-035.htm}ECMA-35}[39m
     [38;5;2m17147[39m: [38;5;2m      594:       and[39m
     [38;5;2m17148[39m: [38;5;2m      595:       {{: http://www.ecma-international.org/publications/standards/Ecma-048.htm}ECMA-48},[39m
     [38;5;2m17149[39m: [38;5;2m      596:       as needed by terminal emulators in common use. *)[39m
     [38;5;2m17150[39m: [38;5;2m      597: [39m
     [38;5;2m17151[39m: [38;5;2m      598:   val decode : Uchar.t list -> event list[39m
     [38;5;2m17152[39m: [38;5;2m      599:   (** [decode us] are the events encoded by [us].[39m
     [38;5;2m17153[39m: [38;5;2m      600: [39m
     [38;5;2m17154[39m: [38;5;2m      601:       [us] are assumed to have been generated in a burst, and the end of the[39m
     [38;5;2m17155[39m: [38;5;2m      602:       list is taken to mean a pause.[39m
     [38;5;2m17156[39m: [38;5;2m      603:       Therefore, [decode us1 @ decode us2 <> decode (us1 @ us2)] if [us1] ends[39m
     [38;5;2m17157[39m: [38;5;2m      604:       with a partial escape sequence, including a lone [\x1b].[39m
     [38;5;2m17158[39m: [38;5;2m      605: [39m
     [38;5;2m17159[39m: [38;5;2m      606:       Unsupported escape sequences are silently discarded. *)[39m
     [38;5;2m17160[39m: [38;5;2m      607: end[39m
     [38;5;2m17161[39m: [38;5;2m      608: [39m
     [38;5;2m17162[39m: [38;5;2m      609: (**/**)[39m
     [38;5;2m17163[39m: [38;5;2m      610: (** {1 Private}[39m
     [38;5;2m17164[39m: [38;5;2m      611: [39m
     [38;5;2m17165[39m: [38;5;2m      612:     These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m17166[39m: [38;5;2m      613: [39m
     [38;5;2m17167[39m: [38;5;2m      614: module Operation : sig[39m
     [38;5;2m17168[39m: [38;5;2m      615:   type t[39m
     [38;5;2m17169[39m: [38;5;2m      616:   val of_image : (int * int) -> int * int -> image -> t list[39m
     [38;5;2m17170[39m: [38;5;2m      617: end[39m
     [38;5;2m17171[39m: [38;5;2m      618: [39m
     [38;5;2m17172[39m: [38;5;2m      619: module Tmachine : sig[39m
     [38;5;2m17173[39m: [38;5;2m      620: [39m
     [38;5;2m17174[39m: [38;5;2m      621:   type t[39m
     [38;5;2m17175[39m: [38;5;2m      622: [39m
     [38;5;2m17176[39m: [38;5;2m      623:   val create  : mouse:bool -> bpaste:bool -> Cap.t -> t[39m
     [38;5;2m17177[39m: [38;5;2m      624:   val release : t -> bool[39m
     [38;5;2m17178[39m: [38;5;2m      625:   val output  : t -> Buffer.t -> unit[39m
     [38;5;2m17179[39m: [38;5;2m      626: [39m
     [38;5;2m17180[39m: [38;5;2m      627:   val refresh  : t -> unit[39m
     [38;5;2m17181[39m: [38;5;2m      628:   val cursor   : t -> (int * int) option -> unit[39m
     [38;5;2m17182[39m: [38;5;2m      629:   val image    : t -> image -> unit[39m
     [38;5;2m17183[39m: [38;5;2m      630: [39m
     [38;5;2m17184[39m: [38;5;2m      631:   val set_size : t -> int * int -> unit[39m
     [38;5;2m17185[39m: [38;5;2m      632: [39m
     [38;5;2m17186[39m: [38;5;2m      633:   val size : t -> int * int[39m
     [38;5;2m17187[39m: [38;5;2m      634:   val dead : t -> bool[39m
     [38;5;2m17188[39m: [38;5;2m      635: end[39m
     [38;5;2m17189[39m: [38;5;2m      636: [39m
     [38;5;2m17190[39m: [38;5;2m      637: module Direct : sig[39m
     [38;5;2m17191[39m: [38;5;2m      638:   val move_cursor : Buffer.t -> Cap.t -> [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m17192[39m: [38;5;2m      639:   val show_cursor : Buffer.t -> Cap.t -> bool -> unit[39m
     [38;5;2m17193[39m: [38;5;2m      640: end[39m
     [38;5;2m17194[39m: [38;5;2m      641: (**/**)[39m
     [38;5;2m17195[39m: [38;5;2m      642: [39m
     [38;5;2m17196[39m: [38;5;2m      643: (** {1:basics Basics}[39m
     [38;5;2m17197[39m: [38;5;2m      644: [39m
     [38;5;2m17198[39m: [38;5;2m      645:     Print a red-on-black ["Wow!"] above its right-shifted copy:[39m
     [38;5;2m17199[39m: [38;5;2m      646: {[[39m
     [38;5;2m17200[39m: [38;5;2m      647: let wow = I.string A.(fg red ++ bg black) "Wow!" in[39m
     [38;5;2m17201[39m: [38;5;2m      648: I.(wow <-> (void 2 0 <|> wow)) |> Notty_unix.output_image[39m
     [38;5;2m17202[39m: [38;5;2m      649: ]}[39m
     [38;5;2m17203[39m: [38;5;2m      650: [39m
     [38;5;2m17204[39m: [38;5;2m      651:     {2:meaning The meaning of images}[39m
     [38;5;2m17205[39m: [38;5;2m      652: [39m
     [38;5;2m17206[39m: [38;5;2m      653:     An {{!image}[image]} value is a rectangle of styled character cells. It has a[39m
     [38;5;2m17207[39m: [38;5;2m      654:     width and height, but is not anchored to an origin. A single character with[39m
     [38;5;2m17208[39m: [38;5;2m      655:     associated display attributes, or a short fragment of text, are simple[39m
     [38;5;2m17209[39m: [38;5;2m      656:     examples of images.[39m
     [38;5;2m17210[39m: [38;5;2m      657: [39m
     [38;5;2m17211[39m: [38;5;2m      658:     Images are created by combining text fragments with {{!attributes}display[39m
     [38;5;2m17212[39m: [38;5;2m      659:     attributes}, and composed by placing them {{!I.(<|>)}beside} each other,[39m
     [38;5;2m17213[39m: [38;5;2m      660:     {{!I.(<->)}above} each other, and {{!I.(</>)}over} each other.[39m
     [38;5;2m17214[39m: [38;5;2m      661: [39m
     [38;5;2m17215[39m: [38;5;2m      662:     Once constructed, an image can be rendered, and only at that point it obtains[39m
     [38;5;2m17216[39m: [38;5;2m      663:     absolute placement.[39m
     [38;5;2m17217[39m: [38;5;2m      664: [39m
     [38;5;2m17218[39m: [38;5;2m      665:     Consult {{!I}[I]} for more details.[39m
     [38;5;2m17219[39m: [38;5;2m      666: [39m
     [38;5;2m17220[39m: [38;5;2m      667:     {2:attributes Display attributes}[39m
     [38;5;2m17221[39m: [38;5;2m      668: [39m
     [38;5;2m17222[39m: [38;5;2m      669:     {{!attr}[attr]} values describe the styling characteristics of fragments of[39m
     [38;5;2m17223[39m: [38;5;2m      670:     text.[39m
     [38;5;2m17224[39m: [38;5;2m      671: [39m
     [38;5;2m17225[39m: [38;5;2m      672:     They combine a foreground and a background {{!A.color}[color]} with a[39m
     [38;5;2m17226[39m: [38;5;2m      673:     set of {{!A.style}[styles]}. Either color can be {e unset}, which corresponds to[39m
     [38;5;2m17227[39m: [38;5;2m      674:     the terminal's default foreground (resp. background) color.[39m
     [38;5;2m17228[39m: [38;5;2m      675: [39m
     [38;5;2m17229[39m: [38;5;2m      676:     Attributes are used to construct primitive images.[39m
     [38;5;2m17230[39m: [38;5;2m      677: [39m
     [38;5;2m17231[39m: [38;5;2m      678:     Consult {{!A}[A]} for more details.[39m
     [38;5;2m17232[39m: [38;5;2m      679: [39m
     [38;5;2m17233[39m: [38;5;2m      680:     {2:ctrls Control characters}[39m
     [38;5;2m17234[39m: [38;5;2m      681: [39m
     [38;5;2m17235[39m: [38;5;2m      682:     These are taken to be characters in the ranges [0x00-0x1f] ({b C0}), [0x7f][39m
     [38;5;2m17236[39m: [38;5;2m      683:     (BACKSPACE), [0x80-0x9f] ({b C1}). This is the[39m
     [38;5;2m17237[39m: [38;5;2m      684:     {{: http://unicode.org/reports/tr44/#General_Category_Values}Unicode[39m
     [38;5;2m17238[39m: [38;5;2m      685:     general category} {b Cc}.[39m
     [38;5;2m17239[39m: [38;5;2m      686: [39m
     [38;5;2m17240[39m: [38;5;2m      687:     As control characters directly influence the cursor positioning, they[39m
     [38;5;2m17241[39m: [38;5;2m      688:     cannot be used to create images.[39m
     [38;5;2m17242[39m: [38;5;2m      689: [39m
     [38;5;2m17243[39m: [38;5;2m      690:     This, in particular, means that images cannot contain [U+000a] (NEWLINE).[39m
     [38;5;2m17244[39m: [38;5;2m      691: [39m
     [38;5;2m17245[39m: [38;5;2m      692:     {1:limitations Limitations}[39m
     [38;5;2m17246[39m: [38;5;2m      693: [39m
     [38;5;2m17247[39m: [38;5;2m      694:     [Notty] does not use Terminfo. If your terminal is particularly[39m
     [38;5;2m17248[39m: [38;5;2m      695:     idiosyncratic, things might fail to work. Get in touch with the author to[39m
     [38;5;2m17249[39m: [38;5;2m      696:     expand support.[39m
     [38;5;2m17250[39m: [38;5;2m      697: [39m
     [38;5;2m17251[39m: [38;5;2m      698:     [Notty] assumes that the terminal is using UTF-8 for input and output.[39m
     [38;5;2m17252[39m: [38;5;2m      699:     Things might break arbitrarily if this is not the case.[39m
     [38;5;2m17253[39m: [38;5;2m      700: [39m
     [38;5;2m17254[39m: [38;5;2m      701:     For performance considerations, consult the {{!perf}performance model}.[39m
     [38;5;2m17255[39m: [38;5;2m      702: [39m
     [38;5;2m17256[39m: [38;5;2m      703:     {2:cwidth Unicode vs. Text geometry}[39m
     [38;5;2m17257[39m: [38;5;2m      704: [39m
     [38;5;2m17258[39m: [38;5;2m      705:     [Notty] uses [Uucp.Break.tty_width_hint] to guess the width of text[39m
     [38;5;2m17259[39m: [38;5;2m      706:     fragments when computing geometry, and it suffers from the same[39m
     [38;5;2m17260[39m: [38;5;2m      707:     shortcomings:[39m
     [38;5;2m17261[39m: [38;5;2m      708: [39m
     [38;5;2m17262[39m: [38;5;2m      709:     {ul[39m
     [38;5;2m17263[39m: [38;5;2m      710:     {- Geometry in general works for alphabets and east Asian scripts, mostly[39m
     [38;5;2m17264[39m: [38;5;2m      711:         works for abjad scripts, and is a matter of luck for abugidas.}[39m
     [38;5;2m17265[39m: [38;5;2m      712:     {- East Asian scripts work better when in[39m
     [38;5;2m17266[39m: [38;5;2m      713:         {{:http://unicode.org/glossary/#normalization_form_c}NFC}.}[39m
     [38;5;2m17267[39m: [38;5;2m      714:     {- For proper emoji display, [Uucp] and the terminal have to agree on the[39m
     [38;5;2m17268[39m: [38;5;2m      715:        Unicode version.}}[39m
     [38;5;2m17269[39m: [38;5;2m      716: [39m
     [38;5;2m17270[39m: [38;5;2m      717:     When in doubt, see[39m
     [38;5;2m17271[39m: [38;5;2m      718:     {{: http://erratique.ch/software/uucp/doc/Uucp.Break.html#VALtty_width_hint}[39m
     [38;5;2m17272[39m: [38;5;2m      719:     [Uucp.Break.tty_width_hint]}.[39m
     [38;5;2m17273[39m: [38;5;2m      720: [39m
     [38;5;2m17274[39m: [38;5;2m      721:     Unicode has special interaction with {{!I.hcrop}horizontal cropping}:[39m
     [38;5;2m17275[39m: [38;5;2m      722:     {ul[39m
     [38;5;2m17276[39m: [38;5;2m      723:     {- Strings within images are cropped at {{:[39m
     [38;5;2m17277[39m: [38;5;2m      724:         http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries}grapheme[39m
     [38;5;2m17278[39m: [38;5;2m      725:         cluster} boundaries. This means that scalar value sequences that are[39m
     [38;5;2m17279[39m: [38;5;2m      726:         rendered combined, or overlaid, stay unbroken.}[39m
     [38;5;2m17280[39m: [38;5;2m      727:     {- When a crop splits a wide character in two, the remaining half is[39m
     [38;5;2m17281[39m: [38;5;2m      728:         replaced by [U+0020] (SPACE). Hence, character-cell-accurate cropping is[39m
     [38;5;2m17282[39m: [38;5;2m      729:         possible even in the presence of characters that horizontally occupy[39m
     [38;5;2m17283[39m: [38;5;2m      730:         more than one cell.}}[39m
     [38;5;2m17284[39m: [38;5;2m      731: [39m
     [38;5;2m17285[39m: [38;5;2m      732:     {1:examples Examples}[39m
     [38;5;2m17286[39m: [38;5;2m      733: [39m
     [38;5;2m17287[39m: [38;5;2m      734:     We assume a toplevel with [Notty] support ([#require "notty.top"]).[39m
     [38;5;2m17288[39m: [38;5;2m      735: [39m
     [38;5;2m17289[39m: [38;5;2m      736:     {2 Hello}[39m
     [38;5;2m17290[39m: [38;5;2m      737: [39m
     [38;5;2m17291[39m: [38;5;2m      738:     ["Rad!"] with default foreground and background:[39m
     [38;5;2m17292[39m: [38;5;2m      739: [39m
     [38;5;2m17293[39m: [38;5;2m      740:     {[I.string A.empty "Rad!"]}[39m
     [38;5;2m17294[39m: [38;5;2m      741: [39m
     [38;5;2m17295[39m: [38;5;2m      742:     Everything has to start somewhere.[39m
     [38;5;2m17296[39m: [38;5;2m      743: [39m
     [38;5;2m17297[39m: [38;5;2m      744:     {2 Colors}[39m
     [38;5;2m17298[39m: [38;5;2m      745: [39m
     [38;5;2m17299[39m: [38;5;2m      746:     ["Rad!"] in rad letters:[39m
     [38;5;2m17300[39m: [38;5;2m      747: [39m
     [38;5;2m17301[39m: [38;5;2m      748:     {[I.string A.(fg lightred) "Rad!"]}[39m
     [38;5;2m17302[39m: [38;5;2m      749: [39m
     [38;5;2m17303[39m: [38;5;2m      750:     {2 Padding and spacing}[39m
     [38;5;2m17304[39m: [38;5;2m      751: [39m
     [38;5;2m17305[39m: [38;5;2m      752: {[[39m
     [38;5;2m17306[39m: [38;5;2m      753: let a1 = A.(fg lightwhite ++ bg red)[39m
     [38;5;2m17307[39m: [38;5;2m      754: and a2 = A.(fg red)[39m
     [38;5;2m17308[39m: [38;5;2m      755: ]}[39m
     [38;5;2m17309[39m: [38;5;2m      756: [39m
     [38;5;2m17310[39m: [38;5;2m      757:     ["Rad"] and [" stuff!"] in different colors:[39m
     [38;5;2m17311[39m: [38;5;2m      758: [39m
     [38;5;2m17312[39m: [38;5;2m      759:     {[I.(string a1 "Rad" <|> string a2 " stuff!")]}[39m
     [38;5;2m17313[39m: [38;5;2m      760: [39m
     [38;5;2m17314[39m: [38;5;2m      761:     The second word hanging on a line below:[39m
     [38;5;2m17315[39m: [38;5;2m      762: [39m
     [38;5;2m17316[39m: [38;5;2m      763:     {[I.(string a1 "Rad" <|> (string a2 "stuff!" |> vpad 1 0))]}[39m
     [38;5;2m17317[39m: [38;5;2m      764: [39m
     [38;5;2m17318[39m: [38;5;2m      765:     {2 More geometry}[39m
     [38;5;2m17319[39m: [38;5;2m      766: [39m
     [38;5;2m17320[39m: [38;5;2m      767:     Sierpinski triangle:[39m
     [38;5;2m17321[39m: [38;5;2m      768: [39m
     [38;5;2m17322[39m: [38;5;2m      769: {[[39m
     [38;5;2m17323[39m: [38;5;2m      770: let square = "\xe2\x96\xaa"[39m
     [38;5;2m17324[39m: [38;5;2m      771: [39m
     [38;5;2m17325[39m: [38;5;2m      772: let rec sierp n =[39m
     [38;5;2m17326[39m: [38;5;2m      773:   if n > 1 then[39m
     [38;5;2m17327[39m: [38;5;2m      774:     let ss = sierp (pred n) in I.(ss <-> (ss <|> ss))[39m
     [38;5;2m17328[39m: [38;5;2m      775:   else I.(string A.(fg magenta) square |> hpad 1 0)[39m
     [38;5;2m17329[39m: [38;5;2m      776: ]}[39m
     [38;5;2m17330[39m: [38;5;2m      777: [39m
     [38;5;2m17331[39m: [38;5;2m      778:     {[sierp 8]}[39m
     [38;5;2m17332[39m: [38;5;2m      779: [39m
     [38;5;2m17333[39m: [38;5;2m      780:     A triangle overlaid over its shifted copy:[39m
     [38;5;2m17334[39m: [38;5;2m      781: [39m
     [38;5;2m17335[39m: [38;5;2m      782:     {[let s = sierp 6 in I.(s </> vpad 1 0 s)]}[39m
     [38;5;2m17336[39m: [38;5;2m      783: [39m
     [38;5;2m17337[39m: [38;5;2m      784:     Blinkenlights:[39m
     [38;5;2m17338[39m: [38;5;2m      785: [39m
     [38;5;2m17339[39m: [38;5;2m      786: {[[39m
     [38;5;2m17340[39m: [38;5;2m      787: let rad n color =[39m
     [38;5;2m17341[39m: [38;5;2m      788:   let a1 = A.fg color in[39m
     [38;5;2m17342[39m: [38;5;2m      789:   let a2 = A.(st blink ++ a1) in[39m
     [38;5;2m17343[39m: [38;5;2m      790:   I.((string a2 "Rad" |> hpad n 0) <->[39m
     [38;5;2m17344[39m: [38;5;2m      791:      (string a1 "(⌐■_■)" |> hpad (n + 7) 0))[39m
     [38;5;2m17345[39m: [38;5;2m      792: [39m
     [38;5;2m17346[39m: [38;5;2m      793: let colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m17347[39m: [38;5;2m      794: ]}[39m
     [38;5;2m17348[39m: [38;5;2m      795: [39m
     [38;5;2m17349[39m: [38;5;2m      796: {[[39m
     [38;5;2m17350[39m: [38;5;2m      797: colors |> List.mapi I.(fun i c -> rad i c |> pad ~t:i ~l:(2 * i))[39m
     [38;5;2m17351[39m: [38;5;2m      798:        |> I.zcat[39m
     [38;5;2m17352[39m: [38;5;2m      799: ]}[39m
     [38;5;2m17353[39m: [38;5;2m      800: [39m
     [38;5;2m17354[39m: [38;5;2m      801:     {b Note} Usage of {{!A.blink}[blink]} might be regulated by law in some[39m
     [38;5;2m17355[39m: [38;5;2m      802:     jurisdictions.[39m
     [38;5;2m17356[39m: [38;5;2m      803: [39m
     [38;5;2m17357[39m: [38;5;2m      804:     {2 Pretty-printing}[39m
     [38;5;2m17358[39m: [38;5;2m      805: [39m
     [38;5;2m17359[39m: [38;5;2m      806:     Images can be pretty-printed into:[39m
     [38;5;2m17360[39m: [38;5;2m      807: [39m
     [38;5;2m17361[39m: [38;5;2m      808:     {[I.strf "(%d)" 42]}[39m
     [38;5;2m17362[39m: [38;5;2m      809: [39m
     [38;5;2m17363[39m: [38;5;2m      810:     Attributes can be applied to the entire format string, or by decorating[39m
     [38;5;2m17364[39m: [38;5;2m      811:     {e user-defined printers} that are supplied with [%a] conversions:[39m
     [38;5;2m17365[39m: [38;5;2m      812: [39m
     [38;5;2m17366[39m: [38;5;2m      813:     {[let pp = Format.pp_print_int]}[39m
     [38;5;2m17367[39m: [38;5;2m      814: [39m
     [38;5;2m17368[39m: [38;5;2m      815:     {[I.strf ~attr:A.(fg lightwhite) "(%a)" (I.pp_attr A.(fg green) pp) 42]}[39m
     [38;5;2m17369[39m: [38;5;2m      816: [39m
     [38;5;2m17370[39m: [38;5;2m      817:     {2 Now with output}[39m
     [38;5;2m17371[39m: [38;5;2m      818: [39m
     [38;5;2m17372[39m: [38;5;2m      819:     The core module has no real IO. Examples above are simple [image]-valued[39m
     [38;5;2m17373[39m: [38;5;2m      820:     expressions, displayed by the pretty-printer that is installed by the[39m
     [38;5;2m17374[39m: [38;5;2m      821:     toplevel support. Self-contained programs need a separate IO module:[39m
     [38;5;2m17375[39m: [38;5;2m      822: [39m
     [38;5;2m17376[39m: [38;5;2m      823:     {[#require "notty.unix"]}[39m
     [38;5;2m17377[39m: [38;5;2m      824: [39m
     [38;5;2m17378[39m: [38;5;2m      825:     {[sierp 8 |> Notty_unix.output_image]}[39m
     [38;5;2m17379[39m: [38;5;2m      826: [39m
     [38;5;2m17380[39m: [38;5;2m      827:     (Note the difference in cropping behavior.)[39m
     [38;5;2m17381[39m: [38;5;2m      828: [39m
     [38;5;2m17382[39m: [38;5;2m      829:     Computations can be adapted to the current terminal size. A line can stretch[39m
     [38;5;2m17383[39m: [38;5;2m      830:     end-to-end:[39m
     [38;5;2m17384[39m: [38;5;2m      831: [39m
     [38;5;2m17385[39m: [38;5;2m      832: {[[39m
     [38;5;2m17386[39m: [38;5;2m      833: Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m17387[39m: [38;5;2m      834:   let i1 = I.string A.(fg green) "very"[39m
     [38;5;2m17388[39m: [38;5;2m      835:   and i2 = I.string A.(fg yellow) "melon" in[39m
     [38;5;2m17389[39m: [38;5;2m      836:   I.(i1 <|> void (w - width i1 - width i2) 1 <|> i2)[39m
     [38;5;2m17390[39m: [38;5;2m      837: ]}[39m
     [38;5;2m17391[39m: [38;5;2m      838: [39m
     [38;5;2m17392[39m: [38;5;2m      839:     The largest triangle that horizontally fits into the terminal:[39m
     [38;5;2m17393[39m: [38;5;2m      840: [39m
     [38;5;2m17394[39m: [38;5;2m      841: {[[39m
     [38;5;2m17395[39m: [38;5;2m      842: Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m17396[39m: [38;5;2m      843:   let steps = int_of_float ((log (float w)) /. log 2.) in[39m
     [38;5;2m17397[39m: [38;5;2m      844:   sierp steps |> I.vpad 0 1[39m
     [38;5;2m17398[39m: [38;5;2m      845: ]}[39m
     [38;5;2m17399[39m: [38;5;2m      846: [39m
     [38;5;2m17400[39m: [38;5;2m      847:     {2 Simple interaction}[39m
     [38;5;2m17401[39m: [38;5;2m      848: [39m
     [38;5;2m17402[39m: [38;5;2m      849:     Interactive Sierpinski:[39m
     [38;5;2m17403[39m: [38;5;2m      850: [39m
     [38;5;2m17404[39m: [38;5;2m      851:     {[open Notty_unix]}[39m
     [38;5;2m17405[39m: [38;5;2m      852: [39m
     [38;5;2m17406[39m: [38;5;2m      853: {[[39m
     [38;5;2m17407[39m: [38;5;2m      854: let img (double, n) =[39m
     [38;5;2m17408[39m: [38;5;2m      855:   let s = sierp n in[39m
     [38;5;2m17409[39m: [38;5;2m      856:   if double then I.(s </> vpad 1 0 s) else s[39m
     [38;5;2m17410[39m: [38;5;2m      857: in[39m
     [38;5;2m17411[39m: [38;5;2m      858: let rec update t state = Term.image t (img state); loop t state[39m
     [38;5;2m17412[39m: [38;5;2m      859: and loop t (double, n as state) =[39m
     [38;5;2m17413[39m: [38;5;2m      860:   match Term.event t with[39m
     [38;5;2m17414[39m: [38;5;2m      861:   | `Key (`Enter,_)        -> ()[39m
     [38;5;2m17415[39m: [38;5;2m      862:   | `Key (`Arrow `Left,_)  -> update t (double, max 1 (n - 1))[39m
     [38;5;2m17416[39m: [38;5;2m      863:   | `Key (`Arrow `Right,_) -> update t (double, min 8 (n + 1))[39m
     [38;5;2m17417[39m: [38;5;2m      864:   | `Key (`ASCII ' ', _)   -> update t (not double, n)[39m
     [38;5;2m17418[39m: [38;5;2m      865:   | `Resize _              -> update t state[39m
     [38;5;2m17419[39m: [38;5;2m      866:   | _                      -> loop t state[39m
     [38;5;2m17420[39m: [38;5;2m      867: in[39m
     [38;5;2m17421[39m: [38;5;2m      868: let t = Term.create ()[39m
     [38;5;2m17422[39m: [38;5;2m      869: in[39m
     [38;5;2m17423[39m: [38;5;2m      870: update t (false, 1); Term.release t[39m
     [38;5;2m17424[39m: [38;5;2m      871: ]}[39m
     [38;5;2m17425[39m: [38;5;2m      872: [39m
     [38;5;2m17426[39m: [38;5;2m      873:     The program uses a fullscreen {{!Notty_unix.Term}terminal} and loops reading[39m
     [38;5;2m17427[39m: [38;5;2m      874:     the {{!Notty_unix.Term.event}input}. LEFT and RIGHT control the iteration[39m
     [38;5;2m17428[39m: [38;5;2m      875:     count, and SPACE toggles double-drawing. Resizing the window causes a[39m
     [38;5;2m17429[39m: [38;5;2m      876:     redraw. When the loop exits on ENTER, the terminal is[39m
     [38;5;2m17430[39m: [38;5;2m      877:     {{!Notty_unix.Term.release}cleaned up}.[39m
     [38;5;2m17431[39m: [38;5;2m      878: [39m
     [38;5;2m17432[39m: [38;5;2m      879:     {1:perf Performance model}[39m
     [38;5;2m17433[39m: [38;5;2m      880: [39m
     [38;5;2m17434[39m: [38;5;2m      881:     This section is only relevant if using [Notty] becomes your bottleneck.[39m
     [38;5;2m17435[39m: [38;5;2m      882: [39m
     [38;5;2m17436[39m: [38;5;2m      883:     {b TL;DR} Shared sub-expressions do not share work, so operators stick with[39m
     [38;5;2m17437[39m: [38;5;2m      884:     you.[39m
     [38;5;2m17438[39m: [38;5;2m      885: [39m
     [38;5;2m17439[39m: [38;5;2m      886:     The main performance parameter is {e image complexity}. This roughly[39m
     [38;5;2m17440[39m: [38;5;2m      887:     corresponds to the number of image {{!I.imgcomp}composition} and[39m
     [38;5;2m17441[39m: [38;5;2m      888:     {{!I.imgcrop}cropping} operators in the fully expanded [image] term,[39m
     [38;5;2m17442[39m: [38;5;2m      889:     {b ignoring all sharing}.[39m
     [38;5;2m17443[39m: [38;5;2m      890: [39m
     [38;5;2m17444[39m: [38;5;2m      891:     Outline numbers:[39m
     [38;5;2m17445[39m: [38;5;2m      892: [39m
     [38;5;2m17446[39m: [38;5;2m      893:     {ul[39m
     [38;5;2m17447[39m: [38;5;2m      894:     {- Highly complex images can be rendered and pushed out to a full-screen[39m
     [38;5;2m17448[39m: [38;5;2m      895:        terminal more than 1000 times per second.}[39m
     [38;5;2m17449[39m: [38;5;2m      896:     {- With more realistic images, this number is closer to 30,000.}[39m
     [38;5;2m17450[39m: [38;5;2m      897:     {- Input processing is somewhere around 50MB/s.}}[39m
     [38;5;2m17451[39m: [38;5;2m      898: [39m
     [38;5;2m17452[39m: [38;5;2m      899: [39m
     [38;5;2m17453[39m: [38;5;2m      900:     Image complexity [cplx] of an image [i] is:[39m
     [38;5;2m17454[39m: [38;5;2m      901:     {ul[39m
     [38;5;2m17455[39m: [38;5;2m      902:     {- For a {{!I.imgprims}primitive} [i], [cplx i = 1].}[39m
     [38;5;2m17456[39m: [38;5;2m      903:     {- For a {{!I.imgcomp}composition} operator [op],[39m
     [38;5;2m17457[39m: [38;5;2m      904:        [cplx (op i1 i2) = 1 + cplx i1 + cplx i2].}[39m
     [38;5;2m17458[39m: [38;5;2m      905:     {- For a {{!I.imgcomp}crop} [cr],[39m
     [38;5;2m17459[39m: [38;5;2m      906:        [cplx (cr i1) = 1 + cplx i1 - k], where [k] is the combined complexity of[39m
     [38;5;2m17460[39m: [38;5;2m      907:        all the {e maximal} sub-terms that do not contribute to the output.}}[39m
     [38;5;2m17461[39m: [38;5;2m      908: [39m
     [38;5;2m17462[39m: [38;5;2m      909:     For example (assuming an image [i]):[39m
     [38;5;2m17463[39m: [38;5;2m      910: [39m
     [38;5;2m17464[39m: [38;5;2m      911: {[[39m
     [38;5;2m17465[39m: [38;5;2m      912:   let img1 = I.((i <|> i) <-> (i <|> i))[39m
     [38;5;2m17466[39m: [38;5;2m      913:   let img2 = I.(let x = i <|> i in x <-> x)[39m
     [38;5;2m17467[39m: [38;5;2m      914:   let img3 = I.(((i <|> i) <|> i) <|> i)[39m
     [38;5;2m17468[39m: [38;5;2m      915: ]}[39m
     [38;5;2m17469[39m: [38;5;2m      916: [39m
     [38;5;2m17470[39m: [38;5;2m      917:     Complexity of each of these is [4 * cplx i + 3]. This might be surprising[39m
     [38;5;2m17471[39m: [38;5;2m      918:     for [img2].[39m
     [38;5;2m17472[39m: [38;5;2m      919: [39m
     [38;5;2m17473[39m: [38;5;2m      920:     If [width i = 1], [cplx (hcrop 1 0 img1) = 3 + 2 * cplx i], and[39m
     [38;5;2m17474[39m: [38;5;2m      921:     [cplx (hcrop 2 0 img3) = 2 + 2 * cplx i].[39m
     [38;5;2m17475[39m: [38;5;2m      922: [39m
     [38;5;2m17476[39m: [38;5;2m      923:     While [Notty] strives to be accommodating to all usage scenarios, these are[39m
     [38;5;2m17477[39m: [38;5;2m      924:     the things to keep in mind if the rendering becomes slow:[39m
     [38;5;2m17478[39m: [38;5;2m      925: [39m
     [38;5;2m17479[39m: [38;5;2m      926:     {ol[39m
     [38;5;2m17480[39m: [38;5;2m      927:     {- Image composition is cheap.[39m
     [38;5;2m17481[39m: [38;5;2m      928: [39m
     [38;5;2m17482[39m: [38;5;2m      929:        Combining images performs a negligible amount of computation.[39m
     [38;5;2m17483[39m: [38;5;2m      930: [39m
     [38;5;2m17484[39m: [38;5;2m      931:        Constructing primitive images that contain scalar values outside of the[39m
     [38;5;2m17485[39m: [38;5;2m      932:        ASCII range does a little more work upfront and is worth holding onto.[39m
     [38;5;2m17486[39m: [38;5;2m      933: [39m
     [38;5;2m17487[39m: [38;5;2m      934:        }[39m
     [38;5;2m17488[39m: [38;5;2m      935:     {- {{!Render}Rendering} depends on image complexity.[39m
     [38;5;2m17489[39m: [38;5;2m      936: [39m
     [38;5;2m17490[39m: [38;5;2m      937:        As a consequence, this real-world example of wrapping renders in time[39m
     [38;5;2m17491[39m: [38;5;2m      938:        O(n{^ 2}) in the number of lines:[39m
     [38;5;2m17492[39m: [38;5;2m      939: [39m
     [38;5;2m17493[39m: [38;5;2m      940: {[[39m
     [38;5;2m17494[39m: [38;5;2m      941: let wrap1 width img =[39m
     [38;5;2m17495[39m: [38;5;2m      942:   let rec go img = img ::[39m
     [38;5;2m17496[39m: [38;5;2m      943:     if I.width img > width then go (I.hcrop width 0 img) else [][39m
     [38;5;2m17497[39m: [38;5;2m      944:   in go img |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m17498[39m: [38;5;2m      945: ]}[39m
     [38;5;2m17499[39m: [38;5;2m      946: [39m
     [38;5;2m17500[39m: [38;5;2m      947:        Although [crop] is applied only [lines] times, the image complexity of[39m
     [38;5;2m17501[39m: [38;5;2m      948:        each line depends on the number of preceding lines.[39m
     [38;5;2m17502[39m: [38;5;2m      949: [39m
     [38;5;2m17503[39m: [38;5;2m      950:        An O(n) version does not iterate [crop]:[39m
     [38;5;2m17504[39m: [38;5;2m      951: [39m
     [38;5;2m17505[39m: [38;5;2m      952: {[[39m
     [38;5;2m17506[39m: [38;5;2m      953: let wrap2 width img =[39m
     [38;5;2m17507[39m: [38;5;2m      954:   let rec go off = I.hcrop off 0 img ::[39m
     [38;5;2m17508[39m: [38;5;2m      955:     if I.width img - off > width then go (off + width) else [][39m
     [38;5;2m17509[39m: [38;5;2m      956:   in go 0 |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m17510[39m: [38;5;2m      957: ]}[39m
     [38;5;2m17511[39m: [38;5;2m      958:        }[39m
     [38;5;2m17512[39m: [38;5;2m      959:     {- Rendering depends on the {e output} dimensions, but not on the {e image}[39m
     [38;5;2m17513[39m: [38;5;2m      960:        dimensions.[39m
     [38;5;2m17514[39m: [38;5;2m      961: [39m
     [38;5;2m17515[39m: [38;5;2m      962:        Rendering an image to [w * h] implicitly crops it to its leftmost [w][39m
     [38;5;2m17516[39m: [38;5;2m      963:        columns and topmost [h] rows. While [w] and [h] will have an impact on[39m
     [38;5;2m17517[39m: [38;5;2m      964:        the rendering performance, the complexity of the (cropped) image tends to[39m
     [38;5;2m17518[39m: [38;5;2m      965:        be more important.}}[39m
     [38;5;2m17519[39m: [38;5;2m      966: [39m
     [38;5;2m17520[39m: [38;5;2m      967: *)[39m
     [38;5;2m17521[39m: [38;5;2mAdded regular file ../notty/src/notty_top.ml:[39m
     [38;5;2m17522[39m: [38;5;2m        1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m17523[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m17524[39m: [38;5;2m        3: [39m
     [38;5;2m17525[39m: [38;5;2m        4: (* Force linking with Notty for e.g. Omod. *)[39m
     [38;5;2m17526[39m: [38;5;2m        5: let _ = Sys.opaque_identity Notty.I.empty[39m
     [38;5;2m17527[39m: [38;5;2m        6: [39m
     [38;5;2m17528[39m: [38;5;2m        7: #if OCAML_VERSION >= (4,14,0)[39m
     [38;5;2m17529[39m: [38;5;2m        8: let _ = Toploop.use_silently Format.err_formatter (Toploop.File "notty_top_init.ml")[39m
     [38;5;2m17530[39m: [38;5;2m        9: #else[39m
     [38;5;2m17531[39m: [38;5;2m       10: let _ = Toploop.use_silently Format.err_formatter "notty_top_init.ml"[39m
     [38;5;2m17532[39m: [38;5;2m       11: #endif[39m
     [38;5;2m17533[39m: [38;5;2mAdded regular file ../notty/src/notty_top_init.ml:[39m
     [38;5;2m17534[39m: [38;5;2m        1: (* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m17535[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m17536[39m: [38;5;2m        3: [39m
     [38;5;2m17537[39m: [38;5;2m        4: open Notty;;[39m
     [38;5;2m17538[39m: [38;5;2m        5: [39m
     [38;5;2m17539[39m: [38;5;2m        6: #install_printer Notty.Render.pp_image;;[39m
     [38;5;2m17540[39m: [38;5;2m        7: #install_printer Notty.Render.pp_attr;;[39m
     [38;5;2m17541[39m: [38;5;2mAdded regular file ../notty/src-lwt/dune:[39m
     [38;5;2m17542[39m: [38;5;2m        1: (library[39m
     [38;5;2m17543[39m: [38;5;2m        2:   (public_name notty.lwt)[39m
     [38;5;2m17544[39m: [38;5;2m        3:   (synopsis "Notty Lwt+Unix IO")[39m
     [38;5;2m17545[39m: [38;5;2m        4:   (name notty_lwt)[39m
     [38;5;2m17546[39m: [38;5;2m        5:   (wrapped false)[39m
     [38;5;2m17547[39m: [38;5;2m        6:   (optional)[39m
     [38;5;2m17548[39m: [38;5;2m        7:   (libraries notty notty.unix lwt lwt.unix))[39m
     [38;5;2m17549[39m: [38;5;2mAdded regular file ../notty/src-lwt/notty_lwt.ml:[39m
     [38;5;2m17550[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m17551[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m17552[39m: [38;5;2m        3: [39m
     [38;5;2m17553[39m: [38;5;2m        4: open Lwt.Infix[39m
     [38;5;2m17554[39m: [38;5;2m        5: [39m
     [38;5;2m17555[39m: [38;5;2m        6: open Notty[39m
     [38;5;2m17556[39m: [38;5;2m        7: open Notty_unix[39m
     [38;5;2m17557[39m: [38;5;2m        8: open Private[39m
     [38;5;2m17558[39m: [38;5;2m        9: [39m
     [38;5;2m17559[39m: [38;5;2m       10: [39m
     [38;5;2m17560[39m: [38;5;2m       11: type ('a, 'b) either = Left of 'a | Right of 'b[39m
     [38;5;2m17561[39m: [38;5;2m       12: let left  x = Left x[39m
     [38;5;2m17562[39m: [38;5;2m       13: let right y = Right y[39m
     [38;5;2m17563[39m: [38;5;2m       14: [39m
     [38;5;2m17564[39m: [38;5;2m       15: let (</>) a b = Lwt.pick [(a >|= left); (b >|= right)][39m
     [38;5;2m17565[39m: [38;5;2m       16: let (<??>) a b = (a >|= left) <?> (b >|= right)[39m
     [38;5;2m17566[39m: [38;5;2m       17: [39m
     [38;5;2m17567[39m: [38;5;2m       18: let whenopt f = function Some x -> f x | None -> ()[39m
     [38;5;2m17568[39m: [38;5;2m       19: [39m
     [38;5;2m17569[39m: [38;5;2m       20: let rec write fd buf off = function[39m
     [38;5;2m17570[39m: [38;5;2m       21:   | 0 -> Lwt.return_unit[39m
     [38;5;2m17571[39m: [38;5;2m       22:   | n -> Lwt_unix.write fd buf off n >>= fun w -> write fd buf (off + w) (n - w)[39m
     [38;5;2m17572[39m: [38;5;2m       23: [39m
     [38;5;2m17573[39m: [38;5;2m       24: module Lwt_condition = struct[39m
     [38;5;2m17574[39m: [38;5;2m       25: [39m
     [38;5;2m17575[39m: [38;5;2m       26:   include Lwt_condition[39m
     [38;5;2m17576[39m: [38;5;2m       27: [39m
     [38;5;2m17577[39m: [38;5;2m       28:   let map f c =[39m
     [38;5;2m17578[39m: [38;5;2m       29:     let d = create () in[39m
     [38;5;2m17579[39m: [38;5;2m       30:     let rec go () = wait c >>= fun x -> broadcast d (f x); go ()[39m
     [38;5;2m17580[39m: [38;5;2m       31:     in (Lwt.async go; d)[39m
     [38;5;2m17581[39m: [38;5;2m       32: [39m
     [38;5;2m17582[39m: [38;5;2m       33:   let unburst ~t c =[39m
     [38;5;2m17583[39m: [38;5;2m       34:     let d = create () in[39m
     [38;5;2m17584[39m: [38;5;2m       35:     let rec delay x = Lwt_unix.sleep t </> wait c >>= function[39m
     [38;5;2m17585[39m: [38;5;2m       36:       | Left () -> broadcast d x; start ()[39m
     [38;5;2m17586[39m: [38;5;2m       37:       | Right x -> delay x[39m
     [38;5;2m17587[39m: [38;5;2m       38:     and start () = wait c >>= delay in[39m
     [38;5;2m17588[39m: [38;5;2m       39:     Lwt.async start; d[39m
     [38;5;2m17589[39m: [38;5;2m       40: end[39m
     [38;5;2m17590[39m: [38;5;2m       41: [39m
     [38;5;2m17591[39m: [38;5;2m       42: module Term = struct[39m
     [38;5;2m17592[39m: [38;5;2m       43: [39m
     [38;5;2m17593[39m: [38;5;2m       44:   let winches = lazy ([39m
     [38;5;2m17594[39m: [38;5;2m       45:     let c = Lwt_condition.create () in[39m
     [38;5;2m17595[39m: [38;5;2m       46:     let `Revert _ = set_winch_handler (Lwt_condition.broadcast c) in[39m
     [38;5;2m17596[39m: [38;5;2m       47:     c[39m
     [38;5;2m17597[39m: [38;5;2m       48:   )[39m
     [38;5;2m17598[39m: [38;5;2m       49: [39m
     [38;5;2m17599[39m: [38;5;2m       50:   let winch () = Lazy.force winches |> Lwt_condition.wait[39m
     [38;5;2m17600[39m: [38;5;2m       51: [39m
     [38;5;2m17601[39m: [38;5;2m       52:   let bsize = 1024[39m
     [38;5;2m17602[39m: [38;5;2m       53: [39m
     [38;5;2m17603[39m: [38;5;2m       54:   let input_stream ~nosig fd stop =[39m
     [38;5;2m17604[39m: [38;5;2m       55:     let `Revert f = setup_tcattr ~nosig (Lwt_unix.unix_file_descr fd) in[39m
     [38;5;2m17605[39m: [38;5;2m       56:     let stream =[39m
     [38;5;2m17606[39m: [38;5;2m       57:       let flt  = Unescape.create ()[39m
     [38;5;2m17607[39m: [38;5;2m       58:       and ibuf = Bytes.create bsize in[39m
     [38;5;2m17608[39m: [38;5;2m       59:       let rec next () =[39m
     [38;5;2m17609[39m: [38;5;2m       60:         match Unescape.next flt with[39m
     [38;5;2m17610[39m: [38;5;2m       61:         | #Unescape.event as r -> Lwt.return_some r[39m
     [38;5;2m17611[39m: [38;5;2m       62:         | `End   -> Lwt.return_none[39m
     [38;5;2m17612[39m: [38;5;2m       63:         | `Await ->[39m
     [38;5;2m17613[39m: [38;5;2m       64:             (Lwt_unix.read fd ibuf 0 bsize <??> stop) >>= function[39m
     [38;5;2m17614[39m: [38;5;2m       65:               | Left n  -> Unescape.input flt ibuf 0 n; next ()[39m
     [38;5;2m17615[39m: [38;5;2m       66:               | Right _ -> Lwt.return_none[39m
     [38;5;2m17616[39m: [38;5;2m       67:       in Lwt_stream.from next in[39m
     [38;5;2m17617[39m: [38;5;2m       68:     Lwt.async (fun () -> Lwt_stream.closed stream >|= f);[39m
     [38;5;2m17618[39m: [38;5;2m       69:     stream[39m
     [38;5;2m17619[39m: [38;5;2m       70: [39m
     [38;5;2m17620[39m: [38;5;2m       71:   type t = {[39m
     [38;5;2m17621[39m: [38;5;2m       72:     ochan  : Lwt_io.output_channel[39m
     [38;5;2m17622[39m: [38;5;2m       73:   ; trm    : Tmachine.t[39m
     [38;5;2m17623[39m: [38;5;2m       74:   ; buf    : Buffer.t[39m
     [38;5;2m17624[39m: [38;5;2m       75:   ; fds    : Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m17625[39m: [38;5;2m       76:   ; events : [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m17626[39m: [38;5;2m       77:   ; stop   : (unit -> unit)[39m
     [38;5;2m17627[39m: [38;5;2m       78:   }[39m
     [38;5;2m17628[39m: [38;5;2m       79: [39m
     [38;5;2m17629[39m: [38;5;2m       80:   let write t =[39m
     [38;5;2m17630[39m: [38;5;2m       81:     Tmachine.output t.trm t.buf;[39m
     [38;5;2m17631[39m: [38;5;2m       82:     let out = Buffer.contents t.buf in (* XXX There goes 0copy. :/ *)[39m
     [38;5;2m17632[39m: [38;5;2m       83:     Buffer.clear t.buf; Lwt_io.write t.ochan out[39m
     [38;5;2m17633[39m: [38;5;2m       84: [39m
     [38;5;2m17634[39m: [38;5;2m       85:   let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m17635[39m: [38;5;2m       86:   let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m17636[39m: [38;5;2m       87:   let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m17637[39m: [38;5;2m       88:   let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m17638[39m: [38;5;2m       89:   let size t         = Tmachine.size t.trm[39m
     [38;5;2m17639[39m: [38;5;2m       90: [39m
     [38;5;2m17640[39m: [38;5;2m       91:   let release t =[39m
     [38;5;2m17641[39m: [38;5;2m       92:     if Tmachine.release t.trm then[39m
     [38;5;2m17642[39m: [38;5;2m       93:       ( t.stop (); write t >>= fun () -> Lwt_io.flush t.ochan )[39m
     [38;5;2m17643[39m: [38;5;2m       94:     else Lwt.return_unit[39m
     [38;5;2m17644[39m: [38;5;2m       95: [39m
     [38;5;2m17645[39m: [38;5;2m       96:   let resizef fd stop on_resize =[39m
     [38;5;2m17646[39m: [38;5;2m       97:     if Unix.isatty fd then[39m
     [38;5;2m17647[39m: [38;5;2m       98:       let rcond = Lwt_condition.([39m
     [38;5;2m17648[39m: [38;5;2m       99:         Lazy.force winches |> unburst ~t:0.1 |> map (fun () -> winsize fd)) in[39m
     [38;5;2m17649[39m: [38;5;2m      100:       let rec monitor () =[39m
     [38;5;2m17650[39m: [38;5;2m      101:         (Lwt_condition.wait rcond <?> stop) >>= function[39m
     [38;5;2m17651[39m: [38;5;2m      102:           | Some dim -> on_resize dim; monitor ()[39m
     [38;5;2m17652[39m: [38;5;2m      103:           | None     -> Lwt.return_unit in[39m
     [38;5;2m17653[39m: [38;5;2m      104:       Lwt.async monitor;[39m
     [38;5;2m17654[39m: [38;5;2m      105:       Lwt_stream.from (fun () -> Lwt_condition.wait rcond <?> stop)[39m
     [38;5;2m17655[39m: [38;5;2m      106:         |> Lwt_stream.map (fun dim -> `Resize dim)[39m
     [38;5;2m17656[39m: [38;5;2m      107:     else Lwt_stream.of_list [][39m
     [38;5;2m17657[39m: [38;5;2m      108: [39m
     [38;5;2m17658[39m: [38;5;2m      109:   let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m17659[39m: [38;5;2m      110:              ?(input=Lwt_unix.stdin) ?(output=Lwt_unix.stdout) () =[39m
     [38;5;2m17660[39m: [38;5;2m      111:     let fd = Lwt_unix.unix_file_descr output in[39m
     [38;5;2m17661[39m: [38;5;2m      112:     let (stop, stopw) = Lwt.wait () in[39m
     [38;5;2m17662[39m: [38;5;2m      113:     let rec t = lazy {[39m
     [38;5;2m17663[39m: [38;5;2m      114:         trm    = Tmachine.create ~mouse ~bpaste (cap_for_fd fd)[39m
     [38;5;2m17664[39m: [38;5;2m      115:       ; ochan  = Lwt_io.(of_fd ~mode:output) output[39m
     [38;5;2m17665[39m: [38;5;2m      116:       ; buf    = Buffer.create 4096[39m
     [38;5;2m17666[39m: [38;5;2m      117:       ; fds    = (input, output)[39m
     [38;5;2m17667[39m: [38;5;2m      118:       ; stop   = (fun () -> Lwt.wakeup stopw None)[39m
     [38;5;2m17668[39m: [38;5;2m      119:       ; events = Lwt_stream.choose[39m
     [38;5;2m17669[39m: [38;5;2m      120:           [ input_stream ~nosig input stop[39m
     [38;5;2m17670[39m: [38;5;2m      121:           ; resizef fd stop @@ fun dim ->[39m
     [38;5;2m17671[39m: [38;5;2m      122:               let t = Lazy.force t in Buffer.reset t.buf; set_size t dim ][39m
     [38;5;2m17672[39m: [38;5;2m      123:       } in[39m
     [38;5;2m17673[39m: [38;5;2m      124:     let t = Lazy.force t in[39m
     [38;5;2m17674[39m: [38;5;2m      125:     winsize fd |> whenopt (set_size t);[39m
     [38;5;2m17675[39m: [38;5;2m      126:     Lwt.async (fun () -> write t); (* XXX async? *)[39m
     [38;5;2m17676[39m: [38;5;2m      127:     if dispose then Lwt_main.at_exit (fun () -> release t);[39m
     [38;5;2m17677[39m: [38;5;2m      128:     t[39m
     [38;5;2m17678[39m: [38;5;2m      129: [39m
     [38;5;2m17679[39m: [38;5;2m      130:   let events t = t.events[39m
     [38;5;2m17680[39m: [38;5;2m      131:   let fds    t = t.fds[39m
     [38;5;2m17681[39m: [38;5;2m      132: end[39m
     [38;5;2m17682[39m: [38;5;2m      133: [39m
     [38;5;2m17683[39m: [38;5;2m      134: let winsize fd = winsize (Lwt_unix.unix_file_descr fd)[39m
     [38;5;2m17684[39m: [38;5;2m      135: [39m
     [38;5;2m17685[39m: [38;5;2m      136: include Gen_output (struct[39m
     [38;5;2m17686[39m: [38;5;2m      137:   type fd = Lwt_unix.file_descr and k = unit Lwt.t[39m
     [38;5;2m17687[39m: [38;5;2m      138:   let (def, to_fd) = Lwt_unix.(stdout, unix_file_descr)[39m
     [38;5;2m17688[39m: [38;5;2m      139:   and write fd buf = Buffer.(write fd (to_bytes buf) 0 (length buf))[39m
     [38;5;2m17689[39m: [38;5;2m      140: end)[39m
     [38;5;2m17690[39m: [38;5;2mAdded regular file ../notty/src-lwt/notty_lwt.mli:[39m
     [38;5;2m17691[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m17692[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m17693[39m: [38;5;2m        3: [39m
     [38;5;2m17694[39m: [38;5;2m        4: (** [Notty] IO [Lwt] on [Unix].[39m
     [38;5;2m17695[39m: [38;5;2m        5: [39m
     [38;5;2m17696[39m: [38;5;2m        6:     This is an IO module for {!Notty}.[39m
     [38;5;2m17697[39m: [38;5;2m        7: [39m
     [38;5;2m17698[39m: [38;5;2m        8:     It mirrors {!Notty_unix} and the corresponding operations behave[39m
     [38;5;2m17699[39m: [38;5;2m        9:     analogously. Consult its documentation for more info.[39m
     [38;5;2m17700[39m: [38;5;2m       10: [39m
     [38;5;2m17701[39m: [38;5;2m       11:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m17702[39m: [38;5;2m       12: [39m
     [38;5;2m17703[39m: [38;5;2m       13: open Notty[39m
     [38;5;2m17704[39m: [38;5;2m       14: [39m
     [38;5;2m17705[39m: [38;5;2m       15: (** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m17706[39m: [38;5;2m       16: [39m
     [38;5;2m17707[39m: [38;5;2m       17: (** Terminal IO with concurrency.[39m
     [38;5;2m17708[39m: [38;5;2m       18: [39m
     [38;5;2m17709[39m: [38;5;2m       19:     For more info, see {!Notty_unix.Term}. *)[39m
     [38;5;2m17710[39m: [38;5;2m       20: module Term : sig[39m
     [38;5;2m17711[39m: [38;5;2m       21: [39m
     [38;5;2m17712[39m: [38;5;2m       22:   type t[39m
     [38;5;2m17713[39m: [38;5;2m       23: [39m
     [38;5;2m17714[39m: [38;5;2m       24:   (** {1 Construction and destruction} *)[39m
     [38;5;2m17715[39m: [38;5;2m       25: [39m
     [38;5;2m17716[39m: [38;5;2m       26:   val create : ?dispose:bool ->[39m
     [38;5;2m17717[39m: [38;5;2m       27:                ?nosig:bool ->[39m
     [38;5;2m17718[39m: [38;5;2m       28:                ?mouse:bool ->[39m
     [38;5;2m17719[39m: [38;5;2m       29:                ?bpaste:bool ->[39m
     [38;5;2m17720[39m: [38;5;2m       30:                ?input:Lwt_unix.file_descr ->[39m
     [38;5;2m17721[39m: [38;5;2m       31:                ?output:Lwt_unix.file_descr ->[39m
     [38;5;2m17722[39m: [38;5;2m       32:                unit -> t[39m
     [38;5;2m17723[39m: [38;5;2m       33:   (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a new[39m
     [38;5;2m17724[39m: [38;5;2m       34:       {{!t}terminal}.[39m
     [38;5;2m17725[39m: [38;5;2m       35: [39m
     [38;5;2m17726[39m: [38;5;2m       36:       {b Note} [~dispose] arranges for the terminal to be disposed of at the end[39m
     [38;5;2m17727[39m: [38;5;2m       37:       of the [Lwt] main loop, and not at process exit.[39m
     [38;5;2m17728[39m: [38;5;2m       38: [39m
     [38;5;2m17729[39m: [38;5;2m       39:       See {!Notty_unix.Term.create}. *)[39m
     [38;5;2m17730[39m: [38;5;2m       40: [39m
     [38;5;2m17731[39m: [38;5;2m       41:   val release : t -> unit Lwt.t[39m
     [38;5;2m17732[39m: [38;5;2m       42: [39m
     [38;5;2m17733[39m: [38;5;2m       43:   (** {1 Commands} *)[39m
     [38;5;2m17734[39m: [38;5;2m       44: [39m
     [38;5;2m17735[39m: [38;5;2m       45:   val image   : t -> image -> unit Lwt.t[39m
     [38;5;2m17736[39m: [38;5;2m       46:   val refresh : t -> unit Lwt.t[39m
     [38;5;2m17737[39m: [38;5;2m       47:   val cursor  : t -> (int * int) option -> unit Lwt.t[39m
     [38;5;2m17738[39m: [38;5;2m       48: [39m
     [38;5;2m17739[39m: [38;5;2m       49:   (** {1 Events} *)[39m
     [38;5;2m17740[39m: [38;5;2m       50: [39m
     [38;5;2m17741[39m: [38;5;2m       51:   val events : t -> [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m17742[39m: [38;5;2m       52:   (** [events t] is the stream of incoming events.[39m
     [38;5;2m17743[39m: [38;5;2m       53: [39m
     [38;5;2m17744[39m: [38;5;2m       54:       Invoking {{!release}release} will terminate this stream.[39m
     [38;5;2m17745[39m: [38;5;2m       55: [39m
     [38;5;2m17746[39m: [38;5;2m       56:       Events are:[39m
     [38;5;2m17747[39m: [38;5;2m       57:       {ul[39m
     [38;5;2m17748[39m: [38;5;2m       58:       {- [#Unescape.event], an {{!Notty.Unescape.event}event} from the input[39m
     [38;5;2m17749[39m: [38;5;2m       59:          fd; or}[39m
     [38;5;2m17750[39m: [38;5;2m       60:       {- [`Resize (cols, rows)] whenever the terminal size changes.}}[39m
     [38;5;2m17751[39m: [38;5;2m       61: [39m
     [38;5;2m17752[39m: [38;5;2m       62:       {b Note} This stream is unique; for the same [t], [events t] always[39m
     [38;5;2m17753[39m: [38;5;2m       63:       returns the same stream. *)[39m
     [38;5;2m17754[39m: [38;5;2m       64: [39m
     [38;5;2m17755[39m: [38;5;2m       65:   (** {1 Properties} *)[39m
     [38;5;2m17756[39m: [38;5;2m       66: [39m
     [38;5;2m17757[39m: [38;5;2m       67:   val size : t -> int * int[39m
     [38;5;2m17758[39m: [38;5;2m       68: [39m
     [38;5;2m17759[39m: [38;5;2m       69:   val fds : t -> Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m17760[39m: [38;5;2m       70: [39m
     [38;5;2m17761[39m: [38;5;2m       71:   (** {1 Window size change notifications}[39m
     [38;5;2m17762[39m: [38;5;2m       72: [39m
     [38;5;2m17763[39m: [38;5;2m       73:       {{!create}Creating} a terminal will install a [SIGWINCH] handler.[39m
     [38;5;2m17764[39m: [38;5;2m       74:       The handler should not be replaced directly. This API allows the user to[39m
     [38;5;2m17765[39m: [38;5;2m       75:       monitor deliveries of the signal.[39m
     [38;5;2m17766[39m: [38;5;2m       76: [39m
     [38;5;2m17767[39m: [38;5;2m       77:       See {!Notty_unix.Term.Winch}. *)[39m
     [38;5;2m17768[39m: [38;5;2m       78: [39m
     [38;5;2m17769[39m: [38;5;2m       79:   val winch : unit -> unit Lwt.t[39m
     [38;5;2m17770[39m: [38;5;2m       80:   (** [winch ()] is a thread completing after the next [SIGWINCH]. A single[39m
     [38;5;2m17771[39m: [38;5;2m       81:       signal delivery will cause the completion of all waiting [winch] threads. *)[39m
     [38;5;2m17772[39m: [38;5;2m       82: end[39m
     [38;5;2m17773[39m: [38;5;2m       83: [39m
     [38;5;2m17774[39m: [38;5;2m       84: (** {1:inline Inline output} *)[39m
     [38;5;2m17775[39m: [38;5;2m       85: [39m
     [38;5;2m17776[39m: [38;5;2m       86: val winsize : Lwt_unix.file_descr -> (int * int) option[39m
     [38;5;2m17777[39m: [38;5;2m       87: [39m
     [38;5;2m17778[39m: [38;5;2m       88: val eol : image -> image[39m
     [38;5;2m17779[39m: [38;5;2m       89: [39m
     [38;5;2m17780[39m: [38;5;2m       90: val output_image :[39m
     [38;5;2m17781[39m: [38;5;2m       91:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> image -> unit Lwt.t[39m
     [38;5;2m17782[39m: [38;5;2m       92: [39m
     [38;5;2m17783[39m: [38;5;2m       93: val output_image_size :[39m
     [38;5;2m17784[39m: [38;5;2m       94:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> (int * int -> image) -> unit Lwt.t[39m
     [38;5;2m17785[39m: [38;5;2m       95: [39m
     [38;5;2m17786[39m: [38;5;2m       96: val show_cursor : ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> bool -> unit Lwt.t[39m
     [38;5;2m17787[39m: [38;5;2m       97: [39m
     [38;5;2m17788[39m: [38;5;2m       98: val move_cursor :[39m
     [38;5;2m17789[39m: [38;5;2m       99:   ?cap:Cap.t -> ?fd:Lwt_unix.file_descr ->[39m
     [38;5;2m17790[39m: [38;5;2m      100:     [ `Home | `By of int * int | `To of int * int ] -> unit Lwt.t[39m
     [38;5;2m17791[39m: [38;5;2mAdded regular file ../notty/src-unix/dune:[39m
     [38;5;2m17792[39m: [38;5;2m        1: (library[39m
     [38;5;2m17793[39m: [38;5;2m        2:   (public_name notty.unix)[39m
     [38;5;2m17794[39m: [38;5;2m        3:   (synopsis "Notty Unix IO")[39m
     [38;5;2m17795[39m: [38;5;2m        4:   (name notty_unix)[39m
     [38;5;2m17796[39m: [38;5;2m        5:   (wrapped false)[39m
     [38;5;2m17797[39m: [38;5;2m        6:   (c_names winsize)[39m
     [38;5;2m17798[39m: [38;5;2m        7:   (c_flags (-Wall -Wextra -O3))[39m
     [38;5;2m17799[39m: [38;5;2m        8:   (optional)[39m
     [38;5;2m17800[39m: [38;5;2m        9:   (libraries notty unix))[39m
     [38;5;2m17801[39m: [38;5;2m       10: [39m
     [38;5;2m17802[39m: [38;5;2m       11: (include_subdirs unqualified)[39m
     [38;5;2m17803[39m: [38;5;2mAdded regular file ../notty/src-unix/native/winsize.c:[39m
     [38;5;2m17804[39m: [38;5;2m        1: #include <sys/ioctl.h>[39m
     [38;5;2m17805[39m: [38;5;2m        2: #include <signal.h>[39m
     [38;5;2m17806[39m: [38;5;2m        3: #include <caml/mlvalues.h>[39m
     [38;5;2m17807[39m: [38;5;2m        4: [39m
     [38;5;2m17808[39m: [38;5;2m        5: CAMLprim value caml_notty_winsize (value vfd) {[39m
     [38;5;2m17809[39m: [38;5;2m        6:   int fd = Int_val (vfd);[39m
     [38;5;2m17810[39m: [38;5;2m        7:   struct winsize w;[39m
     [38;5;2m17811[39m: [38;5;2m        8:   if (ioctl (fd, TIOCGWINSZ, &w) >= 0)[39m
     [38;5;2m17812[39m: [38;5;2m        9:     return Val_int ((w.ws_col << 16) + ((w.ws_row & 0x7fff) << 1));[39m
     [38;5;2m17813[39m: [38;5;2m       10:   return Val_int (0);[39m
     [38;5;2m17814[39m: [38;5;2m       11: }[39m
     [38;5;2m17815[39m: [38;5;2m       12: [39m
     [38;5;2m17816[39m: [38;5;2m       13: #define __unit() value unit __attribute__((unused))[39m
     [38;5;2m17817[39m: [38;5;2m       14: [39m
     [38;5;2m17818[39m: [38;5;2m       15: CAMLprim value caml_notty_winch_number (__unit()) {[39m
     [38;5;2m17819[39m: [38;5;2m       16:   return Val_int (SIGWINCH);[39m
     [38;5;2m17820[39m: [38;5;2m       17: }[39m
     [38;5;2m17821[39m: [38;5;2mAdded regular file ../notty/src-unix/notty_unix.ml:[39m
     [38;5;2m17822[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m17823[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m17824[39m: [38;5;2m        3: [39m
     [38;5;2m17825[39m: [38;5;2m        4: open Notty[39m
     [38;5;2m17826[39m: [38;5;2m        5: [39m
     [38;5;2m17827[39m: [38;5;2m        6: external c_winsize : Unix.file_descr -> int = "caml_notty_winsize" [@@noalloc][39m
     [38;5;2m17828[39m: [38;5;2m        7: external winch_number : unit -> int = "caml_notty_winch_number" [@@noalloc][39m
     [38;5;2m17829[39m: [38;5;2m        8: [39m
     [38;5;2m17830[39m: [38;5;2m        9: let iter f = function Some x -> f x | _ -> ()[39m
     [38;5;2m17831[39m: [38;5;2m       10: let value x = function Some a -> a | _ -> x[39m
     [38;5;2m17832[39m: [38;5;2m       11: [39m
     [38;5;2m17833[39m: [38;5;2m       12: let winsize fd = match c_winsize fd with[39m
     [38;5;2m17834[39m: [38;5;2m       13:   | 0  -> None[39m
     [38;5;2m17835[39m: [38;5;2m       14:   | wh -> Some (wh lsr 16, wh lsr 1 land 0x7fff)[39m
     [38;5;2m17836[39m: [38;5;2m       15: [39m
     [38;5;2m17837[39m: [38;5;2m       16: module Private = struct[39m
     [38;5;2m17838[39m: [38;5;2m       17: [39m
     [38;5;2m17839[39m: [38;5;2m       18:   let once f = let v = lazy (f ()) in fun () -> Lazy.force v[39m
     [38;5;2m17840[39m: [38;5;2m       19: [39m
     [38;5;2m17841[39m: [38;5;2m       20:   let cap_for_fd =[39m
     [38;5;2m17842[39m: [38;5;2m       21:     let open Cap in[39m
     [38;5;2m17843[39m: [38;5;2m       22:     match Sys.getenv "TERM" with[39m
     [38;5;2m17844[39m: [38;5;2m       23:     | exception Not_found -> fun _ -> dumb[39m
     [38;5;2m17845[39m: [38;5;2m       24:     | (""|"dumb")         -> fun _ -> dumb[39m
     [38;5;2m17846[39m: [38;5;2m       25:     | _                   -> fun fd -> if Unix.isatty fd then ansi else dumb[39m
     [38;5;2m17847[39m: [38;5;2m       26: [39m
     [38;5;2m17848[39m: [38;5;2m       27:   let setup_tcattr ~nosig fd =[39m
     [38;5;2m17849[39m: [38;5;2m       28:     let open Unix in try[39m
     [38;5;2m17850[39m: [38;5;2m       29:       let tc = tcgetattr fd in[39m
     [38;5;2m17851[39m: [38;5;2m       30:       let tc1 = { tc with c_icanon = false; c_echo = false } in[39m
     [38;5;2m17852[39m: [38;5;2m       31:       tcsetattr fd TCSANOW[39m
     [38;5;2m17853[39m: [38;5;2m       32:         ( if nosig then { tc1 with c_isig = false; c_ixon = false } else tc1 );[39m
     [38;5;2m17854[39m: [38;5;2m       33:       `Revert (once @@ fun _ -> tcsetattr fd TCSANOW tc)[39m
     [38;5;2m17855[39m: [38;5;2m       34:     with Unix_error (ENOTTY, _, _) -> `Revert ignore[39m
     [38;5;2m17856[39m: [38;5;2m       35: [39m
     [38;5;2m17857[39m: [38;5;2m       36:   let set_winch_handler f =[39m
     [38;5;2m17858[39m: [38;5;2m       37:     let signum = winch_number () in[39m
     [38;5;2m17859[39m: [38;5;2m       38:     let old_hdl = Sys.(signal signum (Signal_handle (fun _ -> f ()))) in[39m
     [38;5;2m17860[39m: [38;5;2m       39:     `Revert (once @@ fun () -> Sys.set_signal signum old_hdl)[39m
     [38;5;2m17861[39m: [38;5;2m       40: [39m
     [38;5;2m17862[39m: [38;5;2m       41:   module Gen_output (O : sig[39m
     [38;5;2m17863[39m: [38;5;2m       42:     type fd[39m
     [38;5;2m17864[39m: [38;5;2m       43:     type k[39m
     [38;5;2m17865[39m: [38;5;2m       44:     val def   : fd[39m
     [38;5;2m17866[39m: [38;5;2m       45:     val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m17867[39m: [38;5;2m       46:     val write : fd -> Buffer.t -> k[39m
     [38;5;2m17868[39m: [38;5;2m       47:   end) = struct[39m
     [38;5;2m17869[39m: [38;5;2m       48: [39m
     [38;5;2m17870[39m: [38;5;2m       49:     let scratch = lazy (Buffer.create 4096)[39m
     [38;5;2m17871[39m: [38;5;2m       50: [39m
     [38;5;2m17872[39m: [38;5;2m       51:     let output ?cap ?(fd = O.def) f =[39m
     [38;5;2m17873[39m: [38;5;2m       52:       let cap = cap |> value (cap_for_fd (O.to_fd fd)) in[39m
     [38;5;2m17874[39m: [38;5;2m       53:       let buf = Lazy.force scratch in[39m
     [38;5;2m17875[39m: [38;5;2m       54:       Buffer.reset buf; f buf cap fd; O.write fd buf[39m
     [38;5;2m17876[39m: [38;5;2m       55: [39m
     [38;5;2m17877[39m: [38;5;2m       56:     let output_image_size ?cap ?fd f =[39m
     [38;5;2m17878[39m: [38;5;2m       57:       output ?cap ?fd @@ fun buf cap fd ->[39m
     [38;5;2m17879[39m: [38;5;2m       58:         let size = winsize (O.to_fd fd) in[39m
     [38;5;2m17880[39m: [38;5;2m       59:         let i = f (value (80, 24) size) in[39m
     [38;5;2m17881[39m: [38;5;2m       60:         let dim = match size with[39m
     [38;5;2m17882[39m: [38;5;2m       61:           | Some (w, _) -> I.(w, height i)[39m
     [38;5;2m17883[39m: [38;5;2m       62:           | None        -> I.(width i, height i) in[39m
     [38;5;2m17884[39m: [38;5;2m       63:         Render.to_buffer buf cap (0, 0) dim i[39m
     [38;5;2m17885[39m: [38;5;2m       64: [39m
     [38;5;2m17886[39m: [38;5;2m       65:     let show_cursor ?cap ?fd x =[39m
     [38;5;2m17887[39m: [38;5;2m       66:       output ?cap ?fd @@ fun buf cap _ -> Direct.show_cursor buf cap x[39m
     [38;5;2m17888[39m: [38;5;2m       67: [39m
     [38;5;2m17889[39m: [38;5;2m       68:     let move_cursor ?cap ?fd x =[39m
     [38;5;2m17890[39m: [38;5;2m       69:       output ?cap ?fd @@ fun buf cap _ -> Direct.move_cursor buf cap x[39m
     [38;5;2m17891[39m: [38;5;2m       70: [39m
     [38;5;2m17892[39m: [38;5;2m       71:     let output_image ?cap ?fd i = output_image_size ?cap ?fd (fun _ -> i)[39m
     [38;5;2m17893[39m: [38;5;2m       72: [39m
     [38;5;2m17894[39m: [38;5;2m       73:     let eol i = I.(i <-> void 0 1)[39m
     [38;5;2m17895[39m: [38;5;2m       74:   end[39m
     [38;5;2m17896[39m: [38;5;2m       75: end[39m
     [38;5;2m17897[39m: [38;5;2m       76: [39m
     [38;5;2m17898[39m: [38;5;2m       77: open Private[39m
     [38;5;2m17899[39m: [38;5;2m       78: [39m
     [38;5;2m17900[39m: [38;5;2m       79: module Term = struct[39m
     [38;5;2m17901[39m: [38;5;2m       80: [39m
     [38;5;2m17902[39m: [38;5;2m       81:   module Winch = struct[39m
     [38;5;2m17903[39m: [38;5;2m       82: [39m
     [38;5;2m17904[39m: [38;5;2m       83:     let h  = Hashtbl.create 3[39m
     [38;5;2m17905[39m: [38;5;2m       84:     and id = ref 0[39m
     [38;5;2m17906[39m: [38;5;2m       85: [39m
     [38;5;2m17907[39m: [38;5;2m       86:     let add fd f =[39m
     [38;5;2m17908[39m: [38;5;2m       87:       let n = !id in[39m
     [38;5;2m17909[39m: [38;5;2m       88:       set_winch_handler (fun () -> Hashtbl.iter (fun _ f -> f ()) h) |> ignore;[39m
     [38;5;2m17910[39m: [38;5;2m       89:       Hashtbl.add h n (fun () -> winsize fd |> iter f); incr id;[39m
     [38;5;2m17911[39m: [38;5;2m       90:       `Revert (fun () -> Hashtbl.remove h n)[39m
     [38;5;2m17912[39m: [38;5;2m       91:   end[39m
     [38;5;2m17913[39m: [38;5;2m       92: [39m
     [38;5;2m17914[39m: [38;5;2m       93:   module Input = struct[39m
     [38;5;2m17915[39m: [38;5;2m       94: [39m
     [38;5;2m17916[39m: [38;5;2m       95:     type t = {[39m
     [38;5;2m17917[39m: [38;5;2m       96:       fd      : Unix.file_descr[39m
     [38;5;2m17918[39m: [38;5;2m       97:     ; flt     : Unescape.t[39m
     [38;5;2m17919[39m: [38;5;2m       98:     ; ibuf    : bytes[39m
     [38;5;2m17920[39m: [38;5;2m       99:     ; cleanup : unit -> unit[39m
     [38;5;2m17921[39m: [38;5;2m      100:     }[39m
     [38;5;2m17922[39m: [38;5;2m      101: [39m
     [38;5;2m17923[39m: [38;5;2m      102:     let bsize = 1024[39m
     [38;5;2m17924[39m: [38;5;2m      103: [39m
     [38;5;2m17925[39m: [38;5;2m      104:     let create ~nosig fd =[39m
     [38;5;2m17926[39m: [38;5;2m      105:       let flt  = Unescape.create ()[39m
     [38;5;2m17927[39m: [38;5;2m      106:       and ibuf = Bytes.create bsize[39m
     [38;5;2m17928[39m: [38;5;2m      107:       and `Revert cleanup = setup_tcattr ~nosig fd in[39m
     [38;5;2m17929[39m: [38;5;2m      108:       { fd; flt; ibuf; cleanup }[39m
     [38;5;2m17930[39m: [38;5;2m      109: [39m
     [38;5;2m17931[39m: [38;5;2m      110:     let rec event t =[39m
     [38;5;2m17932[39m: [38;5;2m      111:       match Unescape.next t.flt with[39m
     [38;5;2m17933[39m: [38;5;2m      112:       | #Unescape.event | `End as r -> r[39m
     [38;5;2m17934[39m: [38;5;2m      113:       | `Await ->[39m
     [38;5;2m17935[39m: [38;5;2m      114:           let n = Unix.read t.fd t.ibuf 0 bsize in[39m
     [38;5;2m17936[39m: [38;5;2m      115:           Unescape.input t.flt t.ibuf 0 n; event t[39m
     [38;5;2m17937[39m: [38;5;2m      116:   end[39m
     [38;5;2m17938[39m: [38;5;2m      117: [39m
     [38;5;2m17939[39m: [38;5;2m      118:   type t = {[39m
     [38;5;2m17940[39m: [38;5;2m      119:     output   : out_channel[39m
     [38;5;2m17941[39m: [38;5;2m      120:   ; trm      : Tmachine.t[39m
     [38;5;2m17942[39m: [38;5;2m      121:   ; buf      : Buffer.t[39m
     [38;5;2m17943[39m: [38;5;2m      122:   ; input    : Input.t[39m
     [38;5;2m17944[39m: [38;5;2m      123:   ; fds      : Unix.file_descr * Unix.file_descr[39m
     [38;5;2m17945[39m: [38;5;2m      124:   ; unwinch  : (unit -> unit) Lazy.t[39m
     [38;5;2m17946[39m: [38;5;2m      125:   ; mutable winched : bool[39m
     [38;5;2m17947[39m: [38;5;2m      126:   }[39m
     [38;5;2m17948[39m: [38;5;2m      127: [39m
     [38;5;2m17949[39m: [38;5;2m      128:   let write t =[39m
     [38;5;2m17950[39m: [38;5;2m      129:     Buffer.clear t.buf;[39m
     [38;5;2m17951[39m: [38;5;2m      130:     Tmachine.output t.trm t.buf;[39m
     [38;5;2m17952[39m: [38;5;2m      131:     Buffer.output_buffer t.output t.buf; flush t.output[39m
     [38;5;2m17953[39m: [38;5;2m      132: [39m
     [38;5;2m17954[39m: [38;5;2m      133:   let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m17955[39m: [38;5;2m      134:   let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m17956[39m: [38;5;2m      135:   let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m17957[39m: [38;5;2m      136:   let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m17958[39m: [38;5;2m      137:   let size t         = Tmachine.size t.trm[39m
     [38;5;2m17959[39m: [38;5;2m      138: [39m
     [38;5;2m17960[39m: [38;5;2m      139:   let release t =[39m
     [38;5;2m17961[39m: [38;5;2m      140:     if Tmachine.release t.trm then[39m
     [38;5;2m17962[39m: [38;5;2m      141:       ( Lazy.force t.unwinch ();[39m
     [38;5;2m17963[39m: [38;5;2m      142:         t.input.Input.cleanup ();[39m
     [38;5;2m17964[39m: [38;5;2m      143:         write t )[39m
     [38;5;2m17965[39m: [38;5;2m      144: [39m
     [38;5;2m17966[39m: [38;5;2m      145:   let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m17967[39m: [38;5;2m      146:              ?(input=Unix.stdin) ?(output=Unix.stdout) () =[39m
     [38;5;2m17968[39m: [38;5;2m      147:     let rec t = {[39m
     [38;5;2m17969[39m: [38;5;2m      148:         output  = Unix.out_channel_of_descr output[39m
     [38;5;2m17970[39m: [38;5;2m      149:       ; trm     = Tmachine.create ~mouse ~bpaste (cap_for_fd input)[39m
     [38;5;2m17971[39m: [38;5;2m      150:       ; buf     = Buffer.create 4096[39m
     [38;5;2m17972[39m: [38;5;2m      151:       ; input   = Input.create ~nosig input[39m
     [38;5;2m17973[39m: [38;5;2m      152:       ; fds     = (input, output)[39m
     [38;5;2m17974[39m: [38;5;2m      153:       ; winched = false[39m
     [38;5;2m17975[39m: [38;5;2m      154:       ; unwinch = lazy ([39m
     [38;5;2m17976[39m: [38;5;2m      155:           let `Revert f = Winch.add output @@ fun dim ->[39m
     [38;5;2m17977[39m: [38;5;2m      156:             Buffer.reset t.buf; t.winched <- true; set_size t dim in f)[39m
     [38;5;2m17978[39m: [38;5;2m      157:     } in[39m
     [38;5;2m17979[39m: [38;5;2m      158:     winsize output |> iter (set_size t);[39m
     [38;5;2m17980[39m: [38;5;2m      159:     (Lazy.force t.unwinch |> ignore) [@ocaml.warning "-5"];[39m
     [38;5;2m17981[39m: [38;5;2m      160:     if dispose then at_exit (fun () -> release t);[39m
     [38;5;2m17982[39m: [38;5;2m      161:     write t;[39m
     [38;5;2m17983[39m: [38;5;2m      162:     t[39m
     [38;5;2m17984[39m: [38;5;2m      163: [39m
     [38;5;2m17985[39m: [38;5;2m      164:   let rec event = function[39m
     [38;5;2m17986[39m: [38;5;2m      165:     | t when Tmachine.dead t.trm -> `End[39m
     [38;5;2m17987[39m: [38;5;2m      166:     | t when t.winched -> t.winched <- false; `Resize (size t)[39m
     [38;5;2m17988[39m: [38;5;2m      167:     | t -> Unix.(try Input.event t.input with Unix_error (EINTR, _, _) -> event t)[39m
     [38;5;2m17989[39m: [38;5;2m      168: [39m
     [38;5;2m17990[39m: [38;5;2m      169:   let pending t =[39m
     [38;5;2m17991[39m: [38;5;2m      170:     not (Tmachine.dead t.trm) &&[39m
     [38;5;2m17992[39m: [38;5;2m      171:     (t.winched || Unescape.pending t.input.Input.flt)[39m
     [38;5;2m17993[39m: [38;5;2m      172: [39m
     [38;5;2m17994[39m: [38;5;2m      173:   let fds t = t.fds[39m
     [38;5;2m17995[39m: [38;5;2m      174: end[39m
     [38;5;2m17996[39m: [38;5;2m      175: [39m
     [38;5;2m17997[39m: [38;5;2m      176: include Gen_output (struct[39m
     [38;5;2m17998[39m: [38;5;2m      177:   type fd = out_channel and k = unit[39m
     [38;5;2m17999[39m: [38;5;2m      178:   let def   = stdout[39m
     [38;5;2m18000[39m: [38;5;2m      179:   and to_fd = Unix.descr_of_out_channel[39m
     [38;5;2m18001[39m: [38;5;2m      180:   and write = Buffer.output_buffer[39m
     [38;5;2m18002[39m: [38;5;2m      181: end)[39m
     [38;5;2m18003[39m: [38;5;2mAdded regular file ../notty/src-unix/notty_unix.mli:[39m
     [38;5;2m18004[39m: [38;5;2m        1: (* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m18005[39m: [38;5;2m        2:    See LICENSE.md. *)[39m
     [38;5;2m18006[39m: [38;5;2m        3: [39m
     [38;5;2m18007[39m: [38;5;2m        4: (** [Notty] IO for pure [Unix].[39m
     [38;5;2m18008[39m: [38;5;2m        5: [39m
     [38;5;2m18009[39m: [38;5;2m        6:     This is an IO module for {!Notty}.[39m
     [38;5;2m18010[39m: [38;5;2m        7: [39m
     [38;5;2m18011[39m: [38;5;2m        8:     {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m18012[39m: [38;5;2m        9: [39m
     [38;5;2m18013[39m: [38;5;2m       10: open Notty[39m
     [38;5;2m18014[39m: [38;5;2m       11: [39m
     [38;5;2m18015[39m: [38;5;2m       12: (** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m18016[39m: [38;5;2m       13: [39m
     [38;5;2m18017[39m: [38;5;2m       14: (** Terminal IO abstraction for fullscreen, interactive applications.[39m
     [38;5;2m18018[39m: [38;5;2m       15: [39m
     [38;5;2m18019[39m: [38;5;2m       16:     This module provides both input and output. It assumes exclusive ownership of[39m
     [38;5;2m18020[39m: [38;5;2m       17:     the IO streams between {{!create}initialization} and {{!release}shutdown}. *)[39m
     [38;5;2m18021[39m: [38;5;2m       18: module Term : sig[39m
     [38;5;2m18022[39m: [38;5;2m       19: [39m
     [38;5;2m18023[39m: [38;5;2m       20:   type t[39m
     [38;5;2m18024[39m: [38;5;2m       21:   (** Representation of the terminal, giving structured access to IO. *)[39m
     [38;5;2m18025[39m: [38;5;2m       22: [39m
     [38;5;2m18026[39m: [38;5;2m       23:   (** {1 Construction and destruction} *)[39m
     [38;5;2m18027[39m: [38;5;2m       24: [39m
     [38;5;2m18028[39m: [38;5;2m       25:   val create : ?dispose:bool ->[39m
     [38;5;2m18029[39m: [38;5;2m       26:                ?nosig:bool ->[39m
     [38;5;2m18030[39m: [38;5;2m       27:                ?mouse:bool ->[39m
     [38;5;2m18031[39m: [38;5;2m       28:                ?bpaste:bool ->[39m
     [38;5;2m18032[39m: [38;5;2m       29:                ?input:Unix.file_descr ->[39m
     [38;5;2m18033[39m: [38;5;2m       30:                ?output:Unix.file_descr ->[39m
     [38;5;2m18034[39m: [38;5;2m       31:                unit -> t[39m
     [38;5;2m18035[39m: [38;5;2m       32:   (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a fresh[39m
     [38;5;2m18036[39m: [38;5;2m       33:       {{!t}terminal}. It has the following side effects:[39m
     [38;5;2m18037[39m: [38;5;2m       34:       {ul[39m
     [38;5;2m18038[39m: [38;5;2m       35:       {- [Unix.tcsetattr] is applied to [input] to disable {e echo} and[39m
     [38;5;2m18039[39m: [38;5;2m       36:          {e canonical mode}.}[39m
     [38;5;2m18040[39m: [38;5;2m       37:       {- [output] is set to {e alternate screen mode}, and the cursor is[39m
     [38;5;2m18041[39m: [38;5;2m       38:          hidden. Mouse and {e bracketed paste} reporting are (optionally)[39m
     [38;5;2m18042[39m: [38;5;2m       39:          enabled.}[39m
     [38;5;2m18043[39m: [38;5;2m       40:       {- [SIGWINCH] signal, normally ignored, is handled.}}[39m
     [38;5;2m18044[39m: [38;5;2m       41: [39m
     [38;5;2m18045[39m: [38;5;2m       42:       [~dispose] arranges for automatic {{!release}cleanup} of the terminal[39m
     [38;5;2m18046[39m: [38;5;2m       43:       before the process terminates. The downside is that a reference to this[39m
     [38;5;2m18047[39m: [38;5;2m       44:       terminal is retained until the program exits. Defaults to [true].[39m
     [38;5;2m18048[39m: [38;5;2m       45: [39m
     [38;5;2m18049[39m: [38;5;2m       46:       [~nosig] additionally turns off signal delivery and flow control[39m
     [38;5;2m18050[39m: [38;5;2m       47:       ({e isig} and {e ixon}) on input. Inhibits automatic handling of[39m
     [38;5;2m18051[39m: [38;5;2m       48:       {e CTRL-\{C,Z,\,S,Q\}}. Defaults to [true].[39m
     [38;5;2m18052[39m: [38;5;2m       49: [39m
     [38;5;2m18053[39m: [38;5;2m       50:       [~mouse] activates mouse reporting. Defaults to [true].[39m
     [38;5;2m18054[39m: [38;5;2m       51: [39m
     [38;5;2m18055[39m: [38;5;2m       52:       [~bpaste] activates bracketed paste reporting. Defaults to [true].[39m
     [38;5;2m18056[39m: [38;5;2m       53: [39m
     [38;5;2m18057[39m: [38;5;2m       54:       [~input] is the input file descriptor. Defaults to [stdin].[39m
     [38;5;2m18058[39m: [38;5;2m       55: [39m
     [38;5;2m18059[39m: [38;5;2m       56:       [~output] is the output file descriptor. Defaults to [stdout]. *)[39m
     [38;5;2m18060[39m: [38;5;2m       57: [39m
     [38;5;2m18061[39m: [38;5;2m       58:   val release : t -> unit[39m
     [38;5;2m18062[39m: [38;5;2m       59:   (** Dispose of this terminal. Original behavior of input fd is reinstated,[39m
     [38;5;2m18063[39m: [38;5;2m       60:       cursor is restored, mouse reporting disabled, and alternate mode is[39m
     [38;5;2m18064[39m: [38;5;2m       61:       terminated.[39m
     [38;5;2m18065[39m: [38;5;2m       62: [39m
     [38;5;2m18066[39m: [38;5;2m       63:       It is an error to use the {{!cmds}commands} on a released terminal, and[39m
     [38;5;2m18067[39m: [38;5;2m       64:       will raise [Invalid_argument], while [release] itself is idempotent. *)[39m
     [38;5;2m18068[39m: [38;5;2m       65: [39m
     [38;5;2m18069[39m: [38;5;2m       66:   (** {1:cmds Commands} *)[39m
     [38;5;2m18070[39m: [38;5;2m       67: [39m
     [38;5;2m18071[39m: [38;5;2m       68:   val image : t -> image -> unit[39m
     [38;5;2m18072[39m: [38;5;2m       69:   (** [image t i] sets [i] as [t]'s current image and redraws the terminal. *)[39m
     [38;5;2m18073[39m: [38;5;2m       70: [39m
     [38;5;2m18074[39m: [38;5;2m       71:   val refresh : t -> unit[39m
     [38;5;2m18075[39m: [38;5;2m       72:   (** [refresh t] redraws the terminal using the current image.[39m
     [38;5;2m18076[39m: [38;5;2m       73: [39m
     [38;5;2m18077[39m: [38;5;2m       74:       Useful if the output might have become garbled. *)[39m
     [38;5;2m18078[39m: [38;5;2m       75: [39m
     [38;5;2m18079[39m: [38;5;2m       76:   val cursor : t -> (int * int) option -> unit[39m
     [38;5;2m18080[39m: [38;5;2m       77:   (** [cursor t pos] sets and redraws the cursor.[39m
     [38;5;2m18081[39m: [38;5;2m       78: [39m
     [38;5;2m18082[39m: [38;5;2m       79:       [None] hides it. [Some (x, y)] places it at column [x] and row [y], with[39m
     [38;5;2m18083[39m: [38;5;2m       80:       the origin at [(0, 0)], mapping to the upper-left corner. *)[39m
     [38;5;2m18084[39m: [38;5;2m       81: [39m
     [38;5;2m18085[39m: [38;5;2m       82:   (** {1 Events} *)[39m
     [38;5;2m18086[39m: [38;5;2m       83: [39m
     [38;5;2m18087[39m: [38;5;2m       84:   val event : t -> [ Unescape.event | `Resize of (int * int) | `End ][39m
     [38;5;2m18088[39m: [38;5;2m       85:   (** Wait for a new event. [event t] can be:[39m
     [38;5;2m18089[39m: [38;5;2m       86:       {ul[39m
     [38;5;2m18090[39m: [38;5;2m       87:       {- [#Unescape.event], an {{!Notty.Unescape.event}[event]} from the input fd;}[39m
     [38;5;2m18091[39m: [38;5;2m       88:       {- [`End] if the input fd is closed, or the terminal was released; or}[39m
     [38;5;2m18092[39m: [38;5;2m       89:       {- [`Resize (cols, rows)] giving the current size of the output tty, if a[39m
     [38;5;2m18093[39m: [38;5;2m       90:          [SIGWINCH] was delivered before or during this call to [event].}}[39m
     [38;5;2m18094[39m: [38;5;2m       91: [39m
     [38;5;2m18095[39m: [38;5;2m       92:       {b Note} [event] is buffered. Calls can either block or immediately[39m
     [38;5;2m18096[39m: [38;5;2m       93:       return. Use {{!pending}[pending]} to detect when the next call would not[39m
     [38;5;2m18097[39m: [38;5;2m       94:       block. *)[39m
     [38;5;2m18098[39m: [38;5;2m       95: [39m
     [38;5;2m18099[39m: [38;5;2m       96:   val pending : t -> bool[39m
     [38;5;2m18100[39m: [38;5;2m       97:   (** [pending t] is [true] if the next call to {{!event}[event]} would not[39m
     [38;5;2m18101[39m: [38;5;2m       98:       block and the terminal has not yet been released. *)[39m
     [38;5;2m18102[39m: [38;5;2m       99: [39m
     [38;5;2m18103[39m: [38;5;2m      100:   (** {1 Properties} *)[39m
     [38;5;2m18104[39m: [38;5;2m      101: [39m
     [38;5;2m18105[39m: [38;5;2m      102:   val size : t -> int * int[39m
     [38;5;2m18106[39m: [38;5;2m      103:   (** [size t] is the current size of the terminal's output tty. *)[39m
     [38;5;2m18107[39m: [38;5;2m      104: [39m
     [38;5;2m18108[39m: [38;5;2m      105:   val fds : t -> Unix.file_descr * Unix.file_descr[39m
     [38;5;2m18109[39m: [38;5;2m      106:   (** [fds t] are [t]'s input and output file descriptors. *)[39m
     [38;5;2m18110[39m: [38;5;2m      107: [39m
     [38;5;2m18111[39m: [38;5;2m      108:   (** {1 Window size change notifications} *)[39m
     [38;5;2m18112[39m: [38;5;2m      109: [39m
     [38;5;2m18113[39m: [38;5;2m      110:   (** Manual [SIGWINCH] handling.[39m
     [38;5;2m18114[39m: [38;5;2m      111: [39m
     [38;5;2m18115[39m: [38;5;2m      112:       Unix delivers notifications about tty size changes through the [SIGWINCH][39m
     [38;5;2m18116[39m: [38;5;2m      113:       signal. A handler for this signal is installed as soon as a new terminal[39m
     [38;5;2m18117[39m: [38;5;2m      114:       is {{!create}created}. Replacing the global [SIGWINCH] handler using[39m
     [38;5;2m18118[39m: [38;5;2m      115:       the [Sys] module will cause this module to malfunction, as the size change[39m
     [38;5;2m18119[39m: [38;5;2m      116:       notifications will no longer be delivered.[39m
     [38;5;2m18120[39m: [38;5;2m      117: [39m
     [38;5;2m18121[39m: [38;5;2m      118:       You might still want to ignore resizes reported by {{!event}[event]} and[39m
     [38;5;2m18122[39m: [38;5;2m      119:       directly listen to [SIGWINCH]. This module allows installing such[39m
     [38;5;2m18123[39m: [38;5;2m      120:       listeners without conflicting with the rest of the machinery. *)[39m
     [38;5;2m18124[39m: [38;5;2m      121:   module Winch : sig[39m
     [38;5;2m18125[39m: [38;5;2m      122: [39m
     [38;5;2m18126[39m: [38;5;2m      123:     val add : Unix.file_descr -> ((int * int) -> unit) -> [`Revert of unit -> unit][39m
     [38;5;2m18127[39m: [38;5;2m      124:     (** [add fd f] registers a [SIGWINCH] handler. Every time the signal is[39m
     [38;5;2m18128[39m: [38;5;2m      125:         delivered, [f] is called with the current size of the tty backing [fd].[39m
     [38;5;2m18129[39m: [38;5;2m      126:         If [fd] is not a tty, [f] is never called.[39m
     [38;5;2m18130[39m: [38;5;2m      127: [39m
     [38;5;2m18131[39m: [38;5;2m      128:         Return value is a function that removes the handler [f].[39m
     [38;5;2m18132[39m: [38;5;2m      129: [39m
     [38;5;2m18133[39m: [38;5;2m      130:         Handlers are called in an unspecified order. *)[39m
     [38;5;2m18134[39m: [38;5;2m      131: [39m
     [38;5;2m18135[39m: [38;5;2m      132:   end[39m
     [38;5;2m18136[39m: [38;5;2m      133: end[39m
     [38;5;2m18137[39m: [38;5;2m      134: [39m
     [38;5;2m18138[39m: [38;5;2m      135: (** {1:inline Inline output}[39m
     [38;5;2m18139[39m: [38;5;2m      136: [39m
     [38;5;2m18140[39m: [38;5;2m      137:     These operations do not assume exclusive access to the output. This means[39m
     [38;5;2m18141[39m: [38;5;2m      138:     that they can be combined with other means of producing output. At the same[39m
     [38;5;2m18142[39m: [38;5;2m      139:     time, it means that they are affected by the current terminal state, and[39m
     [38;5;2m18143[39m: [38;5;2m      140:     that this state is not tracked. *)[39m
     [38;5;2m18144[39m: [38;5;2m      141: [39m
     [38;5;2m18145[39m: [38;5;2m      142: val winsize : Unix.file_descr -> (int * int) option[39m
     [38;5;2m18146[39m: [38;5;2m      143: (** [winsize fd] is [Some (columns, rows)], the current dimensions of [fd]'s[39m
     [38;5;2m18147[39m: [38;5;2m      144:     backing tty, or [None], when [fd] is not backed by a tty. *)[39m
     [38;5;2m18148[39m: [38;5;2m      145: [39m
     [38;5;2m18149[39m: [38;5;2m      146: val eol : image -> image[39m
     [38;5;2m18150[39m: [38;5;2m      147: (** [eol image] is [image], producing an extra newline when printed. *)[39m
     [38;5;2m18151[39m: [38;5;2m      148: [39m
     [38;5;2m18152[39m: [38;5;2m      149: val output_image :[39m
     [38;5;2m18153[39m: [38;5;2m      150:   ?cap:Cap.t -> ?fd:out_channel -> image -> unit[39m
     [38;5;2m18154[39m: [38;5;2m      151: (** [output_image ?cap ?fd image] writes [image] to [fd].[39m
     [38;5;2m18155[39m: [38;5;2m      152: [39m
     [38;5;2m18156[39m: [38;5;2m      153:     The image is displayed in its full height. If the output is a tty, image[39m
     [38;5;2m18157[39m: [38;5;2m      154:     width is clipped to the output width. Otherwise, full width is used.[39m
     [38;5;2m18158[39m: [38;5;2m      155: [39m
     [38;5;2m18159[39m: [38;5;2m      156:     [~cap] is the {{!caps}optional} terminal capability set.[39m
     [38;5;2m18160[39m: [38;5;2m      157: [39m
     [38;5;2m18161[39m: [38;5;2m      158:     [~fd] defaults to [stdout]. *)[39m
     [38;5;2m18162[39m: [38;5;2m      159: [39m
     [38;5;2m18163[39m: [38;5;2m      160: val output_image_size : ?cap:Cap.t -> ?fd:out_channel -> (int * int -> image) -> unit[39m
     [38;5;2m18164[39m: [38;5;2m      161: (** [output_image_size ?cap ?fd f] is[39m
     [38;5;2m18165[39m: [38;5;2m      162:     [output_image ?cap ?fd (f size)] where [size] are [fd]'s current[39m
     [38;5;2m18166[39m: [38;5;2m      163:     {{!winsize}output dimensions}.[39m
     [38;5;2m18167[39m: [38;5;2m      164: [39m
     [38;5;2m18168[39m: [38;5;2m      165:     If [fd] is not backed by a tty, as a matter of convenience, [f] is applied[39m
     [38;5;2m18169[39m: [38;5;2m      166:     to [(80, 24)]. Use {!Unix.isatty} or {{!winsize}[winsize]} to detect whether[39m
     [38;5;2m18170[39m: [38;5;2m      167:     the output has a well-defined size. *)[39m
     [38;5;2m18171[39m: [38;5;2m      168: [39m
     [38;5;2m18172[39m: [38;5;2m      169: val show_cursor : ?cap:Cap.t -> ?fd:out_channel -> bool -> unit[39m
     [38;5;2m18173[39m: [38;5;2m      170: (** [show_cursor ?cap ?fd visible] toggles the cursor visibility on [fd]. *)[39m
     [38;5;2m18174[39m: [38;5;2m      171: [39m
     [38;5;2m18175[39m: [38;5;2m      172: val move_cursor :[39m
     [38;5;2m18176[39m: [38;5;2m      173:   ?cap:Cap.t -> ?fd:out_channel ->[39m
     [38;5;2m18177[39m: [38;5;2m      174:     [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m18178[39m: [38;5;2m      175: (** [move_cursor ?cap ?fd motion] moves the cursor on [fd].[39m
     [38;5;2m18179[39m: [38;5;2m      176: [39m
     [38;5;2m18180[39m: [38;5;2m      177:     [motion] is one of:[39m
     [38;5;2m18181[39m: [38;5;2m      178:     {ul[39m
     [38;5;2m18182[39m: [38;5;2m      179:     {- [`To (column, line)], positioning the cursor to [(column, line)]. Origin[39m
     [38;5;2m18183[39m: [38;5;2m      180:        is [(0, 0)], the upper-left corner of the screen.}[39m
     [38;5;2m18184[39m: [38;5;2m      181:     {- [`Home], moving the cursor the beginning of line.}[39m
     [38;5;2m18185[39m: [38;5;2m      182:     {- [`By (columns, lines)], moving the cursor [columns] to the right (left if[39m
     [38;5;2m18186[39m: [38;5;2m      183:        negative) and [lines] down (up if negative).[39m
     [38;5;2m18187[39m: [38;5;2m      184: [39m
     [38;5;2m18188[39m: [38;5;2m      185:        {b Note} Behavior is terminal dependent if the movement overshoots the[39m
     [38;5;2m18189[39m: [38;5;2m      186:        output size.}} *)[39m
     [38;5;2m18190[39m: [38;5;2m      187: [39m
     [38;5;2m18191[39m: [38;5;2m      188: (** {1:caps Capability detection}[39m
     [38;5;2m18192[39m: [38;5;2m      189: [39m
     [38;5;2m18193[39m: [38;5;2m      190:     All [image] output requires {{!Notty.Cap.t}terminal capabilities}.[39m
     [38;5;2m18194[39m: [38;5;2m      191: [39m
     [38;5;2m18195[39m: [38;5;2m      192:     When not provided, capabilities are auto-detected, by checking that the[39m
     [38;5;2m18196[39m: [38;5;2m      193:     output is a tty, that the environment variable [$TERM] is set, and that it[39m
     [38;5;2m18197[39m: [38;5;2m      194:     is not set to either [""] or ["dumb"]. If these conditions hold,[39m
     [38;5;2m18198[39m: [38;5;2m      195:     {{!Notty.Cap.ansi}ANSI} escapes are used. Otherwise, {{!Notty.Cap.dumb}no}[39m
     [38;5;2m18199[39m: [38;5;2m      196:     escapes are used. *)[39m
     [38;5;2m18200[39m: [38;5;2m      197: [39m
     [38;5;2m18201[39m: [38;5;2m      198: (**/**)[39m
     [38;5;2m18202[39m: [38;5;2m      199: (** {1 Private}[39m
     [38;5;2m18203[39m: [38;5;2m      200: [39m
     [38;5;2m18204[39m: [38;5;2m      201:     These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m18205[39m: [38;5;2m      202: module Private : sig[39m
     [38;5;2m18206[39m: [38;5;2m      203: [39m
     [38;5;2m18207[39m: [38;5;2m      204:   val cap_for_fd        : Unix.file_descr -> Cap.t[39m
     [38;5;2m18208[39m: [38;5;2m      205:   val setup_tcattr      : nosig:bool -> Unix.file_descr -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m18209[39m: [38;5;2m      206:   val set_winch_handler : (unit -> unit) -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m18210[39m: [38;5;2m      207: [39m
     [38;5;2m18211[39m: [38;5;2m      208:   module Gen_output (O : sig[39m
     [38;5;2m18212[39m: [38;5;2m      209:     type fd[39m
     [38;5;2m18213[39m: [38;5;2m      210:     type k[39m
     [38;5;2m18214[39m: [38;5;2m      211:     val def   : fd[39m
     [38;5;2m18215[39m: [38;5;2m      212:     val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m18216[39m: [38;5;2m      213:     val write : fd -> Buffer.t -> k[39m
     [38;5;2m18217[39m: [38;5;2m      214:   end ) : sig[39m
     [38;5;2m18218[39m: [38;5;2m      215:     val output_image : ?cap:Cap.t -> ?fd:O.fd -> image -> O.k[39m
     [38;5;2m18219[39m: [38;5;2m      216:     val output_image_size : ?cap:Cap.t -> ?fd:O.fd -> (int * int -> image) -> O.k[39m
     [38;5;2m18220[39m: [38;5;2m      217:     val show_cursor : ?cap:Cap.t -> ?fd:O.fd -> bool -> O.k[39m
     [38;5;2m18221[39m: [38;5;2m      218:     val move_cursor : ?cap:Cap.t -> ?fd:O.fd -> [ `Home | `By of int * int | `To of int * int ] -> O.k[39m
     [38;5;2m18222[39m: [38;5;2m      219:     val eol : image -> image[39m
     [38;5;2m18223[39m: [38;5;2m      220:   end[39m
     [38;5;2m18224[39m: [38;5;2m      221: end[39m
     [38;5;2m18225[39m: [38;5;2m      222: (**/**)[39m
     [38;5;2m18226[39m: [38;5;2mAdded executable file ../notty/support/gen_unicode_props.ml:[39m
     [38;5;2m18227[39m: [38;5;2m        1: #!/usr/bin/env ocaml[39m
     [38;5;2m18228[39m: [38;5;2m        2: (* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m18229[39m: [38;5;2m        3:    See LICENSE.md. *)[39m
     [38;5;2m18230[39m: [38;5;2m        4: [39m
     [38;5;2m18231[39m: [38;5;2m        5: #use "topfind"[39m
     [38;5;2m18232[39m: [38;5;2m        6: #require "uucp"[39m
     [38;5;2m18233[39m: [38;5;2m        7: [39m
     [38;5;2m18234[39m: [38;5;2m        8: let filter p seq i = seq (fun x -> if p x then i x)[39m
     [38;5;2m18235[39m: [38;5;2m        9: let map f seq i = seq (fun x -> i (f x))[39m
     [38;5;2m18236[39m: [38;5;2m       10: let uchars it =[39m
     [38;5;2m18237[39m: [38;5;2m       11:   let rec go it u = it u; go it (Uchar.succ u) in[39m
     [38;5;2m18238[39m: [38;5;2m       12:   try go it Uchar.min with Invalid_argument _ -> ()[39m
     [38;5;2m18239[39m: [38;5;2m       13: let to_list seq =[39m
     [38;5;2m18240[39m: [38;5;2m       14:   let xs = ref [] in[39m
     [38;5;2m18241[39m: [38;5;2m       15:   seq (fun x -> xs := x :: !xs);[39m
     [38;5;2m18242[39m: [38;5;2m       16:   List.rev !xs[39m
     [38;5;2m18243[39m: [38;5;2m       17: [39m
     [38;5;2m18244[39m: [38;5;2m       18: let intervals_kv seq i =[39m
     [38;5;2m18245[39m: [38;5;2m       19:   let s = ref None in[39m
     [38;5;2m18246[39m: [38;5;2m       20:   let f (x, v) = match !s with[39m
     [38;5;2m18247[39m: [38;5;2m       21:   | None -> s := Some (x, x, v)[39m
     [38;5;2m18248[39m: [38;5;2m       22:   | Some (a, b, v0) when v = v0 && x = Uchar.succ b -> s := Some (a, x, v0)[39m
     [38;5;2m18249[39m: [38;5;2m       23:   | Some e -> i e; s := Some (x, x, v) in[39m
     [38;5;2m18250[39m: [38;5;2m       24:   seq f;[39m
     [38;5;2m18251[39m: [38;5;2m       25:   match !s with Some e -> i e | _ -> ()[39m
     [38;5;2m18252[39m: [38;5;2m       26: [39m
     [38;5;2m18253[39m: [38;5;2m       27: let intervals_p seq =[39m
     [38;5;2m18254[39m: [38;5;2m       28:   map (fun x -> x, ()) seq |> intervals_kv |> map (fun (a, b, _) -> a, b)[39m
     [38;5;2m18255[39m: [38;5;2m       29: [39m
     [38;5;2m18256[39m: [38;5;2m       30: (* Condenses code points into continuous range. *)[39m
     [38;5;2m18257[39m: [38;5;2m       31: let pack_u u = let i = Uchar.to_int u in if i > 0xd7ff then i - 0x800 else i[39m
     [38;5;2m18258[39m: [38;5;2m       32: let unpack_u i = Uchar.of_int (if i < 0xd800 then i else i + 0x800)[39m
     [38;5;2m18259[39m: [38;5;2m       33: [39m
     [38;5;2m18260[39m: [38;5;2m       34: (* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m18261[39m: [38;5;2m       35:    Root is variable; lower levels are either empty or complete.[39m
     [38;5;2m18262[39m: [38;5;2m       36: [39m
     [38;5;2m18263[39m: [38;5;2m       37:    At the moment, packed Uchar.max is 0x10f7ff; this can map up to 0xffffff[39m
     [38;5;2m18264[39m: [38;5;2m       38:    distinct code points.  *)[39m
     [38;5;2m18265[39m: [38;5;2m       39: let trie ~default f =[39m
     [38;5;2m18266[39m: [38;5;2m       40:   let xs = List.init ((pack_u Uchar.max lsr 12) + 1) @@ fun b0 ->[39m
     [38;5;2m18267[39m: [38;5;2m       41:     let mask = b0 lsl 12 in[39m
     [38;5;2m18268[39m: [38;5;2m       42:     let arr = Array.init 0x40 @@ fun b1 ->[39m
     [38;5;2m18269[39m: [38;5;2m       43:       let mask = mask lor (b1 lsl 6) in[39m
     [38;5;2m18270[39m: [38;5;2m       44:       let v b2 = match unpack_u (mask lor b2) with[39m
     [38;5;2m18271[39m: [38;5;2m       45:       | x -> f x[39m
     [38;5;2m18272[39m: [38;5;2m       46:       | exception Invalid_argument _ -> default in[39m
     [38;5;2m18273[39m: [38;5;2m       47:       match (for b2 = 0 to 0x3f do if v b2 <> default then raise Exit done) with[39m
     [38;5;2m18274[39m: [38;5;2m       48:       | exception Exit -> String.init 0x40 (fun b2 -> Char.chr (v b2))[39m
     [38;5;2m18275[39m: [38;5;2m       49:       | () -> ""[39m
     [38;5;2m18276[39m: [38;5;2m       50:     in[39m
     [38;5;2m18277[39m: [38;5;2m       51:     if Array.for_all ((=) "") arr then [||] else arr[39m
     [38;5;2m18278[39m: [38;5;2m       52:   in[39m
     [38;5;2m18279[39m: [38;5;2m       53:   let rec trim = function [||]::xs -> trim xs | xs -> xs in[39m
     [38;5;2m18280[39m: [38;5;2m       54:   List.rev (trim (List.rev xs)) |> Array.of_list[39m
     [38;5;2m18281[39m: [38;5;2m       55: [39m
     [38;5;2m18282[39m: [38;5;2m       56: let pf = Format.fprintf[39m
     [38;5;2m18283[39m: [38;5;2m       57: let strf = Format.sprintf[39m
     [38;5;2m18284[39m: [38;5;2m       58: let pp_iter ?(sep = fun _ _ -> ()) iter pp ppf x =[39m
     [38;5;2m18285[39m: [38;5;2m       59:   let fst = ref true in[39m
     [38;5;2m18286[39m: [38;5;2m       60:   let f x = (if !fst then fst := false else sep ppf ()); pp ppf x in[39m
     [38;5;2m18287[39m: [38;5;2m       61:   iter f x[39m
     [38;5;2m18288[39m: [38;5;2m       62: let pp_u ppf u = pf ppf "0x%04x" (Uchar.to_int u)[39m
     [38;5;2m18289[39m: [38;5;2m       63: let pp_as_array iter pp ppf x =[39m
     [38;5;2m18290[39m: [38;5;2m       64:   let sep ppf () = pf ppf ";@ " in[39m
     [38;5;2m18291[39m: [38;5;2m       65:   pf ppf "@[<2>[|%a|]@]" (pp_iter ~sep iter pp) x[39m
     [38;5;2m18292[39m: [38;5;2m       66: [39m
     [38;5;2m18293[39m: [38;5;2m       67: let intern ppf_ml iter =[39m
     [38;5;2m18294[39m: [38;5;2m       68:   let t = Hashtbl.create 16 in[39m
     [38;5;2m18295[39m: [38;5;2m       69:   let n = ref 0 in[39m
     [38;5;2m18296[39m: [38;5;2m       70:   iter (fun s -> if not (Hashtbl.mem t s) then begin[39m
     [38;5;2m18297[39m: [38;5;2m       71:     let name = strf "s%03d" !n in[39m
     [38;5;2m18298[39m: [38;5;2m       72:     Hashtbl.add t s name; incr n;[39m
     [38;5;2m18299[39m: [38;5;2m       73:     pf ppf_ml "let %s = %S@." name s[39m
     [38;5;2m18300[39m: [38;5;2m       74:   end);[39m
     [38;5;2m18301[39m: [38;5;2m       75:   pf ppf_ml "@.";[39m
     [38;5;2m18302[39m: [38;5;2m       76:   (fun ppf s -> match Hashtbl.find_opt t s with[39m
     [38;5;2m18303[39m: [38;5;2m       77:    | Some name -> pf ppf "%s" name[39m
     [38;5;2m18304[39m: [38;5;2m       78:    | None -> pf ppf "%S" s)[39m
     [38;5;2m18305[39m: [38;5;2m       79: [39m
     [38;5;2m18306[39m: [38;5;2m       80: let dump_interval_map (ppf_mli, ppf_ml) ~name ~desc seq =[39m
     [38;5;2m18307[39m: [38;5;2m       81:   pf ppf_mli "(* %s *)@.val %s: int array * int array * int array@.@." desc name;[39m
     [38;5;2m18308[39m: [38;5;2m       82:   let xs = to_list (intervals_kv seq) in[39m
     [38;5;2m18309[39m: [38;5;2m       83:   let aa = List.map (fun (a, _, _) -> a) xs[39m
     [38;5;2m18310[39m: [38;5;2m       84:   and bb = List.map (fun (_, b, _) -> b) xs[39m
     [38;5;2m18311[39m: [38;5;2m       85:   and cc = List.map (fun (_, _, c) -> c) xs in[39m
     [38;5;2m18312[39m: [38;5;2m       86:   let pp_arr pp = pp_as_array List.iter pp in[39m
     [38;5;2m18313[39m: [38;5;2m       87:   let pp_arr_u = pp_arr pp_u and pp_arr_i = pp_arr Format.pp_print_int in[39m
     [38;5;2m18314[39m: [38;5;2m       88:   pf ppf_ml "@[<2>let %s =@ @[<1>(%a,@ %a,@ %a)@]@]@.@."[39m
     [38;5;2m18315[39m: [38;5;2m       89:      name pp_arr_u aa pp_arr_u bb pp_arr_i cc[39m
     [38;5;2m18316[39m: [38;5;2m       90: [39m
     [38;5;2m18317[39m: [38;5;2m       91: let dump_trie_map (ppf_mli, ppf_ml) ~name ~desc ~default f =[39m
     [38;5;2m18318[39m: [38;5;2m       92:   pf ppf_mli "(* %s *)@.val %s: string array array@.@." desc name;[39m
     [38;5;2m18319[39m: [38;5;2m       93:   let xs = trie ~default f in[39m
     [38;5;2m18320[39m: [38;5;2m       94:   let pp_s = intern ppf_ml Array.(fun i -> i ""; iter (iter i) xs) in[39m
     [38;5;2m18321[39m: [38;5;2m       95:   pf ppf_ml "@[<2>let %s =@ %a@]" name[39m
     [38;5;2m18322[39m: [38;5;2m       96:     Array.(pp_as_array iter (pp_as_array iter pp_s)) xs[39m
     [38;5;2m18323[39m: [38;5;2m       97: [39m
     [38;5;2m18324[39m: [38;5;2m       98: let pp_header ppf = Format.fprintf ppf[39m
     [38;5;2m18325[39m: [38;5;2m       99: "(* Do not edit.[39m
     [38;5;2m18326[39m: [38;5;2m      100:  *[39m
     [38;5;2m18327[39m: [38;5;2m      101:  * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m18328[39m: [38;5;2m      102:  * using `%s`.[39m
     [38;5;2m18329[39m: [38;5;2m      103:  *[39m
     [38;5;2m18330[39m: [38;5;2m      104:  * Unicode version %s.[39m
     [38;5;2m18331[39m: [38;5;2m      105:  *)[39m
     [38;5;2m18332[39m: [38;5;2m      106: [39m
     [38;5;2m18333[39m: [38;5;2m      107: " Sys.argv.(0) Uucp.unicode_version[39m
     [38;5;2m18334[39m: [38;5;2m      108: [39m
     [38;5;2m18335[39m: [38;5;2m      109: let extract (ppmli, ppml as ppfs) =[39m
     [38;5;2m18336[39m: [38;5;2m      110: [39m
     [38;5;2m18337[39m: [38;5;2m      111:   pp_header ppmli; pp_header ppml;[39m
     [38;5;2m18338[39m: [38;5;2m      112: [39m
     [38;5;2m18339[39m: [38;5;2m      113:   dump_interval_map ppfs[39m
     [38;5;2m18340[39m: [38;5;2m      114:     ~name:"tty_width_hint"[39m
     [38;5;2m18341[39m: [38;5;2m      115:     ~desc:"Uucp.Break.tty_width_hint"[39m
     [38;5;2m18342[39m: [38;5;2m      116:     (* w = -1 is easy to detect.[39m
     [38;5;2m18343[39m: [38;5;2m      117:        w = 1 covers the most intervals, so we default it. *)[39m
     [38;5;2m18344[39m: [38;5;2m      118:     (uchars |> map (fun u -> u, Uucp.Break.tty_width_hint u)[39m
     [38;5;2m18345[39m: [38;5;2m      119:             |> filter (fun (_, w) -> w <> -1 && w <> 1));[39m
     [38;5;2m18346[39m: [38;5;2m      120: [39m
     [38;5;2m18347[39m: [38;5;2m      121:   (* dump_interval_map ppfs *)[39m
     [38;5;2m18348[39m: [38;5;2m      122:   (*   ~name:"grapheme_cluster_boundary" *)[39m
     [38;5;2m18349[39m: [38;5;2m      123:   (*   ~desc:"Uucp.Break.Low.grapheme_cluster." *)[39m
     [38;5;2m18350[39m: [38;5;2m      124:   (*   (1* No single value dominates the histogram. *1) *)[39m
     [38;5;2m18351[39m: [38;5;2m      125:   (*   (uchars |> map (fun u -> u, Uucp.Break.Low.grapheme_cluster u)); *)[39m
     [38;5;2m18352[39m: [38;5;2m      126: [39m
     [38;5;2m18353[39m: [38;5;2m      127:   dump_trie_map ppfs[39m
     [38;5;2m18354[39m: [38;5;2m      128:     ~name:"grapheme_cluster_boundary"[39m
     [38;5;2m18355[39m: [38;5;2m      129:     ~desc:"Uucp.Break.Low.grapheme_cluster."[39m
     [38;5;2m18356[39m: [38;5;2m      130:     ~default:16 (* 16 - `XX - is by far the most prevalent value *)[39m
     [38;5;2m18357[39m: [38;5;2m      131:     Uucp.Break.Low.grapheme_cluster;[39m
     [38;5;2m18358[39m: [38;5;2m      132: [39m
     [38;5;2m18359[39m: [38;5;2m      133:   ()[39m
     [38;5;2m18360[39m: [38;5;2m      134: [39m
     [38;5;2m18361[39m: [38;5;2m      135: let file = "src/no-uucp/notty_uucp_data"[39m
     [38;5;2m18362[39m: [38;5;2m      136: [39m
     [38;5;2m18363[39m: [38;5;2m      137: let with_new name f =[39m
     [38;5;2m18364[39m: [38;5;2m      138:   let o = open_out_gen [Open_trunc; Open_creat; Open_wronly] 0o664 name in[39m
     [38;5;2m18365[39m: [38;5;2m      139:   let ppf = Format.formatter_of_out_channel o in[39m
     [38;5;2m18366[39m: [38;5;2m      140:   f ppf; Format.pp_print_flush ppf (); close_out o[39m
     [38;5;2m18367[39m: [38;5;2m      141: [39m
     [38;5;2m18368[39m: [38;5;2m      142: let () =[39m
     [38;5;2m18369[39m: [38;5;2m      143:   Format.printf "Dumping Unicode v%s data to %s.@." Uucp.unicode_version file;[39m
     [38;5;2m18370[39m: [38;5;2m      144:   with_new (file ^ ".mli") @@ fun ppmli ->[39m
     [38;5;2m18371[39m: [38;5;2m      145:     with_new (file ^ ".ml") @@ fun ppml ->[39m
     [38;5;2m18372[39m: [38;5;2m      146:       extract (ppmli, ppml)[39m
     [38;5;2m18373[39m: [38;5;2mRemoved regular file ../test/dune:[39m
     [38;5;2m18374[39m: [38;5;2m   1     : (test[39m
     [38;5;2m18375[39m: [38;5;2m   2     :  (name jj_tui))[39m
     [38;5;2m18376[39m: [38;5;2mRemoved regular file ../test/jj_tui.ml:[39m
     [38;5;2m18377[39m: [38;5;2m    (empty)[39m
[38;5;3mAdded regular file log3:[39m
[38;5;6m    (empty)[39m
[38;5;3mAdded regular file test/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(test[39m
     [38;5;2m   2[39m: [38;5;2m (name jj_tui)[39m
     [38;5;2m   3[39m: [38;5;2m (libraries jj_tui)[39m
     [38;5;2m   4[39m: [38;5;2m (preprocess[39m
     [38;5;2m   5[39m: [38;5;2m  (pps ppx_jane ppx_expect)))[39m
[38;5;3mAdded regular file test/jj_tui.ml:[39m
[38;5;6m    (empty)[39m
[38;5;3mAdded regular file testing/hi:[39m
     [38;5;2m   1[39m: [38;5;2mhiiiiiii[39m
     [38;5;2m   2[39m: [38;5;2mhiiiiiiiiiiii[39m
     [38;5;2m   3[39m: [38;5;2mhiiiiiiiiiiii[39m
[38;5;3mAdded regular file testing/other/file:[39m
     [38;5;2m   1[39m: [38;5;2mhello Im other[39m
[38;5;3mRemoved regular file ../jj_tui.install:[39m
[38;5;1m   1[39m     : [38;5;1mlib: [[39m
[38;5;1m   2[39m     : [38;5;1m  "_build/install/default/lib/jj_tui/META"[39m
[38;5;1m   3[39m     : [38;5;1m  "_build/install/default/lib/jj_tui/dune-package"[39m
[38;5;1m   4[39m     : [38;5;1m  "_build/install/default/lib/jj_tui/opam"[39m
[38;5;1m   5[39m     : [38;5;1m][39m
[38;5;1m   6[39m     : [38;5;1mbin: [[39m
[38;5;1m   7[39m     : [38;5;1m  "_build/install/default/bin/jj_tui"[39m
[38;5;1m   8[39m     : [38;5;1m][39m
[38;5;3mRemoved regular file ../jj_tui.opam:[39m
[38;5;1m   1[39m     : [38;5;1m# This file is generated by dune, edit dune-project instead[39m
[38;5;1m   2[39m     : [38;5;1mopam-version: "2.0"[39m
[38;5;1m   3[39m     : [38;5;1msynopsis: "A short synopsis"[39m
[38;5;1m   4[39m     : [38;5;1mdescription: "A longer description"[39m
[38;5;1m   5[39m     : [38;5;1mmaintainer: ["Maintainer Name"][39m
[38;5;1m   6[39m     : [38;5;1mauthors: ["Author Name"][39m
[38;5;1m   7[39m     : [38;5;1mlicense: "LICENSE"[39m
[38;5;1m   8[39m     : [38;5;1mtags: ["topics" "to describe" "your" "project"][39m
[38;5;1m   9[39m     : [38;5;1mhomepage: "https://github.com/username/reponame"[39m
[38;5;1m  10[39m     : [38;5;1mdoc: "https://url/to/documentation"[39m
[38;5;1m  11[39m     : [38;5;1mbug-reports: "https://github.com/username/reponame/issues"[39m
[38;5;1m  12[39m     : [38;5;1mdepends: [[39m
[38;5;1m  13[39m     : [38;5;1m  "ocaml"[39m
[38;5;1m  14[39m     : [38;5;1m  "dune" {>= "3.9"}[39m
[38;5;1m  15[39m     : [38;5;1m  "odoc" {with-doc}[39m
[38;5;1m  16[39m     : [38;5;1m][39m
[38;5;1m  17[39m     : [38;5;1mbuild: [[39m
[38;5;1m  18[39m     : [38;5;1m  ["dune" "subst"] {dev}[39m
[38;5;1m  19[39m     : [38;5;1m  [[39m
[38;5;1m  20[39m     : [38;5;1m    "dune"[39m
[38;5;1m  21[39m     : [38;5;1m    "build"[39m
[38;5;1m  22[39m     : [38;5;1m    "-p"[39m
[38;5;1m  23[39m     : [38;5;1m    name[39m
[38;5;1m  24[39m     : [38;5;1m    "-j"[39m
[38;5;1m  25[39m     : [38;5;1m    jobs[39m
[38;5;1m  26[39m     : [38;5;1m    "@install"[39m
[38;5;1m  27[39m     : [38;5;1m    "@runtest" {with-test}[39m
[38;5;1m  28[39m     : [38;5;1m    "@doc" {with-doc}[39m
[38;5;1m  29[39m     : [38;5;1m  ][39m
[38;5;1m  30[39m     : [38;5;1m][39m
[38;5;1m  31[39m     : [38;5;1mdev-repo: "git+https://github.com/username/reponame.git"[39m
[38;5;3mRemoved regular file ../lib/dune:[39m
[38;5;1m   1[39m     : [38;5;1m(library[39m
[38;5;1m   2[39m     : [38;5;1m (name jj_tui)[39m
[38;5;1m   3[39m     : [38;5;1m (libraries core stdio core_unix.command_unix )[39m
[38;5;1m   4[39m     : [38;5;1m )[39m
[38;5;1m   5[39m     : [38;5;1m[39m
[38;5;3mRemoved regular file ../lib/process.ml:[39m
[38;5;1m   1[39m     : [38;5;1m[39m
[38;5;1m   2[39m     : [38;5;1mlet mk_home_cmd cmd =[39m
[38;5;1m   3[39m     : [38;5;1m  let home_dir = Unix.getenv "HOME" in[39m
[38;5;1m   4[39m     : [38;5;1m  Printf.sprintf "HOME=%s %s" home_dir cmd[39m
[38;5;1m   5[39m     : [38;5;1m[39m
[38;5;1m   6[39m     : [38;5;1mlet proc_silent cmd =[39m
[38;5;1m   7[39m     : [38;5;1m  let _exit_code = Unix.system (mk_home_cmd cmd) in[39m
[38;5;1m   8[39m     : [38;5;1m  ()[39m
[38;5;1m   9[39m     : [38;5;1m[39m
[38;5;1m  10[39m     : [38;5;1mlet proc cmd =[39m
[38;5;1m  11[39m     : [38;5;1m  Printf.eprintf "🐚  %s\n%!" cmd;[39m
[38;5;1m  12[39m     : [38;5;1m  proc_silent cmd[39m
[38;5;1m  13[39m     : [38;5;1m[39m
[38;5;1m  14[39m     : [38;5;1mlet collect_chan (channel : in_channel) : string =[39m
[38;5;1m  15[39m     : [38;5;1m  let rec loop acc =[39m
[38;5;1m  16[39m     : [38;5;1m    match input_line channel with[39m
[38;5;1m  17[39m     : [38;5;1m    | exception End_of_file -> acc[39m
[38;5;1m  18[39m     : [38;5;1m    | line -> loop (acc ^ line ^ "\n")[39m
[38;5;1m  19[39m     : [38;5;1m  in[39m
[38;5;1m  20[39m     : [38;5;1m  loop ""[39m
[38;5;1m  21[39m     : [38;5;1m[39m
[38;5;1m  22[39m     : [38;5;1mlet proc_stdout cmd =[39m
[38;5;1m  23[39m     : [38;5;1m  let ((proc_stdout, _proc_stdin, _proc_stderr) as process) =[39m
[38;5;1m  24[39m     : [38;5;1m    Unix.open_process_full (mk_home_cmd cmd) [||][39m
[38;5;1m  25[39m     : [38;5;1m  in[39m
[38;5;1m  26[39m     : [38;5;1m  let stdout_result = collect_chan proc_stdout in[39m
[38;5;1m  27[39m     : [38;5;1m  let _ = Unix.close_process_full process in[39m
[38;5;1m  28[39m     : [38;5;1m  String.trim stdout_result[39m
[38;5;1m  29[39m     : [38;5;1m[39m
[38;5;1m  30[39m     : [38;5;1mlet proc_stdOutAndErr cmd =[39m
[38;5;1m  31[39m     : [38;5;1m  let ((proc_stdout, _proc_stdin, proc_stderr) as process) =[39m
[38;5;1m  32[39m     : [38;5;1m    Unix.open_process_full (mk_home_cmd cmd) [||][39m
[38;5;1m  33[39m     : [38;5;1m  in[39m
[38;5;1m  34[39m     : [38;5;1m  let stdout_result = collect_chan proc_stdout in[39m
[38;5;1m  35[39m     : [38;5;1m  let stderr_result = collect_chan proc_stderr in[39m
[38;5;1m  36[39m     : [38;5;1m  let _ = Unix.close_process_full process in[39m
[38;5;1m  37[39m     : [38;5;1m  String.trim (stdout_result^stderr_result)[39m
[38;5;3mRemoved regular file ../minttea/leaves.install:[39m
[38;5;1m   1[39m     : [38;5;1mlib: [[39m
[38;5;1m   2[39m     : [38;5;1m  "_build/install/default/lib/leaves/META"[39m
[38;5;1m   3[39m     : [38;5;1m  "_build/install/default/lib/leaves/cursor.ml"[39m
[38;5;1m   4[39m     : [38;5;1m  "_build/install/default/lib/leaves/cursor.mli"[39m
[38;5;1m   5[39m     : [38;5;1m  "_build/install/default/lib/leaves/dune-package"[39m
[38;5;1m   6[39m     : [38;5;1m  "_build/install/default/lib/leaves/filtered_list.ml"[39m
[38;5;1m   7[39m     : [38;5;1m  "_build/install/default/lib/leaves/filtered_list.mli"[39m
[38;5;1m   8[39m     : [38;5;1m  "_build/install/default/lib/leaves/forms.ml"[39m
[38;5;1m   9[39m     : [38;5;1m  "_build/install/default/lib/leaves/fps.ml"[39m
[38;5;1m  10[39m     : [38;5;1m  "_build/install/default/lib/leaves/fps.mli"[39m
[38;5;1m  11[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.a"[39m
[38;5;1m  12[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.cma"[39m
[38;5;1m  13[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.cmi"[39m
[38;5;1m  14[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.cmt"[39m
[38;5;1m  15[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.cmx"[39m
[38;5;1m  16[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.cmxa"[39m
[38;5;1m  17[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.ml"[39m
[38;5;1m  18[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Cursor.cmi"[39m
[38;5;1m  19[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Cursor.cmt"[39m
[38;5;1m  20[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Cursor.cmti"[39m
[38;5;1m  21[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Cursor.cmx"[39m
[38;5;1m  22[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Filtered_list.cmi"[39m
[38;5;1m  23[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Filtered_list.cmt"[39m
[38;5;1m  24[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Filtered_list.cmti"[39m
[38;5;1m  25[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Filtered_list.cmx"[39m
[38;5;1m  26[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Forms.cmi"[39m
[38;5;1m  27[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Forms.cmt"[39m
[38;5;1m  28[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Forms.cmx"[39m
[38;5;1m  29[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Fps.cmi"[39m
[38;5;1m  30[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Fps.cmt"[39m
[38;5;1m  31[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Fps.cmti"[39m
[38;5;1m  32[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Fps.cmx"[39m
[38;5;1m  33[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Paginator.cmi"[39m
[38;5;1m  34[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Paginator.cmt"[39m
[38;5;1m  35[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Paginator.cmti"[39m
[38;5;1m  36[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Paginator.cmx"[39m
[38;5;1m  37[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Progress.cmi"[39m
[38;5;1m  38[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Progress.cmt"[39m
[38;5;1m  39[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Progress.cmti"[39m
[38;5;1m  40[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Progress.cmx"[39m
[38;5;1m  41[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Spinner.cmi"[39m
[38;5;1m  42[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Spinner.cmt"[39m
[38;5;1m  43[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Spinner.cmti"[39m
[38;5;1m  44[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Spinner.cmx"[39m
[38;5;1m  45[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Sprite.cmi"[39m
[38;5;1m  46[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Sprite.cmt"[39m
[38;5;1m  47[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Sprite.cmti"[39m
[38;5;1m  48[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Sprite.cmx"[39m
[38;5;1m  49[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Table.cmi"[39m
[38;5;1m  50[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Table.cmt"[39m
[38;5;1m  51[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Table.cmx"[39m
[38;5;1m  52[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Text_input.cmi"[39m
[38;5;1m  53[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Text_input.cmt"[39m
[38;5;1m  54[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Text_input.cmti"[39m
[38;5;1m  55[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves__Text_input.cmx"[39m
[38;5;1m  56[39m     : [38;5;1m  "_build/install/default/lib/leaves/opam"[39m
[38;5;1m  57[39m     : [38;5;1m  "_build/install/default/lib/leaves/paginator.ml"[39m
[38;5;1m  58[39m     : [38;5;1m  "_build/install/default/lib/leaves/paginator.mli"[39m
[38;5;1m  59[39m     : [38;5;1m  "_build/install/default/lib/leaves/progress.ml"[39m
[38;5;1m  60[39m     : [38;5;1m  "_build/install/default/lib/leaves/progress.mli"[39m
[38;5;1m  61[39m     : [38;5;1m  "_build/install/default/lib/leaves/spinner.ml"[39m
[38;5;1m  62[39m     : [38;5;1m  "_build/install/default/lib/leaves/spinner.mli"[39m
[38;5;1m  63[39m     : [38;5;1m  "_build/install/default/lib/leaves/sprite.ml"[39m
[38;5;1m  64[39m     : [38;5;1m  "_build/install/default/lib/leaves/sprite.mli"[39m
[38;5;1m  65[39m     : [38;5;1m  "_build/install/default/lib/leaves/table.ml"[39m
[38;5;1m  66[39m     : [38;5;1m  "_build/install/default/lib/leaves/text_input.ml"[39m
[38;5;1m  67[39m     : [38;5;1m  "_build/install/default/lib/leaves/text_input.mli"[39m
[38;5;1m  68[39m     : [38;5;1m][39m
[38;5;1m  69[39m     : [38;5;1mlibexec: [[39m
[38;5;1m  70[39m     : [38;5;1m  "_build/install/default/lib/leaves/leaves.cmxs"[39m
[38;5;1m  71[39m     : [38;5;1m][39m
[38;5;1m  72[39m     : [38;5;1mdoc: [[39m
[38;5;1m  73[39m     : [38;5;1m  "_build/install/default/doc/leaves/CHANGES.md"[39m
[38;5;1m  74[39m     : [38;5;1m  "_build/install/default/doc/leaves/LICENSE.md"[39m
[38;5;1m  75[39m     : [38;5;1m  "_build/install/default/doc/leaves/README.md"[39m
[38;5;1m  76[39m     : [38;5;1m][39m
[38;5;3mRemoved regular file ../minttea/minttea.install:[39m
[38;5;1m   1[39m     : [38;5;1mlib: [[39m
[38;5;1m   2[39m     : [38;5;1m  "_build/install/default/lib/minttea/META"[39m
[38;5;1m   3[39m     : [38;5;1m  "_build/install/default/lib/minttea/app.ml"[39m
[38;5;1m   4[39m     : [38;5;1m  "_build/install/default/lib/minttea/command.ml"[39m
[38;5;1m   5[39m     : [38;5;1m  "_build/install/default/lib/minttea/dune-package"[39m
[38;5;1m   6[39m     : [38;5;1m  "_build/install/default/lib/minttea/event.ml"[39m
[38;5;1m   7[39m     : [38;5;1m  "_build/install/default/lib/minttea/io_loop.ml"[39m
[38;5;1m   8[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.a"[39m
[38;5;1m   9[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.cma"[39m
[38;5;1m  10[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.cmi"[39m
[38;5;1m  11[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.cmt"[39m
[38;5;1m  12[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.cmti"[39m
[38;5;1m  13[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.cmx"[39m
[38;5;1m  14[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.cmxa"[39m
[38;5;1m  15[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.ml"[39m
[38;5;1m  16[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.mli"[39m
[38;5;1m  17[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__.cmi"[39m
[38;5;1m  18[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__.cmt"[39m
[38;5;1m  19[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__.cmx"[39m
[38;5;1m  20[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__.ml"[39m
[38;5;1m  21[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__App.cmi"[39m
[38;5;1m  22[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__App.cmt"[39m
[38;5;1m  23[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__App.cmx"[39m
[38;5;1m  24[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Command.cmi"[39m
[38;5;1m  25[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Command.cmt"[39m
[38;5;1m  26[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Command.cmx"[39m
[38;5;1m  27[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Event.cmi"[39m
[38;5;1m  28[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Event.cmt"[39m
[38;5;1m  29[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Event.cmx"[39m
[38;5;1m  30[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Io_loop.cmi"[39m
[38;5;1m  31[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Io_loop.cmt"[39m
[38;5;1m  32[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Io_loop.cmx"[39m
[38;5;1m  33[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Program.cmi"[39m
[38;5;1m  34[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Program.cmt"[39m
[38;5;1m  35[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Program.cmx"[39m
[38;5;1m  36[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Renderer.cmi"[39m
[38;5;1m  37[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Renderer.cmt"[39m
[38;5;1m  38[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Renderer.cmti"[39m
[38;5;1m  39[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea__Renderer.cmx"[39m
[38;5;1m  40[39m     : [38;5;1m  "_build/install/default/lib/minttea/opam"[39m
[38;5;1m  41[39m     : [38;5;1m  "_build/install/default/lib/minttea/program.ml"[39m
[38;5;1m  42[39m     : [38;5;1m  "_build/install/default/lib/minttea/renderer.ml"[39m
[38;5;1m  43[39m     : [38;5;1m  "_build/install/default/lib/minttea/renderer.mli"[39m
[38;5;1m  44[39m     : [38;5;1m][39m
[38;5;1m  45[39m     : [38;5;1mlibexec: [[39m
[38;5;1m  46[39m     : [38;5;1m  "_build/install/default/lib/minttea/minttea.cmxs"[39m
[38;5;1m  47[39m     : [38;5;1m][39m
[38;5;1m  48[39m     : [38;5;1mdoc: [[39m
[38;5;1m  49[39m     : [38;5;1m  "_build/install/default/doc/minttea/CHANGES.md"[39m
[38;5;1m  50[39m     : [38;5;1m  "_build/install/default/doc/minttea/LICENSE.md"[39m
[38;5;1m  51[39m     : [38;5;1m  "_build/install/default/doc/minttea/README.md"[39m
[38;5;1m  52[39m     : [38;5;1m][39m
[38;5;3mRemoved regular file ../minttea/spices.install:[39m
[38;5;1m   1[39m     : [38;5;1mlib: [[39m
[38;5;1m   2[39m     : [38;5;1m  "_build/install/default/lib/spices/META"[39m
[38;5;1m   3[39m     : [38;5;1m  "_build/install/default/lib/spices/border.ml"[39m
[38;5;1m   4[39m     : [38;5;1m  "_build/install/default/lib/spices/dune-package"[39m
[38;5;1m   5[39m     : [38;5;1m  "_build/install/default/lib/spices/formatter.ml"[39m
[38;5;1m   6[39m     : [38;5;1m  "_build/install/default/lib/spices/gradient.ml"[39m
[38;5;1m   7[39m     : [38;5;1m  "_build/install/default/lib/spices/opam"[39m
[38;5;1m   8[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.a"[39m
[38;5;1m   9[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.cma"[39m
[38;5;1m  10[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.cmi"[39m
[38;5;1m  11[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.cmt"[39m
[38;5;1m  12[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.cmti"[39m
[38;5;1m  13[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.cmx"[39m
[38;5;1m  14[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.cmxa"[39m
[38;5;1m  15[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.ml"[39m
[38;5;1m  16[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.mli"[39m
[38;5;1m  17[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__.cmi"[39m
[38;5;1m  18[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__.cmt"[39m
[38;5;1m  19[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__.cmx"[39m
[38;5;1m  20[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__.ml"[39m
[38;5;1m  21[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Border.cmi"[39m
[38;5;1m  22[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Border.cmt"[39m
[38;5;1m  23[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Border.cmx"[39m
[38;5;1m  24[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Formatter.cmi"[39m
[38;5;1m  25[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Formatter.cmt"[39m
[38;5;1m  26[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Formatter.cmx"[39m
[38;5;1m  27[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Gradient.cmi"[39m
[38;5;1m  28[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Gradient.cmt"[39m
[38;5;1m  29[39m     : [38;5;1m  "_build/install/default/lib/spices/spices__Gradient.cmx"[39m
[38;5;1m  30[39m     : [38;5;1m][39m
[38;5;1m  31[39m     : [38;5;1mlibexec: [[39m
[38;5;1m  32[39m     : [38;5;1m  "_build/install/default/lib/spices/spices.cmxs"[39m
[38;5;1m  33[39m     : [38;5;1m][39m
[38;5;1m  34[39m     : [38;5;1mdoc: [[39m
[38;5;1m  35[39m     : [38;5;1m  "_build/install/default/doc/spices/CHANGES.md"[39m
[38;5;1m  36[39m     : [38;5;1m  "_build/install/default/doc/spices/LICENSE.md"[39m
[38;5;1m  37[39m     : [38;5;1m  "_build/install/default/doc/spices/README.md"[39m
[38;5;1m  38[39m     : [38;5;1m][39m
[38;5;3mAdded regular file ../notty/.gitignore:[39m
     [38;5;2m   1[39m: [38;5;2m_build[39m
     [38;5;2m   2[39m: [38;5;2m*.install[39m
     [38;5;2m   3[39m: [38;5;2m*.native[39m
     [38;5;2m   4[39m: [38;5;2m*.byte[39m
     [38;5;2m   5[39m: [38;5;2m.merlin[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2mtmp[39m
     [38;5;2m   8[39m: [38;5;2m*~[39m
     [38;5;2m   9[39m: [38;5;2m\.\#*[39m
     [38;5;2m  10[39m: [38;5;2m\#*#[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2m*.json[39m
     [38;5;2m  13[39m: [38;5;2mgmon.out[39m
     [38;5;2m  14[39m: [38;5;2mrondom[39m
[38;5;3mAdded regular file ../notty/.ocamlinit:[39m
     [38;5;2m   1[39m: [38;5;2m#require "uucp,uuseg,uutf"[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2m#directory "_build/default/src"[39m
     [38;5;2m   4[39m: [38;5;2m#directory "_build/default/src/.notty.objs/byte"[39m
     [38;5;2m   5[39m: [38;5;2m#directory "_build/default/src-unix"[39m
     [38;5;2m   6[39m: [38;5;2m#directory "_build/default/src-unix/.notty_unix.objs/byte"[39m
     [38;5;2m   7[39m: [38;5;2m#directory "_build/default/src-lwt"[39m
     [38;5;2m   8[39m: [38;5;2m#directory "_build/default/src-lwt/.notty_lwt.objs/byte"[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2m#load "notty.cma"[39m
     [38;5;2m  11[39m: [38;5;2m#load "notty_unix.cma"[39m
     [38;5;2m  12[39m: [38;5;2m#load "notty_lwt.cma"[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2m#use "src/notty_top_init.ml"[39m
[38;5;3mAdded regular file ../notty/CHANGES.md:[39m
     [38;5;2m   1[39m: [38;5;2m## v0.2.3 (2022-09-02)[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2m* Moved to Dune.[39m
     [38;5;2m   4[39m: [38;5;2m* Renders faster, uses less memory.[39m
     [38;5;2m   5[39m: [38;5;2m* Nested uses of `I.pp_attr` within `I.strf` now stack, instead of replacing.[39m
     [38;5;2m   6[39m: [38;5;2m* Removed dependency on Uucp. Uses internal data instead (Unicode 13).[39m
     [38;5;2m   7[39m: [38;5;2m* Support OCaml 4.08 - 4.14. Thanks to @kit-ty-kate for the 4.14 fixes.[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2m## v0.2.2 (2019-02-19)[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2m* Fix a long-standing terminal cleanup bug. Reported by @ttamttam, fix by @cfcs.[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2m## v0.2.1 (2017-11-06)[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2m* OCaml 4.06 compatible.[39m
     [38;5;2m  16[39m: [38;5;2m* Cache the internal representation of Unicode strings.[39m
     [38;5;2m  17[39m: [38;5;2m* Remove `I.ichar`. **breaking**[39m
     [38;5;2m  18[39m: [38;5;2m[39m
     [38;5;2m  19[39m: [38;5;2m## v0.2.0 (2017-10-31)[39m
     [38;5;2m  20[39m: [38;5;2m[39m
     [38;5;2m  21[39m: [38;5;2m* All-around speed and memory improvements.[39m
     [38;5;2m  22[39m: [38;5;2m* Draw over lines cell-by-cell instead of using erase-and-skip.[39m
     [38;5;2m  23[39m: [38;5;2m  Slower, but flicker-free drawing.[39m
     [38;5;2m  24[39m: [38;5;2m* `Term.create`: optionally inhibit synthetic TTY signals.[39m
     [38;5;2m  25[39m: [38;5;2m* Cursor origin moved from `(1, 1)` to `(0, 0)`. **breaking**[39m
     [38;5;2m  26[39m: [38;5;2m* `#key` renamed to `#special`. **breaking**[39m
     [38;5;2m  27[39m: [38;5;2m* Added `Term.fds` to get connected file descriptors.[39m
     [38;5;2m  28[39m: [38;5;2m* Added `A.equal` and `I.equal`.[39m
     [38;5;2m  29[39m: [38;5;2m* Switched over to `Uchar.t`. **breaking**[39m
     [38;5;2m  30[39m: [38;5;2m* Separated ASCII from the rest of Unicode input. **breaking**[39m
     [38;5;2m  31[39m: [38;5;2m* Added image pretty-printer `I.pp`.[39m
     [38;5;2m  32[39m: [38;5;2m* Added `notty.top` for use in the toplevel.[39m
     [38;5;2m  33[39m: [38;5;2m* Removed `I.tile`. **breaking**[39m
     [38;5;2m  34[39m: [38;5;2m* Added `I.tabulate`, generalizing `I.tile`.[39m
     [38;5;2m  35[39m: [38;5;2m* Added support for 24-bit color.[39m
     [38;5;2m  36[39m: [38;5;2m* Added `Notty_*.show_cursor` and `Notty_*.move_cursor` for manual cursor[39m
     [38;5;2m  37[39m: [38;5;2m  positioning in inline mode.[39m
     [38;5;2m  38[39m: [38;5;2m* Removed `output_image_endline`. Can be replaced by `eol`. **breaking**[39m
     [38;5;2m  39[39m: [38;5;2m* `Notty_*.output_image` lost the `~clear` parameter. Can be replaced in various[39m
     [38;5;2m  40[39m: [38;5;2m  ways by cursor positioning.[39m
     [38;5;2m  41[39m: [38;5;2m* `Notty_unix.output_image ~chan` renamed to `~fd`. **breaking**[39m
     [38;5;2m  42[39m: [38;5;2m* Added support for bracketed paste.[39m
     [38;5;2m  43[39m: [38;5;2m* More example programs.[39m
     [38;5;2m  44[39m: [38;5;2m[39m
     [38;5;2m  45[39m: [38;5;2m## v0.1.1 (2016-02-09)[39m
     [38;5;2m  46[39m: [38;5;2m* `Term.input` -> `Term.event`[39m
     [38;5;2m  47[39m: [38;5;2m* Option to redraw the line[39m
     [38;5;2m  48[39m: [38;5;2m[39m
     [38;5;2m  49[39m: [38;5;2m## v0.1.0 (2016-02-09)[39m
     [38;5;2m  50[39m: [38;5;2m* Initial release[39m
[38;5;3mAdded regular file ../notty/LICENSE.md:[39m
     [38;5;2m   1[39m: [38;5;2mCopyright (c) 2016-2017 David Kaloper Meršinjak[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2mPermission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m   4[39m: [38;5;2mpurpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m   5[39m: [38;5;2mcopyright notice and this permission notice appear in all copies.[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2mTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m   8[39m: [38;5;2mWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m   9[39m: [38;5;2mMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m  10[39m: [38;5;2mANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m  11[39m: [38;5;2mWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m  12[39m: [38;5;2mACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m  13[39m: [38;5;2mOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
[38;5;3mAdded regular file ../notty/README.md:[39m
     [38;5;2m   1[39m: [38;5;2m# Notty — Declaring terminals[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2m<a href="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO" alt="dumper"><img src="https://asciinema.org/a/ZIXzn2ZmIxK39qoT3eJla5OyO.png" width="400"/></a>[39m
     [38;5;2m   4[39m: [38;5;2m<a href="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I" alt="input"><img src="https://asciinema.org/a/TsIhDJv5S00AB2biVmhHRzZ8I.png" width="400"/></a>[39m
     [38;5;2m   5[39m: [38;5;2m<a href="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc" alt="microdots"><img src="https://asciinema.org/a/z1Pc0Mppg2JFzteZzdeigLwYc.png" width="400"/></a>[39m
     [38;5;2m   6[39m: [38;5;2m<a href="https://asciinema.org/a/NgpF9Im8qfUICC39GDDAe9Ede" alt="rain"><img src="https://asciinema.org/a/R94gnHTQhCFJAsWpRfVlZWcUB.png" width="400"/></a>[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2mNotty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m   9[39m: [38;5;2mof composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m  10[39m: [38;5;2mmodel, providing something simpler and more expressive.[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mThe core layout engine and IO codecs are pure platform-independent OCaml.[39m
     [38;5;2m  13[39m: [38;5;2mDistribution includes modules with input and output facilities for Unix, and Lwt[39m
     [38;5;2m  14[39m: [38;5;2mon Unix.[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mAs an attempt to redefine terminal programming, Notty has to be[39m
     [38;5;2m  17[39m: [38;5;2m_opinionated_. It assumes Unicode throughout, does not have universal support[39m
     [38;5;2m  18[39m: [38;5;2mfor various terminals out there, and has a peculiar programming and rendering[39m
     [38;5;2m  19[39m: [38;5;2mmodel.[39m
     [38;5;2m  20[39m: [38;5;2m[39m
     [38;5;2m  21[39m: [38;5;2mNotty's core API was heavily influenced by Haskell's [Vty][vty].[39m
     [38;5;2m  22[39m: [38;5;2m[39m
     [38;5;2m  23[39m: [38;5;2m## Where to start[39m
     [38;5;2m  24[39m: [38;5;2m[39m
     [38;5;2m  25[39m: [38;5;2mCheck out the [documentation], [examples], or peek directly into the [interface][39m
     [38;5;2m  26[39m: [38;5;2mfile.[39m
     [38;5;2m  27[39m: [38;5;2m[39m
     [38;5;2m  28[39m: [38;5;2mBuilding with `dune build @ex` will produce several little example programs that[39m
     [38;5;2m  29[39m: [38;5;2malso double as tests.[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2m```OCaml[39m
     [38;5;2m  32[39m: [38;5;2m(* Game of Life with ZX Spectrum kitsch. *)[39m
     [38;5;2m  33[39m: [38;5;2m[39m
     [38;5;2m  34[39m: [38;5;2mlet dot : image = I.uchar A.(fg lightred) (Uchar.of_int 0x25cf) 1 1[39m
     [38;5;2m  35[39m: [38;5;2m[39m
     [38;5;2m  36[39m: [38;5;2mlet background step (n, m) =[39m
     [38;5;2m  37[39m: [38;5;2m  let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m  38[39m: [38;5;2m  if k > 0 then I.char A.(fg (gray k)) '.' 1 1 else I.void 1 1[39m
     [38;5;2m  39[39m: [38;5;2m[39m
     [38;5;2m  40[39m: [38;5;2mlet render (w, h) step life : image =[39m
     [38;5;2m  41[39m: [38;5;2m  I.tabulate w (h - 1) @@ fun x y ->[39m
     [38;5;2m  42[39m: [38;5;2m    let pt = (x, y) in[39m
     [38;5;2m  43[39m: [38;5;2m    if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m  44[39m: [38;5;2m```[39m
     [38;5;2m  45[39m: [38;5;2m[39m
     [38;5;2m  46[39m: [38;5;2m[documentation]: https://pqwy.github.io/notty/doc[39m
     [38;5;2m  47[39m: [38;5;2m[examples]: http://pqwy.github.io/notty/doc/Notty.html#examples[39m
     [38;5;2m  48[39m: [38;5;2m[interface]: https://github.com/pqwy/notty/blob/master/src/notty.mli[39m
     [38;5;2m  49[39m: [38;5;2m[vty]: https://hackage.haskell.org/package/vty[39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2m## What?[39m
     [38;5;2m  52[39m: [38;5;2m[39m
     [38;5;2m  53[39m: [38;5;2m- _Notty?_[39m
     [38;5;2m  54[39m: [38;5;2m  [39m
     [38;5;2m  55[39m: [38;5;2m  Terminals are tedious to program for. Notty tries to abstract the tedium away,[39m
     [38;5;2m  56[39m: [38;5;2m  leaving you with a more pleasant programming surface that's quite unlike a TTY.[39m
     [38;5;2m  57[39m: [38;5;2m  Hence, _No-TTY_.[39m
     [38;5;2m  58[39m: [38;5;2m[39m
     [38;5;2m  59[39m: [38;5;2m- A new kind of Rust terminal?[39m
     [38;5;2m  60[39m: [38;5;2m[39m
     [38;5;2m  61[39m: [38;5;2m  This Notty has no connection to any other body of code named Notty.[39m
     [38;5;2m  62[39m: [38;5;2m[39m
     [38;5;2m  63[39m: [38;5;2m- Why make yet another terminal output library?[39m
     [38;5;2m  64[39m: [38;5;2m  [39m
     [38;5;2m  65[39m: [38;5;2m  Because:[39m
     [38;5;2m  66[39m: [38;5;2m  * It allows one to *describe* what should be seen, as opposed to *commanding*[39m
     [38;5;2m  67[39m: [38;5;2m    a terminal.[39m
     [38;5;2m  68[39m: [38;5;2m  * It's pretty compact. Both bells and whistles can be implemented separately.[39m
     [38;5;2m  69[39m: [38;5;2m  * Core is easy to glue onto various IO backends.[39m
     [38;5;2m  70[39m: [38;5;2m  * Pure platform-independent OCaml.[39m
[38;5;3mAdded regular file ../notty/benchmarks/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(executable[39m
     [38;5;2m   2[39m: [38;5;2m  (name speed)[39m
     [38;5;2m   3[39m: [38;5;2m  (libraries notty notty.unix common unmark unmark.cli))[39m
[38;5;3mAdded regular file ../notty/benchmarks/speed.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2019 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty[39m
     [38;5;2m   5[39m: [38;5;2mopen Common[39m
     [38;5;2m   6[39m: [38;5;2mopen Common.Images[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2mlet decode ?(n=1) str =[39m
     [38;5;2m  10[39m: [38;5;2m  let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m  11[39m: [38;5;2m  let us = str |> Uutf.String.fold_utf_8 f [] |> List.rev in[39m
     [38;5;2m  12[39m: [38;5;2m  for _ = 1 to n do Unescape.decode us |> ignore done[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2mlet input ?(n=1) str =[39m
     [38;5;2m  15[39m: [38;5;2m  let buf = Bytes.unsafe_of_string str in[39m
     [38;5;2m  16[39m: [38;5;2m  let rec go f n = match Unescape.next f with[39m
     [38;5;2m  17[39m: [38;5;2m    | #Unescape.event -> go f n[39m
     [38;5;2m  18[39m: [38;5;2m    | `Await when n > 0 ->[39m
     [38;5;2m  19[39m: [38;5;2m        Unescape.input f buf 0 (Bytes.length buf); go f (pred n)[39m
     [38;5;2m  20[39m: [38;5;2m    | `Await -> ()[39m
     [38;5;2m  21[39m: [38;5;2m    | `End   -> assert false in[39m
     [38;5;2m  22[39m: [38;5;2m  go (Unescape.create ()) n[39m
     [38;5;2m  23[39m: [38;5;2m[39m
     [38;5;2m  24[39m: [38;5;2mlet escapes =[39m
     [38;5;2m  25[39m: [38;5;2m  "\027[5~\027[6~\027[1~\027[4~\027OP\027OQ\027OR\027OS\027[15~\027[17~" ^[39m
     [38;5;2m  26[39m: [38;5;2m  "\027[18~\027[19~\027[20~\027[21~\027[23~\027[24~"[39m
     [38;5;2m  27[39m: [38;5;2m[39m
     [38;5;2m  28[39m: [38;5;2mlet escapes_m =[39m
     [38;5;2m  29[39m: [38;5;2m  "\027[<0;59;7M\027[<32;58;7M\027[<32;57;7M\027[<32;56;7M\027[<32;54;7M" ^[39m
     [38;5;2m  30[39m: [38;5;2m  "\027[<32;53;8M\027[<32;52;8M\027[<32;51;8M\027[<32;50;8M\027[<32;49;8M" ^[39m
     [38;5;2m  31[39m: [38;5;2m  "\027[<32;47;9M\027[<32;46;9M\027[<32;44;9M\027[<32;42;10M\027[<32;41;10M" ^[39m
     [38;5;2m  32[39m: [38;5;2m  "\027[<32;41;11M\027[<32;40;11M\027[<32;41;12M\027[<32;42;12M" ^[39m
     [38;5;2m  33[39m: [38;5;2m  "\027[<32;42;13M\027[<32;43;13M\027[<32;44;13M\027[<0;44;13m"[39m
     [38;5;2m  34[39m: [38;5;2m[39m
     [38;5;2m  35[39m: [38;5;2mlet chars = String.(make (length escapes) 'x')[39m
     [38;5;2m  36[39m: [38;5;2m[39m
     [38;5;2m  37[39m: [38;5;2mlet buf = Buffer.create 1024[39m
     [38;5;2m  38[39m: [38;5;2mlet buf_render off dim image =[39m
     [38;5;2m  39[39m: [38;5;2m  Buffer.clear buf; Render.to_buffer buf Cap.ansi off dim image[39m
     [38;5;2m  40[39m: [38;5;2m[39m
     [38;5;2m  41[39m: [38;5;2m[39m
     [38;5;2m  42[39m: [38;5;2mopen Unmark[39m
     [38;5;2m  43[39m: [38;5;2m[39m
     [38;5;2m  44[39m: [38;5;2mlet strf = Format.asprintf[39m
     [38;5;2m  45[39m: [38;5;2mlet group_of name xs f = group name (List.map f xs)[39m
     [38;5;2m  46[39m: [38;5;2mlet bench_fmt fmt = Format.kasprintf bench fmt[39m
     [38;5;2m  47[39m: [38;5;2mlet group_fmt fmt = Format.kasprintf group fmt[39m
     [38;5;2m  48[39m: [38;5;2m[39m
     [38;5;2m  49[39m: [38;5;2mlet render =[39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2m  let clip i = I.(width i |> min 200, height i |> min 200) in[39m
     [38;5;2m  52[39m: [38;5;2m  let ops i = Operation.of_image (0, 0) (clip i) i[39m
     [38;5;2m  53[39m: [38;5;2m  and render i = buf_render (0, 0) (clip i) i in[39m
     [38;5;2m  54[39m: [38;5;2m[39m
     [38;5;2m  55[39m: [38;5;2m  group "render" [[39m
     [38;5;2m  56[39m: [38;5;2m    group "rasterize" [[39m
     [38;5;2m  57[39m: [38;5;2m      bench "i2" (fun () -> ops i2)[39m
     [38;5;2m  58[39m: [38;5;2m    ; bench "i3" (fun () -> ops i3)[39m
     [38;5;2m  59[39m: [38;5;2m    ; bench "i4" (fun () -> ops i4)[39m
     [38;5;2m  60[39m: [38;5;2m    ; bench "i5" (fun () -> ops i5)[39m
     [38;5;2m  61[39m: [38;5;2m    ];[39m
     [38;5;2m  62[39m: [38;5;2m    group "render" [[39m
     [38;5;2m  63[39m: [38;5;2m      bench "i2" (fun () -> render i2)[39m
     [38;5;2m  64[39m: [38;5;2m    ; bench "i3" (fun () -> render i3)[39m
     [38;5;2m  65[39m: [38;5;2m    ; bench "i4" (fun () -> render i4)[39m
     [38;5;2m  66[39m: [38;5;2m    ; bench "i5" (fun () -> render i5)[39m
     [38;5;2m  67[39m: [38;5;2m    ];[39m
     [38;5;2m  68[39m: [38;5;2m    group_f "draw" (fun t -> [[39m
     [38;5;2m  69[39m: [38;5;2m      bench "i3" (fun () -> Term.image t i3)[39m
     [38;5;2m  70[39m: [38;5;2m    ; bench "i5" (fun () -> Term.image t i5)[39m
     [38;5;2m  71[39m: [38;5;2m    ]) ~init:Term.create ~fini:Term.release[39m
     [38;5;2m  72[39m: [38;5;2m][39m
     [38;5;2m  73[39m: [38;5;2m[39m
     [38;5;2m  74[39m: [38;5;2mlet input = group "input" [[39m
     [38;5;2m  75[39m: [38;5;2m  group "decode" [[39m
     [38;5;2m  76[39m: [38;5;2m    bench "escapes"     (fun () -> decode ~n:100 escapes);[39m
     [38;5;2m  77[39m: [38;5;2m    bench "CSI escapes" (fun () -> decode ~n:100 escapes_m);[39m
     [38;5;2m  78[39m: [38;5;2m    bench "chars"       (fun () -> decode ~n:100 chars);[39m
     [38;5;2m  79[39m: [38;5;2m  ];[39m
     [38;5;2m  80[39m: [38;5;2m  group "input" [[39m
     [38;5;2m  81[39m: [38;5;2m    bench "escapes"     (fun () -> input ~n:100 escapes);[39m
     [38;5;2m  82[39m: [38;5;2m    bench "CSI escapes" (fun () -> input ~n:100 escapes_m);[39m
     [38;5;2m  83[39m: [38;5;2m    bench "chars"       (fun () -> input ~n:100 chars);[39m
     [38;5;2m  84[39m: [38;5;2m  ][39m
     [38;5;2m  85[39m: [38;5;2m][39m
     [38;5;2m  86[39m: [38;5;2m[39m
     [38;5;2m  87[39m: [38;5;2mlet construct =[39m
     [38;5;2m  88[39m: [38;5;2m[39m
     [38;5;2m  89[39m: [38;5;2m  let strings = [[39m
     [38;5;2m  90[39m: [38;5;2m      "s1", "a"[39m
     [38;5;2m  91[39m: [38;5;2m    ; "s2", "abcdefghij"[39m
     [38;5;2m  92[39m: [38;5;2m    ; "s3", String.repeat 10 "abcdefghij"[39m
     [38;5;2m  93[39m: [38;5;2m    ; "s4", String.repeat 100 "abcdefghij"[39m
     [38;5;2m  94[39m: [38;5;2m    ; "u1", "☭"[39m
     [38;5;2m  95[39m: [38;5;2m    ; "u2", String.repeat 10 "☭"[39m
     [38;5;2m  96[39m: [38;5;2m    ; "u3", String.repeat 100 "☭"[39m
     [38;5;2m  97[39m: [38;5;2m    ; "u4", String.repeat 1000 "☭" ] in[39m
     [38;5;2m  98[39m: [38;5;2m[39m
     [38;5;2m  99[39m: [38;5;2m  group "construct" [[39m
     [38;5;2m 100[39m: [38;5;2m[39m
     [38;5;2m 101[39m: [38;5;2m    group "make" (strings |> List.map @@ fun (n, s) ->[39m
     [38;5;2m 102[39m: [38;5;2m      bench n (fun () -> I.string A.empty s))[39m
     [38;5;2m 103[39m: [38;5;2m[39m
     [38;5;2m 104[39m: [38;5;2m  ; group "repeat" ([0x40; 0x262d] |> List.map @@ fun x ->[39m
     [38;5;2m 105[39m: [38;5;2m      let u = Uchar.of_int x in[39m
     [38;5;2m 106[39m: [38;5;2m      group_fmt "U+%04x" x ([1; 10; 100] |> List.map @@ fun n ->[39m
     [38;5;2m 107[39m: [38;5;2m        bench_fmt "%dx" n (fun () -> I.uchar A.empty u n 1)))[39m
     [38;5;2m 108[39m: [38;5;2m[39m
     [38;5;2m 109[39m: [38;5;2m  ; bench "pxmatrix" (fun () -> pxmatrix 200 200 @@ fun _ _ -> A.black)[39m
     [38;5;2m 110[39m: [38;5;2m  ][39m
     [38;5;2m 111[39m: [38;5;2m[39m
     [38;5;2m 112[39m: [38;5;2m[39m
     [38;5;2m 113[39m: [38;5;2mlet _ = Unmark_cli.main "Notty" [ render; input; construct ][39m
[38;5;3mAdded regular file ../notty/dune-project:[39m
     [38;5;2m   1[39m: [38;5;2m(lang dune 1.7)[39m
     [38;5;2m   2[39m: [38;5;2m(name notty)[39m
     [38;5;2m   3[39m: [38;5;2m(version %%VERSION_NUM%%)[39m
[38;5;3mAdded regular file ../notty/examples/almondbread.ml:[39m
     [38;5;2m   1[39m: [38;5;2mopen Notty[39m
     [38;5;2m   2[39m: [38;5;2mopen Common[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mlet iter = 200[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mlet member x y =[39m
     [38;5;2m   7[39m: [38;5;2m  let rec go cx cy x y n =[39m
     [38;5;2m   8[39m: [38;5;2m    let xx = x *. x and yy = y *. y in[39m
     [38;5;2m   9[39m: [38;5;2m    if n = 0 || xx +. yy > 4. then n else[39m
     [38;5;2m  10[39m: [38;5;2m      go cx cy (xx -. yy +. cx) (2. *. x *. y +. cy) (n - 1) in[39m
     [38;5;2m  11[39m: [38;5;2m  float (iter - go x y 0. 0. iter) /. float iter[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2mlet pi2   = 2. *. 3.14159[39m
     [38;5;2m  14[39m: [38;5;2mlet pi2_3 = pi2 /. 3.[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mlet mandelbrot x y =[39m
     [38;5;2m  17[39m: [38;5;2m  (* let esc = 1. -. member x y in *)[39m
     [38;5;2m  18[39m: [38;5;2m  (* 23. *. esc *. esc |> truncate |> A.gray *)[39m
     [38;5;2m  19[39m: [38;5;2m  match member x y with[39m
     [38;5;2m  20[39m: [38;5;2m  | 1.  -> A.gray 0[39m
     [38;5;2m  21[39m: [38;5;2m  | esc ->[39m
     [38;5;2m  22[39m: [38;5;2m      let t = esc *. pi2 in[39m
     [38;5;2m  23[39m: [38;5;2m      let f d = (sin (t +. d) *. 128. +. 128.) |> truncate in[39m
     [38;5;2m  24[39m: [38;5;2m      A.rgb_888 ~b:(f (-.pi2_3)) ~g:(f 0.) ~r:(f pi2_3)[39m
     [38;5;2m  25[39m: [38;5;2m[39m
     [38;5;2m  26[39m: [38;5;2mlet xlate dx dy f x y = f (x -. dx) (y -. dy)[39m
     [38;5;2m  27[39m: [38;5;2mlet scale k f = let k1 = 1./.k in fun x y -> f (x *. k1) (y *. k1)[39m
     [38;5;2m  28[39m: [38;5;2mlet rot a f =[39m
     [38;5;2m  29[39m: [38;5;2m  let sina = sin a and cosa = cos a in fun x y ->[39m
     [38;5;2m  30[39m: [38;5;2m    f (x *. cosa -. y *. sina) (x *. sina +. cosa *. y)[39m
     [38;5;2m  31[39m: [38;5;2m[39m
     [38;5;2m  32[39m: [38;5;2mlet render_unit f (w, h) =[39m
     [38;5;2m  33[39m: [38;5;2m  let sw = 1. /. float w[39m
     [38;5;2m  34[39m: [38;5;2m  and sh = 1. /. float (2 * h) in[39m
     [38;5;2m  35[39m: [38;5;2m  pxmatrix w h (fun x y -> f (float x *. sw) (float y *. sh))[39m
     [38;5;2m  36[39m: [38;5;2m[39m
     [38;5;2m  37[39m: [38;5;2mlet () =[39m
     [38;5;2m  38[39m: [38;5;2m  let pix =[39m
     [38;5;2m  39[39m: [38;5;2m    render_unit @@[39m
     [38;5;2m  40[39m: [38;5;2m    rot (-1.570795) @@ xlate (1.6) (-0.5) @@[39m
     [38;5;2m  41[39m: [38;5;2m    mandelbrot in[39m
     [38;5;2m  42[39m: [38;5;2m  Notty_unix.(output_image_size @@ fun (w, h) -> pix (w, h - 1) |> eol)[39m
[38;5;3mAdded regular file ../notty/examples/colors.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Demonstrates text attributes.[39m
     [38;5;2m   6[39m: [38;5;2m *)[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty[39m
     [38;5;2m   8[39m: [38;5;2mopen Common[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet colors = A.[[39m
     [38;5;2m  11[39m: [38;5;2m  "black"        , black[39m
     [38;5;2m  12[39m: [38;5;2m; "red"          , red[39m
     [38;5;2m  13[39m: [38;5;2m; "green"        , green[39m
     [38;5;2m  14[39m: [38;5;2m; "yellow"       , yellow[39m
     [38;5;2m  15[39m: [38;5;2m; "blue"         , blue[39m
     [38;5;2m  16[39m: [38;5;2m; "magenta"      , magenta[39m
     [38;5;2m  17[39m: [38;5;2m; "cyan"         , cyan[39m
     [38;5;2m  18[39m: [38;5;2m; "white"        , white[39m
     [38;5;2m  19[39m: [38;5;2m; "lightblack"   , lightblack[39m
     [38;5;2m  20[39m: [38;5;2m; "lightred"     , lightred[39m
     [38;5;2m  21[39m: [38;5;2m; "lightgreen"   , lightgreen[39m
     [38;5;2m  22[39m: [38;5;2m; "lightyellow"  , lightyellow[39m
     [38;5;2m  23[39m: [38;5;2m; "lightblue"    , lightblue[39m
     [38;5;2m  24[39m: [38;5;2m; "lightmagenta" , lightmagenta[39m
     [38;5;2m  25[39m: [38;5;2m; "lightcyan"    , lightcyan[39m
     [38;5;2m  26[39m: [38;5;2m; "lightwhite"   , lightwhite[39m
     [38;5;2m  27[39m: [38;5;2m][39m
     [38;5;2m  28[39m: [38;5;2m[39m
     [38;5;2m  29[39m: [38;5;2mlet styles = A.[[39m
     [38;5;2m  30[39m: [38;5;2m  "empty"      , empty[39m
     [38;5;2m  31[39m: [38;5;2m; "bold"       , st bold[39m
     [38;5;2m  32[39m: [38;5;2m; "italic"     , st italic[39m
     [38;5;2m  33[39m: [38;5;2m; "underline"  , st underline[39m
     [38;5;2m  34[39m: [38;5;2m; "blink"      , st blink[39m
     [38;5;2m  35[39m: [38;5;2m; "reverse"    , st reverse[39m
     [38;5;2m  36[39m: [38;5;2m; "bold/italic", st bold ++ st italic[39m
     [38;5;2m  37[39m: [38;5;2m; "rev/underln", st underline ++ st reverse[39m
     [38;5;2m  38[39m: [38;5;2m; "bold/rev"   , st reverse ++ st bold[39m
     [38;5;2m  39[39m: [38;5;2m][39m
     [38;5;2m  40[39m: [38;5;2m[39m
     [38;5;2m  41[39m: [38;5;2mlet image w =[39m
     [38;5;2m  42[39m: [38;5;2m  let open List in[39m
     [38;5;2m  43[39m: [38;5;2m  let core16 =[39m
     [38;5;2m  44[39m: [38;5;2m    let c1  = map (fun (n, c) -> I.string A.(fg c) n) colors[39m
     [38;5;2m  45[39m: [38;5;2m    and c2  = map (fun (n, c) -> I.string A.(fg black ++ bg c) n) colors[39m
     [38;5;2m  46[39m: [38;5;2m    in I.(vcat c1 <|> void 1 0 <|> vcat c2)[39m
     [38;5;2m  47[39m: [38;5;2m  and attr =[39m
     [38;5;2m  48[39m: [38;5;2m    I.( styles |> map (fun (n, s) -> hpad 0 1 (string s n)) |> hcat) in[39m
     [38;5;2m  49[39m: [38;5;2m  let combine imgs =[39m
     [38;5;2m  50[39m: [38;5;2m    List.map I.(fun (n, i) -> string A.empty n <-> i <-> void 0 1) imgs[39m
     [38;5;2m  51[39m: [38;5;2m    |> I.vcat |> I.pad ~l:1 ~t:1 in[39m
     [38;5;2m  52[39m: [38;5;2m  combine [[39m
     [38;5;2m  53[39m: [38;5;2m    "System colors:",     core16;[39m
     [38;5;2m  54[39m: [38;5;2m    "Color cube, 6x6x6:", Images.c_cube_ix;[39m
     [38;5;2m  55[39m: [38;5;2m    "Grayscale ramp:",    Images.c_gray_ramp;[39m
     [38;5;2m  56[39m: [38;5;2m    "24bit:",             Images.c_rainbow (w - 2) 1;[39m
     [38;5;2m  57[39m: [38;5;2m    "Text styles:",       attr[39m
     [38;5;2m  58[39m: [38;5;2m  ][39m
     [38;5;2m  59[39m: [38;5;2m[39m
     [38;5;2m  60[39m: [38;5;2mlet () = Notty_unix.output_image_size @@ fun (w, _) -> image w[39m
[38;5;3mAdded regular file ../notty/examples/common.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty[39m
     [38;5;2m   5[39m: [38;5;2mopen Notty.Infix[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2mlet pow n e = int_of_float (float n ** float e)[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2mmodule List = struct[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2m  include List[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2m  let rec replicate n a = if n < 1 then [] else a :: replicate (n - 1) a[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2m  let rec range a b = if a > b then [] else a :: range (a + 1) b[39m
     [38;5;2m  16[39m: [38;5;2m[39m
     [38;5;2m  17[39m: [38;5;2m  let rec intersperse a = function[39m
     [38;5;2m  18[39m: [38;5;2m    | [] | [_] as t -> t[39m
     [38;5;2m  19[39m: [38;5;2m    | x::xs         -> x :: a :: intersperse a xs[39m
     [38;5;2m  20[39m: [38;5;2m[39m
     [38;5;2m  21[39m: [38;5;2m  let rec take n = function[39m
     [38;5;2m  22[39m: [38;5;2m    | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m  23[39m: [38;5;2m    | _ -> [][39m
     [38;5;2m  24[39m: [38;5;2m[39m
     [38;5;2m  25[39m: [38;5;2m  let rec splitat n = function[39m
     [38;5;2m  26[39m: [38;5;2m    | x::xs when n > 0 ->[39m
     [38;5;2m  27[39m: [38;5;2m        let (a, b) = splitat (pred n) xs in (x::a, b)[39m
     [38;5;2m  28[39m: [38;5;2m    | xs -> ([], xs)[39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2m  let rec chunks n xs =[39m
     [38;5;2m  31[39m: [38;5;2m    match splitat n xs with[39m
     [38;5;2m  32[39m: [38;5;2m    | (a, []) -> [a][39m
     [38;5;2m  33[39m: [38;5;2m    | (a, b)  -> a :: chunks n b[39m
     [38;5;2m  34[39m: [38;5;2m[39m
     [38;5;2m  35[39m: [38;5;2m  let rec zip xs ys = match (xs, ys) with[39m
     [38;5;2m  36[39m: [38;5;2m    | ([], _) | (_, []) -> [][39m
     [38;5;2m  37[39m: [38;5;2m    | (x::xs, y::ys) -> (x, y) :: zip xs ys[39m
     [38;5;2m  38[39m: [38;5;2m[39m
     [38;5;2m  39[39m: [38;5;2mend[39m
     [38;5;2m  40[39m: [38;5;2m[39m
     [38;5;2m  41[39m: [38;5;2mmodule String = struct[39m
     [38;5;2m  42[39m: [38;5;2m[39m
     [38;5;2m  43[39m: [38;5;2m  include String[39m
     [38;5;2m  44[39m: [38;5;2m[39m
     [38;5;2m  45[39m: [38;5;2m  let repeat n str =[39m
     [38;5;2m  46[39m: [38;5;2m    let b = Buffer.create 16 in[39m
     [38;5;2m  47[39m: [38;5;2m    for _ = 1 to n do Buffer.add_string b str done;[39m
     [38;5;2m  48[39m: [38;5;2m    Buffer.contents b[39m
     [38;5;2m  49[39m: [38;5;2mend[39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2mlet tile w h i = I.tabulate w h (fun _ _ -> i)[39m
     [38;5;2m  52[39m: [38;5;2m[39m
     [38;5;2m  53[39m: [38;5;2m(** A few images used in several places. *)[39m
     [38;5;2m  54[39m: [38;5;2mmodule Images = struct[39m
     [38;5;2m  55[39m: [38;5;2m[39m
     [38;5;2m  56[39m: [38;5;2m  let i1 =[39m
     [38;5;2m  57[39m: [38;5;2m    I.(string A.(fg lightblack) "omgbbq" <->[39m
     [38;5;2m  58[39m: [38;5;2m       string A.(fg white ++ bg red) "@")[39m
     [38;5;2m  59[39m: [38;5;2m    <|> I.(pad ~t:2 @@ string A.(fg green) "xo")[39m
     [38;5;2m  60[39m: [38;5;2m[39m
     [38;5;2m  61[39m: [38;5;2m  let i2 = I.(hpad 1 1 (hcrop 1 1 @@ tile 3 3 i1) <|> i1)[39m
     [38;5;2m  62[39m: [38;5;2m[39m
     [38;5;2m  63[39m: [38;5;2m  let i3 = tile 5 5 i2[39m
     [38;5;2m  64[39m: [38;5;2m[39m
     [38;5;2m  65[39m: [38;5;2m  let i4 =[39m
     [38;5;2m  66[39m: [38;5;2m    let i = I.(i3 <|> crop ~t:1 i3 <|> i3) in[39m
     [38;5;2m  67[39m: [38;5;2m    I.(crop ~l:1 i <-> crop ~r:1 i <-> crop ~b:2 i)[39m
     [38;5;2m  68[39m: [38;5;2m[39m
     [38;5;2m  69[39m: [38;5;2m  let i5 =[39m
     [38;5;2m  70[39m: [38;5;2m    tile 5 1 List.([39m
     [38;5;2m  71[39m: [38;5;2m      range 0 15 |> map (fun i -> I.pad ~t:i ~l:(i*2) i2) |> I.zcat[39m
     [38;5;2m  72[39m: [38;5;2m    )[39m
     [38;5;2m  73[39m: [38;5;2m[39m
     [38;5;2m  74[39m: [38;5;2m  let c_gray_ramp =[39m
     [38;5;2m  75[39m: [38;5;2m    I.tabulate 24 1 (fun g _ -> I.string A.(bg (gray g)) " ")[39m
     [38;5;2m  76[39m: [38;5;2m[39m
     [38;5;2m  77[39m: [38;5;2m  let c_cube_ix =[39m
     [38;5;2m  78[39m: [38;5;2m    I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m  79[39m: [38;5;2m      I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m  80[39m: [38;5;2m        I.string A.(bg (rgb ~r ~g ~b)) " "[39m
     [38;5;2m  81[39m: [38;5;2m[39m
     [38;5;2m  82[39m: [38;5;2m  let c_cube_rgb =[39m
     [38;5;2m  83[39m: [38;5;2m    let f x = [| 0x00; 0x5f; 0x87; 0xaf; 0xd7; 0xff |].(x) in[39m
     [38;5;2m  84[39m: [38;5;2m    I.tabulate 6 1 @@ fun r _ ->[39m
     [38;5;2m  85[39m: [38;5;2m      I.hpad 0 1 @@ I.tabulate 6 6 @@ fun b g ->[39m
     [38;5;2m  86[39m: [38;5;2m        I.string A.(bg (rgb_888 ~r:(f r) ~g:(f g) ~b:(f b))) " "[39m
     [38;5;2m  87[39m: [38;5;2m[39m
     [38;5;2m  88[39m: [38;5;2m  let c_rainbow w h =[39m
     [38;5;2m  89[39m: [38;5;2m    let pi2     = 2. *. 3.14159 in[39m
     [38;5;2m  90[39m: [38;5;2m    let pi2_3   = pi2 /. 3.[39m
     [38;5;2m  91[39m: [38;5;2m    and f t off = sin (t +. off) *. 128. +. 128. |> truncate in[39m
     [38;5;2m  92[39m: [38;5;2m    let color t = A.rgb_888 ~r:(f t (-.pi2_3)) ~g:(f t 0.) ~b:(f t pi2_3) in[39m
     [38;5;2m  93[39m: [38;5;2m    I.tabulate (w - 1) 1 @@ fun x _ ->[39m
     [38;5;2m  94[39m: [38;5;2m      let t = (pi2 *. float x /. float w) +. 3.7 in[39m
     [38;5;2m  95[39m: [38;5;2m      I.char A.(bg (color t)) ' ' 1 h[39m
     [38;5;2m  96[39m: [38;5;2m[39m
     [38;5;2m  97[39m: [38;5;2m  (* U+25CF BLACK CIRCLE *)[39m
     [38;5;2m  98[39m: [38;5;2m  let dot color = I.string (A.fg color) "●"[39m
     [38;5;2m  99[39m: [38;5;2m  (* U+25AA BLACK SMALL SQUARE *)[39m
     [38;5;2m 100[39m: [38;5;2m  let square color = I.string (A.fg color) "▪"[39m
     [38;5;2m 101[39m: [38;5;2m[39m
     [38;5;2m 102[39m: [38;5;2m  let rec cantor = function[39m
     [38;5;2m 103[39m: [38;5;2m    | 0 -> square A.lightblue[39m
     [38;5;2m 104[39m: [38;5;2m    | n ->[39m
     [38;5;2m 105[39m: [38;5;2m        let sub = cantor (pred n) in[39m
     [38;5;2m 106[39m: [38;5;2m        I.hcat (List.replicate (pow 3 n) (square A.lightblue)) <->[39m
     [38;5;2m 107[39m: [38;5;2m        (sub <|> I.void (pow 3 (n - 1)) 0 <|> sub)[39m
     [38;5;2m 108[39m: [38;5;2m[39m
     [38;5;2m 109[39m: [38;5;2m  let checker n m i =[39m
     [38;5;2m 110[39m: [38;5;2m    let w = I.width i in[39m
     [38;5;2m 111[39m: [38;5;2m    I.(tile (n/2) (m/2) (hpad 0 w i <-> hpad w 0 i))[39m
     [38;5;2m 112[39m: [38;5;2m[39m
     [38;5;2m 113[39m: [38;5;2m  let checker1 = checker 20 20 I.(char A.(bg magenta) ' ' 2 1)[39m
     [38;5;2m 114[39m: [38;5;2m[39m
     [38;5;2m 115[39m: [38;5;2m  let rec sierp c n = I.([39m
     [38;5;2m 116[39m: [38;5;2m    if n > 1 then[39m
     [38;5;2m 117[39m: [38;5;2m      let ss = sierp c (pred n) in ss <-> (ss <|> ss)[39m
     [38;5;2m 118[39m: [38;5;2m    else hpad 1 0 (square c)[39m
     [38;5;2m 119[39m: [38;5;2m  )[39m
     [38;5;2m 120[39m: [38;5;2m[39m
     [38;5;2m 121[39m: [38;5;2m  let grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m 122[39m: [38;5;2m[39m
     [38;5;2m 123[39m: [38;5;2m  let outline attr i =[39m
     [38;5;2m 124[39m: [38;5;2m    let (w, h) = I.(width i, height i) in[39m
     [38;5;2m 125[39m: [38;5;2m    let chr x = I.uchar attr (Uchar.of_int x) 1 1[39m
     [38;5;2m 126[39m: [38;5;2m    and hbar  = I.uchar attr (Uchar.of_int 0x2500) w 1[39m
     [38;5;2m 127[39m: [38;5;2m    and vbar  = I.uchar attr (Uchar.of_int 0x2502) 1 h in[39m
     [38;5;2m 128[39m: [38;5;2m    let (a, b, c, d) = (chr 0x256d, chr 0x256e, chr 0x256f, chr 0x2570) in[39m
     [38;5;2m 129[39m: [38;5;2m    grid [ [a; hbar; b]; [vbar; i; vbar]; [d; hbar; c] ][39m
     [38;5;2m 130[39m: [38;5;2mend[39m
     [38;5;2m 131[39m: [38;5;2m[39m
     [38;5;2m 132[39m: [38;5;2mlet halfblock = "▄"[39m
     [38;5;2m 133[39m: [38;5;2m[39m
     [38;5;2m 134[39m: [38;5;2mlet pxmatrix w h f = I.tabulate w h @@ fun x y ->[39m
     [38;5;2m 135[39m: [38;5;2m  let y = y * 2 in[39m
     [38;5;2m 136[39m: [38;5;2m  I.string A.(bg (f x y) ++ fg (f x (y + 1))) halfblock[39m
     [38;5;2m 137[39m: [38;5;2m[39m
     [38;5;2m 138[39m: [38;5;2mmodule Term = Notty_unix.Term[39m
     [38;5;2m 139[39m: [38;5;2m[39m
     [38;5;2m 140[39m: [38;5;2mlet simpleterm ~imgf ~f ~s =[39m
     [38;5;2m 141[39m: [38;5;2m  let term = Term.create () in[39m
     [38;5;2m 142[39m: [38;5;2m  let imgf (w, h) s =[39m
     [38;5;2m 143[39m: [38;5;2m    I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m 144[39m: [38;5;2m  let rec go s =[39m
     [38;5;2m 145[39m: [38;5;2m    Term.image term (imgf (Term.size term) s);[39m
     [38;5;2m 146[39m: [38;5;2m    match Term.event term with[39m
     [38;5;2m 147[39m: [38;5;2m    | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m 148[39m: [38;5;2m    | `Resize _ -> go s[39m
     [38;5;2m 149[39m: [38;5;2m    | #Unescape.event as e ->[39m
     [38;5;2m 150[39m: [38;5;2m        match f s e with Some s -> go s | _ -> ()[39m
     [38;5;2m 151[39m: [38;5;2m  in go s[39m
[38;5;3mAdded regular file ../notty/examples/common_lwt.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty[39m
     [38;5;2m   5[39m: [38;5;2mopen Lwt.Infix[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2minclude Common[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2mmodule T = Notty_lwt.Term[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2mlet simpleterm_lwt ~imgf ~f ~s =[39m
     [38;5;2m  12[39m: [38;5;2m  let term = T.create () in[39m
     [38;5;2m  13[39m: [38;5;2m  let imgf (w, h) s =[39m
     [38;5;2m  14[39m: [38;5;2m    I.(string A.(fg lightblack) "[ESC quits.]" <-> imgf (w, h - 1) s) in[39m
     [38;5;2m  15[39m: [38;5;2m  let step e s = match e with[39m
     [38;5;2m  16[39m: [38;5;2m    | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m  17[39m: [38;5;2m        T.release term >|= fun () -> s[39m
     [38;5;2m  18[39m: [38;5;2m    | `Resize dim -> T.image term (imgf dim s) >|= fun () -> s[39m
     [38;5;2m  19[39m: [38;5;2m    | #Unescape.event as e ->[39m
     [38;5;2m  20[39m: [38;5;2m        match f s e with[39m
     [38;5;2m  21[39m: [38;5;2m        | Some s -> T.image term (imgf (T.size term) s) >|= fun () -> s[39m
     [38;5;2m  22[39m: [38;5;2m        | None   -> T.release term >|= fun () -> s[39m
     [38;5;2m  23[39m: [38;5;2m  in[39m
     [38;5;2m  24[39m: [38;5;2m  ( T.image term (imgf (T.size term) s)[39m
     [38;5;2m  25[39m: [38;5;2m    >>= fun () -> Lwt_stream.fold_s step (T.events term) s )[39m
     [38;5;2m  26[39m: [38;5;2m  |> Lwt_main.run |> ignore[39m
     [38;5;2m  27[39m: [38;5;2m[39m
     [38;5;2m  28[39m: [38;5;2m[39m
     [38;5;2m  29[39m: [38;5;2mlet timer = function[39m
     [38;5;2m  30[39m: [38;5;2m  | None   -> Lwt.wait () |> fst[39m
     [38;5;2m  31[39m: [38;5;2m  | Some t -> Lwt_unix.sleep t >|= fun _ -> `Timer[39m
     [38;5;2m  32[39m: [38;5;2m[39m
     [38;5;2m  33[39m: [38;5;2mlet event e = Lwt_stream.get (T.events e) >|= function[39m
     [38;5;2m  34[39m: [38;5;2m  | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m  35[39m: [38;5;2m  | None -> `End[39m
     [38;5;2m  36[39m: [38;5;2m[39m
     [38;5;2m  37[39m: [38;5;2mlet simpleterm_lwt_timed ?delay ~f s0 =[39m
     [38;5;2m  38[39m: [38;5;2m  let term = T.create () in[39m
     [38;5;2m  39[39m: [38;5;2m  let rec loop (e, t) dim s =[39m
     [38;5;2m  40[39m: [38;5;2m    (e <?> t) >>= function[39m
     [38;5;2m  41[39m: [38;5;2m    | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m  42[39m: [38;5;2m        Lwt.return_unit[39m
     [38;5;2m  43[39m: [38;5;2m    | `Resize dim as evt     -> invoke (event term, t) dim s evt[39m
     [38;5;2m  44[39m: [38;5;2m    | #Unescape.event as evt -> invoke (event term, t) dim s evt[39m
     [38;5;2m  45[39m: [38;5;2m    | `Timer as evt          -> invoke (e, timer delay) dim s evt[39m
     [38;5;2m  46[39m: [38;5;2m  and invoke es dim s e =[39m
     [38;5;2m  47[39m: [38;5;2m    match f dim s e with[39m
     [38;5;2m  48[39m: [38;5;2m    | `Continue s    -> loop es dim s[39m
     [38;5;2m  49[39m: [38;5;2m    | `Redraw (s, i) -> T.image term i >>= fun () -> loop es dim s[39m
     [38;5;2m  50[39m: [38;5;2m    | `Stop          -> Lwt.return_unit in[39m
     [38;5;2m  51[39m: [38;5;2m  let size = T.size term in[39m
     [38;5;2m  52[39m: [38;5;2m  loop (event term, timer delay) size s0[39m
[38;5;3mAdded regular file ../notty/examples/crops.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Demonstrates edge-case behavior of functions that produce rectangle-like[39m
     [38;5;2m   6[39m: [38;5;2m * things.[39m
     [38;5;2m   7[39m: [38;5;2m *)[39m
     [38;5;2m   8[39m: [38;5;2mopen Notty[39m
     [38;5;2m   9[39m: [38;5;2mopen Common[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2mlet hdistribute ?align w imgs =[39m
     [38;5;2m  12[39m: [38;5;2m  let n = List.length imgs in[39m
     [38;5;2m  13[39m: [38;5;2m  I.(List.map (hsnap ?align (w / n)) imgs |> hcat)[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2mlet take w h i = I.(vsnap h i |> hsnap w)[39m
     [38;5;2m  16[39m: [38;5;2m[39m
     [38;5;2m  17[39m: [38;5;2mlet () =[39m
     [38;5;2m  18[39m: [38;5;2m  simpleterm ~s:(2, 2)[39m
     [38;5;2m  19[39m: [38;5;2m    ~f:(fun (w, h as s) -> function[39m
     [38;5;2m  20[39m: [38;5;2m        `Key (`Arrow `Left, _) -> Some (w - 1, h)[39m
     [38;5;2m  21[39m: [38;5;2m      | `Key (`Arrow `Right, _) -> Some (w + 1, h)[39m
     [38;5;2m  22[39m: [38;5;2m      | `Key (`Arrow `Up, _) -> Some (w, h - 1)[39m
     [38;5;2m  23[39m: [38;5;2m      | `Key (`Arrow `Down, _) -> Some (w, h + 1)[39m
     [38;5;2m  24[39m: [38;5;2m      | `Key (`ASCII '0', _) -> Some (0, 0)[39m
     [38;5;2m  25[39m: [38;5;2m      | _ -> Some s)[39m
     [38;5;2m  26[39m: [38;5;2m    ~imgf:I.(fun (ow, oh) (w, h) ->[39m
     [38;5;2m  27[39m: [38;5;2m      let (a1, a2, a3) = A.(fg lightmagenta, fg lightred, fg lightblue) in[39m
     [38;5;2m  28[39m: [38;5;2m      strf "Sizing edge behavior. Dim: (%d, %d)" w h <->[39m
     [38;5;2m  29[39m: [38;5;2m      ( hdistribute ow Images.[[39m
     [38;5;2m  30[39m: [38;5;2m          outline a1 (uchar a1 (Uchar.of_int 0x2022) w h)[39m
     [38;5;2m  31[39m: [38;5;2m        ; outline a2 (uchar a2 (Uchar.of_int 0x2022) 300 300 |> take w h)[39m
     [38;5;2m  32[39m: [38;5;2m        ; outline a3 (void w h)[39m
     [38;5;2m  33[39m: [38;5;2m        ] |> vsnap (oh - 4) )[39m
     [38;5;2m  34[39m: [38;5;2m      <->[39m
     [38;5;2m  35[39m: [38;5;2m      hdistribute ow [string a1 "char"; string a2 "crop"; string a3 "void"][39m
     [38;5;2m  36[39m: [38;5;2m    )[39m
[38;5;3mAdded regular file ../notty/examples/cursor.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty[39m
     [38;5;2m   5[39m: [38;5;2mopen Common[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2mlet rec main t (x, y as pos) =[39m
     [38;5;2m   8[39m: [38;5;2m  let img =[39m
     [38;5;2m   9[39m: [38;5;2m    let dot = I.string A.(bg lightred ++ fg black) "✓" |> I.pad ~l:x ~t:y[39m
     [38;5;2m  10[39m: [38;5;2m    and txt = I.strf ~attr:A.(fg lightblack) "@(%d, %d)" x y in[39m
     [38;5;2m  11[39m: [38;5;2m    I.(txt </> dot) in[39m
     [38;5;2m  12[39m: [38;5;2m  Term.image t img;[39m
     [38;5;2m  13[39m: [38;5;2m  Term.cursor t (Some pos);[39m
     [38;5;2m  14[39m: [38;5;2m  match Term.event t with[39m
     [38;5;2m  15[39m: [38;5;2m  | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m  16[39m: [38;5;2m  | `Resize _ -> main t pos[39m
     [38;5;2m  17[39m: [38;5;2m  | `Mouse ((`Press _ | `Drag), pos, _) -> main t pos[39m
     [38;5;2m  18[39m: [38;5;2m  | `Key (`Arrow d, _) ->[39m
     [38;5;2m  19[39m: [38;5;2m    ( main t @@ match d with[39m
     [38;5;2m  20[39m: [38;5;2m      | `Up    -> (x, y - 1)[39m
     [38;5;2m  21[39m: [38;5;2m      | `Down  -> (x, y + 1)[39m
     [38;5;2m  22[39m: [38;5;2m      | `Left  -> (x - 1, y)[39m
     [38;5;2m  23[39m: [38;5;2m      | `Right -> (x + 1, y) )[39m
     [38;5;2m  24[39m: [38;5;2m  | _ -> main t pos[39m
     [38;5;2m  25[39m: [38;5;2m[39m
     [38;5;2m  26[39m: [38;5;2mlet () = main (Term.create ()) (0, 1)[39m
[38;5;3mAdded regular file ../notty/examples/cuts.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Demonstrates text cropping, particularly of grapheme clusters and wide[39m
     [38;5;2m   6[39m: [38;5;2m * characters.[39m
     [38;5;2m   7[39m: [38;5;2m *)[39m
     [38;5;2m   8[39m: [38;5;2mopen Notty[39m
     [38;5;2m   9[39m: [38;5;2mopen Notty_unix[39m
     [38;5;2m  10[39m: [38;5;2mopen Common[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mlet hpadwith attr c a b i =[39m
     [38;5;2m  13[39m: [38;5;2m  I.(char attr c a 1 <|> i <|> char attr c b 1)[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2mlet cuts i =[39m
     [38;5;2m  16[39m: [38;5;2m  let w = I.width i in[39m
     [38;5;2m  17[39m: [38;5;2m  List.([39m
     [38;5;2m  18[39m: [38;5;2m    range 0 w |> map (fun a ->[39m
     [38;5;2m  19[39m: [38;5;2m      range 0 (w - a) |> map (fun b ->[39m
     [38;5;2m  20[39m: [38;5;2m        i |> I.hcrop a b |> hpadwith A.(fg lightblack) '.' a b[39m
     [38;5;2m  21[39m: [38;5;2m      ) |> I.vcat |> I.hpad 1 1[39m
     [38;5;2m  22[39m: [38;5;2m    ) |> I.hcat |> I.vpad 1 1[39m
     [38;5;2m  23[39m: [38;5;2m  )[39m
     [38;5;2m  24[39m: [38;5;2m[39m
     [38;5;2m  25[39m: [38;5;2mlet colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m  26[39m: [38;5;2m[39m
     [38;5;2m  27[39m: [38;5;2mlet patterns = [[39m
     [38;5;2m  28[39m: [38;5;2m  "desu"[39m
     [38;5;2m  29[39m: [38;5;2m; ".▪e\204\129●."[39m
     [38;5;2m  30[39m: [38;5;2m; "(茶‸茶‶)"[39m
     [38;5;2m  31[39m: [38;5;2m; "(⌐■_■)"[39m
     [38;5;2m  32[39m: [38;5;2m(* ; "¯\\(ツ)/¯" *)[39m
     [38;5;2m  33[39m: [38;5;2m(* ; "ಠ_ಠ" *)[39m
     [38;5;2m  34[39m: [38;5;2m(* ; "ಡ_ಡ" *)[39m
     [38;5;2m  35[39m: [38;5;2m(* ; "\xe0\xb2\xa0\x5f\xe0\xb1\x83" *)[39m
     [38;5;2m  36[39m: [38;5;2m(* ; "ತಎತ" *)[39m
     [38;5;2m  37[39m: [38;5;2m(* ; "ಥ_ಥ" *)[39m
     [38;5;2m  38[39m: [38;5;2m; "ᕕ( ᐛ )ᕗ"[39m
     [38;5;2m  39[39m: [38;5;2m(* ; "ᕙ(⇀‸↼‶)ᕗ" *)[39m
     [38;5;2m  40[39m: [38;5;2m(* ; "ᕦ(ò_óˇ)ᕤ" *)[39m
     [38;5;2m  41[39m: [38;5;2m(* ; "(╯ ︵╰ )" *)[39m
     [38;5;2m  42[39m: [38;5;2m(* ; "\x28\x20\xcd\xa1\xc2\xb0\x20\xcd\x9c\xca\x96\x20\xcd\xa1\xc2\xb0\x29" *)[39m
     [38;5;2m  43[39m: [38;5;2m][39m
     [38;5;2m  44[39m: [38;5;2m[39m
     [38;5;2m  45[39m: [38;5;2m[39m
     [38;5;2m  46[39m: [38;5;2mlet () =[39m
     [38;5;2m  47[39m: [38;5;2m  let open I in[39m
     [38;5;2m  48[39m: [38;5;2m[39m
     [38;5;2m  49[39m: [38;5;2m  patterns |> List.map (fun s ->[39m
     [38;5;2m  50[39m: [38;5;2m    cuts (string A.(fg lightmagenta ++ bg lightblack) s)[39m
     [38;5;2m  51[39m: [38;5;2m  ) |> I.vcat |> eol |> output_image ;[39m
     [38;5;2m  52[39m: [38;5;2m[39m
     [38;5;2m  53[39m: [38;5;2m  colors |> List.mapi (fun i c ->[39m
     [38;5;2m  54[39m: [38;5;2m    pad ~l:i ~t:i ([39m
     [38;5;2m  55[39m: [38;5;2m      string A.(fg black ++ bg c ++ st blink) "茶" <|>[39m
     [38;5;2m  56[39m: [38;5;2m      pad ~l:2 ~t:1[39m
     [38;5;2m  57[39m: [38;5;2m        (string A.(fg c ++ st blink) "PARTY!"))[39m
     [38;5;2m  58[39m: [38;5;2m  ) |> zcat |> pad ~l:2 ~t:2 ~b:2 |> output_image[39m
[38;5;3mAdded regular file ../notty/examples/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(library[39m
     [38;5;2m   2[39m: [38;5;2m  (name common)[39m
     [38;5;2m   3[39m: [38;5;2m  (modules common)[39m
     [38;5;2m   4[39m: [38;5;2m  (libraries notty notty.unix))[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2m(library[39m
     [38;5;2m   7[39m: [38;5;2m  (name common_lwt)[39m
     [38;5;2m   8[39m: [38;5;2m  (modules common_lwt)[39m
     [38;5;2m   9[39m: [38;5;2m  (libraries common notty.lwt))[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2m(executables[39m
     [38;5;2m  12[39m: [38;5;2m  (names testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m  13[39m: [38;5;2m         letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m  14[39m: [38;5;2m         life)[39m
     [38;5;2m  15[39m: [38;5;2m  (modules testpatterns colors almondbread crops cursor cuts emoji inline keys[39m
     [38;5;2m  16[39m: [38;5;2m           letters mouse thisbig runes sierpinski rain sierpinski_lwt linear[39m
     [38;5;2m  17[39m: [38;5;2m           life)[39m
     [38;5;2m  18[39m: [38;5;2m  (libraries common common_lwt))[39m
     [38;5;2m  19[39m: [38;5;2m[39m
     [38;5;2m  20[39m: [38;5;2m(alias[39m
     [38;5;2m  21[39m: [38;5;2m  (name ex)[39m
     [38;5;2m  22[39m: [38;5;2m  (package notty)[39m
     [38;5;2m  23[39m: [38;5;2m  (deps testpatterns.exe colors.exe almondbread.exe crops.exe cursor.exe[39m
     [38;5;2m  24[39m: [38;5;2m        cuts.exe emoji.exe inline.exe keys.exe letters.exe mouse.exe[39m
     [38;5;2m  25[39m: [38;5;2m        thisbig.exe runes.exe sierpinski.exe rain.exe sierpinski_lwt.exe[39m
     [38;5;2m  26[39m: [38;5;2m        linear.exe life.exe))[39m
[38;5;3mAdded regular file ../notty/examples/emoji.ml:[39m
     [38;5;2m   1[39m: [38;5;2mopen Notty[39m
     [38;5;2m   2[39m: [38;5;2mopen Common[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mlet es = [[39m
     [38;5;2m   5[39m: [38;5;2m  [0x2e; 0x2e; 0x2e; 0x2e];[39m
     [38;5;2m   6[39m: [38;5;2m  [0x25aa; 0x25fe; 0x25fc; 0x2b1b];[39m
     [38;5;2m   7[39m: [38;5;2m  [0x1f346; 0x1f351; 0x1f605; 0x1f4a6];[39m
     [38;5;2m   8[39m: [38;5;2m  [0x1f62d; 0x1f52a; 0x1f52a; 0x1f47c];[39m
     [38;5;2m   9[39m: [38;5;2m][39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2mlet image =[39m
     [38;5;2m  12[39m: [38;5;2m  es |> List.(map (map @@ fun x ->[39m
     [38;5;2m  13[39m: [38;5;2m    let i = I.uchar A.(fg lightwhite) (Uchar.of_int x) 1 1 in[39m
     [38;5;2m  14[39m: [38;5;2m    I.(pad ~r:(3 - width i) i)[39m
     [38;5;2m  15[39m: [38;5;2m  )) |> Images.grid |> I.pad ~l:1 |> Images.outline A.(fg lightblack)[39m
     [38;5;2m  16[39m: [38;5;2m[39m
     [38;5;2m  17[39m: [38;5;2mlet () = Notty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m  18[39m: [38;5;2m  I.(pad ~l:((w - width image) / 2) ~b:1 image)[39m
[38;5;3mAdded regular file ../notty/examples/inline.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(** Demonstrates manual cursor positioning. *)[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mopen Notty[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty.Infix[39m
     [38;5;2m   8[39m: [38;5;2mopen Notty_unix[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet sleep n = flush stdout; Unix.select [] [] [] n |> ignore[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mlet pp_str attr = I.pp_attr attr Format.pp_print_string[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2mlet rewind n = move_cursor `Home; move_cursor (`By (0, - (max n 0)))[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mlet output_subst ~prev i =[39m
     [38;5;2m  17[39m: [38;5;2m  let h = I.height prev in[39m
     [38;5;2m  18[39m: [38;5;2m  let d = h - I.height i in[39m
     [38;5;2m  19[39m: [38;5;2m  if d > 0 then ( rewind (d - 1); output_image (I.void 0 d) );[39m
     [38;5;2m  20[39m: [38;5;2m  rewind (h - 1); output_image i[39m
     [38;5;2m  21[39m: [38;5;2m[39m
     [38;5;2m  22[39m: [38;5;2mlet cmyk = function[39m
     [38;5;2m  23[39m: [38;5;2m  | 0 -> A.rgb ~r:0 ~g:5 ~b:5[39m
     [38;5;2m  24[39m: [38;5;2m  | 1 -> A.rgb ~r:5 ~g:0 ~b:5[39m
     [38;5;2m  25[39m: [38;5;2m  | 2 -> A.rgb ~r:5 ~g:5 ~b:0[39m
     [38;5;2m  26[39m: [38;5;2m  | 3 -> A.rgb ~r:0 ~g:0 ~b:0[39m
     [38;5;2m  27[39m: [38;5;2m  | _ -> A.rgb ~r:5 ~g:5 ~b:5[39m
     [38;5;2m  28[39m: [38;5;2m[39m
     [38;5;2m  29[39m: [38;5;2mlet () =[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2m  let (w, h) = match winsize Unix.stdout with[39m
     [38;5;2m  32[39m: [38;5;2m    Some dim -> dim | _ -> assert false[39m
     [38;5;2m  33[39m: [38;5;2m  and attr = A.(fg lightwhite ++ bg blue) in[39m
     [38;5;2m  34[39m: [38;5;2m  let img1 =[39m
     [38;5;2m  35[39m: [38;5;2m    I.(string attr "THE BLUE STRIPE ABOVE" <->[39m
     [38;5;2m  36[39m: [38;5;2m         tabulate 1 h (fun _ _ -> I.strf "HIDDEN"))[39m
     [38;5;2m  37[39m: [38;5;2m  and img2 =[39m
     [38;5;2m  38[39m: [38;5;2m    I.(strf "Top line. There's a %a above. ^^^"[39m
     [38;5;2m  39[39m: [38;5;2m         (pp_str attr) "blue stripe" |> vpad 0 2) in[39m
     [38;5;2m  40[39m: [38;5;2m[39m
     [38;5;2m  41[39m: [38;5;2m  output_image img1; output_subst ~prev:img1 img2;[39m
     [38;5;2m  42[39m: [38;5;2m[39m
     [38;5;2m  43[39m: [38;5;2m  output_image I.(string A.(fg white) "[..]" |> eol);[39m
     [38;5;2m  44[39m: [38;5;2m  for i = 0 to 5 do[39m
     [38;5;2m  45[39m: [38;5;2m    let a  = A.(bg (rgb ~r:i ~b:(5 - i) ~g:0)) in[39m
     [38;5;2m  46[39m: [38;5;2m    let bg = I.tabulate 1 i (fun _ -> I.strf "HIDDEN [%d]") |> eol[39m
     [38;5;2m  47[39m: [38;5;2m    and fg = I.char a ' ' 19 (5 - i) <|> I.char a '-' 1 (5 - i) |> eol in[39m
     [38;5;2m  48[39m: [38;5;2m    output_image bg; output_subst ~prev:bg fg;[39m
     [38;5;2m  49[39m: [38;5;2m  done;[39m
     [38;5;2m  50[39m: [38;5;2m  output_image I.(string A.(fg white) "[..]" |> vpad 0 2);[39m
     [38;5;2m  51[39m: [38;5;2m[39m
     [38;5;2m  52[39m: [38;5;2m  let rec go prev n =[39m
     [38;5;2m  53[39m: [38;5;2m    if n <= w then[39m
     [38;5;2m  54[39m: [38;5;2m      let h = log (float n) |> truncate in[39m
     [38;5;2m  55[39m: [38;5;2m      let i = prev <|> I.tabulate 1 h (fun _ y -> I.char A.(bg (cmyk y)) ' ' 1 1) in[39m
     [38;5;2m  56[39m: [38;5;2m      output_subst ~prev i; sleep 0.01; go i (n + 1)[39m
     [38;5;2m  57[39m: [38;5;2m    else output_subst ~prev I.empty in[39m
     [38;5;2m  58[39m: [38;5;2m  show_cursor false;[39m
     [38;5;2m  59[39m: [38;5;2m  go I.empty 1;[39m
     [38;5;2m  60[39m: [38;5;2m  show_cursor true;[39m
     [38;5;2m  61[39m: [38;5;2m[39m
     [38;5;2m  62[39m: [38;5;2m  output_image[39m
     [38;5;2m  63[39m: [38;5;2m    I.(strf "It doesn't say %a anywhere on screen, either."[39m
     [38;5;2m  64[39m: [38;5;2m        (pp_attr A.(fg white) Format.pp_print_string) "hidden" |> eol)[39m
     [38;5;2m  65[39m: [38;5;2m[39m
[38;5;3mAdded regular file ../notty/examples/keys.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Demonstrates input parsing.[39m
     [38;5;2m   6[39m: [38;5;2m *)[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty[39m
     [38;5;2m   8[39m: [38;5;2mopen Common[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet pps = Format.pp_print_string[39m
     [38;5;2m  11[39m: [38;5;2mlet ppi = Format.pp_print_int[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2mlet pp_special fmt = function[39m
     [38;5;2m  14[39m: [38;5;2m  | `Escape       -> pps fmt "ESCAPE"[39m
     [38;5;2m  15[39m: [38;5;2m  | `Enter        -> pps fmt "ENTER"[39m
     [38;5;2m  16[39m: [38;5;2m  | `Tab          -> pps fmt "TAB"[39m
     [38;5;2m  17[39m: [38;5;2m  | `Backspace    -> pps fmt "BACKSPACE"[39m
     [38;5;2m  18[39m: [38;5;2m  | `Arrow `Up    -> pps fmt "UP"[39m
     [38;5;2m  19[39m: [38;5;2m  | `Arrow `Down  -> pps fmt "DOWN"[39m
     [38;5;2m  20[39m: [38;5;2m  | `Arrow `Left  -> pps fmt "LEFT"[39m
     [38;5;2m  21[39m: [38;5;2m  | `Arrow `Right -> pps fmt "RIGHT"[39m
     [38;5;2m  22[39m: [38;5;2m  | `Page `Up     -> pps fmt "PAGE UP"[39m
     [38;5;2m  23[39m: [38;5;2m  | `Page `Down   -> pps fmt "PAGE DOWN"[39m
     [38;5;2m  24[39m: [38;5;2m  | `Home         -> pps fmt "HOME"[39m
     [38;5;2m  25[39m: [38;5;2m  | `End          -> pps fmt "END"[39m
     [38;5;2m  26[39m: [38;5;2m  | `Insert       -> pps fmt "INSERT"[39m
     [38;5;2m  27[39m: [38;5;2m  | `Delete       -> pps fmt "DELETE"[39m
     [38;5;2m  28[39m: [38;5;2m  | `Function n   -> pps fmt "FN"; ppi fmt n[39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2mlet pp_mods fmt = function[39m
     [38;5;2m  31[39m: [38;5;2m  | [] -> ()[39m
     [38;5;2m  32[39m: [38;5;2m  | ms -> ms |> List.iter (fun m ->[39m
     [38;5;2m  33[39m: [38;5;2m      pps fmt @@ match m with `Meta -> "M" | `Ctrl -> "C" | `Shift -> "S"[39m
     [38;5;2m  34[39m: [38;5;2m    )[39m
     [38;5;2m  35[39m: [38;5;2m[39m
     [38;5;2m  36[39m: [38;5;2mlet pp_mouse fmt = function[39m
     [38;5;2m  37[39m: [38;5;2m  | `Release -> pps fmt "Release"[39m
     [38;5;2m  38[39m: [38;5;2m  | `Drag    -> pps fmt "Drag"[39m
     [38;5;2m  39[39m: [38;5;2m  | `Move    -> pps fmt "Move"[39m
     [38;5;2m  40[39m: [38;5;2m  | `Press k ->[39m
     [38;5;2m  41[39m: [38;5;2m      pps fmt "Press ";[39m
     [38;5;2m  42[39m: [38;5;2m      pps fmt @@ match k with[39m
     [38;5;2m  43[39m: [38;5;2m        | `Left         -> "Left"[39m
     [38;5;2m  44[39m: [38;5;2m        | `Middle       -> "Middle"[39m
     [38;5;2m  45[39m: [38;5;2m        | `Right        -> "Right"[39m
     [38;5;2m  46[39m: [38;5;2m        | `Scroll `Up   -> "Scroll Up"[39m
     [38;5;2m  47[39m: [38;5;2m        | `Scroll `Down -> "Scroll Down"[39m
     [38;5;2m  48[39m: [38;5;2m[39m
     [38;5;2m  49[39m: [38;5;2mlet pp_u ppf u = Format.fprintf ppf "U+%04X" (Uchar.to_int u)[39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2mlet () =[39m
     [38;5;2m  52[39m: [38;5;2m  let magenta = A.(fg lightmagenta ++ bg black)[39m
     [38;5;2m  53[39m: [38;5;2m  and green   = A.(fg lightgreen   ++ bg black)[39m
     [38;5;2m  54[39m: [38;5;2m  and blue    = A.(fg lightblue    ++ bg black) in[39m
     [38;5;2m  55[39m: [38;5;2m  let pp_mods  = I.pp_attr green pp_mods[39m
     [38;5;2m  56[39m: [38;5;2m  and pp_mouse = I.pp_attr blue pp_mouse in[39m
     [38;5;2m  57[39m: [38;5;2m  simpleterm ~s:[][39m
     [38;5;2m  58[39m: [38;5;2m    ~f:(fun xs x -> Some (List.take 100 (x::xs)))[39m
     [38;5;2m  59[39m: [38;5;2m    ~imgf:(fun (_, h) xs ->[39m
     [38;5;2m  60[39m: [38;5;2m      let attr = magenta in[39m
     [38;5;2m  61[39m: [38;5;2m      let msg = I.string A.empty "Push keys."[39m
     [38;5;2m  62[39m: [38;5;2m      and ks = List.map (function[39m
     [38;5;2m  63[39m: [38;5;2m        | `Key ((`ASCII _ | `Uchar _) as c, mods) ->[39m
     [38;5;2m  64[39m: [38;5;2m            let u = Unescape.uchar c in[39m
     [38;5;2m  65[39m: [38;5;2m            I.(uchar blue u 1 1 <|> strf ~attr " %a %a" pp_u u pp_mods mods)[39m
     [38;5;2m  66[39m: [38;5;2m        | `Key (#Unescape.special as k, mods) ->[39m
     [38;5;2m  67[39m: [38;5;2m            I.strf ~attr "%a %a" pp_special k pp_mods mods[39m
     [38;5;2m  68[39m: [38;5;2m        | `Mouse (e, (x, y), mods) ->[39m
     [38;5;2m  69[39m: [38;5;2m            I.strf ~attr "MOUSE %a (%d, %d) %a" pp_mouse e x y pp_mods mods[39m
     [38;5;2m  70[39m: [38;5;2m        | `Paste e ->[39m
     [38;5;2m  71[39m: [38;5;2m            I.strf ~attr "PASTE %s" (if e = `Start then "START" else "END")[39m
     [38;5;2m  72[39m: [38;5;2m        ) xs |> I.vcat in[39m
     [38;5;2m  73[39m: [38;5;2m      I.(vsnap ~align:`Top (h - 3) ks <-> void 0 1 <-> msg |> pad ~l:1 ~t:1))[39m
[38;5;3mAdded regular file ../notty/examples/letters.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Dancing letters.[39m
     [38;5;2m   6[39m: [38;5;2m *)[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty[39m
     [38;5;2m   8[39m: [38;5;2mopen Common[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet nw = 6[39m
     [38;5;2m  11[39m: [38;5;2mand nh = 5[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2mlet () =[39m
     [38;5;2m  14[39m: [38;5;2m  simpleterm ~s:[][39m
     [38;5;2m  15[39m: [38;5;2m    ~f:(fun us -> function[39m
     [38;5;2m  16[39m: [38;5;2m      | `Key ((`Delete|`Backspace), _) ->[39m
     [38;5;2m  17[39m: [38;5;2m          Some (match us with _::xs -> xs | _ -> us)[39m
     [38;5;2m  18[39m: [38;5;2m      | `Key ((`ASCII _|`Uchar _ as u), _) ->[39m
     [38;5;2m  19[39m: [38;5;2m          Some (List.take (nw * nh) (Unescape.uchar u :: us))[39m
     [38;5;2m  20[39m: [38;5;2m      | _  -> Some us)[39m
     [38;5;2m  21[39m: [38;5;2m    ~imgf:(fun _ us ->[39m
     [38;5;2m  22[39m: [38;5;2m      let open List in[39m
     [38;5;2m  23[39m: [38;5;2m      let uus = chunks nw (rev us) in[39m
     [38;5;2m  24[39m: [38;5;2m      mapi (fun i us ->[39m
     [38;5;2m  25[39m: [38;5;2m        mapi (fun j u ->[39m
     [38;5;2m  26[39m: [38;5;2m          I.uchar A.(fg white ++ bg (rgb ~r:0 ~g:i ~b:j)) u 1 1[39m
     [38;5;2m  27[39m: [38;5;2m        ) us |> I.hcat[39m
     [38;5;2m  28[39m: [38;5;2m      ) uus |> I.vcat[39m
     [38;5;2m  29[39m: [38;5;2m      |> I.pad ~t:1 ~l:1[39m
     [38;5;2m  30[39m: [38;5;2m      |> I.hsnap ~align:`Left (nw + 1)[39m
     [38;5;2m  31[39m: [38;5;2m      |> tile nw 1)[39m
[38;5;3mAdded regular file ../notty/examples/life.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(*[39m
     [38;5;2m   5[39m: [38;5;2m * Game of Life with some ZX spectrum kitsch.[39m
     [38;5;2m   6[39m: [38;5;2m *)[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2mlet flip f a b = f b a[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2m(** Live, **)[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mmodule Coord = struct[39m
     [38;5;2m  13[39m: [38;5;2m  type t = int * int[39m
     [38;5;2m  14[39m: [38;5;2m  let compare ((a, b) : t) (c, d) =[39m
     [38;5;2m  15[39m: [38;5;2m    match compare a c with 0 -> compare b d | r -> r[39m
     [38;5;2m  16[39m: [38;5;2m  let equal ((a, b) : t) (c, d) = a = c && b = d[39m
     [38;5;2m  17[39m: [38;5;2mend[39m
     [38;5;2m  18[39m: [38;5;2m[39m
     [38;5;2m  19[39m: [38;5;2mmodule CSet = struct[39m
     [38;5;2m  20[39m: [38;5;2m  include Set.Make (Coord)[39m
     [38;5;2m  21[39m: [38;5;2m  let of_list = List.fold_left (flip add) empty[39m
     [38;5;2m  22[39m: [38;5;2m  let map f s = fold (fun x s -> add (f x) s) s empty[39m
     [38;5;2m  23[39m: [38;5;2mend[39m
     [38;5;2m  24[39m: [38;5;2m[39m
     [38;5;2m  25[39m: [38;5;2mmodule CMap = struct[39m
     [38;5;2m  26[39m: [38;5;2m  include Map.Make (Coord)[39m
     [38;5;2m  27[39m: [38;5;2m  let preimg p m =[39m
     [38;5;2m  28[39m: [38;5;2m    fold (fun k v s -> if p v then CSet.add k s else s) m CSet.empty[39m
     [38;5;2m  29[39m: [38;5;2mend[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2mlet erem x y = (x mod y + y) mod y[39m
     [38;5;2m  32[39m: [38;5;2mlet square (w, h) (a, b as ab) =[39m
     [38;5;2m  33[39m: [38;5;2m  if a < 0 || a >= w || b < 0 || b >= h then (-1, -1) else ab[39m
     [38;5;2m  34[39m: [38;5;2mlet torus (w, h) (a, b) = (erem a w, erem b h)[39m
     [38;5;2m  35[39m: [38;5;2mlet moebius (w, h) (a, b as ab) =[39m
     [38;5;2m  36[39m: [38;5;2m  if a < 0 || a >= w then (erem a w, h - b - 1) else ab[39m
     [38;5;2m  37[39m: [38;5;2m[39m
     [38;5;2m  38[39m: [38;5;2mlet neigh topo (a, b) = [[39m
     [38;5;2m  39[39m: [38;5;2m  (a-1, b); (a+1, b); (a-1, b-1); (a-1, b+1)[39m
     [38;5;2m  40[39m: [38;5;2m; (a, b-1); (a, b+1); (a+1, b-1); (a+1, b+1)[39m
     [38;5;2m  41[39m: [38;5;2m] |> List.map topo[39m
     [38;5;2m  42[39m: [38;5;2m[39m
     [38;5;2m  43[39m: [38;5;2mlet step topo life =[39m
     [38;5;2m  44[39m: [38;5;2m  let nlive pt =[39m
     [38;5;2m  45[39m: [38;5;2m    List.(neigh topo pt |> filter (flip CSet.mem life) |> length) in[39m
     [38;5;2m  46[39m: [38;5;2m  let f1 pt acc =[39m
     [38;5;2m  47[39m: [38;5;2m    pt :: neigh topo pt |> List.fold_left (fun acc -> function[39m
     [38;5;2m  48[39m: [38;5;2m      | (-1, -1) -> acc[39m
     [38;5;2m  49[39m: [38;5;2m      | pt when CMap.mem pt acc -> acc[39m
     [38;5;2m  50[39m: [38;5;2m      | pt ->[39m
     [38;5;2m  51[39m: [38;5;2m          let n = nlive pt in[39m
     [38;5;2m  52[39m: [38;5;2m          acc |> CMap.add pt[39m
     [38;5;2m  53[39m: [38;5;2m            (if n = 3 || (n = 2 && CSet.mem pt life) then 0 else 1)[39m
     [38;5;2m  54[39m: [38;5;2m    ) acc in[39m
     [38;5;2m  55[39m: [38;5;2m  CSet.fold f1 life CMap.empty |> CMap.preimg ((=) 0)[39m
     [38;5;2m  56[39m: [38;5;2m[39m
     [38;5;2m  57[39m: [38;5;2mlet glider = CSet.of_list [(2,1); (3,2); (1,3); (2,3); (3,3)][39m
     [38;5;2m  58[39m: [38;5;2m[39m
     [38;5;2m  59[39m: [38;5;2m(** ...render, **)[39m
     [38;5;2m  60[39m: [38;5;2m[39m
     [38;5;2m  61[39m: [38;5;2mopen Notty[39m
     [38;5;2m  62[39m: [38;5;2mopen Notty.Infix[39m
     [38;5;2m  63[39m: [38;5;2m[39m
     [38;5;2m  64[39m: [38;5;2mlet dot = I.string A.(fg lightred) "●"[39m
     [38;5;2m  65[39m: [38;5;2m[39m
     [38;5;2m  66[39m: [38;5;2mlet background step (n, m) =[39m
     [38;5;2m  67[39m: [38;5;2m  let k = 24. *. sin (float (step + m + n) /. 10.) |> truncate in[39m
     [38;5;2m  68[39m: [38;5;2m  if k > 0 then I.string A.(fg (gray k)) "." else I.void 1 1[39m
     [38;5;2m  69[39m: [38;5;2m[39m
     [38;5;2m  70[39m: [38;5;2mlet render (w, h) step life =[39m
     [38;5;2m  71[39m: [38;5;2m  I.tabulate w (h - 1) (fun x y ->[39m
     [38;5;2m  72[39m: [38;5;2m    let pt = (x, y) in if CSet.mem pt life then dot else background step pt[39m
     [38;5;2m  73[39m: [38;5;2m  ) <->[39m
     [38;5;2m  74[39m: [38;5;2m  I.(strf ~attr:A.(fg lightblack) "[generation %04d]" step |>[39m
     [38;5;2m  75[39m: [38;5;2m      hsnap ~align:`Right w)[39m
     [38;5;2m  76[39m: [38;5;2m[39m
     [38;5;2m  77[39m: [38;5;2m(** ...and interact. **)[39m
     [38;5;2m  78[39m: [38;5;2m[39m
     [38;5;2m  79[39m: [38;5;2mopen Lwt.Infix[39m
     [38;5;2m  80[39m: [38;5;2mopen Notty_lwt[39m
     [38;5;2m  81[39m: [38;5;2m[39m
     [38;5;2m  82[39m: [38;5;2mlet timer () = Lwt_unix.sleep 0.1 >|= fun () -> `Timer[39m
     [38;5;2m  83[39m: [38;5;2mlet event term = Lwt_stream.get (Term.events term) >|= function[39m
     [38;5;2m  84[39m: [38;5;2m  | Some (`Resize _ | #Unescape.event as x) -> x[39m
     [38;5;2m  85[39m: [38;5;2m  | None -> `End[39m
     [38;5;2m  86[39m: [38;5;2m[39m
     [38;5;2m  87[39m: [38;5;2mlet rec loop term (e, t) (dim, n, life as st) =[39m
     [38;5;2m  88[39m: [38;5;2m  (e <?> t) >>= function[39m
     [38;5;2m  89[39m: [38;5;2m  | `End | `Key (`Escape, []) | `Key (`ASCII 'C', [`Ctrl]) ->[39m
     [38;5;2m  90[39m: [38;5;2m      Lwt.return_unit[39m
     [38;5;2m  91[39m: [38;5;2m  | `Timer ->[39m
     [38;5;2m  92[39m: [38;5;2m      Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m  93[39m: [38;5;2m        loop term (e, timer ())[39m
     [38;5;2m  94[39m: [38;5;2m          (dim, n + 1, step (torus dim) life)[39m
     [38;5;2m  95[39m: [38;5;2m  | `Mouse ((`Press `Left|`Drag), (x, y), _) ->[39m
     [38;5;2m  96[39m: [38;5;2m      loop term (event term, t)[39m
     [38;5;2m  97[39m: [38;5;2m        (dim, n, CSet.add (torus dim (x, y)) life)[39m
     [38;5;2m  98[39m: [38;5;2m  | `Resize dim ->[39m
     [38;5;2m  99[39m: [38;5;2m      let life = CSet.map (torus dim) life in[39m
     [38;5;2m 100[39m: [38;5;2m      Term.image term (render dim n life) >>= fun () ->[39m
     [38;5;2m 101[39m: [38;5;2m        loop term (event term, t) (dim, n, life)[39m
     [38;5;2m 102[39m: [38;5;2m  | _ -> loop term (event term, t) st[39m
     [38;5;2m 103[39m: [38;5;2m[39m
     [38;5;2m 104[39m: [38;5;2mlet main () =[39m
     [38;5;2m 105[39m: [38;5;2m  let t = Term.create () in[39m
     [38;5;2m 106[39m: [38;5;2m  loop t (event t, timer ()) (Term.size t, 0, glider)[39m
     [38;5;2m 107[39m: [38;5;2m[39m
     [38;5;2m 108[39m: [38;5;2mlet () = Lwt_main.run @@ main ()[39m
[38;5;3mAdded regular file ../notty/examples/linear.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(*[39m
     [38;5;2m   5[39m: [38;5;2m * Elementary Cellular Automata[39m
     [38;5;2m   6[39m: [38;5;2m *)[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty[39m
     [38;5;2m   8[39m: [38;5;2mopen Notty.Infix[39m
     [38;5;2m   9[39m: [38;5;2mopen Common_lwt[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2mlet flip f a b = f b a[39m
     [38;5;2m  12[39m: [38;5;2mlet rec take n = function[39m
     [38;5;2m  13[39m: [38;5;2m  | x::xs when n > 0 -> x :: take (pred n) xs[39m
     [38;5;2m  14[39m: [38;5;2m  | _                -> [][39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mlet getd arr d i =[39m
     [38;5;2m  17[39m: [38;5;2m  if i < 0 || i >= Array.length arr then d else arr.(i)[39m
     [38;5;2m  18[39m: [38;5;2m[39m
     [38;5;2m  19[39m: [38;5;2mlet f ~rule a b c =[39m
     [38;5;2m  20[39m: [38;5;2m  if rule land (1 lsl (a lsl 2 + b lsl 1 + c)) > 0 then 1 else 0[39m
     [38;5;2m  21[39m: [38;5;2m[39m
     [38;5;2m  22[39m: [38;5;2mlet step ~rule w arr =[39m
     [38;5;2m  23[39m: [38;5;2m  let get = getd arr 0 in[39m
     [38;5;2m  24[39m: [38;5;2m  Array.init w @@ fun i ->[39m
     [38;5;2m  25[39m: [38;5;2m    f ~rule (get (i - 1)) (get i) (get (i + 1))[39m
     [38;5;2m  26[39m: [38;5;2m[39m
     [38;5;2m  27[39m: [38;5;2mlet dot  = I.char A.(bg lightwhite) ' ' 1 1[39m
     [38;5;2m  28[39m: [38;5;2mlet void = I.void 1 1[39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2mlet render ~rule ~h xss =[39m
     [38;5;2m  31[39m: [38;5;2m  let cons k = function[39m
     [38;5;2m  32[39m: [38;5;2m    | 0 -> I.void k 1[39m
     [38;5;2m  33[39m: [38;5;2m    | _ -> I.char A.(bg lightwhite) ' ' k 1 in[39m
     [38;5;2m  34[39m: [38;5;2m  let rec rline s k i arr =[39m
     [38;5;2m  35[39m: [38;5;2m    if i >= Array.length arr then[39m
     [38;5;2m  36[39m: [38;5;2m      cons k s[39m
     [38;5;2m  37[39m: [38;5;2m    else if arr.(i) = s then[39m
     [38;5;2m  38[39m: [38;5;2m      rline s (k + 1) (i + 1) arr[39m
     [38;5;2m  39[39m: [38;5;2m    else cons k s <|> rline (1 - s) 1 (i + 1) arr in[39m
     [38;5;2m  40[39m: [38;5;2m  ( xss |> List.rev |> List.map (rline 0 0 0) |> I.vcat[39m
     [38;5;2m  41[39m: [38;5;2m    |> I.vsnap ~align:`Top (h - 2) ) <->[39m
     [38;5;2m  42[39m: [38;5;2m  ( I.strf ~attr:A.(fg lightgreen ++ bg black) " RULE %d " rule[39m
     [38;5;2m  43[39m: [38;5;2m    |> I.vpad 1 0 )[39m
     [38;5;2m  44[39m: [38;5;2m[39m
     [38;5;2m  45[39m: [38;5;2mlet rule = 124 (* 110 mirrored *)[39m
     [38;5;2m  46[39m: [38;5;2m[39m
     [38;5;2m  47[39m: [38;5;2mlet main () =[39m
     [38;5;2m  48[39m: [38;5;2m  simpleterm_lwt_timed ~delay:0.1 ([], rule)[39m
     [38;5;2m  49[39m: [38;5;2m  ~f:(fun (w, h) (lines, rule) -> function[39m
     [38;5;2m  50[39m: [38;5;2m    | `Timer ->[39m
     [38;5;2m  51[39m: [38;5;2m        let prev  = match lines with [] -> [|1|] | h::_ -> h in[39m
     [38;5;2m  52[39m: [38;5;2m        let lines = step ~rule w prev :: lines |> take (h - 2) in[39m
     [38;5;2m  53[39m: [38;5;2m        `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m  54[39m: [38;5;2m    | `Resize _ ->[39m
     [38;5;2m  55[39m: [38;5;2m        let lines = lines |> take h in[39m
     [38;5;2m  56[39m: [38;5;2m        `Redraw ((lines, rule), render ~rule ~h lines)[39m
     [38;5;2m  57[39m: [38;5;2m    | `Key (`Arrow `Left, []) ->[39m
     [38;5;2m  58[39m: [38;5;2m        `Redraw (([], rule - 1), render ~rule ~h lines)[39m
     [38;5;2m  59[39m: [38;5;2m    | `Key (`Arrow `Right, []) ->[39m
     [38;5;2m  60[39m: [38;5;2m        `Redraw (([], rule + 1), render ~rule ~h lines)[39m
     [38;5;2m  61[39m: [38;5;2m    | _ -> `Continue (lines, rule)[39m
     [38;5;2m  62[39m: [38;5;2m  )[39m
     [38;5;2m  63[39m: [38;5;2m[39m
     [38;5;2m  64[39m: [38;5;2mlet () = Lwt_main.run @@ main ()[39m
[38;5;3mAdded regular file ../notty/examples/mouse.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Demonstrates mouse input.[39m
     [38;5;2m   6[39m: [38;5;2m *)[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty[39m
     [38;5;2m   8[39m: [38;5;2mopen Common[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet lnv = Uchar.of_int 0x2502[39m
     [38;5;2m  11[39m: [38;5;2mand lnh = Uchar.of_int 0x2500[39m
     [38;5;2m  12[39m: [38;5;2mand crs = Uchar.of_int 0x253c[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2mlet clip a b x = min b (max a x)[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mlet () =[39m
     [38;5;2m  17[39m: [38;5;2m  simpleterm ~s:(`Down, (0, 0), [], 11)[39m
     [38;5;2m  18[39m: [38;5;2m    ~f:(fun (st, pos, mods, scr as s) -> function[39m
     [38;5;2m  19[39m: [38;5;2m      | `Mouse ((`Press `Left|`Drag), pos, mods) -> Some (`Drag, pos, mods, scr)[39m
     [38;5;2m  20[39m: [38;5;2m      | `Mouse (`Press (`Scroll s), _, _) ->[39m
     [38;5;2m  21[39m: [38;5;2m          Some (st, pos, mods, clip 0 23 (scr + match s with `Up -> 1 | _ -> -1))[39m
     [38;5;2m  22[39m: [38;5;2m      | `Mouse (`Release, pos, _) -> Some (`Down, pos, [], scr)[39m
     [38;5;2m  23[39m: [38;5;2m      | _ -> Some s)[39m
     [38;5;2m  24[39m: [38;5;2m    ~imgf:I.(fun (w, h) (st, (x, y), mods, scr) ->[39m
     [38;5;2m  25[39m: [38;5;2m      let cross =[39m
     [38;5;2m  26[39m: [38;5;2m        let a  = match st with `Drag -> A.(fg lightgreen) | `Down -> A.(fg green) in[39m
     [38;5;2m  27[39m: [38;5;2m        (uchar a lnh x 1 |> vpad y 0) <|>[39m
     [38;5;2m  28[39m: [38;5;2m        (uchar a lnv 1 y <-> uchar a crs 1 1 <-> uchar a lnv 1 (h - y)) <|>[39m
     [38;5;2m  29[39m: [38;5;2m        (uchar a lnh (w - x - 1) 1 |> vpad y 0)[39m
     [38;5;2m  30[39m: [38;5;2m        |> crop ~t:1 ~l:1 ~r:3[39m
     [38;5;2m  31[39m: [38;5;2m        |> hpad 1 1[39m
     [38;5;2m  32[39m: [38;5;2m        |> vsnap ~align:`Top (h - 1)[39m
     [38;5;2m  33[39m: [38;5;2m      and scroll =[39m
     [38;5;2m  34[39m: [38;5;2m        List.(range 0 scr |> rev |> map @@ fun level ->[39m
     [38;5;2m  35[39m: [38;5;2m          Images.dot A.(gray level)[39m
     [38;5;2m  36[39m: [38;5;2m        ) |> vcat |> vsnap ~align:`Bottom (h - 1)[39m
     [38;5;2m  37[39m: [38;5;2m      and status =[39m
     [38;5;2m  38[39m: [38;5;2m        let a = A.(fg lightblack ++ bg black) in[39m
     [38;5;2m  39[39m: [38;5;2m        let fa m = if List.mem m mods then A.(fg lightgreen ++ bg black) else a in[39m
     [38;5;2m  40[39m: [38;5;2m        string A.empty "Use the mouse." </>[39m
     [38;5;2m  41[39m: [38;5;2m        (hcat [ string a "["[39m
     [38;5;2m  42[39m: [38;5;2m              ; string (fa `Ctrl) "C"[39m
     [38;5;2m  43[39m: [38;5;2m              ; string (fa `Meta) "M"[39m
     [38;5;2m  44[39m: [38;5;2m              ; strf ~attr:a "] @(%03d, %03d)" x y ][39m
     [38;5;2m  45[39m: [38;5;2m         |> hsnap ~align:`Right w)[39m
     [38;5;2m  46[39m: [38;5;2m      in (cross <|> scroll) <-> status[39m
     [38;5;2m  47[39m: [38;5;2m    )[39m
[38;5;3mAdded regular file ../notty/examples/rain.ml:[39m
     [38;5;2m   1[39m: [38;5;2m[39m
     [38;5;2m   2[39m: [38;5;2mlet () = Random.self_init ()[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mlet rec (--) a b = if a > b then [] else a :: succ a -- b[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mlet utf8_of_code_point =[39m
     [38;5;2m   7[39m: [38;5;2m  let buf = Buffer.create 7 in fun cp ->[39m
     [38;5;2m   8[39m: [38;5;2m    Buffer.clear buf;[39m
     [38;5;2m   9[39m: [38;5;2m    Uutf.Buffer.add_utf_8 buf (Uchar.of_int cp);[39m
     [38;5;2m  10[39m: [38;5;2m    Buffer.contents buf[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mlet nsym = 4096[39m
     [38;5;2m  13[39m: [38;5;2mlet glitch = nsym / 20[39m
     [38;5;2m  14[39m: [38;5;2mlet symbols = Array.(concat [[39m
     [38;5;2m  15[39m: [38;5;2m  init 58 (fun x -> utf8_of_code_point (0xff66 + x));[39m
     [38;5;2m  16[39m: [38;5;2m  init 10 (fun x -> utf8_of_code_point (0x30 + x));[39m
     [38;5;2m  17[39m: [38;5;2m  (* init 26 (fun x -> utf8_of_code_point (0x61 + x)); *)[39m
     [38;5;2m  18[39m: [38;5;2m  (* init 14 (fun x -> utf8_of_code_point (0x21 + x)); *)[39m
     [38;5;2m  19[39m: [38;5;2m])[39m
     [38;5;2m  20[39m: [38;5;2mlet sym () = symbols.(Random.int (Array.length symbols))[39m
     [38;5;2m  21[39m: [38;5;2mlet syms = Array.init nsym (fun _ -> sym ())[39m
     [38;5;2m  22[39m: [38;5;2m[39m
     [38;5;2m  23[39m: [38;5;2mlet gen_wait h = `Wait Random.(int (h / 2))[39m
     [38;5;2m  24[39m: [38;5;2mand gen_line h =[39m
     [38;5;2m  25[39m: [38;5;2m  `Line Random.(0, int (nsym - h), int (h + h / 2) + 1, int 2 + 1)[39m
     [38;5;2m  26[39m: [38;5;2mlet gen (w, h as dim) =[39m
     [38;5;2m  27[39m: [38;5;2m  let lines = 1 -- w |> List.map @@ fun _ ->[39m
     [38;5;2m  28[39m: [38;5;2m    if Random.float 1. < 0.1 then gen_line h else gen_wait h in[39m
     [38;5;2m  29[39m: [38;5;2m  (dim, lines)[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2mlet step ((_, h as dim), xs) =[39m
     [38;5;2m  32[39m: [38;5;2m  let xs = xs |> List.map @@ function[39m
     [38;5;2m  33[39m: [38;5;2m      `Wait 0 -> gen_line h[39m
     [38;5;2m  34[39m: [38;5;2m    | `Wait n -> `Wait (n - 1)[39m
     [38;5;2m  35[39m: [38;5;2m    | `Line (i, _, win, k) when i - win + k >= h -> gen_wait h[39m
     [38;5;2m  36[39m: [38;5;2m    | `Line (i, s, win, k) -> `Line (i + k, s, win, k) in[39m
     [38;5;2m  37[39m: [38;5;2m  Random.(for _ = 0 to int glitch do syms.(int nsym) <- sym () done);[39m
     [38;5;2m  38[39m: [38;5;2m  (dim, xs)[39m
     [38;5;2m  39[39m: [38;5;2m[39m
     [38;5;2m  40[39m: [38;5;2mopen Notty[39m
     [38;5;2m  41[39m: [38;5;2mopen Notty.Infix[39m
     [38;5;2m  42[39m: [38;5;2m[39m
     [38;5;2m  43[39m: [38;5;2mlet bgc = A.(bg @@ rgb ~r:0 ~g:0 ~b:0)[39m
     [38;5;2m  44[39m: [38;5;2m[39m
     [38;5;2m  45[39m: [38;5;2mlet color i n =[39m
     [38;5;2m  46[39m: [38;5;2m  let chan x = x *. 255. |> truncate[39m
     [38;5;2m  47[39m: [38;5;2m  and t  = float i /. float n in[39m
     [38;5;2m  48[39m: [38;5;2m  let t1 = exp (-. t /. 0.02) |> chan[39m
     [38;5;2m  49[39m: [38;5;2m  and t2 = exp (-. t /. 0.45) |> chan in[39m
     [38;5;2m  50[39m: [38;5;2m  A.rgb_888 ~r:t1 ~b:t1 ~g:t2[39m
     [38;5;2m  51[39m: [38;5;2m[39m
     [38;5;2m  52[39m: [38;5;2mlet show ((w, h), xs) =[39m
     [38;5;2m  53[39m: [38;5;2m  let f = function[39m
     [38;5;2m  54[39m: [38;5;2m    `Wait _ -> I.void 1 0[39m
     [38;5;2m  55[39m: [38;5;2m  | `Line (i, sym, win, _) ->[39m
     [38;5;2m  56[39m: [38;5;2m      let last = i - win[39m
     [38;5;2m  57[39m: [38;5;2m      and off = max 0 (i - h + 1) in[39m
     [38;5;2m  58[39m: [38;5;2m      let rec chars w =[39m
     [38;5;2m  59[39m: [38;5;2m        let ix = w + last in[39m
     [38;5;2m  60[39m: [38;5;2m        if 0 <= min ix w then syms.(sym + ix) :: chars (w - 1) else [] in[39m
     [38;5;2m  61[39m: [38;5;2m      let rec images acc i = function[39m
     [38;5;2m  62[39m: [38;5;2m        | []    -> acc[39m
     [38;5;2m  63[39m: [38;5;2m        | x::xs -> let img = I.string A.(fg (color i win) ++ bgc) x in[39m
     [38;5;2m  64[39m: [38;5;2m                   images (img :: acc) (i + 1) xs in[39m
     [38;5;2m  65[39m: [38;5;2m      chars (win - off) |> images [] off[39m
     [38;5;2m  66[39m: [38;5;2m        |> I.vcat |> I.vpad (max 0 (i - win)) 0 in[39m
     [38;5;2m  67[39m: [38;5;2m  (List.map f xs |> I.hcat) </> I.char bgc ' ' w h[39m
     [38;5;2m  68[39m: [38;5;2m[39m
     [38;5;2m  69[39m: [38;5;2mopen Notty_unix[39m
     [38;5;2m  70[39m: [38;5;2m[39m
     [38;5;2m  71[39m: [38;5;2mtype r = [ Unescape.event | `Resize of int * int | `End | `Timer ][39m
     [38;5;2m  72[39m: [38;5;2m[39m
     [38;5;2m  73[39m: [38;5;2mlet event ~delay t =[39m
     [38;5;2m  74[39m: [38;5;2m  if Term.pending t then (Term.event t :> r) else[39m
     [38;5;2m  75[39m: [38;5;2m    let open Unix in[39m
     [38;5;2m  76[39m: [38;5;2m    match select [Term.fds t |> fst] [] [] delay with[39m
     [38;5;2m  77[39m: [38;5;2m    | ([], _, _) -> `Timer[39m
     [38;5;2m  78[39m: [38;5;2m    | (_::_, _, _) -> (Term.event t :> r)[39m
     [38;5;2m  79[39m: [38;5;2m    | exception Unix_error (EINTR, _, _) -> (Term.event t :> r)[39m
     [38;5;2m  80[39m: [38;5;2m[39m
     [38;5;2m  81[39m: [38;5;2mlet loop t ~frame st =[39m
     [38;5;2m  82[39m: [38;5;2m  let rec go st deadline =[39m
     [38;5;2m  83[39m: [38;5;2m    let now = Unix.gettimeofday () in[39m
     [38;5;2m  84[39m: [38;5;2m    if deadline <= now then[39m
     [38;5;2m  85[39m: [38;5;2m      ( Term.image t (show st); go (step st) (frame +. deadline) )[39m
     [38;5;2m  86[39m: [38;5;2m    else match event ~delay:(deadline -. now) t with[39m
     [38;5;2m  87[39m: [38;5;2m      | `End | `Key (`Escape, _) | `Key (`ASCII 'C', [`Ctrl]) -> ()[39m
     [38;5;2m  88[39m: [38;5;2m      | `Resize _ | `Key (`ASCII ' ', _) -> go (gen (Term.size t)) deadline[39m
     [38;5;2m  89[39m: [38;5;2m      | _ -> go st deadline in[39m
     [38;5;2m  90[39m: [38;5;2m  go st (Unix.gettimeofday ())[39m
     [38;5;2m  91[39m: [38;5;2m[39m
     [38;5;2m  92[39m: [38;5;2mlet () =[39m
     [38;5;2m  93[39m: [38;5;2m  let t = Term.create () in[39m
     [38;5;2m  94[39m: [38;5;2m  loop t ~frame:0.075 (gen (Term.size t));[39m
     [38;5;2m  95[39m: [38;5;2m  Term.release t[39m
[38;5;3mAdded regular file ../notty/examples/runes.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Demonstrates geometry computation with various scripts. A few of those will[39m
     [38;5;2m   6[39m: [38;5;2m * usually break.[39m
     [38;5;2m   7[39m: [38;5;2m *)[39m
     [38;5;2m   8[39m: [38;5;2mopen Notty[39m
     [38;5;2m   9[39m: [38;5;2mopen Notty.Infix[39m
     [38;5;2m  10[39m: [38;5;2mopen Common[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mlet hpad_sp attr l r i =[39m
     [38;5;2m  13[39m: [38;5;2m  let h = I.height i in[39m
     [38;5;2m  14[39m: [38;5;2m  I.(char attr ' ' l h <|> i <|> char attr ' ' r h)[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mlet vpad_sp attr t b i =[39m
     [38;5;2m  17[39m: [38;5;2m  let w = I.width i in[39m
     [38;5;2m  18[39m: [38;5;2m  I.(char attr ' ' w t <-> i <-> char attr ' ' w b)[39m
     [38;5;2m  19[39m: [38;5;2m[39m
     [38;5;2m  20[39m: [38;5;2mlet grid xxs = xxs |> List.map I.hcat |> I.vcat[39m
     [38;5;2m  21[39m: [38;5;2m[39m
     [38;5;2m  22[39m: [38;5;2mlet centered attr xs =[39m
     [38;5;2m  23[39m: [38;5;2m  let lns = List.map I.(string attr) xs in[39m
     [38;5;2m  24[39m: [38;5;2m  let w   = List.fold_left (fun a i -> max a I.(width i)) 0 lns in[39m
     [38;5;2m  25[39m: [38;5;2m  lns |> List.map I.(fun ln ->[39m
     [38;5;2m  26[39m: [38;5;2m    let d = w - I.width ln in[39m
     [38;5;2m  27[39m: [38;5;2m    char attr ' ' (d / 2) 1 <|> ln <|> char attr ' ' (d - d / 2) 1[39m
     [38;5;2m  28[39m: [38;5;2m  ) |> I.vcat[39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2mlet note xs = I.([39m
     [38;5;2m  31[39m: [38;5;2m  string A.(st bold) "Note:" <|>[39m
     [38;5;2m  32[39m: [38;5;2m  (xs |> List.map (string A.empty) |> vcat |> hpad 1 0)[39m
     [38;5;2m  33[39m: [38;5;2m)[39m
     [38;5;2m  34[39m: [38;5;2m[39m
     [38;5;2m  35[39m: [38;5;2mlet text = [[39m
     [38;5;2m  36[39m: [38;5;2m    "\225\154\160\225\155\135\225\154\187\225\155\171\225\155\146\225\155\166\225\154\166\225\155\171\225\154\160\225\154\177\225\154\169\225\154\160\225\154\162\225\154\177\225\155\171\225\154\160\225\155\129\225\154\177\225\154\170\225\155\171\225\154\183\225\155\150\225\154\187\225\154\185\225\155\166\225\155\154\225\154\179\225\154\162\225\155\151"[39m
     [38;5;2m  37[39m: [38;5;2m  ; "\225\155\139\225\154\179\225\155\150\225\154\170\225\155\154\225\155\171\225\154\166\225\155\150\225\154\170\225\154\187\225\155\171\225\155\151\225\154\170\225\154\190\225\154\190\225\154\170\225\155\171\225\154\183\225\155\150\225\154\187\225\154\185\225\155\166\225\155\154\225\154\179\225\155\171\225\155\151\225\155\129\225\154\179\225\155\154\225\154\162\225\154\190\225\155\171\225\154\187\225\155\166\225\155\143\225\155\171\225\155\158\225\154\171\225\155\154\225\154\170\225\154\190"[39m
     [38;5;2m  38[39m: [38;5;2m  ; "\225\154\183\225\155\129\225\154\160\225\155\171\225\154\187\225\155\150\225\155\171\225\154\185\225\155\129\225\155\154\225\155\150\225\155\171\225\154\160\225\154\169\225\154\177\225\155\171\225\155\158\225\154\177\225\155\129\225\154\187\225\155\143\225\154\190\225\155\150\225\155\171\225\155\158\225\154\169\225\155\151\225\155\150\225\155\139\225\155\171\225\154\187\225\155\154\225\155\135\225\155\143\225\154\170\225\154\190\225\155\172"[39m
     [38;5;2m  39[39m: [38;5;2m  ; ""[39m
     [38;5;2m  40[39m: [38;5;2m  ; "\227\129\132\227\130\141\227\129\175\227\129\171\227\129\187\227\129\184\227\129\168\227\129\161\227\130\138\227\129\172\227\130\139\227\130\146"[39m
     [38;5;2m  41[39m: [38;5;2m  ; "\227\130\143\227\129\139\227\130\136\227\129\159\227\130\140\227\129\157\227\129\164\227\129\173\227\129\170\227\130\137\227\130\128"[39m
     [38;5;2m  42[39m: [38;5;2m  ; "\227\129\134\227\130\144\227\129\174\227\129\138\227\129\143\227\130\132\227\129\190\227\129\145\227\129\181\227\129\147\227\129\136\227\129\166"[39m
     [38;5;2m  43[39m: [38;5;2m  ; "\227\129\130\227\129\149\227\129\141\227\130\134\227\130\129\227\129\191\227\129\151\227\130\145\227\129\178\227\130\130\227\129\155\227\129\153"[39m
     [38;5;2m  44[39m: [38;5;2m  ; ""[39m
     [38;5;2m  45[39m: [38;5;2m  ; "\227\130\164\227\131\173\227\131\143\227\131\139\227\131\155\227\131\152\227\131\136 \227\131\129\227\131\170\227\131\140\227\131\171\227\131\178 \227\131\175\227\130\171\227\131\168\227\130\191\227\131\172\227\130\189 \227\131\132\227\131\141\227\131\138\227\131\169\227\131\160"[39m
     [38;5;2m  46[39m: [38;5;2m  ; "\227\130\166\227\131\176\227\131\142\227\130\170\227\130\175\227\131\164\227\131\158 \227\130\177\227\131\149\227\130\179\227\130\168\227\131\134 \227\130\162\227\130\181\227\130\173\227\131\166\227\131\161\227\131\159\227\130\183 \227\131\177\227\131\146\227\131\162\227\130\187\227\130\185\227\131\179"[39m
     [38;5;2m  47[39m: [38;5;2m  ; ""[39m
     [38;5;2m  48[39m: [38;5;2m  ; "\237\130\164\236\138\164\236\157\152 \234\179\160\236\156\160\236\161\176\234\177\180\236\157\128 \236\158\133\236\136\160\235\129\188\235\166\172 \235\167\140\235\130\152\236\149\188"[39m
     [38;5;2m  49[39m: [38;5;2m  ; "\237\149\152\234\179\160 \237\138\185\235\179\132\237\149\156 \234\184\176\236\136\160\236\157\128 \237\149\132\236\154\148\236\185\152 \236\149\138\235\139\164"[39m
     [38;5;2m  50[39m: [38;5;2m  ; ""[39m
     [38;5;2m  51[39m: [38;5;2m  ; "\206\158\206\181\207\131\206\186\206\181\207\128\206\172\206\182\207\137 \207\132\225\189\180\206\189 \207\136\207\133\207\135\206\191\207\134\206\184\207\140\207\129\206\177 \206\178\206\180\206\181\206\187\207\133\206\179\206\188\206\175\206\177"[39m
     [38;5;2m  52[39m: [38;5;2m  ; ""[39m
     [38;5;2m  53[39m: [38;5;2m  ; "\208\167\208\181\209\136\209\155\208\181 \209\134e\209\146\208\181\209\154\208\181 \208\188\209\128e\208\182\208\176\209\129\209\130\208\184\208\188 \209\159\208\176\208\186\208\190\208\188 \208\191\208\190\208\177\208\190\209\153\209\136\208\176\208\178\208\176"[39m
     [38;5;2m  54[39m: [38;5;2m  ; "\209\132\208\181\209\128\209\130\208\184\208\187\208\184\208\183\208\176\209\134\208\184\209\152\209\131 \208\179\208\181\208\189\209\129\208\186\208\184\209\133 \209\133\208\184\208\177\209\128\208\184\208\180\208\176!"[39m
     [38;5;2m  55[39m: [38;5;2m  ; ""[39m
     [38;5;2m  56[39m: [38;5;2m  ; "Heiz\195\182lr\195\188cksto\195\159abd\195\164mpfung."[39m
     [38;5;2m  57[39m: [38;5;2m  ; ""[39m
     [38;5;2m  58[39m: [38;5;2m  ; "\208\146 \209\135\208\176\209\137\208\176\209\133 \209\142\208\179\208\176 \208\182\208\184\208\187 \208\177\209\139 \209\134\208\184\209\130\209\128\209\131\209\129? \208\148\208\176, \208\189\208\190 \209\132\208\176\208\187\209\140\209\136\208\184\208\178\209\139\208\185 \209\141\208\186\208\183\208\181\208\188\208\191\208\187\209\143\209\128!"[39m
     [38;5;2m  59[39m: [38;5;2m  ; ""[39m
     [38;5;2m  60[39m: [38;5;2m  ; "\225\131\149\225\131\148\225\131\158\225\131\174\225\131\152\225\131\161 \225\131\162\225\131\167\225\131\144\225\131\157\225\131\161\225\131\144\225\131\156\225\131\152 \225\131\168\225\131\157\225\131\151\225\131\144 \225\131\160\225\131\163\225\131\161\225\131\151\225\131\144\225\131\149\225\131\148\225\131\154\225\131\152"[39m
     [38;5;2m  61[39m: [38;5;2m  ; ""[39m
     [38;5;2m  62[39m: [38;5;2m  ; "Lu\195\173s arg\195\188ia \195\160 J\195\186lia que \194\171bra\195\167\195\181es, f\195\169, ch\195\161,"[39m
     [38;5;2m  63[39m: [38;5;2m  ; "\195\179xido, p\195\180r, z\195\162ng\195\163o\194\187 eram palavras do portugu\195\170s."[39m
     [38;5;2m  64[39m: [38;5;2m  ; ""[39m
     [38;5;2m  65[39m: [38;5;2m  ; "ding ↹ ∀ ⌘ ▓ ◭ ☃ ♠ ♋ ♕ ⚅ ♩ ☭ ✎ 🂡 bats"[39m
     [38;5;2m  66[39m: [38;5;2m  ; ""[39m
     [38;5;2m  67[39m: [38;5;2m  ; "\216\181\217\144\217\129 \216\174\217\142\217\132\217\130\217\142 \216\174\217\142\217\136\216\175\217\144 \217\131\217\142\217\133\217\144\216\171\217\132\217\144 \216\167\217\132\216\180\217\142\217\133\216\179\217\144 \216\165\217\144\216\176 \216\168\217\142\216\178\217\142\216\186\217\142\216\170 \226\128\148 \217\138\217\142\216\173\216\184\217\137 \216\167\217\132\216\182\217\142\216\172\217\138\216\185\217\143 \216\168\217\144\217\135\216\167 \217\134\217\142\216\172\217\132\216\167\216\161\217\142 \217\133\217\144\216\185\216\183\216\167\216\177\217\144"[39m
     [38;5;2m  68[39m: [38;5;2m  ; ""[39m
     [38;5;2m  69[39m: [38;5;2m  ; "\215\147\215\146 \215\161\215\167\215\168\215\159 \215\169\215\152 \215\145\215\153\215\157 \215\158\215\144\215\149\215\155\215\150\215\145 \215\149\215\156\215\164\215\170\215\162 \215\158\215\166\215\144 \215\156\215\149 \215\151\215\145\215\168\215\148 \215\144\215\153\215\154 \215\148\215\167\215\156\215\153\215\152\215\148"[39m
     [38;5;2m  70[39m: [38;5;2m  ; ""[39m
     [38;5;2m  71[39m: [38;5;2m  ; "\224\174\175\224\174\190\224\174\174\224\174\177\224\174\191\224\174\168\224\175\141\224\174\164 \224\174\174\224\175\138\224\174\180\224\174\191\224\174\149\224\174\179\224\174\191\224\174\178\224\175\135 \224\174\164\224\174\174\224\174\191\224\174\180\224\175\141\224\174\174\224\175\138\224\174\180\224\174\191 \224\174\170\224\175\139\224\174\178\224\175\141 \224\174\135\224\174\169\224\174\191\224\174\164\224\174\190\224\174\181\224\174\164\224\175\129 \224\174\142\224\174\153\224\175\141\224\174\149\224\175\129\224\174\174\224\175\141 \224\174\149\224\174\190\224\174\163\224\175\139\224\174\174\224\175\141,"[39m
     [38;5;2m  72[39m: [38;5;2m[39m
     [38;5;2m  73[39m: [38;5;2m  ; ""[39m
     [38;5;2m  74[39m: [38;5;2m  ; "\224\178\172\224\178\190 \224\178\135\224\178\178\224\179\141\224\178\178\224\178\191 \224\178\184\224\178\130\224\178\173\224\178\181\224\178\191\224\178\184\224\179\129 \224\178\135\224\178\130\224\178\166\224\179\134\224\178\168\224\179\141\224\178\168 \224\178\185\224\179\131\224\178\166\224\178\175\224\178\166\224\178\178\224\178\191"[39m
     [38;5;2m  75[39m: [38;5;2m  ; "\224\178\168\224\178\191\224\178\164\224\179\141\224\178\175\224\178\181\224\179\130 \224\178\133\224\178\181\224\178\164\224\178\176\224\178\191\224\178\170 \224\178\184\224\178\164\224\179\141\224\178\175\224\178\190\224\178\181\224\178\164\224\178\190\224\178\176"[39m
     [38;5;2m  76[39m: [38;5;2m  ; ""[39m
     [38;5;2m  77[39m: [38;5;2m[39m
     [38;5;2m  78[39m: [38;5;2m  ; "\224\164\181\224\164\191\224\164\183\224\165\141\224\164\163\224\165\129\224\164\181\224\164\164\224\164\190\224\164\176 \224\164\173\224\164\151\224\164\181\224\164\190\224\164\168 \224\164\182\224\165\141\224\164\176\224\165\128\224\164\176\224\164\190\224\164\174, \224\164\133\224\164\175\224\165\139\224\164\167\224\165\141\224\164\175\224\164\190 \224\164\149\224\165\135 \224\164\174\224\164\185\224\164\190\224\164\176\224\164\190\224\164\156 \224\164\166\224\164\182\224\164\176\224\164\165 \224\164\149\224\165\135 \224\164\172\224\164\161\224\164\188\224\165\135 \224\164\184\224\164\170\224\165\129\224\164\164\224\165\141\224\164\176 \224\164\165\224\165\135\224\165\164"[39m
     [38;5;2m  79[39m: [38;5;2m][39m
     [38;5;2m  80[39m: [38;5;2m[39m
     [38;5;2m  81[39m: [38;5;2mlet () =[39m
     [38;5;2m  82[39m: [38;5;2m  let attr = A.(fg lightmagenta) in[39m
     [38;5;2m  83[39m: [38;5;2m  let img = I.([39m
     [38;5;2m  84[39m: [38;5;2m    centered attr text[39m
     [38;5;2m  85[39m: [38;5;2m    |> vpad_sp attr 1 1 |> hpad_sp attr 2 2[39m
     [38;5;2m  86[39m: [38;5;2m    |> Images.outline attr[39m
     [38;5;2m  87[39m: [38;5;2m    |> pad ~t:1 ~b:1 ~l:2 ~r:2[39m
     [38;5;2m  88[39m: [38;5;2m  ) <->[39m
     [38;5;2m  89[39m: [38;5;2m    note [ "Alignment will usually break on the last few scripts."[39m
     [38;5;2m  90[39m: [38;5;2m         ; "This is at the limit of what terminals can do."[39m
     [38;5;2m  91[39m: [38;5;2m         ; ":(" ][39m
     [38;5;2m  92[39m: [38;5;2m  in Notty_unix.(eol img |> output_image)[39m
[38;5;3mAdded regular file ../notty/examples/sierpinski.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * A classic example in combinatory graphics.[39m
     [38;5;2m   6[39m: [38;5;2m *[39m
     [38;5;2m   7[39m: [38;5;2m * Demonstrates interaction.[39m
     [38;5;2m   8[39m: [38;5;2m *)[39m
     [38;5;2m   9[39m: [38;5;2mopen Notty[39m
     [38;5;2m  10[39m: [38;5;2mopen Common[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mlet () =[39m
     [38;5;2m  13[39m: [38;5;2m  simpleterm ~s:1[39m
     [38;5;2m  14[39m: [38;5;2m    ~f:(fun s -> function[39m
     [38;5;2m  15[39m: [38;5;2m      | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m  16[39m: [38;5;2m      | `Key (`Arrow a, _) ->[39m
     [38;5;2m  17[39m: [38;5;2m        ( match a with[39m
     [38;5;2m  18[39m: [38;5;2m          | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m  19[39m: [38;5;2m          | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m  20[39m: [38;5;2m      | _ -> Some s)[39m
     [38;5;2m  21[39m: [38;5;2m    ~imgf:I.(fun _ s ->[39m
     [38;5;2m  22[39m: [38;5;2m      string A.empty (string_of_int s) <->[39m
     [38;5;2m  23[39m: [38;5;2m      pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m  24[39m: [38;5;2m    )[39m
[38;5;3mAdded regular file ../notty/examples/sierpinski_lwt.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * Demonstrates Lwt interaction.[39m
     [38;5;2m   6[39m: [38;5;2m *)[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty[39m
     [38;5;2m   8[39m: [38;5;2mopen Common_lwt[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet img s = I.([39m
     [38;5;2m  11[39m: [38;5;2m  string A.empty (string_of_int s) <-> hpad 2 0 (Images.sierp A.magenta s)[39m
     [38;5;2m  12[39m: [38;5;2m)[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2mlet () =[39m
     [38;5;2m  15[39m: [38;5;2m  simpleterm_lwt ~s:1[39m
     [38;5;2m  16[39m: [38;5;2m    ~f:(fun s -> function[39m
     [38;5;2m  17[39m: [38;5;2m      | `Key (`ASCII 'q', _) -> None[39m
     [38;5;2m  18[39m: [38;5;2m      | `Key (`Arrow a, _) ->[39m
     [38;5;2m  19[39m: [38;5;2m        ( match a with[39m
     [38;5;2m  20[39m: [38;5;2m          | `Up | `Left -> Some (max 1 (s - 1))[39m
     [38;5;2m  21[39m: [38;5;2m          | `Down | `Right -> Some (min 10 (s + 1)) )[39m
     [38;5;2m  22[39m: [38;5;2m      | _ -> Some s)[39m
     [38;5;2m  23[39m: [38;5;2m    ~imgf:I.(fun _ s ->[39m
     [38;5;2m  24[39m: [38;5;2m      string A.empty (string_of_int s) <->[39m
     [38;5;2m  25[39m: [38;5;2m      pad ~l:2 ~t:1 (Images.sierp A.magenta s)[39m
     [38;5;2m  26[39m: [38;5;2m    )[39m
[38;5;3mAdded regular file ../notty/examples/testpatterns.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(**[39m
     [38;5;2m   5[39m: [38;5;2m * A few images that exercise image composition, cropping, and padding. This[39m
     [38;5;2m   6[39m: [38;5;2m * test is a good canary.[39m
     [38;5;2m   7[39m: [38;5;2m *)[39m
     [38;5;2m   8[39m: [38;5;2mopen Common[39m
     [38;5;2m   9[39m: [38;5;2mopen Notty_unix[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2mlet () = Images.[i3; i5; checker1] |> List.map eol |> List.iter output_image[39m
[38;5;3mAdded regular file ../notty/examples/thisbig.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty[39m
     [38;5;2m   5[39m: [38;5;2mopen Common[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2mlet () =[39m
     [38;5;2m   8[39m: [38;5;2m  Notty_unix.output_image_size @@ fun (w, h) ->[39m
     [38;5;2m   9[39m: [38;5;2m    Images.outline A.(fg lightblue)[39m
     [38;5;2m  10[39m: [38;5;2m      I.(hsnap (w - 2) @@[39m
     [38;5;2m  11[39m: [38;5;2m          vsnap (h - 3) @@ (* +1 for the prompt *)[39m
     [38;5;2m  12[39m: [38;5;2m            Images.sierp A.lightblue 5)[39m
[38;5;3mAdded regular file ../notty/notty.opam:[39m
     [38;5;2m   1[39m: [38;5;2mopam-version: "2.0"[39m
     [38;5;2m   2[39m: [38;5;2mhomepage:     "https://github.com/pqwy/notty"[39m
     [38;5;2m   3[39m: [38;5;2mdev-repo:     "git+https://github.com/pqwy/notty.git"[39m
     [38;5;2m   4[39m: [38;5;2mbug-reports:  "https://github.com/pqwy/notty/issues"[39m
     [38;5;2m   5[39m: [38;5;2mdoc:          "https://pqwy.github.io/notty/doc"[39m
     [38;5;2m   6[39m: [38;5;2mauthor:       "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m   7[39m: [38;5;2mmaintainer:   "David Kaloper <dk505@cam.ac.uk>"[39m
     [38;5;2m   8[39m: [38;5;2mlicense:      "ISC"[39m
     [38;5;2m   9[39m: [38;5;2msynopsis:     "Declaring terminals"[39m
     [38;5;2m  10[39m: [38;5;2mdescription:[39m
     [38;5;2m  11[39m: [38;5;2m  "Notty is a declarative terminal library for OCaml structured around a notion[39m
     [38;5;2m  12[39m: [38;5;2m  of composable images. It tries to abstract away the basic terminal programming[39m
     [38;5;2m  13[39m: [38;5;2m  model, providing something simpler and more expressive."[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2mbuild: [ [ "dune" "subst" ] {dev}[39m
     [38;5;2m  16[39m: [38;5;2m         [ "dune" "build" "-p" name "-j" jobs ] ][39m
     [38;5;2m  17[39m: [38;5;2mdepends: [[39m
     [38;5;2m  18[39m: [38;5;2m  "ocaml" {>= "4.08.0"}[39m
     [38;5;2m  19[39m: [38;5;2m  "dune" {>= "1.7"}[39m
     [38;5;2m  20[39m: [38;5;2m  "cppo" {build & >= "1.1.0"}[39m
     [38;5;2m  21[39m: [38;5;2m  "uutf" {>= "1.0.0"}[39m
     [38;5;2m  22[39m: [38;5;2m][39m
     [38;5;2m  23[39m: [38;5;2mdepopts: [ "lwt" ][39m
     [38;5;2m  24[39m: [38;5;2mconflicts: [ "lwt" {<"2.5.2"} ][39m
[38;5;3mAdded regular file ../notty/src/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(include_subdirs unqualified)[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2m(library[39m
     [38;5;2m   4[39m: [38;5;2m  (public_name notty)[39m
     [38;5;2m   5[39m: [38;5;2m  (synopsis "Declaring terminals")[39m
     [38;5;2m   6[39m: [38;5;2m  (libraries uutf)[39m
     [38;5;2m   7[39m: [38;5;2m  (wrapped false)[39m
     [38;5;2m   8[39m: [38;5;2m  (modules notty notty_grapheme_cluster notty_uucp notty_uucp_data)[39m
     [38;5;2m   9[39m: [38;5;2m  (private_modules notty_grapheme_cluster notty_uucp notty_uucp_data))[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2m(library[39m
     [38;5;2m  12[39m: [38;5;2m  (public_name notty.top)[39m
     [38;5;2m  13[39m: [38;5;2m  (synopsis "Notty toplevel support")[39m
     [38;5;2m  14[39m: [38;5;2m  (name notty_top)[39m
     [38;5;2m  15[39m: [38;5;2m  (wrapped false)[39m
     [38;5;2m  16[39m: [38;5;2m  (modules notty_top)[39m
     [38;5;2m  17[39m: [38;5;2m  (preprocess (action (run %{bin:cppo} -V OCAML:%{ocaml_version} %{input-file})))[39m
     [38;5;2m  18[39m: [38;5;2m  (libraries notty compiler-libs.toplevel))[39m
     [38;5;2m  19[39m: [38;5;2m[39m
     [38;5;2m  20[39m: [38;5;2m(install[39m
     [38;5;2m  21[39m: [38;5;2m  (section lib)[39m
     [38;5;2m  22[39m: [38;5;2m  (files (notty_top_init.ml as top/notty_top_init.ml)))[39m
[38;5;3mAdded regular file ../notty/src/no-uucp/README.md:[39m
     [38;5;2m   1[39m: [38;5;2mCannibalized bits of Uucp:[39m
     [38;5;2m   2[39m: [38;5;2m[39m
     [38;5;2m   3[39m: [38;5;2m- `Notty_uucp_data` is generated from an actual Uucp installation.[39m
     [38;5;2m   4[39m: [38;5;2m- `Notty_uucp` uses it to provide the few Unicode properties that Notty needs.[39m
     [38;5;2m   5[39m: [38;5;2m- `Notty_grapheme_cluster` is `Grapheme_cluster` from Uuseg, adapted to use the[39m
     [38;5;2m   6[39m: [38;5;2m  above.[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2mCompiled size of these is on the order of 70K. Uucp is presently a monolithic 10M.[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mThe idea is to remove these in favor of the actual Uucp/Uuseg, as soon as it[39m
     [38;5;2m  11[39m: [38;5;2mbecomes possible to depend only on the necessary parts of Uucp.[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2mUucp and Uuseg are Copyright (c) 2014 Daniel C. Bünzli.[39m
[38;5;3mAdded regular file ../notty/src/no-uucp/notty_grapheme_cluster.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(*---------------------------------------------------------------------------[39m
     [38;5;2m   2[39m: [38;5;2m   Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m   3[39m: [38;5;2m   Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m   4[39m: [38;5;2m   %%NAME%% %%VERSION%%[39m
     [38;5;2m   5[39m: [38;5;2m  ---------------------------------------------------------------------------*)[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2m(* These are the rules as found in [1], with property values aliases [2][39m
     [38;5;2m   8[39m: [38;5;2m   substituted.[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2m   GB1.               sot ÷ Any[39m
     [38;5;2m  11[39m: [38;5;2m   GB2.               Any ÷ eot[39m
     [38;5;2m  12[39m: [38;5;2m   GB3.                CR × LF[39m
     [38;5;2m  13[39m: [38;5;2m   GB4.        (CN|CR|LF) ÷[39m
     [38;5;2m  14[39m: [38;5;2m   GB5.                   ÷ (CN|CR|LF)[39m
     [38;5;2m  15[39m: [38;5;2m   GB6.                 L × (L|V|LV|LVT)[39m
     [38;5;2m  16[39m: [38;5;2m   GB7.            (LV|V) × (V|T)[39m
     [38;5;2m  17[39m: [38;5;2m   GB8.           (LVT|T) × T[39m
     [38;5;2m  18[39m: [38;5;2m   GB9.                   × (EX|ZWJ)[39m
     [38;5;2m  19[39m: [38;5;2m   GB9a.                  × SM[39m
     [38;5;2m  20[39m: [38;5;2m   GB9b.               PP ×[39m
     [38;5;2m  21[39m: [38;5;2m   GB10. (v10.0.0) (EB|EBG) EX* × EM[39m
     [38;5;2m  22[39m: [38;5;2m   GB11. (v10.0.0)          ZWJ × (GAZ|EBG)[39m
     [38;5;2m  23[39m: [38;5;2m   GB12.  sot (RI RI)* RI × RI[39m
     [38;5;2m  24[39m: [38;5;2m   GB13.   [^RI] (RI RI)* × RI[39m
     [38;5;2m  25[39m: [38;5;2m   GB999.             Any ÷ Any[39m
     [38;5;2m  26[39m: [38;5;2m[39m
     [38;5;2m  27[39m: [38;5;2m   [1]: http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries[39m
     [38;5;2m  28[39m: [38;5;2m   [2]: http://www.unicode.org/Public/7.0.0/ucd/PropertyValueAliases.txt[39m
     [38;5;2m  29[39m: [38;5;2m   [3]: http://www.unicode.org/Public/7.0.0/ucd/auxiliary/GraphemeBreakTest.html[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2m   By the structure of the rules we see that grapheme clusters[39m
     [38;5;2m  32[39m: [38;5;2m   boundaries can *mostly* be determined by simply looking at the[39m
     [38;5;2m  33[39m: [38;5;2m   grapheme cluster break property value of the character on the left[39m
     [38;5;2m  34[39m: [38;5;2m   and on the right of a boundary. The exceptions are GB10 and GB12-13[39m
     [38;5;2m  35[39m: [38;5;2m   which are handled specially by enriching the segmenter state in[39m
     [38;5;2m  36[39m: [38;5;2m   a horribly ad-hoc fashion. *)[39m
     [38;5;2m  37[39m: [38;5;2m[39m
     [38;5;2m  38[39m: [38;5;2mtype ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m  39[39m: [38;5;2m[39m
     [38;5;2m  40[39m: [38;5;2mtype gcb =[39m
     [38;5;2m  41[39m: [38;5;2m  | CN | CR | EX | EB | EBG | EM | GAZ | L | LF | LV | LVT | PP | RI[39m
     [38;5;2m  42[39m: [38;5;2m  | SM | T | V | XX | ZWJ | Sot[39m
     [38;5;2m  43[39m: [38;5;2m[39m
     [38;5;2m  44[39m: [38;5;2m(* WARNING. The indexes used here need to be synchronized with those[39m
     [38;5;2m  45[39m: [38;5;2m   assigned by uucp for Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m  46[39m: [38;5;2m[39m
     [38;5;2m  47[39m: [38;5;2mlet byte_to_gcb =[39m
     [38;5;2m  48[39m: [38;5;2m  [| CN; CR; EX; EB; EBG; EM; GAZ; L; LF; LV; LVT; PP; RI;[39m
     [38;5;2m  49[39m: [38;5;2m     SM; T; V; XX; ZWJ; |][39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2mlet gcb u = byte_to_gcb.(Notty_uucp.grapheme_cluster_boundary u)[39m
     [38;5;2m  52[39m: [38;5;2m[39m
     [38;5;2m  53[39m: [38;5;2mtype state =[39m
     [38;5;2m  54[39m: [38;5;2m| Fill  (* get next uchar to decide boundary. *)[39m
     [38;5;2m  55[39m: [38;5;2m| Flush (* an uchar is buffered, client needs to get it out with `Await. *)[39m
     [38;5;2m  56[39m: [38;5;2m| End   (* `End was added. *)[39m
     [38;5;2m  57[39m: [38;5;2m[39m
     [38;5;2m  58[39m: [38;5;2mtype t =[39m
     [38;5;2m  59[39m: [38;5;2m  { mutable state : state;                                 (* current state. *)[39m
     [38;5;2m  60[39m: [38;5;2m    mutable left : gcb;            (* break property value left of boundary. *)[39m
     [38;5;2m  61[39m: [38;5;2m    mutable odd_ri : bool;                  (* odd number of RI on the left. *)[39m
     [38;5;2m  62[39m: [38;5;2m    mutable emoji_seq : bool;               (* (EB|EBG) Extend* on the left. *)[39m
     [38;5;2m  63[39m: [38;5;2m    mutable buf : [ `Uchar of Uchar.t ] }                 (* bufferized add. *)[39m
     [38;5;2m  64[39m: [38;5;2m[39m
     [38;5;2m  65[39m: [38;5;2mlet nul_buf = `Uchar (Uchar.unsafe_of_int 0x0000)[39m
     [38;5;2m  66[39m: [38;5;2m[39m
     [38;5;2m  67[39m: [38;5;2mlet create () =[39m
     [38;5;2m  68[39m: [38;5;2m  { state = Fill; left = Sot;[39m
     [38;5;2m  69[39m: [38;5;2m    odd_ri = false; emoji_seq = false;[39m
     [38;5;2m  70[39m: [38;5;2m    buf = nul_buf (* overwritten *); }[39m
     [38;5;2m  71[39m: [38;5;2m[39m
     [38;5;2m  72[39m: [38;5;2mlet break s right = match s.left, right with[39m
     [38;5;2m  73[39m: [38;5;2m| (* GB1 *)   Sot, _ -> true[39m
     [38;5;2m  74[39m: [38;5;2m  (* GB2 is handled by `End *)[39m
     [38;5;2m  75[39m: [38;5;2m| (* GB3 *)   CR, LF -> false[39m
     [38;5;2m  76[39m: [38;5;2m| (* GB4 *)   (CN|CR|LF), _ -> true[39m
     [38;5;2m  77[39m: [38;5;2m| (* GB5 *)   _, (CN|CR|LF) -> true[39m
     [38;5;2m  78[39m: [38;5;2m| (* GB6 *)   L, (L|V|LV|LVT) -> false[39m
     [38;5;2m  79[39m: [38;5;2m| (* GB7 *)   (LV|V), (V|T) -> false[39m
     [38;5;2m  80[39m: [38;5;2m| (* GB8 *)   (LVT|T), T -> false[39m
     [38;5;2m  81[39m: [38;5;2m| (* GB9+a *) _, (EX|ZWJ|SM) -> false[39m
     [38;5;2m  82[39m: [38;5;2m| (* GB9b *)  PP, _ -> false[39m
     [38;5;2m  83[39m: [38;5;2m| (* GB10 *)  _, EM when s.emoji_seq -> false[39m
     [38;5;2m  84[39m: [38;5;2m| (* GB11 *)  ZWJ, (GAZ|EBG) -> false[39m
     [38;5;2m  85[39m: [38;5;2m| (* GB12+13 *) RI, RI when s.odd_ri -> false[39m
     [38;5;2m  86[39m: [38;5;2m| (* GB999 *) _, _ -> true[39m
     [38;5;2m  87[39m: [38;5;2m[39m
     [38;5;2m  88[39m: [38;5;2mlet update_left s right =[39m
     [38;5;2m  89[39m: [38;5;2m  s.left <- right;[39m
     [38;5;2m  90[39m: [38;5;2m  match s.left with[39m
     [38;5;2m  91[39m: [38;5;2m  | EX -> (* keep s.emoji_seq as is *) s.odd_ri <- false[39m
     [38;5;2m  92[39m: [38;5;2m  | EB | EBG -> s.emoji_seq <- true; s.odd_ri <- false[39m
     [38;5;2m  93[39m: [38;5;2m  | RI -> s.emoji_seq <- false; s.odd_ri <- not s.odd_ri[39m
     [38;5;2m  94[39m: [38;5;2m  | _ -> s.emoji_seq <- false; s.odd_ri <- false[39m
     [38;5;2m  95[39m: [38;5;2m[39m
     [38;5;2m  96[39m: [38;5;2mlet add s = function[39m
     [38;5;2m  97[39m: [38;5;2m| `Uchar u as add ->[39m
     [38;5;2m  98[39m: [38;5;2m    begin match s.state with[39m
     [38;5;2m  99[39m: [38;5;2m    | Fill ->[39m
     [38;5;2m 100[39m: [38;5;2m        let right = gcb u in[39m
     [38;5;2m 101[39m: [38;5;2m        let break = break s right in[39m
     [38;5;2m 102[39m: [38;5;2m        update_left s right;[39m
     [38;5;2m 103[39m: [38;5;2m        if not break then add else[39m
     [38;5;2m 104[39m: [38;5;2m        (s.state <- Flush; s.buf <- add; `Boundary)[39m
     [38;5;2m 105[39m: [38;5;2m    | Flush | End -> assert false[39m
     [38;5;2m 106[39m: [38;5;2m    end[39m
     [38;5;2m 107[39m: [38;5;2m| `Await ->[39m
     [38;5;2m 108[39m: [38;5;2m    begin match s.state with[39m
     [38;5;2m 109[39m: [38;5;2m    | Flush -> s.state <- Fill; (s.buf :> ret)[39m
     [38;5;2m 110[39m: [38;5;2m    | End -> `End[39m
     [38;5;2m 111[39m: [38;5;2m    | Fill -> `Await[39m
     [38;5;2m 112[39m: [38;5;2m    end[39m
     [38;5;2m 113[39m: [38;5;2m| `End ->[39m
     [38;5;2m 114[39m: [38;5;2m    begin match s.state with[39m
     [38;5;2m 115[39m: [38;5;2m    | Fill -> s.state <- End; if s.left = Sot then `End else `Boundary[39m
     [38;5;2m 116[39m: [38;5;2m    | Flush | End -> assert false[39m
     [38;5;2m 117[39m: [38;5;2m    end[39m
     [38;5;2m 118[39m: [38;5;2m[39m
     [38;5;2m 119[39m: [38;5;2m(*---------------------------------------------------------------------------[39m
     [38;5;2m 120[39m: [38;5;2m   Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m 121[39m: [38;5;2m[39m
     [38;5;2m 122[39m: [38;5;2m   Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m 123[39m: [38;5;2m   purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m 124[39m: [38;5;2m   copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m 125[39m: [38;5;2m[39m
     [38;5;2m 126[39m: [38;5;2m   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m 127[39m: [38;5;2m   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m 128[39m: [38;5;2m   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m 129[39m: [38;5;2m   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m 130[39m: [38;5;2m   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m 131[39m: [38;5;2m   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m 132[39m: [38;5;2m   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m 133[39m: [38;5;2m  ---------------------------------------------------------------------------*)[39m
[38;5;3mAdded regular file ../notty/src/no-uucp/notty_grapheme_cluster.mli:[39m
     [38;5;2m   1[39m: [38;5;2m(*---------------------------------------------------------------------------[39m
     [38;5;2m   2[39m: [38;5;2m   Copyright (c) 2014 Daniel C. Bünzli. All rights reserved.[39m
     [38;5;2m   3[39m: [38;5;2m   Distributed under the ISC license, see terms at the end of the file.[39m
     [38;5;2m   4[39m: [38;5;2m   %%NAME%% %%VERSION%%[39m
     [38;5;2m   5[39m: [38;5;2m  ---------------------------------------------------------------------------*)[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2mtype ret = [ `Await | `Boundary | `End | `Uchar of Uchar.t ][39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2mtype t[39m
     [38;5;2m  10[39m: [38;5;2mval create : unit -> t[39m
     [38;5;2m  11[39m: [38;5;2mval add : t -> [ `Await | `End | `Uchar of Uchar.t ] -> ret[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2m(*---------------------------------------------------------------------------[39m
     [38;5;2m  14[39m: [38;5;2m   Copyright (c) 2014 Daniel C. Bünzli[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2m   Permission to use, copy, modify, and/or distribute this software for any[39m
     [38;5;2m  17[39m: [38;5;2m   purpose with or without fee is hereby granted, provided that the above[39m
     [38;5;2m  18[39m: [38;5;2m   copyright notice and this permission notice appear in all copies.[39m
     [38;5;2m  19[39m: [38;5;2m[39m
     [38;5;2m  20[39m: [38;5;2m   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES[39m
     [38;5;2m  21[39m: [38;5;2m   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF[39m
     [38;5;2m  22[39m: [38;5;2m   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR[39m
     [38;5;2m  23[39m: [38;5;2m   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES[39m
     [38;5;2m  24[39m: [38;5;2m   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN[39m
     [38;5;2m  25[39m: [38;5;2m   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF[39m
     [38;5;2m  26[39m: [38;5;2m   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.[39m
     [38;5;2m  27[39m: [38;5;2m  ---------------------------------------------------------------------------*)[39m
[38;5;3mAdded regular file ../notty/src/no-uucp/notty_uucp.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(* Unpacked interval lookup table. *)[39m
     [38;5;2m   5[39m: [38;5;2mlet find_i ~def k (xs, _, _ as tab) =[39m
     [38;5;2m   6[39m: [38;5;2m  let rec go i j (los, his, vs as tab) (k: int) def =[39m
     [38;5;2m   7[39m: [38;5;2m    if i > j then def else[39m
     [38;5;2m   8[39m: [38;5;2m    let x = (i + j) / 2 in[39m
     [38;5;2m   9[39m: [38;5;2m    if k < Array.unsafe_get los x then go i (x - 1) tab k def else[39m
     [38;5;2m  10[39m: [38;5;2m    if k > Array.unsafe_get his x then go (x + 1) j tab k def else[39m
     [38;5;2m  11[39m: [38;5;2m      Array.unsafe_get vs x in[39m
     [38;5;2m  12[39m: [38;5;2m  go 0 (Array.length xs - 1) tab k def[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2m(* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m  15[39m: [38;5;2m   Root is variable; lower levels are either empty or complete. *)[39m
     [38;5;2m  16[39m: [38;5;2mlet find_t ~def k tab =[39m
     [38;5;2m  17[39m: [38;5;2m  let k = if k > 0xd7ff then k - 0x800 else k in (* Pack to continuous range. *)[39m
     [38;5;2m  18[39m: [38;5;2m  let b0 = (k lsr 12) land 0xfff in[39m
     [38;5;2m  19[39m: [38;5;2m  if Array.length tab <= b0 then def else[39m
     [38;5;2m  20[39m: [38;5;2m  match Array.unsafe_get tab b0 with[39m
     [38;5;2m  21[39m: [38;5;2m  | [||] -> def[39m
     [38;5;2m  22[39m: [38;5;2m  | arr -> match Array.unsafe_get arr ((k lsr 6) land 0x3f) with[39m
     [38;5;2m  23[39m: [38;5;2m    | "" -> def[39m
     [38;5;2m  24[39m: [38;5;2m    | str -> String.unsafe_get str (k land 0x3f) |> Char.code[39m
     [38;5;2m  25[39m: [38;5;2m[39m
     [38;5;2m  26[39m: [38;5;2m(* We catch w = -1 and default to w = 1 to minimize the table. *)[39m
     [38;5;2m  27[39m: [38;5;2mlet tty_width_hint u = match Uchar.to_int u with[39m
     [38;5;2m  28[39m: [38;5;2m| 0 -> 0[39m
     [38;5;2m  29[39m: [38;5;2m| u when u <= 0x001F || 0x007F <= u && u <= 0x009F -> -1[39m
     [38;5;2m  30[39m: [38;5;2m| u when u <= 0x02ff -> 1[39m
     [38;5;2m  31[39m: [38;5;2m| u -> find_i ~def:1 u Notty_uucp_data.tty_width_hint[39m
     [38;5;2m  32[39m: [38;5;2m[39m
     [38;5;2m  33[39m: [38;5;2mlet grapheme_cluster_boundary u =[39m
     [38;5;2m  34[39m: [38;5;2m  find_t ~def:16 (Uchar.to_int u) Notty_uucp_data.grapheme_cluster_boundary[39m
     [38;5;2m  35[39m: [38;5;2m[39m
     [38;5;2m  36[39m: [38;5;2m(* let check () = *)[39m
     [38;5;2m  37[39m: [38;5;2m(*   let pp_u ppf u = Format.fprintf ppf "u+%04x" (Uchar.to_int u) in *)[39m
     [38;5;2m  38[39m: [38;5;2m(*   let rec go i u = *)[39m
     [38;5;2m  39[39m: [38;5;2m(*     let w1 = tty_width_hint u *)[39m
     [38;5;2m  40[39m: [38;5;2m(*     and w2 = Uucp.Break.tty_width_hint u in *)[39m
     [38;5;2m  41[39m: [38;5;2m(*     if w1 <> w2 then Format.printf "w: %a here: %d there: %d@." pp_u u w1 w2; *)[39m
     [38;5;2m  42[39m: [38;5;2m(*     let gc1 = grapheme_cluster_boundary u *)[39m
     [38;5;2m  43[39m: [38;5;2m(*     and gc2 = Uucp.Break.Low.grapheme_cluster u in *)[39m
     [38;5;2m  44[39m: [38;5;2m(*     if gc1 <> gc2 then Format.printf "gc: %a here: %d there: %d@." pp_u u gc1 gc2; *)[39m
     [38;5;2m  45[39m: [38;5;2m(*     if u = Uchar.max then i else go (i + 1) (Uchar.succ u) in *)[39m
     [38;5;2m  46[39m: [38;5;2m(*   let n = go 1 Uchar.min in *)[39m
     [38;5;2m  47[39m: [38;5;2m(*   Format.printf "Checked equality for %d code points.@." n *)[39m
     [38;5;2m  48[39m: [38;5;2m[39m
[38;5;3mAdded regular file ../notty/src/no-uucp/notty_uucp.mli:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(* This is a local copy of the (very few) relevant [uucp] properties. *)[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mval tty_width_hint : Uchar.t -> int[39m
     [38;5;2m   7[39m: [38;5;2m(* [Uucp.Break.tty_width_hint]. *)[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2mval grapheme_cluster_boundary : Uchar.t -> int[39m
     [38;5;2m  10[39m: [38;5;2m(* [Uucp.Break.Low.grapheme_cluster]. *)[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2m(* val check : unit -> unit *)[39m
     [38;5;2m  13[39m: [38;5;2m[39m
[38;5;3mAdded regular file ../notty/src/no-uucp/notty_uucp_data.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Do not edit.[39m
     [38;5;2m   2[39m: [38;5;2m *[39m
     [38;5;2m   3[39m: [38;5;2m * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m   4[39m: [38;5;2m * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m   5[39m: [38;5;2m *[39m
     [38;5;2m   6[39m: [38;5;2m * Unicode version 13.0.0.[39m
     [38;5;2m   7[39m: [38;5;2m *)[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mlet tty_width_hint =[39m
     [38;5;2m  11[39m: [38;5;2m  ([|0x0000; 0x0300; 0x0483; 0x0591; 0x05bf; 0x05c1; 0x05c4; 0x05c7; 0x0600;[39m
     [38;5;2m  12[39m: [38;5;2m     0x0610; 0x061c; 0x064b; 0x0670; 0x06d6; 0x06df; 0x06e7; 0x06ea; 0x070f;[39m
     [38;5;2m  13[39m: [38;5;2m     0x0711; 0x0730; 0x07a6; 0x07eb; 0x07fd; 0x0816; 0x081b; 0x0825; 0x0829;[39m
     [38;5;2m  14[39m: [38;5;2m     0x0859; 0x08d3; 0x093a; 0x093c; 0x0941; 0x094d; 0x0951; 0x0962; 0x0981;[39m
     [38;5;2m  15[39m: [38;5;2m     0x09bc; 0x09c1; 0x09cd; 0x09e2; 0x09fe; 0x0a01; 0x0a3c; 0x0a41; 0x0a47;[39m
     [38;5;2m  16[39m: [38;5;2m     0x0a4b; 0x0a51; 0x0a70; 0x0a75; 0x0a81; 0x0abc; 0x0ac1; 0x0ac7; 0x0acd;[39m
     [38;5;2m  17[39m: [38;5;2m     0x0ae2; 0x0afa; 0x0b01; 0x0b3c; 0x0b3f; 0x0b41; 0x0b4d; 0x0b55; 0x0b62;[39m
     [38;5;2m  18[39m: [38;5;2m     0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c3e; 0x0c46; 0x0c4a; 0x0c55;[39m
     [38;5;2m  19[39m: [38;5;2m     0x0c62; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccc; 0x0ce2; 0x0d00; 0x0d3b;[39m
     [38;5;2m  20[39m: [38;5;2m     0x0d41; 0x0d4d; 0x0d62; 0x0d81; 0x0dca; 0x0dd2; 0x0dd6; 0x0e31; 0x0e34;[39m
     [38;5;2m  21[39m: [38;5;2m     0x0e47; 0x0eb1; 0x0eb4; 0x0ec8; 0x0f18; 0x0f35; 0x0f37; 0x0f39; 0x0f71;[39m
     [38;5;2m  22[39m: [38;5;2m     0x0f80; 0x0f86; 0x0f8d; 0x0f99; 0x0fc6; 0x102d; 0x1032; 0x1039; 0x103d;[39m
     [38;5;2m  23[39m: [38;5;2m     0x1058; 0x105e; 0x1071; 0x1082; 0x1085; 0x108d; 0x109d; 0x1100; 0x135d;[39m
     [38;5;2m  24[39m: [38;5;2m     0x1712; 0x1732; 0x1752; 0x1772; 0x17b4; 0x17b7; 0x17c6; 0x17c9; 0x17dd;[39m
     [38;5;2m  25[39m: [38;5;2m     0x180b; 0x1885; 0x18a9; 0x1920; 0x1927; 0x1932; 0x1939; 0x1a17; 0x1a1b;[39m
     [38;5;2m  26[39m: [38;5;2m     0x1a56; 0x1a58; 0x1a60; 0x1a62; 0x1a65; 0x1a73; 0x1a7f; 0x1ab0; 0x1b00;[39m
     [38;5;2m  27[39m: [38;5;2m     0x1b34; 0x1b36; 0x1b3c; 0x1b42; 0x1b6b; 0x1b80; 0x1ba2; 0x1ba8; 0x1bab;[39m
     [38;5;2m  28[39m: [38;5;2m     0x1be6; 0x1be8; 0x1bed; 0x1bef; 0x1c2c; 0x1c36; 0x1cd0; 0x1cd4; 0x1ce2;[39m
     [38;5;2m  29[39m: [38;5;2m     0x1ced; 0x1cf4; 0x1cf8; 0x1dc0; 0x1dfb; 0x200b; 0x202a; 0x2060; 0x2066;[39m
     [38;5;2m  30[39m: [38;5;2m     0x20d0; 0x231a; 0x2329; 0x23e9; 0x23f0; 0x23f3; 0x25fd; 0x2614; 0x2648;[39m
     [38;5;2m  31[39m: [38;5;2m     0x267f; 0x2693; 0x26a1; 0x26aa; 0x26bd; 0x26c4; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m  32[39m: [38;5;2m     0x26f2; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270a; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m  33[39m: [38;5;2m     0x2753; 0x2757; 0x2795; 0x27b0; 0x27bf; 0x2b1b; 0x2b50; 0x2b55; 0x2cef;[39m
     [38;5;2m  34[39m: [38;5;2m     0x2d7f; 0x2de0; 0x2e80; 0x2e9b; 0x2f00; 0x2ff0; 0x3000; 0x302a; 0x302e;[39m
     [38;5;2m  35[39m: [38;5;2m     0x3041; 0x3099; 0x309b; 0x3105; 0x3131; 0x3190; 0x31f0; 0x3220; 0x3250;[39m
     [38;5;2m  36[39m: [38;5;2m     0x4e00; 0xa490; 0xa66f; 0xa674; 0xa69e; 0xa6f0; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m  37[39m: [38;5;2m     0xa825; 0xa82c; 0xa8c4; 0xa8e0; 0xa8ff; 0xa926; 0xa947; 0xa960; 0xa980;[39m
     [38;5;2m  38[39m: [38;5;2m     0xa9b3; 0xa9b6; 0xa9bc; 0xa9e5; 0xaa29; 0xaa31; 0xaa35; 0xaa43; 0xaa4c;[39m
     [38;5;2m  39[39m: [38;5;2m     0xaa7c; 0xaab0; 0xaab2; 0xaab7; 0xaabe; 0xaac1; 0xaaec; 0xaaf6; 0xabe5;[39m
     [38;5;2m  40[39m: [38;5;2m     0xabe8; 0xabed; 0xac00; 0xf900; 0xfb1e; 0xfe00; 0xfe10; 0xfe20; 0xfe30;[39m
     [38;5;2m  41[39m: [38;5;2m     0xfe54; 0xfe68; 0xfeff; 0xff01; 0xffe0; 0xfff9; 0x101fd; 0x102e0;[39m
     [38;5;2m  42[39m: [38;5;2m     0x10376; 0x10a01; 0x10a05; 0x10a0c; 0x10a38; 0x10a3f; 0x10ae5; 0x10d24;[39m
     [38;5;2m  43[39m: [38;5;2m     0x10eab; 0x10f46; 0x11001; 0x11038; 0x1107f; 0x110b3; 0x110b9; 0x110bd;[39m
     [38;5;2m  44[39m: [38;5;2m     0x110cd; 0x11100; 0x11127; 0x1112d; 0x11173; 0x11180; 0x111b6; 0x111c9;[39m
     [38;5;2m  45[39m: [38;5;2m     0x111cf; 0x1122f; 0x11234; 0x11236; 0x1123e; 0x112df; 0x112e3; 0x11300;[39m
     [38;5;2m  46[39m: [38;5;2m     0x1133b; 0x11340; 0x11366; 0x11370; 0x11438; 0x11442; 0x11446; 0x1145e;[39m
     [38;5;2m  47[39m: [38;5;2m     0x114b3; 0x114ba; 0x114bf; 0x114c2; 0x115b2; 0x115bc; 0x115bf; 0x115dc;[39m
     [38;5;2m  48[39m: [38;5;2m     0x11633; 0x1163d; 0x1163f; 0x116ab; 0x116ad; 0x116b0; 0x116b7; 0x1171d;[39m
     [38;5;2m  49[39m: [38;5;2m     0x11722; 0x11727; 0x1182f; 0x11839; 0x1193b; 0x1193e; 0x11943; 0x119d4;[39m
     [38;5;2m  50[39m: [38;5;2m     0x119da; 0x119e0; 0x11a01; 0x11a33; 0x11a3b; 0x11a47; 0x11a51; 0x11a59;[39m
     [38;5;2m  51[39m: [38;5;2m     0x11a8a; 0x11a98; 0x11c30; 0x11c38; 0x11c3f; 0x11c92; 0x11caa; 0x11cb2;[39m
     [38;5;2m  52[39m: [38;5;2m     0x11cb5; 0x11d31; 0x11d3a; 0x11d3c; 0x11d3f; 0x11d47; 0x11d90; 0x11d95;[39m
     [38;5;2m  53[39m: [38;5;2m     0x11d97; 0x11ef3; 0x13430; 0x16af0; 0x16b30; 0x16f4f; 0x16f8f; 0x16fe0;[39m
     [38;5;2m  54[39m: [38;5;2m     0x16fe4; 0x16ff0; 0x17000; 0x18800; 0x18d00; 0x1b000; 0x1b150; 0x1b164;[39m
     [38;5;2m  55[39m: [38;5;2m     0x1b170; 0x1bc9d; 0x1bca0; 0x1d167; 0x1d173; 0x1d185; 0x1d1aa; 0x1d242;[39m
     [38;5;2m  56[39m: [38;5;2m     0x1da00; 0x1da3b; 0x1da75; 0x1da84; 0x1da9b; 0x1daa1; 0x1e000; 0x1e008;[39m
     [38;5;2m  57[39m: [38;5;2m     0x1e01b; 0x1e023; 0x1e026; 0x1e130; 0x1e2ec; 0x1e8d0; 0x1e944; 0x1f004;[39m
     [38;5;2m  58[39m: [38;5;2m     0x1f0cf; 0x1f18e; 0x1f191; 0x1f200; 0x1f210; 0x1f240; 0x1f250; 0x1f260;[39m
     [38;5;2m  59[39m: [38;5;2m     0x1f300; 0x1f32d; 0x1f337; 0x1f37e; 0x1f3a0; 0x1f3cf; 0x1f3e0; 0x1f3f4;[39m
     [38;5;2m  60[39m: [38;5;2m     0x1f3f8; 0x1f440; 0x1f442; 0x1f4ff; 0x1f54b; 0x1f550; 0x1f57a; 0x1f595;[39m
     [38;5;2m  61[39m: [38;5;2m     0x1f5a4; 0x1f5fb; 0x1f680; 0x1f6cc; 0x1f6d0; 0x1f6d5; 0x1f6eb; 0x1f6f4;[39m
     [38;5;2m  62[39m: [38;5;2m     0x1f7e0; 0x1f90c; 0x1f93c; 0x1f947; 0x1f97a; 0x1f9cd; 0x1fa70; 0x1fa78;[39m
     [38;5;2m  63[39m: [38;5;2m     0x1fa80; 0x1fa90; 0x1fab0; 0x1fac0; 0x1fad0; 0x20000; 0x30000; 0xe0001;[39m
     [38;5;2m  64[39m: [38;5;2m     0xe0020; 0xe0100|],[39m
     [38;5;2m  65[39m: [38;5;2m   [|0x0000; 0x036f; 0x0489; 0x05bd; 0x05bf; 0x05c2; 0x05c5; 0x05c7; 0x0605;[39m
     [38;5;2m  66[39m: [38;5;2m     0x061a; 0x061c; 0x065f; 0x0670; 0x06dd; 0x06e4; 0x06e8; 0x06ed; 0x070f;[39m
     [38;5;2m  67[39m: [38;5;2m     0x0711; 0x074a; 0x07b0; 0x07f3; 0x07fd; 0x0819; 0x0823; 0x0827; 0x082d;[39m
     [38;5;2m  68[39m: [38;5;2m     0x085b; 0x0902; 0x093a; 0x093c; 0x0948; 0x094d; 0x0957; 0x0963; 0x0981;[39m
     [38;5;2m  69[39m: [38;5;2m     0x09bc; 0x09c4; 0x09cd; 0x09e3; 0x09fe; 0x0a02; 0x0a3c; 0x0a42; 0x0a48;[39m
     [38;5;2m  70[39m: [38;5;2m     0x0a4d; 0x0a51; 0x0a71; 0x0a75; 0x0a82; 0x0abc; 0x0ac5; 0x0ac8; 0x0acd;[39m
     [38;5;2m  71[39m: [38;5;2m     0x0ae3; 0x0aff; 0x0b01; 0x0b3c; 0x0b3f; 0x0b44; 0x0b4d; 0x0b56; 0x0b63;[39m
     [38;5;2m  72[39m: [38;5;2m     0x0b82; 0x0bc0; 0x0bcd; 0x0c00; 0x0c04; 0x0c40; 0x0c48; 0x0c4d; 0x0c56;[39m
     [38;5;2m  73[39m: [38;5;2m     0x0c63; 0x0c81; 0x0cbc; 0x0cbf; 0x0cc6; 0x0ccd; 0x0ce3; 0x0d01; 0x0d3c;[39m
     [38;5;2m  74[39m: [38;5;2m     0x0d44; 0x0d4d; 0x0d63; 0x0d81; 0x0dca; 0x0dd4; 0x0dd6; 0x0e31; 0x0e3a;[39m
     [38;5;2m  75[39m: [38;5;2m     0x0e4e; 0x0eb1; 0x0ebc; 0x0ecd; 0x0f19; 0x0f35; 0x0f37; 0x0f39; 0x0f7e;[39m
     [38;5;2m  76[39m: [38;5;2m     0x0f84; 0x0f87; 0x0f97; 0x0fbc; 0x0fc6; 0x1030; 0x1037; 0x103a; 0x103e;[39m
     [38;5;2m  77[39m: [38;5;2m     0x1059; 0x1060; 0x1074; 0x1082; 0x1086; 0x108d; 0x109d; 0x115f; 0x135f;[39m
     [38;5;2m  78[39m: [38;5;2m     0x1714; 0x1734; 0x1753; 0x1773; 0x17b5; 0x17bd; 0x17c6; 0x17d3; 0x17dd;[39m
     [38;5;2m  79[39m: [38;5;2m     0x180e; 0x1886; 0x18a9; 0x1922; 0x1928; 0x1932; 0x193b; 0x1a18; 0x1a1b;[39m
     [38;5;2m  80[39m: [38;5;2m     0x1a56; 0x1a5e; 0x1a60; 0x1a62; 0x1a6c; 0x1a7c; 0x1a7f; 0x1ac0; 0x1b03;[39m
     [38;5;2m  81[39m: [38;5;2m     0x1b34; 0x1b3a; 0x1b3c; 0x1b42; 0x1b73; 0x1b81; 0x1ba5; 0x1ba9; 0x1bad;[39m
     [38;5;2m  82[39m: [38;5;2m     0x1be6; 0x1be9; 0x1bed; 0x1bf1; 0x1c33; 0x1c37; 0x1cd2; 0x1ce0; 0x1ce8;[39m
     [38;5;2m  83[39m: [38;5;2m     0x1ced; 0x1cf4; 0x1cf9; 0x1df9; 0x1dff; 0x200f; 0x202e; 0x2064; 0x206f;[39m
     [38;5;2m  84[39m: [38;5;2m     0x20f0; 0x231b; 0x232a; 0x23ec; 0x23f0; 0x23f3; 0x25fe; 0x2615; 0x2653;[39m
     [38;5;2m  85[39m: [38;5;2m     0x267f; 0x2693; 0x26a1; 0x26ab; 0x26be; 0x26c5; 0x26ce; 0x26d4; 0x26ea;[39m
     [38;5;2m  86[39m: [38;5;2m     0x26f3; 0x26f5; 0x26fa; 0x26fd; 0x2705; 0x270b; 0x2728; 0x274c; 0x274e;[39m
     [38;5;2m  87[39m: [38;5;2m     0x2755; 0x2757; 0x2797; 0x27b0; 0x27bf; 0x2b1c; 0x2b50; 0x2b55; 0x2cf1;[39m
     [38;5;2m  88[39m: [38;5;2m     0x2d7f; 0x2dff; 0x2e99; 0x2ef3; 0x2fd5; 0x2ffb; 0x3029; 0x302d; 0x303e;[39m
     [38;5;2m  89[39m: [38;5;2m     0x3096; 0x309a; 0x30ff; 0x312f; 0x318e; 0x31e3; 0x321e; 0x3247; 0x4dbf;[39m
     [38;5;2m  90[39m: [38;5;2m     0xa48c; 0xa4c6; 0xa672; 0xa67d; 0xa69f; 0xa6f1; 0xa802; 0xa806; 0xa80b;[39m
     [38;5;2m  91[39m: [38;5;2m     0xa826; 0xa82c; 0xa8c5; 0xa8f1; 0xa8ff; 0xa92d; 0xa951; 0xa97c; 0xa982;[39m
     [38;5;2m  92[39m: [38;5;2m     0xa9b3; 0xa9b9; 0xa9bd; 0xa9e5; 0xaa2e; 0xaa32; 0xaa36; 0xaa43; 0xaa4c;[39m
     [38;5;2m  93[39m: [38;5;2m     0xaa7c; 0xaab0; 0xaab4; 0xaab8; 0xaabf; 0xaac1; 0xaaed; 0xaaf6; 0xabe5;[39m
     [38;5;2m  94[39m: [38;5;2m     0xabe8; 0xabed; 0xd7a3; 0xfaff; 0xfb1e; 0xfe0f; 0xfe19; 0xfe2f; 0xfe52;[39m
     [38;5;2m  95[39m: [38;5;2m     0xfe66; 0xfe6b; 0xfeff; 0xff60; 0xffe6; 0xfffb; 0x101fd; 0x102e0;[39m
     [38;5;2m  96[39m: [38;5;2m     0x1037a; 0x10a03; 0x10a06; 0x10a0f; 0x10a3a; 0x10a3f; 0x10ae6; 0x10d27;[39m
     [38;5;2m  97[39m: [38;5;2m     0x10eac; 0x10f50; 0x11001; 0x11046; 0x11081; 0x110b6; 0x110ba; 0x110bd;[39m
     [38;5;2m  98[39m: [38;5;2m     0x110cd; 0x11102; 0x1112b; 0x11134; 0x11173; 0x11181; 0x111be; 0x111cc;[39m
     [38;5;2m  99[39m: [38;5;2m     0x111cf; 0x11231; 0x11234; 0x11237; 0x1123e; 0x112df; 0x112ea; 0x11301;[39m
     [38;5;2m 100[39m: [38;5;2m     0x1133c; 0x11340; 0x1136c; 0x11374; 0x1143f; 0x11444; 0x11446; 0x1145e;[39m
     [38;5;2m 101[39m: [38;5;2m     0x114b8; 0x114ba; 0x114c0; 0x114c3; 0x115b5; 0x115bd; 0x115c0; 0x115dd;[39m
     [38;5;2m 102[39m: [38;5;2m     0x1163a; 0x1163d; 0x11640; 0x116ab; 0x116ad; 0x116b5; 0x116b7; 0x1171f;[39m
     [38;5;2m 103[39m: [38;5;2m     0x11725; 0x1172b; 0x11837; 0x1183a; 0x1193c; 0x1193e; 0x11943; 0x119d7;[39m
     [38;5;2m 104[39m: [38;5;2m     0x119db; 0x119e0; 0x11a0a; 0x11a38; 0x11a3e; 0x11a47; 0x11a56; 0x11a5b;[39m
     [38;5;2m 105[39m: [38;5;2m     0x11a96; 0x11a99; 0x11c36; 0x11c3d; 0x11c3f; 0x11ca7; 0x11cb0; 0x11cb3;[39m
     [38;5;2m 106[39m: [38;5;2m     0x11cb6; 0x11d36; 0x11d3a; 0x11d3d; 0x11d45; 0x11d47; 0x11d91; 0x11d95;[39m
     [38;5;2m 107[39m: [38;5;2m     0x11d97; 0x11ef4; 0x13438; 0x16af4; 0x16b36; 0x16f4f; 0x16f92; 0x16fe3;[39m
     [38;5;2m 108[39m: [38;5;2m     0x16fe4; 0x16ff1; 0x187f7; 0x18cd5; 0x18d08; 0x1b11e; 0x1b152; 0x1b167;[39m
     [38;5;2m 109[39m: [38;5;2m     0x1b2fb; 0x1bc9e; 0x1bca3; 0x1d169; 0x1d182; 0x1d18b; 0x1d1ad; 0x1d244;[39m
     [38;5;2m 110[39m: [38;5;2m     0x1da36; 0x1da6c; 0x1da75; 0x1da84; 0x1da9f; 0x1daaf; 0x1e006; 0x1e018;[39m
     [38;5;2m 111[39m: [38;5;2m     0x1e021; 0x1e024; 0x1e02a; 0x1e136; 0x1e2ef; 0x1e8d6; 0x1e94a; 0x1f004;[39m
     [38;5;2m 112[39m: [38;5;2m     0x1f0cf; 0x1f18e; 0x1f19a; 0x1f202; 0x1f23b; 0x1f248; 0x1f251; 0x1f265;[39m
     [38;5;2m 113[39m: [38;5;2m     0x1f320; 0x1f335; 0x1f37c; 0x1f393; 0x1f3ca; 0x1f3d3; 0x1f3f0; 0x1f3f4;[39m
     [38;5;2m 114[39m: [38;5;2m     0x1f43e; 0x1f440; 0x1f4fc; 0x1f53d; 0x1f54e; 0x1f567; 0x1f57a; 0x1f596;[39m
     [38;5;2m 115[39m: [38;5;2m     0x1f5a4; 0x1f64f; 0x1f6c5; 0x1f6cc; 0x1f6d2; 0x1f6d7; 0x1f6ec; 0x1f6fc;[39m
     [38;5;2m 116[39m: [38;5;2m     0x1f7eb; 0x1f93a; 0x1f945; 0x1f978; 0x1f9cb; 0x1f9ff; 0x1fa74; 0x1fa7a;[39m
     [38;5;2m 117[39m: [38;5;2m     0x1fa86; 0x1faa8; 0x1fab6; 0x1fac2; 0x1fad6; 0x2fffd; 0x3fffd; 0xe0001;[39m
     [38;5;2m 118[39m: [38;5;2m     0xe007f; 0xe01ef|],[39m
     [38;5;2m 119[39m: [38;5;2m   [|0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 120[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 121[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 122[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 123[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 0; 0; 0;[39m
     [38;5;2m 124[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 125[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 126[39m: [38;5;2m     0; 0; 0; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m 127[39m: [38;5;2m     2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 2; 2; 2; 2; 2; 0; 2;[39m
     [38;5;2m 128[39m: [38;5;2m     2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 129[39m: [38;5;2m     0; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2;[39m
     [38;5;2m 130[39m: [38;5;2m     2; 0; 0; 2; 0; 2; 2; 2; 0; 2; 2; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 131[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 132[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 133[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0;[39m
     [38;5;2m 134[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 0; 2; 2; 2; 2; 2; 2; 2; 2; 0;[39m
     [38;5;2m 135[39m: [38;5;2m     0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 2; 2; 2;[39m
     [38;5;2m 136[39m: [38;5;2m     2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2;[39m
     [38;5;2m 137[39m: [38;5;2m     2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 0; 0; 0|])[39m
     [38;5;2m 138[39m: [38;5;2m[39m
     [38;5;2m 139[39m: [38;5;2mlet s000 = ""[39m
     [38;5;2m 140[39m: [38;5;2mlet s001 = "\000\000\000\000\000\000\000\000\000\000\b\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 141[39m: [38;5;2mlet s002 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000"[39m
     [38;5;2m 142[39m: [38;5;2mlet s003 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 143[39m: [38;5;2mlet s004 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 144[39m: [38;5;2mlet s005 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 145[39m: [38;5;2mlet s006 = "\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 146[39m: [38;5;2mlet s007 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002"[39m
     [38;5;2m 147[39m: [38;5;2mlet s008 = "\016\002\002\016\002\002\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 148[39m: [38;5;2mlet s009 = "\011\011\011\011\011\011\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 149[39m: [38;5;2mlet s010 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 150[39m: [38;5;2mlet s011 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\011\016\002\002\002\002\002\002\016\016\002\002\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 151[39m: [38;5;2mlet s012 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 152[39m: [38;5;2mlet s013 = "\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 153[39m: [38;5;2mlet s014 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 154[39m: [38;5;2mlet s015 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m 155[39m: [38;5;2mlet s016 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\016\002\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 156[39m: [38;5;2mlet s017 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 157[39m: [38;5;2mlet s018 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\011\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 158[39m: [38;5;2mlet s019 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\016\r\r"[39m
     [38;5;2m 159[39m: [38;5;2mlet s020 = "\r\002\002\002\002\002\002\002\002\r\r\r\r\002\r\r\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 160[39m: [38;5;2mlet s021 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\r"[39m
     [38;5;2m 161[39m: [38;5;2mlet s022 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016"[39m
     [38;5;2m 162[39m: [38;5;2mlet s023 = "\016\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r"[39m
     [38;5;2m 163[39m: [38;5;2mlet s024 = "\r\002\002\016\016\016\016\002\002\016\016\002\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 164[39m: [38;5;2mlet s025 = "\r\002\002\002\002\002\016\002\002\r\016\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002"[39m
     [38;5;2m 165[39m: [38;5;2mlet s026 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002"[39m
     [38;5;2m 166[39m: [38;5;2mlet s027 = "\r\002\002\002\002\016\016\r\r\016\016\r\r\002\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 167[39m: [38;5;2mlet s028 = "\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r"[39m
     [38;5;2m 168[39m: [38;5;2mlet s029 = "\002\r\r\016\016\016\r\r\r\016\r\r\r\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 169[39m: [38;5;2mlet s030 = "\002\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002"[39m
     [38;5;2m 170[39m: [38;5;2mlet s031 = "\002\r\r\r\r\016\002\002\002\016\002\002\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 171[39m: [38;5;2mlet s032 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002"[39m
     [38;5;2m 172[39m: [38;5;2mlet s033 = "\r\r\002\r\r\016\002\r\r\016\r\r\002\002\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 173[39m: [38;5;2mlet s034 = "\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\002\r"[39m
     [38;5;2m 174[39m: [38;5;2mlet s035 = "\r\002\002\002\002\016\r\r\r\016\r\r\r\002\011\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 175[39m: [38;5;2mlet s036 = "\016\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 176[39m: [38;5;2mlet s037 = "\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\002\r\r\002\002\002\016\002\016\r\r\r\r\r\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 177[39m: [38;5;2mlet s038 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m 178[39m: [38;5;2mlet s039 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 179[39m: [38;5;2mlet s040 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m 180[39m: [38;5;2mlet s041 = "\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 181[39m: [38;5;2mlet s042 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\016\002\016\016\016\016\r\r"[39m
     [38;5;2m 182[39m: [38;5;2mlet s043 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m 183[39m: [38;5;2mlet s044 = "\002\002\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016"[39m
     [38;5;2m 184[39m: [38;5;2mlet s045 = "\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 185[39m: [38;5;2mlet s046 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\r\002\002\002\002\002\002\016\002\002\r\r\002\002\016"[39m
     [38;5;2m 186[39m: [38;5;2mlet s047 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 187[39m: [38;5;2mlet s048 = "\016\016\002\016\r\002\002\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 188[39m: [38;5;2mlet s049 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007"[39m
     [38;5;2m 189[39m: [38;5;2mlet s050 = "\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m 190[39m: [38;5;2mlet s051 = "\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m 191[39m: [38;5;2mlet s052 = "\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014"[39m
     [38;5;2m 192[39m: [38;5;2mlet s053 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 193[39m: [38;5;2mlet s054 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 194[39m: [38;5;2mlet s055 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 195[39m: [38;5;2mlet s056 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\002\002\002\002\002\002\002\r\r"[39m
     [38;5;2m 196[39m: [38;5;2mlet s057 = "\r\r\r\r\r\r\002\r\r\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 197[39m: [38;5;2mlet s058 = "\016\016\016\016\016\016\016\016\016\016\016\002\002\002\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 198[39m: [38;5;2mlet s059 = "\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 199[39m: [38;5;2mlet s060 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\r\r\002\002\r\r\r\016\016\016\016\r\r\002\r\r\r\r\r\r\002\002\002\016\016\016\016"[39m
     [38;5;2m 200[39m: [38;5;2mlet s061 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 201[39m: [38;5;2mlet s062 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\r\002\002\002\002\002\002\002\016\002\016\002\016\016\002\002\002\002\002\002\002\002\r\r\r\r\r\r\002\002\002\002\002\002\002\002\002\002\016\016\002"[39m
     [38;5;2m 202[39m: [38;5;2mlet s063 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 203[39m: [38;5;2mlet s064 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 204[39m: [38;5;2mlet s065 = "\002\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\r\002\r\r\r"[39m
     [38;5;2m 205[39m: [38;5;2mlet s066 = "\r\r\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 206[39m: [38;5;2mlet s067 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\r\r\002\002\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 207[39m: [38;5;2mlet s068 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\r\r\r\002\r\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 208[39m: [38;5;2mlet s069 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\002\002\002\002\002\002\002\002\r\r\002\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 209[39m: [38;5;2mlet s070 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\002\002\002\002\002\016\016\016\016\002\016\016\016\016\016\016\002\016\016\r\002\002\016\016\016\016\016\016"[39m
     [38;5;2m 210[39m: [38;5;2mlet s071 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\002\002\002\002\002"[39m
     [38;5;2m 211[39m: [38;5;2mlet s072 = "\016\016\016\016\016\016\016\016\016\016\016\000\002\017\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 212[39m: [38;5;2mlet s073 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 213[39m: [38;5;2mlet s074 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 214[39m: [38;5;2mlet s075 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 215[39m: [38;5;2mlet s076 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m 216[39m: [38;5;2mlet s077 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 217[39m: [38;5;2mlet s078 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 218[39m: [38;5;2mlet s079 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 219[39m: [38;5;2mlet s080 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\016\016"[39m
     [38;5;2m 220[39m: [38;5;2mlet s081 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 221[39m: [38;5;2mlet s082 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 222[39m: [38;5;2mlet s083 = "\016\016\002\016\016\016\002\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\002\r\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 223[39m: [38;5;2mlet s084 = "\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m 224[39m: [38;5;2mlet s085 = "\r\r\r\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m 225[39m: [38;5;2mlet s086 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 226[39m: [38;5;2mlet s087 = "\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\r\r\016\016\016\016\016\016\016\016\016\016\016\016\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007\016\016\016"[39m
     [38;5;2m 227[39m: [38;5;2mlet s088 = "\002\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\r\r\002\002\r\r"[39m
     [38;5;2m 228[39m: [38;5;2mlet s089 = "\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 229[39m: [38;5;2mlet s090 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\r\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 230[39m: [38;5;2mlet s091 = "\016\016\016\002\016\016\016\016\016\016\016\016\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016"[39m
     [38;5;2m 231[39m: [38;5;2mlet s092 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\002\002\002\016\016\002\002\016\016\016\016\016\002\002"[39m
     [38;5;2m 232[39m: [38;5;2mlet s093 = "\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\r\r\016\016\016\016\016\r\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 233[39m: [38;5;2mlet s094 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\002\r\r\002\r\r\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 234[39m: [38;5;2mlet s095 = "\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n"[39m
     [38;5;2m 235[39m: [38;5;2mlet s096 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m 236[39m: [38;5;2mlet s097 = "\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m 237[39m: [38;5;2mlet s098 = "\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n"[39m
     [38;5;2m 238[39m: [38;5;2mlet s099 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m 239[39m: [38;5;2mlet s100 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m 240[39m: [38;5;2mlet s101 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"[39m
     [38;5;2m 241[39m: [38;5;2mlet s102 = "\n\n\n\n\n\n\n\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\016\016\016\016\016\016\016\016\016\016\016\016\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015\015"[39m
     [38;5;2m 242[39m: [38;5;2mlet s103 = "\015\015\015\015\015\015\015\016\016\016\016\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\016\016\016\016"[39m
     [38;5;2m 243[39m: [38;5;2mlet s104 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 244[39m: [38;5;2mlet s105 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 245[39m: [38;5;2mlet s106 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\000\000\000\016\016\016\016"[39m
     [38;5;2m 246[39m: [38;5;2mlet s107 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016"[39m
     [38;5;2m 247[39m: [38;5;2mlet s108 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 248[39m: [38;5;2mlet s109 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016"[39m
     [38;5;2m 249[39m: [38;5;2mlet s110 = "\016\002\002\002\016\002\002\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\016\016\016\016\002"[39m
     [38;5;2m 250[39m: [38;5;2mlet s111 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 251[39m: [38;5;2mlet s112 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 252[39m: [38;5;2mlet s113 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 253[39m: [38;5;2mlet s114 = "\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 254[39m: [38;5;2mlet s115 = "\r\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 255[39m: [38;5;2mlet s116 = "\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002"[39m
     [38;5;2m 256[39m: [38;5;2mlet s117 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\r\r\002\002\016\016\011\016\016"[39m
     [38;5;2m 257[39m: [38;5;2mlet s118 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\011\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 258[39m: [38;5;2mlet s119 = "\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 259[39m: [38;5;2mlet s120 = "\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 260[39m: [38;5;2mlet s121 = "\002\002\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r"[39m
     [38;5;2m 261[39m: [38;5;2mlet s122 = "\r\016\011\011\016\016\016\016\016\002\002\002\002\016\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 262[39m: [38;5;2mlet s123 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\r\r\002\r\002\002\016\016\016\016\016\016\002\016"[39m
     [38;5;2m 263[39m: [38;5;2mlet s124 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 264[39m: [38;5;2mlet s125 = "\002\r\r\r\r\016\016\r\r\016\016\r\r\r\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\r\r\016\016\002\002\002\002\002\002\002\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 265[39m: [38;5;2mlet s126 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 266[39m: [38;5;2mlet s127 = "\r\r\002\002\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 267[39m: [38;5;2mlet s128 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\002\002\r\002\r\r\002\r\002"[39m
     [38;5;2m 268[39m: [38;5;2mlet s129 = "\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 269[39m: [38;5;2mlet s130 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\002\002\002\002\016\016\r\r\r\r\002\002\r\002"[39m
     [38;5;2m 270[39m: [38;5;2mlet s131 = "\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 271[39m: [38;5;2mlet s132 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\r\r\002\r\002"[39m
     [38;5;2m 272[39m: [38;5;2mlet s133 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\r\r\002\002\002\002\002\002\r\002\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 273[39m: [38;5;2mlet s134 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\r\r\002\002\002\002\r\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 274[39m: [38;5;2mlet s135 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016"[39m
     [38;5;2m 275[39m: [38;5;2mlet s136 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\r\r\r\r\016\r\r\016\016\002\002\r\002\011"[39m
     [38;5;2m 276[39m: [38;5;2mlet s137 = "\r\011\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 277[39m: [38;5;2mlet s138 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\r\r\002\002\002\002\016\016\002\002\r\r\r\r\002\016\016\016\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 278[39m: [38;5;2mlet s139 = "\016\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\011\002\002\002\002\016"[39m
     [38;5;2m 279[39m: [38;5;2mlet s140 = "\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\r\r\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 280[39m: [38;5;2mlet s141 = "\016\016\016\016\011\011\011\011\011\011\002\002\002\002\002\002\002\002\002\002\002\002\002\r\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 281[39m: [38;5;2mlet s142 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\r\002\002\002\002\002\002\002\016\002\002\002\002\002\002\r\002"[39m
     [38;5;2m 282[39m: [38;5;2mlet s143 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\r\002\002\002\002\002\002\002\r\002\002\r\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 283[39m: [38;5;2mlet s144 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\016\016\016\002\016\002\002\016\002"[39m
     [38;5;2m 284[39m: [38;5;2mlet s145 = "\002\002\002\002\002\002\011\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 285[39m: [38;5;2mlet s146 = "\016\016\016\016\016\016\016\016\016\016\r\r\r\r\r\016\002\002\016\r\r\002\r\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 286[39m: [38;5;2mlet s147 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\r\r\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 287[39m: [38;5;2mlet s148 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\000\000\000\000\000\000\000\000\000\016\016\016\016\016\016\016"[39m
     [38;5;2m 288[39m: [38;5;2mlet s149 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 289[39m: [38;5;2mlet s150 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 290[39m: [38;5;2mlet s151 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r"[39m
     [38;5;2m 291[39m: [38;5;2mlet s152 = "\r\r\r\r\r\r\r\r\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 292[39m: [38;5;2mlet s153 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\r\r\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 293[39m: [38;5;2mlet s154 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\016\000\000\000\000\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 294[39m: [38;5;2mlet s155 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\r\002\002\002\016\016\016\r\002\002\002\002\002\000\000\000\000\000\000\000\000\002\002\002\002\002"[39m
     [38;5;2m 295[39m: [38;5;2mlet s156 = "\002\002\002\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 296[39m: [38;5;2mlet s157 = "\016\016\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 297[39m: [38;5;2mlet s158 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m 298[39m: [38;5;2mlet s159 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 299[39m: [38;5;2mlet s160 = "\016\016\016\016\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 300[39m: [38;5;2mlet s161 = "\002\002\002\002\002\002\002\016\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\016\016\002\002\002\002\002\002\002\016\002\002\016\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 301[39m: [38;5;2mlet s162 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 302[39m: [38;5;2mlet s163 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 303[39m: [38;5;2mlet s164 = "\016\016\016\016\002\002\002\002\002\002\002\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016"[39m
     [38;5;2m 304[39m: [38;5;2mlet s165 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012"[39m
     [38;5;2m 305[39m: [38;5;2mlet s166 = "\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\016\002\002\002\002\002"[39m
     [38;5;2m 306[39m: [38;5;2mlet s167 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002"[39m
     [38;5;2m 307[39m: [38;5;2mlet s168 = "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m 308[39m: [38;5;2mlet s169 = "\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"[39m
     [38;5;2m 309[39m: [38;5;2m[39m
     [38;5;2m 310[39m: [38;5;2mlet grapheme_cluster_boundary =[39m
     [38;5;2m 311[39m: [38;5;2m  [|[|s001; s002; s003; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 312[39m: [38;5;2m      s004; s005; s000; s000; s000; s000; s006; s000; s000; s000; s007; s008;[39m
     [38;5;2m 313[39m: [38;5;2m      s009; s010; s000; s011; s012; s013; s014; s015; s016; s017; s000; s018;[39m
     [38;5;2m 314[39m: [38;5;2m      s019; s020; s021; s022; s023; s024; s023; s025; s026; s027; s028; s029;[39m
     [38;5;2m 315[39m: [38;5;2m      s030; s031; s032; s033; s034; s035; s036; s037; s038; s039; s040; s041;[39m
     [38;5;2m 316[39m: [38;5;2m      s042; s043; s044; s045|];[39m
     [38;5;2m 317[39m: [38;5;2m    [|s046; s047; s048; s000; s049; s050; s051; s052; s000; s000; s000; s000;[39m
     [38;5;2m 318[39m: [38;5;2m      s000; s053; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 319[39m: [38;5;2m      s000; s000; s000; s000; s054; s055; s056; s057; s058; s000; s059; s000;[39m
     [38;5;2m 320[39m: [38;5;2m      s060; s000; s000; s000; s061; s062; s063; s064; s065; s066; s067; s068;[39m
     [38;5;2m 321[39m: [38;5;2m      s069; s000; s000; s070; s000; s000; s000; s071; s000; s000; s000; s000;[39m
     [38;5;2m 322[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 323[39m: [38;5;2m    [|s072; s073; s000; s074; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 324[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 325[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 326[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 327[39m: [38;5;2m      s000; s000; s000; s075; s000; s076; s000; s077; s000; s000; s000; s000;[39m
     [38;5;2m 328[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 329[39m: [38;5;2m    [|s078; s000; s079; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 330[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 331[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 332[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 333[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 334[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 335[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m 336[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 337[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 338[39m: [38;5;2m      s000; s080; s081; s082; s000; s000; s000; s000; s083; s000; s084; s085;[39m
     [38;5;2m 339[39m: [38;5;2m      s086; s087; s088; s089; s090; s091; s092; s093; s000; s000; s000; s094;[39m
     [38;5;2m 340[39m: [38;5;2m      s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m 341[39m: [38;5;2m      s100; s101; s095; s096|];[39m
     [38;5;2m 342[39m: [38;5;2m    [|s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m 343[39m: [38;5;2m      s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099;[39m
     [38;5;2m 344[39m: [38;5;2m      s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097;[39m
     [38;5;2m 345[39m: [38;5;2m      s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m 346[39m: [38;5;2m      s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m 347[39m: [38;5;2m      s101; s095; s096; s097|];[39m
     [38;5;2m 348[39m: [38;5;2m    [|s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095;[39m
     [38;5;2m 349[39m: [38;5;2m      s096; s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100;[39m
     [38;5;2m 350[39m: [38;5;2m      s101; s095; s096; s097; s098; s099; s100; s101; s095; s096; s097; s098;[39m
     [38;5;2m 351[39m: [38;5;2m      s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m 352[39m: [38;5;2m      s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m 353[39m: [38;5;2m      s095; s096; s097; s098|];[39m
     [38;5;2m 354[39m: [38;5;2m    [|s099; s100; s101; s095; s096; s097; s098; s099; s100; s101; s095; s096;[39m
     [38;5;2m 355[39m: [38;5;2m      s097; s098; s099; s100; s101; s095; s096; s097; s098; s099; s100; s101;[39m
     [38;5;2m 356[39m: [38;5;2m      s095; s096; s097; s098; s099; s100; s102; s103; s000; s000; s000; s000;[39m
     [38;5;2m 357[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 358[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 359[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 360[39m: [38;5;2m    [||];[39m
     [38;5;2m 361[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 362[39m: [38;5;2m      s104; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 363[39m: [38;5;2m      s105; s000; s000; s002; s000; s000; s081; s106; s000; s000; s000; s000;[39m
     [38;5;2m 364[39m: [38;5;2m      s000; s000; s000; s107; s000; s000; s000; s108; s000; s109; s000; s000;[39m
     [38;5;2m 365[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 366[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 367[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s110; s000; s000; s111;[39m
     [38;5;2m 368[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s112; s000; s000; s000;[39m
     [38;5;2m 369[39m: [38;5;2m      s000; s000; s113; s000; s000; s114; s000; s000; s115; s116; s117; s118;[39m
     [38;5;2m 370[39m: [38;5;2m      s119; s120; s121; s122; s123; s000; s000; s124; s034; s125; s000; s000;[39m
     [38;5;2m 371[39m: [38;5;2m      s126; s127; s128; s129; s000; s000; s130; s131; s132; s064; s133; s000;[39m
     [38;5;2m 372[39m: [38;5;2m      s134; s000; s000; s000|];[39m
     [38;5;2m 373[39m: [38;5;2m    [|s135; s000; s000; s000; s136; s137; s000; s138; s139; s140; s141; s000;[39m
     [38;5;2m 374[39m: [38;5;2m      s000; s000; s000; s000; s142; s000; s143; s000; s144; s145; s146; s000;[39m
     [38;5;2m 375[39m: [38;5;2m      s000; s000; s000; s147; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 376[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 377[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 378[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 379[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 380[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 381[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 382[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 383[39m: [38;5;2m      s148; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 384[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 385[39m: [38;5;2m    [||]; [||]; [||];[39m
     [38;5;2m 386[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s149;[39m
     [38;5;2m 387[39m: [38;5;2m      s150; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 388[39m: [38;5;2m      s000; s000; s000; s000; s000; s151; s152; s153; s000; s000; s000; s000;[39m
     [38;5;2m 389[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 390[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 391[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 392[39m: [38;5;2m    [||]; [||]; [||]; [||];[39m
     [38;5;2m 393[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 394[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s154; s000; s000; s000; s000; s000;[39m
     [38;5;2m 395[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 396[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 397[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 398[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 399[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 400[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 401[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 402[39m: [38;5;2m      s000; s155; s156; s000; s000; s157; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 403[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 404[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 405[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s158; s159; s160; s000;[39m
     [38;5;2m 406[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 407[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s161; s000; s000; s000;[39m
     [38;5;2m 408[39m: [38;5;2m      s150; s000; s000; s000; s000; s000; s000; s162; s000; s000; s000; s000;[39m
     [38;5;2m 409[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 410[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 411[39m: [38;5;2m    [|s000; s000; s000; s163; s000; s164; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 412[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 413[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 414[39m: [38;5;2m      s000; s000; s000; s165; s000; s000; s000; s000; s000; s000; s000; s166;[39m
     [38;5;2m 415[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 416[39m: [38;5;2m      s000; s000; s000; s000|];[39m
     [38;5;2m 417[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 418[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 419[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 420[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 421[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 422[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 423[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 424[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 425[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 426[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 427[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 428[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 429[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 430[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 431[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 432[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 433[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [||]; [39m
     [38;5;2m 434[39m: [38;5;2m    [||]; [||]; [||]; [||]; [||];[39m
     [38;5;2m 435[39m: [38;5;2m    [|s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 436[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 437[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s167; s004; s168; s168;[39m
     [38;5;2m 438[39m: [38;5;2m      s004; s004; s004; s169; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m 439[39m: [38;5;2m      s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m 440[39m: [38;5;2m      s168; s168; s168; s168|];[39m
     [38;5;2m 441[39m: [38;5;2m    [|s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m 442[39m: [38;5;2m      s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168; s168;[39m
     [38;5;2m 443[39m: [38;5;2m      s168; s168; s168; s168; s168; s168; s168; s168; s000; s000; s000; s000;[39m
     [38;5;2m 444[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 445[39m: [38;5;2m      s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000; s000;[39m
     [38;5;2m 446[39m: [38;5;2m      s000; s000; s000; s000|]|][39m
[38;5;3mAdded regular file ../notty/src/no-uucp/notty_uucp_data.mli:[39m
     [38;5;2m   1[39m: [38;5;2m(* Do not edit.[39m
     [38;5;2m   2[39m: [38;5;2m *[39m
     [38;5;2m   3[39m: [38;5;2m * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m   4[39m: [38;5;2m * using `./support/gen_unicode_props.ml`.[39m
     [38;5;2m   5[39m: [38;5;2m *[39m
     [38;5;2m   6[39m: [38;5;2m * Unicode version 13.0.0.[39m
     [38;5;2m   7[39m: [38;5;2m *)[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2m(* Uucp.Break.tty_width_hint *)[39m
     [38;5;2m  10[39m: [38;5;2mval tty_width_hint: int array * int array * int array[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2m(* Uucp.Break.Low.grapheme_cluster. *)[39m
     [38;5;2m  13[39m: [38;5;2mval grapheme_cluster_boundary: string array array[39m
     [38;5;2m  14[39m: [38;5;2m[39m
[38;5;3mAdded regular file ../notty/src/notty.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mlet invalid_arg fmt = Format.kasprintf invalid_arg fmt[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mlet (&.) f g x = f (g x)[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2mlet btw (x : int) a b = a <= x && x <= b[39m
     [38;5;2m   9[39m: [38;5;2mlet bit n b = b land (1 lsl n) > 0[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2mlet max (a : int) b = if a > b then a else b[39m
     [38;5;2m  12[39m: [38;5;2mlet min (a : int) b = if a < b then a else b[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2mlet is_C0 x = x < 0x20 || x = 0x7f[39m
     [38;5;2m  15[39m: [38;5;2mand is_C1 x = 0x80 <= x && x < 0xa0[39m
     [38;5;2m  16[39m: [38;5;2mlet is_ctrl x = is_C0 x || is_C1 x[39m
     [38;5;2m  17[39m: [38;5;2mand is_ascii x = x < 0x80[39m
     [38;5;2m  18[39m: [38;5;2m[39m
     [38;5;2m  19[39m: [38;5;2mlet rec concatm z (@) xs =[39m
     [38;5;2m  20[39m: [38;5;2m  let rec accum (@) = function[39m
     [38;5;2m  21[39m: [38;5;2m    | []|[_] as xs -> xs[39m
     [38;5;2m  22[39m: [38;5;2m    | a::b::xs -> (a @ b) :: accum (@) xs in[39m
     [38;5;2m  23[39m: [38;5;2m  match xs with [] -> z | [x] -> x | xs -> concatm z (@) (accum (@) xs)[39m
     [38;5;2m  24[39m: [38;5;2m[39m
     [38;5;2m  25[39m: [38;5;2mlet rec linspcm z (@) x n f = match n with[39m
     [38;5;2m  26[39m: [38;5;2m  | 0 -> z[39m
     [38;5;2m  27[39m: [38;5;2m  | 1 -> f x[39m
     [38;5;2m  28[39m: [38;5;2m  | _ -> let m = n / 2 in linspcm z (@) x m f @ linspcm z (@) (x + m) (n - m) f[39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2mlet memo (type a) ?(hash=Hashtbl.hash) ?(eq=(=)) ~size f =[39m
     [38;5;2m  31[39m: [38;5;2m  let module H = Ephemeron.K1.Make[39m
     [38;5;2m  32[39m: [38;5;2m    (struct type t = a let (hash, equal) = (hash, eq) end) in[39m
     [38;5;2m  33[39m: [38;5;2m  let t = H.create size in fun x ->[39m
     [38;5;2m  34[39m: [38;5;2m    try H.find t x with Not_found -> let y = f x in H.add t x y; y[39m
     [38;5;2m  35[39m: [38;5;2m[39m
     [38;5;2m  36[39m: [38;5;2mmodule Buffer = struct[39m
     [38;5;2m  37[39m: [38;5;2m  include Buffer[39m
     [38;5;2m  38[39m: [38;5;2m  let buf = Buffer.create 1024[39m
     [38;5;2m  39[39m: [38;5;2m  let mkstring f = f buf; let res = contents buf in reset buf; res[39m
     [38;5;2m  40[39m: [38;5;2m  let add_decimal b = function[39m
     [38;5;2m  41[39m: [38;5;2m    | x when btw x 0 999 ->[39m
     [38;5;2m  42[39m: [38;5;2m        let d1 = x / 100 and d2 = (x mod 100) / 10 and d3 = x mod 10 in[39m
     [38;5;2m  43[39m: [38;5;2m        if d1 > 0 then 0x30 + d1 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m  44[39m: [38;5;2m        if (d1 + d2) > 0 then 0x30 + d2 |> Char.unsafe_chr |> add_char b;[39m
     [38;5;2m  45[39m: [38;5;2m        0x30 + d3 |> Char.unsafe_chr |> add_char b[39m
     [38;5;2m  46[39m: [38;5;2m    | x -> string_of_int x |> add_string b[39m
     [38;5;2m  47[39m: [38;5;2m  let add_chars b c n = for _ = 1 to n do add_char b c done[39m
     [38;5;2m  48[39m: [38;5;2mend[39m
     [38;5;2m  49[39m: [38;5;2m[39m
     [38;5;2m  50[39m: [38;5;2mmodule String = struct[39m
     [38;5;2m  51[39m: [38;5;2m  include String[39m
     [38;5;2m  52[39m: [38;5;2m  let sub0cp s i len = if i > 0 || len < length s then sub s i len else s[39m
     [38;5;2m  53[39m: [38;5;2m  let of_chars_rev = function[39m
     [38;5;2m  54[39m: [38;5;2m    | []  -> ""[39m
     [38;5;2m  55[39m: [38;5;2m    | [c] -> String.make 1 c[39m
     [38;5;2m  56[39m: [38;5;2m    | cs  ->[39m
     [38;5;2m  57[39m: [38;5;2m        let n = List.length cs in[39m
     [38;5;2m  58[39m: [38;5;2m        let rec go bs i = Bytes.(function[39m
     [38;5;2m  59[39m: [38;5;2m          | []    -> unsafe_to_string bs[39m
     [38;5;2m  60[39m: [38;5;2m          | x::xs -> unsafe_set bs i x; go bs (pred i) xs[39m
     [38;5;2m  61[39m: [38;5;2m        ) in go (Bytes.create n) (n - 1) cs[39m
     [38;5;2m  62[39m: [38;5;2mend[39m
     [38;5;2m  63[39m: [38;5;2m[39m
     [38;5;2m  64[39m: [38;5;2mmodule Option = struct[39m
     [38;5;2m  65[39m: [38;5;2m[39m
     [38;5;2m  66[39m: [38;5;2m  let map f = function Some x -> Some (f x) | _ -> None[39m
     [38;5;2m  67[39m: [38;5;2m  let get def = function Some x -> x | _ -> def[39m
     [38;5;2m  68[39m: [38;5;2m  let to_list = function Some x -> [x] | _ -> [][39m
     [38;5;2m  69[39m: [38;5;2m  let (>>|) a f = map f a[39m
     [38;5;2m  70[39m: [38;5;2m  let (>>=) a f = match a with Some x -> f x | _ -> None[39m
     [38;5;2m  71[39m: [38;5;2mend[39m
     [38;5;2m  72[39m: [38;5;2m[39m
     [38;5;2m  73[39m: [38;5;2mmodule Text = struct[39m
     [38;5;2m  74[39m: [38;5;2m[39m
     [38;5;2m  75[39m: [38;5;2m  let err_ctrl u = invalid_arg "Notty: control char: U+%02X, %S" (Char.code u)[39m
     [38;5;2m  76[39m: [38;5;2m  let err_malformed = invalid_arg "Notty: malformed UTF-8: %s, %S"[39m
     [38;5;2m  77[39m: [38;5;2m[39m
     [38;5;2m  78[39m: [38;5;2m  type t =[39m
     [38;5;2m  79[39m: [38;5;2m    | Ascii of string * int * int[39m
     [38;5;2m  80[39m: [38;5;2m    | Utf8  of string * int array * int * int[39m
     [38;5;2m  81[39m: [38;5;2m[39m
     [38;5;2m  82[39m: [38;5;2m  let equal t1 t2 = match (t1, t2) with[39m
     [38;5;2m  83[39m: [38;5;2m    | (Utf8 (s1, _, i1, n1), Utf8 (s2, _, i2, n2))[39m
     [38;5;2m  84[39m: [38;5;2m    | (Ascii (s1, i1, n1), Ascii (s2, i2, n2)) -> i1 = i2 && n1 = n2 && s1 = s2[39m
     [38;5;2m  85[39m: [38;5;2m    | _ -> false[39m
     [38;5;2m  86[39m: [38;5;2m[39m
     [38;5;2m  87[39m: [38;5;2m  let width = function Utf8 (_, _, _, w) -> w | Ascii (_, _, w)   -> w[39m
     [38;5;2m  88[39m: [38;5;2m[39m
     [38;5;2m  89[39m: [38;5;2m  let empty = Ascii ("", 0, 0)[39m
     [38;5;2m  90[39m: [38;5;2m[39m
     [38;5;2m  91[39m: [38;5;2m  let is_empty t = width t = 0[39m
     [38;5;2m  92[39m: [38;5;2m[39m
     [38;5;2m  93[39m: [38;5;2m  let graphemes str =[39m
     [38;5;2m  94[39m: [38;5;2m    let module Uuseg = Notty_grapheme_cluster in[39m
     [38;5;2m  95[39m: [38;5;2m    let seg = Uuseg.create () in[39m
     [38;5;2m  96[39m: [38;5;2m    let rec f (is, w as acc) i evt =[39m
     [38;5;2m  97[39m: [38;5;2m      match Uuseg.add seg evt with[39m
     [38;5;2m  98[39m: [38;5;2m      | `Await | `End -> acc[39m
     [38;5;2m  99[39m: [38;5;2m      | `Uchar u      -> f (is, w + Notty_uucp.tty_width_hint u) i `Await[39m
     [38;5;2m 100[39m: [38;5;2m      | `Boundary     ->[39m
     [38;5;2m 101[39m: [38;5;2m          let is = match w with 0 -> is | 1 -> i::is | _ -> i::(-1)::is in[39m
     [38;5;2m 102[39m: [38;5;2m          f (is, 0) i `Await in[39m
     [38;5;2m 103[39m: [38;5;2m    let acc = Uutf.String.fold_utf_8 (fun acc i -> function[39m
     [38;5;2m 104[39m: [38;5;2m      | `Malformed err -> err_malformed err str[39m
     [38;5;2m 105[39m: [38;5;2m      | `Uchar _ as u  -> f acc i u[39m
     [38;5;2m 106[39m: [38;5;2m      ) ([0], 0) str in[39m
     [38;5;2m 107[39m: [38;5;2m    f acc (String.length str) `End |> fst |> List.rev |> Array.of_list (*XXX*)[39m
     [38;5;2m 108[39m: [38;5;2m[39m
     [38;5;2m 109[39m: [38;5;2m  let dead = ' '[39m
     [38;5;2m 110[39m: [38;5;2m[39m
     [38;5;2m 111[39m: [38;5;2m  let to_buffer buf = function[39m
     [38;5;2m 112[39m: [38;5;2m    | Ascii (s, off, w)    -> Buffer.add_substring buf s off w[39m
     [38;5;2m 113[39m: [38;5;2m    | Utf8 (s, ix, off, w) ->[39m
     [38;5;2m 114[39m: [38;5;2m        let x1 = match ix.(off) with[39m
     [38;5;2m 115[39m: [38;5;2m          | -1 -> Buffer.add_char buf dead; ix.(off + 1) | x -> x[39m
     [38;5;2m 116[39m: [38;5;2m        and x2 = ix.(off + w) in[39m
     [38;5;2m 117[39m: [38;5;2m        Buffer.add_substring buf s x1 @@[39m
     [38;5;2m 118[39m: [38;5;2m          (if x2 = -1 then ix.(off + w - 1) else x2) - x1;[39m
     [38;5;2m 119[39m: [38;5;2m        if x2 = -1 then Buffer.add_char buf dead[39m
     [38;5;2m 120[39m: [38;5;2m[39m
     [38;5;2m 121[39m: [38;5;2m  let sub t x w =[39m
     [38;5;2m 122[39m: [38;5;2m    let w1 = width t in[39m
     [38;5;2m 123[39m: [38;5;2m    if w = 0 || x >= w1 then empty else[39m
     [38;5;2m 124[39m: [38;5;2m      let w = min w (w1 - x) in[39m
     [38;5;2m 125[39m: [38;5;2m      if w = w1 then t else match t with[39m
     [38;5;2m 126[39m: [38;5;2m        Ascii (s, off, _) -> Ascii (s, off + x, w)[39m
     [38;5;2m 127[39m: [38;5;2m      | Utf8 (s, ix, off, _) -> Utf8 (s, ix, off + x, w)[39m
     [38;5;2m 128[39m: [38;5;2m[39m
     [38;5;2m 129[39m: [38;5;2m  let is_ascii_or_raise_ctrl s =[39m
     [38;5;2m 130[39m: [38;5;2m    let (@!) s i = String.unsafe_get s i |> Char.code in[39m
     [38;5;2m 131[39m: [38;5;2m    let rec go s acc i n =[39m
     [38;5;2m 132[39m: [38;5;2m      if n = 0 then acc else[39m
     [38;5;2m 133[39m: [38;5;2m        let x = s @! i in[39m
     [38;5;2m 134[39m: [38;5;2m        if is_C0 x then[39m
     [38;5;2m 135[39m: [38;5;2m          err_ctrl s.[i] s[39m
     [38;5;2m 136[39m: [38;5;2m        else if x = 0xc2 && n > 1 && is_C1 (s @! (i + 1)) then[39m
     [38;5;2m 137[39m: [38;5;2m          err_ctrl s.[i + 1] s[39m
     [38;5;2m 138[39m: [38;5;2m        else go s (acc && is_ascii x) (i + 1) (n - 1) in[39m
     [38;5;2m 139[39m: [38;5;2m    go s true 0 (String.length s)[39m
     [38;5;2m 140[39m: [38;5;2m[39m
     [38;5;2m 141[39m: [38;5;2m  let of_ascii s = Ascii (s, 0, String.length s)[39m
     [38;5;2m 142[39m: [38;5;2m  and of_unicode s = let x = graphemes s in Utf8 (s, x, 0, Array.length x - 1)[39m
     [38;5;2m 143[39m: [38;5;2m  let of_unicode = memo ~eq:String.equal ~size:128 of_unicode[39m
     [38;5;2m 144[39m: [38;5;2m[39m
     [38;5;2m 145[39m: [38;5;2m  let of_string = function[39m
     [38;5;2m 146[39m: [38;5;2m    | "" -> empty[39m
     [38;5;2m 147[39m: [38;5;2m    | s  -> if is_ascii_or_raise_ctrl s then of_ascii s else of_unicode s[39m
     [38;5;2m 148[39m: [38;5;2m[39m
     [38;5;2m 149[39m: [38;5;2m  let of_uchars ucs = of_string @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m 150[39m: [38;5;2m    Array.iter (Buffer.add_utf_8_uchar buf) ucs[39m
     [38;5;2m 151[39m: [38;5;2m[39m
     [38;5;2m 152[39m: [38;5;2m  let replicateu w u =[39m
     [38;5;2m 153[39m: [38;5;2m    if is_ctrl (Uchar.to_int u) then[39m
     [38;5;2m 154[39m: [38;5;2m      err_ctrl (Uchar.unsafe_to_char u) "<repeated character>"[39m
     [38;5;2m 155[39m: [38;5;2m    else if w < 1 then empty[39m
     [38;5;2m 156[39m: [38;5;2m    else if is_ascii (Uchar.to_int u) then[39m
     [38;5;2m 157[39m: [38;5;2m      of_ascii (String.make w (Uchar.unsafe_to_char u))[39m
     [38;5;2m 158[39m: [38;5;2m    else of_unicode @@ Buffer.mkstring @@ fun buf ->[39m
     [38;5;2m 159[39m: [38;5;2m      for _ = 1 to w do Buffer.add_utf_8_uchar buf u done[39m
     [38;5;2m 160[39m: [38;5;2m[39m
     [38;5;2m 161[39m: [38;5;2m  let replicatec w c = replicateu w (Uchar.of_char c)[39m
     [38;5;2m 162[39m: [38;5;2mend[39m
     [38;5;2m 163[39m: [38;5;2m[39m
     [38;5;2m 164[39m: [38;5;2mmodule A = struct[39m
     [38;5;2m 165[39m: [38;5;2m[39m
     [38;5;2m 166[39m: [38;5;2m  type color = int[39m
     [38;5;2m 167[39m: [38;5;2m  type style = int[39m
     [38;5;2m 168[39m: [38;5;2m  type t = { fg : color; bg : color; st : style }[39m
     [38;5;2m 169[39m: [38;5;2m[39m
     [38;5;2m 170[39m: [38;5;2m  let equal t1 t2 = t1.fg = t2.fg && t1.bg = t2.bg && t1.st = t2.st[39m
     [38;5;2m 171[39m: [38;5;2m  let unsafe_color_of_int int= int[39m
     [38;5;2m 172[39m: [38;5;2m  let unsafe_style_of_int int= int[39m
     [38;5;2m 173[39m: [38;5;2m[39m
     [38;5;2m 174[39m: [38;5;2m  let black        = 0x01000000[39m
     [38;5;2m 175[39m: [38;5;2m  and red          = 0x01000001[39m
     [38;5;2m 176[39m: [38;5;2m  and green        = 0x01000002[39m
     [38;5;2m 177[39m: [38;5;2m  and yellow       = 0x01000003[39m
     [38;5;2m 178[39m: [38;5;2m  and blue         = 0x01000004[39m
     [38;5;2m 179[39m: [38;5;2m  and magenta      = 0x01000005[39m
     [38;5;2m 180[39m: [38;5;2m  and cyan         = 0x01000006[39m
     [38;5;2m 181[39m: [38;5;2m  and white        = 0x01000007[39m
     [38;5;2m 182[39m: [38;5;2m  and lightblack   = 0x01000008[39m
     [38;5;2m 183[39m: [38;5;2m  and lightred     = 0x01000009[39m
     [38;5;2m 184[39m: [38;5;2m  and lightgreen   = 0x0100000a[39m
     [38;5;2m 185[39m: [38;5;2m  and lightyellow  = 0x0100000b[39m
     [38;5;2m 186[39m: [38;5;2m  and lightblue    = 0x0100000c[39m
     [38;5;2m 187[39m: [38;5;2m  and lightmagenta = 0x0100000d[39m
     [38;5;2m 188[39m: [38;5;2m  and lightcyan    = 0x0100000e[39m
     [38;5;2m 189[39m: [38;5;2m  and lightwhite   = 0x0100000f[39m
     [38;5;2m 190[39m: [38;5;2m[39m
     [38;5;2m 191[39m: [38;5;2m  let tag c = (c land 0x03000000) lsr 24[39m
     [38;5;2m 192[39m: [38;5;2m[39m
     [38;5;2m 193[39m: [38;5;2m  let rgb ~r ~g ~b =[39m
     [38;5;2m 194[39m: [38;5;2m    if r < 0 || g < 0 || b < 0 || r > 5 || g > 5 || b > 5 then[39m
     [38;5;2m 195[39m: [38;5;2m      invalid_arg "Notty.A.rgb %d %d %d: channel out of range" r g b[39m
     [38;5;2m 196[39m: [38;5;2m    else 0x01000000 lor (r * 36 + g * 6 + b + 16)[39m
     [38;5;2m 197[39m: [38;5;2m[39m
     [38;5;2m 198[39m: [38;5;2m  let gray level =[39m
     [38;5;2m 199[39m: [38;5;2m    if level < 0 || level > 23 then[39m
     [38;5;2m 200[39m: [38;5;2m      invalid_arg "Notty.A.gray %d: level out of range" level[39m
     [38;5;2m 201[39m: [38;5;2m    else 0x01000000 lor (level + 232)[39m
     [38;5;2m 202[39m: [38;5;2m[39m
     [38;5;2m 203[39m: [38;5;2m  let rgb_888 ~r ~g ~b =[39m
     [38;5;2m 204[39m: [38;5;2m    if r < 0 || g < 0 || b < 0 || r > 255 || g > 255 || b > 255 then[39m
     [38;5;2m 205[39m: [38;5;2m      invalid_arg "Notty.A.rgb_888 %d %d %d: channel out of range" r g b[39m
     [38;5;2m 206[39m: [38;5;2m    else 0x02000000 lor ((r lsl 16) lor (g lsl 8) lor b)[39m
     [38;5;2m 207[39m: [38;5;2m[39m
     [38;5;2m 208[39m: [38;5;2m  let i x = x land 0xff[39m
     [38;5;2m 209[39m: [38;5;2m  and r x = x lsr 16 land 0xff[39m
     [38;5;2m 210[39m: [38;5;2m  and g x = x lsr 8 land 0xff[39m
     [38;5;2m 211[39m: [38;5;2m  and b x = x land 0xff[39m
     [38;5;2m 212[39m: [38;5;2m[39m
     [38;5;2m 213[39m: [38;5;2m  let bold      = 1[39m
     [38;5;2m 214[39m: [38;5;2m  and italic    = 2[39m
     [38;5;2m 215[39m: [38;5;2m  and underline = 4[39m
     [38;5;2m 216[39m: [38;5;2m  and blink     = 8[39m
     [38;5;2m 217[39m: [38;5;2m  and reverse   = 16[39m
     [38;5;2m 218[39m: [38;5;2m[39m
     [38;5;2m 219[39m: [38;5;2m  let empty = { fg = 0; bg = 0; st = 0 }[39m
     [38;5;2m 220[39m: [38;5;2m[39m
     [38;5;2m 221[39m: [38;5;2m let (++) a1 a2 =[39m
     [38;5;2m 222[39m: [38;5;2m   if a1 == empty then a2 else if a2 == empty then a1 else[39m
     [38;5;2m 223[39m: [38;5;2m     { fg = (match a2.fg with 0 -> a1.fg | x -> x)[39m
     [38;5;2m 224[39m: [38;5;2m     ; bg = (match a2.bg with 0 -> a1.bg | x -> x)[39m
     [38;5;2m 225[39m: [38;5;2m     ; st = a1.st lor a2.st }[39m
     [38;5;2m 226[39m: [38;5;2m[39m
     [38;5;2m 227[39m: [38;5;2m  let fg fg = { empty with fg }[39m
     [38;5;2m 228[39m: [38;5;2m  let bg bg = { empty with bg }[39m
     [38;5;2m 229[39m: [38;5;2m  let st st = { empty with st }[39m
     [38;5;2m 230[39m: [38;5;2mend[39m
     [38;5;2m 231[39m: [38;5;2m[39m
     [38;5;2m 232[39m: [38;5;2mmodule I = struct[39m
     [38;5;2m 233[39m: [38;5;2m[39m
     [38;5;2m 234[39m: [38;5;2m  type dim = int * int[39m
     [38;5;2m 235[39m: [38;5;2m[39m
     [38;5;2m 236[39m: [38;5;2m  type t =[39m
     [38;5;2m 237[39m: [38;5;2m    | Empty[39m
     [38;5;2m 238[39m: [38;5;2m    | Segment  of A.t * Text.t[39m
     [38;5;2m 239[39m: [38;5;2m    | Hcompose of (t * t) * dim[39m
     [38;5;2m 240[39m: [38;5;2m    | Vcompose of (t * t) * dim[39m
     [38;5;2m 241[39m: [38;5;2m    | Zcompose of (t * t) * dim[39m
     [38;5;2m 242[39m: [38;5;2m    | Hcrop    of (t * int * int) * dim[39m
     [38;5;2m 243[39m: [38;5;2m    | Vcrop    of (t * int * int) * dim[39m
     [38;5;2m 244[39m: [38;5;2m    | Void     of dim[39m
     [38;5;2m 245[39m: [38;5;2m[39m
     [38;5;2m 246[39m: [38;5;2m  let width = function[39m
     [38;5;2m 247[39m: [38;5;2m    | Empty -> 0[39m
     [38;5;2m 248[39m: [38;5;2m    | Segment (_, text) -> Text.width text[39m
     [38;5;2m 249[39m: [38;5;2m    | Hcompose (_, (w, _)) -> w[39m
     [38;5;2m 250[39m: [38;5;2m    | Vcompose (_, (w, _)) -> w[39m
     [38;5;2m 251[39m: [38;5;2m    | Zcompose (_, (w, _)) -> w[39m
     [38;5;2m 252[39m: [38;5;2m    | Hcrop    (_, (w, _)) -> w[39m
     [38;5;2m 253[39m: [38;5;2m    | Vcrop    (_, (w, _)) -> w[39m
     [38;5;2m 254[39m: [38;5;2m    | Void         (w, _)  -> w [@@inline][39m
     [38;5;2m 255[39m: [38;5;2m[39m
     [38;5;2m 256[39m: [38;5;2m  let height = function[39m
     [38;5;2m 257[39m: [38;5;2m    | Empty -> 0[39m
     [38;5;2m 258[39m: [38;5;2m    | Segment _ -> 1[39m
     [38;5;2m 259[39m: [38;5;2m    | Hcompose (_, (_, h)) -> h[39m
     [38;5;2m 260[39m: [38;5;2m    | Vcompose (_, (_, h)) -> h[39m
     [38;5;2m 261[39m: [38;5;2m    | Zcompose (_, (_, h)) -> h[39m
     [38;5;2m 262[39m: [38;5;2m    | Hcrop    (_, (_, h)) -> h[39m
     [38;5;2m 263[39m: [38;5;2m    | Vcrop    (_, (_, h)) -> h[39m
     [38;5;2m 264[39m: [38;5;2m    | Void         (_, h)  -> h [@@inline][39m
     [38;5;2m 265[39m: [38;5;2m[39m
     [38;5;2m 266[39m: [38;5;2m  let equal t1 t2 =[39m
     [38;5;2m 267[39m: [38;5;2m    let rec eq t1 t2 = match (t1, t2) with[39m
     [38;5;2m 268[39m: [38;5;2m      | (Empty, Empty) -> true[39m
     [38;5;2m 269[39m: [38;5;2m      | (Segment (a1, t1), Segment (a2, t2)) ->[39m
     [38;5;2m 270[39m: [38;5;2m          A.equal a1 a2 && Text.equal t1 t2[39m
     [38;5;2m 271[39m: [38;5;2m      | (Hcompose ((a, b), _), Hcompose ((c, d), _))[39m
     [38;5;2m 272[39m: [38;5;2m      | (Vcompose ((a, b), _), Vcompose ((c, d), _))[39m
     [38;5;2m 273[39m: [38;5;2m      | (Zcompose ((a, b), _), Zcompose ((c, d), _)) -> eq a c && eq b d[39m
     [38;5;2m 274[39m: [38;5;2m      | (Hcrop ((a, i1, n1), _), Hcrop ((b, i2, n2), _))[39m
     [38;5;2m 275[39m: [38;5;2m      | (Vcrop ((a, i1, n1), _), Vcrop ((b, i2, n2), _)) ->[39m
     [38;5;2m 276[39m: [38;5;2m          i1 = i2 && n1 = n2 && eq a b[39m
     [38;5;2m 277[39m: [38;5;2m      | (Void (a, b), Void (c, d)) -> a = c && b = d[39m
     [38;5;2m 278[39m: [38;5;2m      | _ -> false in[39m
     [38;5;2m 279[39m: [38;5;2m    width t1 = width t2 && height t1 = height t2 && eq t1 t2[39m
     [38;5;2m 280[39m: [38;5;2m[39m
     [38;5;2m 281[39m: [38;5;2m  let empty = Empty[39m
     [38;5;2m 282[39m: [38;5;2m[39m
     [38;5;2m 283[39m: [38;5;2m  let (<|>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m 284[39m: [38;5;2m    | (_, Empty) -> t1[39m
     [38;5;2m 285[39m: [38;5;2m    | (Empty, _) -> t2[39m
     [38;5;2m 286[39m: [38;5;2m    | _          ->[39m
     [38;5;2m 287[39m: [38;5;2m        let w = width t1 + width t2[39m
     [38;5;2m 288[39m: [38;5;2m        and h = max (height t1) (height t2) in[39m
     [38;5;2m 289[39m: [38;5;2m        Hcompose ((t1, t2), (w, h))[39m
     [38;5;2m 290[39m: [38;5;2m[39m
     [38;5;2m 291[39m: [38;5;2m  let (<->) t1 t2 = match (t1, t2) with[39m
     [38;5;2m 292[39m: [38;5;2m    | (_, Empty) -> t1[39m
     [38;5;2m 293[39m: [38;5;2m    | (Empty, _) -> t2[39m
     [38;5;2m 294[39m: [38;5;2m    | _          ->[39m
     [38;5;2m 295[39m: [38;5;2m        let w = max (width t1) (width t2)[39m
     [38;5;2m 296[39m: [38;5;2m        and h = height t1 + height t2 in[39m
     [38;5;2m 297[39m: [38;5;2m        Vcompose ((t1, t2), (w, h))[39m
     [38;5;2m 298[39m: [38;5;2m[39m
     [38;5;2m 299[39m: [38;5;2m  let (</>) t1 t2 = match (t1, t2) with[39m
     [38;5;2m 300[39m: [38;5;2m    | (_, Empty) -> t1[39m
     [38;5;2m 301[39m: [38;5;2m    | (Empty, _) -> t2[39m
     [38;5;2m 302[39m: [38;5;2m    | _          ->[39m
     [38;5;2m 303[39m: [38;5;2m        let w = max (width t1) (width t2)[39m
     [38;5;2m 304[39m: [38;5;2m        and h = max (height t1) (height t2) in[39m
     [38;5;2m 305[39m: [38;5;2m        Zcompose ((t1, t2), (w, h))[39m
     [38;5;2m 306[39m: [38;5;2m[39m
     [38;5;2m 307[39m: [38;5;2m  let void w h =[39m
     [38;5;2m 308[39m: [38;5;2m    if w < 1 && h < 1 then Empty else Void (max 0 w, max 0 h)[39m
     [38;5;2m 309[39m: [38;5;2m[39m
     [38;5;2m 310[39m: [38;5;2m  let lincropinv crop void (++) init fini img =[39m
     [38;5;2m 311[39m: [38;5;2m    match (init >= 0, fini >= 0) with[39m
     [38;5;2m 312[39m: [38;5;2m    | (true, true) -> crop init fini img[39m
     [38;5;2m 313[39m: [38;5;2m    | (true, _   ) -> crop init 0 img ++ void (-fini)[39m
     [38;5;2m 314[39m: [38;5;2m    | (_   , true) -> void (-init) ++ crop 0 fini img[39m
     [38;5;2m 315[39m: [38;5;2m    | _            -> void (-init) ++ img ++ void (-fini)[39m
     [38;5;2m 316[39m: [38;5;2m[39m
     [38;5;2m 317[39m: [38;5;2m  let hcrop =[39m
     [38;5;2m 318[39m: [38;5;2m    let ctor left right img =[39m
     [38;5;2m 319[39m: [38;5;2m      let h = height img and w = width img - left - right in[39m
     [38;5;2m 320[39m: [38;5;2m      if w > 0 then Hcrop ((img, left, right), (w, h)) else void w h[39m
     [38;5;2m 321[39m: [38;5;2m    in lincropinv ctor (fun w -> void w 0) (<|>)[39m
     [38;5;2m 322[39m: [38;5;2m[39m
     [38;5;2m 323[39m: [38;5;2m  let vcrop =[39m
     [38;5;2m 324[39m: [38;5;2m    let ctor top bottom img =[39m
     [38;5;2m 325[39m: [38;5;2m      let w = width img and h = height img - top - bottom in[39m
     [38;5;2m 326[39m: [38;5;2m      if h > 0 then Vcrop ((img, top, bottom), (w, h)) else void w h[39m
     [38;5;2m 327[39m: [38;5;2m    in lincropinv ctor (void 0) (<->)[39m
     [38;5;2m 328[39m: [38;5;2m[39m
     [38;5;2m 329[39m: [38;5;2m  let crop ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m 330[39m: [38;5;2m    let img = if l <> 0 || r <> 0 then hcrop l r img else img in[39m
     [38;5;2m 331[39m: [38;5;2m    if t <> 0 || b <> 0 then vcrop t b img else img[39m
     [38;5;2m 332[39m: [38;5;2m[39m
     [38;5;2m 333[39m: [38;5;2m  let hpad left right img = hcrop (-left) (-right) img[39m
     [38;5;2m 334[39m: [38;5;2m[39m
     [38;5;2m 335[39m: [38;5;2m  let vpad top bottom img = vcrop (-top) (-bottom) img[39m
     [38;5;2m 336[39m: [38;5;2m[39m
     [38;5;2m 337[39m: [38;5;2m  let pad ?(l=0) ?(r=0) ?(t=0) ?(b=0) img =[39m
     [38;5;2m 338[39m: [38;5;2m    crop ~l:(-l) ~r:(-r) ~t:(-t) ~b:(-b) img[39m
     [38;5;2m 339[39m: [38;5;2m[39m
     [38;5;2m 340[39m: [38;5;2m  let hcat = concatm empty (<|>)[39m
     [38;5;2m 341[39m: [38;5;2m[39m
     [38;5;2m 342[39m: [38;5;2m  let vcat = concatm empty (<->)[39m
     [38;5;2m 343[39m: [38;5;2m[39m
     [38;5;2m 344[39m: [38;5;2m  let zcat xs = List.fold_right (</>) xs empty[39m
     [38;5;2m 345[39m: [38;5;2m[39m
     [38;5;2m 346[39m: [38;5;2m  let text attr tx =[39m
     [38;5;2m 347[39m: [38;5;2m    if Text.is_empty tx then void 0 1 else Segment (attr, tx)[39m
     [38;5;2m 348[39m: [38;5;2m[39m
     [38;5;2m 349[39m: [38;5;2m  let string attr s = text attr (Text.of_string s)[39m
     [38;5;2m 350[39m: [38;5;2m[39m
     [38;5;2m 351[39m: [38;5;2m  let uchars attr a = text attr (Text.of_uchars a)[39m
     [38;5;2m 352[39m: [38;5;2m[39m
     [38;5;2m 353[39m: [38;5;2m  let tabulate m n f =[39m
     [38;5;2m 354[39m: [38;5;2m    let m = max m 0 and n = max n 0 in[39m
     [38;5;2m 355[39m: [38;5;2m    linspcm empty (<->) 0 n (fun y -> linspcm empty (<|>) 0 m (fun x -> f x y))[39m
     [38;5;2m 356[39m: [38;5;2m[39m
     [38;5;2m 357[39m: [38;5;2m  let chars ctor attr c w h =[39m
     [38;5;2m 358[39m: [38;5;2m    if w < 1 || h < 1 then void w h else[39m
     [38;5;2m 359[39m: [38;5;2m      let line = text attr (ctor w c) in tabulate 1 h (fun _ _ -> line)[39m
     [38;5;2m 360[39m: [38;5;2m[39m
     [38;5;2m 361[39m: [38;5;2m  let char  = chars Text.replicatec[39m
     [38;5;2m 362[39m: [38;5;2m  let uchar = chars Text.replicateu[39m
     [38;5;2m 363[39m: [38;5;2m[39m
     [38;5;2m 364[39m: [38;5;2m  let hsnap ?(align=`Middle) w img =[39m
     [38;5;2m 365[39m: [38;5;2m    let off = width img - w in match align with[39m
     [38;5;2m 366[39m: [38;5;2m      | `Left   -> hcrop 0 off img[39m
     [38;5;2m 367[39m: [38;5;2m      | `Right  -> hcrop off 0 img[39m
     [38;5;2m 368[39m: [38;5;2m      | `Middle -> let w1 = off / 2 in hcrop w1 (off - w1) img[39m
     [38;5;2m 369[39m: [38;5;2m[39m
     [38;5;2m 370[39m: [38;5;2m  let vsnap ?(align=`Middle) h img =[39m
     [38;5;2m 371[39m: [38;5;2m    let off = height img - h in match align with[39m
     [38;5;2m 372[39m: [38;5;2m      | `Top    -> vcrop 0 off img[39m
     [38;5;2m 373[39m: [38;5;2m      | `Bottom -> vcrop off 0 img[39m
     [38;5;2m 374[39m: [38;5;2m      | `Middle -> let h1 = off / 2 in vcrop h1 (off - h1) img[39m
     [38;5;2m 375[39m: [38;5;2m[39m
     [38;5;2m 376[39m: [38;5;2m  module Fmt = struct[39m
     [38;5;2m 377[39m: [38;5;2m[39m
     [38;5;2m 378[39m: [38;5;2m    open Format[39m
     [38;5;2m 379[39m: [38;5;2m[39m
     [38;5;2m 380[39m: [38;5;2m    type stag += Attr of A.t[39m
     [38;5;2m 381[39m: [38;5;2m[39m
     [38;5;2m 382[39m: [38;5;2m    let push r x = r := x :: !r[39m
     [38;5;2m 383[39m: [38;5;2m    let pop r = r := (match !r with _::xs -> xs | _ -> [])[39m
     [38;5;2m 384[39m: [38;5;2m    let top_a r = match !r with a::_ -> a | _ -> A.empty[39m
     [38;5;2m 385[39m: [38;5;2m[39m
     [38;5;2m 386[39m: [38;5;2m    let create () =[39m
     [38;5;2m 387[39m: [38;5;2m      let img, line, attr = ref empty, ref empty, ref [] in[39m
     [38;5;2m 388[39m: [38;5;2m      let fmt = formatter_of_out_functions {[39m
     [38;5;2m 389[39m: [38;5;2m          out_flush = (fun () ->[39m
     [38;5;2m 390[39m: [38;5;2m            img := !img <-> !line; line := empty; attr := [])[39m
     [38;5;2m 391[39m: [38;5;2m        ; out_newline = (fun () ->[39m
     [38;5;2m 392[39m: [38;5;2m            img := !img <-> !line; line := void 0 1)[39m
     [38;5;2m 393[39m: [38;5;2m        ; out_string = (fun s i n ->[39m
     [38;5;2m 394[39m: [38;5;2m            line := !line <|> string (top_a attr) String.(sub0cp s i n))[39m
     [38;5;2m 395[39m: [38;5;2m        (* Not entirely clear; either or both could be void: *)[39m
     [38;5;2m 396[39m: [38;5;2m        ; out_spaces = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m 397[39m: [38;5;2m        ; out_indent = (fun w -> line := !line <|> char (top_a attr) ' ' w 1)[39m
     [38;5;2m 398[39m: [38;5;2m      } in[39m
     [38;5;2m 399[39m: [38;5;2m      pp_set_formatter_stag_functions fmt {[39m
     [38;5;2m 400[39m: [38;5;2m        (pp_get_formatter_stag_functions fmt ()) with[39m
     [38;5;2m 401[39m: [38;5;2m            mark_open_stag =[39m
     [38;5;2m 402[39m: [38;5;2m              (function Attr a -> push attr A.(top_a attr ++ a); "" | _ -> "")[39m
     [38;5;2m 403[39m: [38;5;2m          ; mark_close_stag = (fun _ -> pop attr; "") };[39m
     [38;5;2m 404[39m: [38;5;2m      pp_set_mark_tags fmt true;[39m
     [38;5;2m 405[39m: [38;5;2m      fmt, fun () -> let i = !img in img := empty; line := empty; attr := []; i[39m
     [38;5;2m 406[39m: [38;5;2m[39m
     [38;5;2m 407[39m: [38;5;2m    let ppf, reset = create ()[39m
     [38;5;2m 408[39m: [38;5;2m[39m
     [38;5;2m 409[39m: [38;5;2m    let kstrf ?(attr = A.empty) ?(w = 1000000) k format =[39m
     [38;5;2m 410[39m: [38;5;2m      let m = ref 0 in[39m
     [38;5;2m 411[39m: [38;5;2m      let f1 _ () =[39m
     [38;5;2m 412[39m: [38;5;2m        m := pp_get_margin ppf ();[39m
     [38;5;2m 413[39m: [38;5;2m        pp_set_margin ppf w;[39m
     [38;5;2m 414[39m: [38;5;2m        pp_open_stag ppf (Attr attr)[39m
     [38;5;2m 415[39m: [38;5;2m      and k _ =[39m
     [38;5;2m 416[39m: [38;5;2m        pp_print_flush ppf ();[39m
     [38;5;2m 417[39m: [38;5;2m        pp_set_margin ppf !m;[39m
     [38;5;2m 418[39m: [38;5;2m        reset () |> k[39m
     [38;5;2m 419[39m: [38;5;2m      in kfprintf k ppf ("%a" ^^ format) f1 ()[39m
     [38;5;2m 420[39m: [38;5;2m[39m
     [38;5;2m 421[39m: [38;5;2m    let strf ?attr ?w format = kstrf ?attr ?w (fun i -> i) format[39m
     [38;5;2m 422[39m: [38;5;2m[39m
     [38;5;2m 423[39m: [38;5;2m    let attr attr f fmt x =[39m
     [38;5;2m 424[39m: [38;5;2m      pp_open_stag fmt (Attr attr); f fmt x; pp_close_stag fmt ()[39m
     [38;5;2m 425[39m: [38;5;2m  end[39m
     [38;5;2m 426[39m: [38;5;2m[39m
     [38;5;2m 427[39m: [38;5;2m  let kstrf, strf, pp_attr = Fmt.(kstrf, strf, attr)[39m
     [38;5;2m 428[39m: [38;5;2mend[39m
     [38;5;2m 429[39m: [38;5;2m[39m
     [38;5;2m 430[39m: [38;5;2mmodule Operation = struct[39m
     [38;5;2m 431[39m: [38;5;2m[39m
     [38;5;2m 432[39m: [38;5;2m  type t =[39m
     [38;5;2m 433[39m: [38;5;2m    End[39m
     [38;5;2m 434[39m: [38;5;2m  | Skip of int * t[39m
     [38;5;2m 435[39m: [38;5;2m  | Text of A.t * Text.t * t[39m
     [38;5;2m 436[39m: [38;5;2m[39m
     [38;5;2m 437[39m: [38;5;2m  let skip n k = if n = 0 then k else match k with[39m
     [38;5;2m 438[39m: [38;5;2m      End         -> End[39m
     [38;5;2m 439[39m: [38;5;2m    | Skip (m, k) -> Skip (m + n, k)[39m
     [38;5;2m 440[39m: [38;5;2m    | _           -> Skip (n, k) [@@inline][39m
     [38;5;2m 441[39m: [38;5;2m[39m
     [38;5;2m 442[39m: [38;5;2m  let rec scan x w row i k =[39m
     [38;5;2m 443[39m: [38;5;2m    let open I in match i with[39m
     [38;5;2m 444[39m: [38;5;2m[39m
     [38;5;2m 445[39m: [38;5;2m    | Empty | Void _ -> skip w k[39m
     [38;5;2m 446[39m: [38;5;2m[39m
     [38;5;2m 447[39m: [38;5;2m    | Segment _ when row > 0 -> skip w k[39m
     [38;5;2m 448[39m: [38;5;2m    | Segment (attr, text) ->[39m
     [38;5;2m 449[39m: [38;5;2m        let t  = Text.sub text x w in[39m
     [38;5;2m 450[39m: [38;5;2m        let w1 = Text.width t in[39m
     [38;5;2m 451[39m: [38;5;2m        let p  = if w > w1 then skip (w - w1) k else k in[39m
     [38;5;2m 452[39m: [38;5;2m        if w1 > 0 then Text (attr, t, p) else p[39m
     [38;5;2m 453[39m: [38;5;2m[39m
     [38;5;2m 454[39m: [38;5;2m    | Hcompose ((i1, i2), _) ->[39m
     [38;5;2m 455[39m: [38;5;2m        let w1 = width i1[39m
     [38;5;2m 456[39m: [38;5;2m        and w2 = width i2 in[39m
     [38;5;2m 457[39m: [38;5;2m        if x >= w1 + w2 then skip w k else[39m
     [38;5;2m 458[39m: [38;5;2m        if x >= w1 then scan (x - w1) w row i2 k else[39m
     [38;5;2m 459[39m: [38;5;2m        if x + w <= w1 then scan x w row i1 k else[39m
     [38;5;2m 460[39m: [38;5;2m          scan x (w1 - x) row i1 @@ scan 0 (w - w1 + x) row i2 @@ k[39m
     [38;5;2m 461[39m: [38;5;2m[39m
     [38;5;2m 462[39m: [38;5;2m    | Vcompose ((i1, i2), _) ->[39m
     [38;5;2m 463[39m: [38;5;2m        let h1 = height i1[39m
     [38;5;2m 464[39m: [38;5;2m        and h2 = height i2 in[39m
     [38;5;2m 465[39m: [38;5;2m        if row >= h1 + h2 then skip w k else[39m
     [38;5;2m 466[39m: [38;5;2m        if row >= h1 then scan x w (row - h1) i2 k else scan x w row i1 k[39m
     [38;5;2m 467[39m: [38;5;2m[39m
     [38;5;2m 468[39m: [38;5;2m    | Zcompose ((i1, i2), _) ->[39m
     [38;5;2m 469[39m: [38;5;2m        let rec stitch x w row i = function[39m
     [38;5;2m 470[39m: [38;5;2m          | End -> scan x w row i End[39m
     [38;5;2m 471[39m: [38;5;2m          | Text (a, t, ops) as opss ->[39m
     [38;5;2m 472[39m: [38;5;2m              let w1 = Text.width t in[39m
     [38;5;2m 473[39m: [38;5;2m              if w1 >= w then opss else[39m
     [38;5;2m 474[39m: [38;5;2m                Text (a, t, stitch (x + w1) (w - w1) row i ops)[39m
     [38;5;2m 475[39m: [38;5;2m          | Skip (w1, ops) ->[39m
     [38;5;2m 476[39m: [38;5;2m              scan x w1 row i @@[39m
     [38;5;2m 477[39m: [38;5;2m                if w1 >= w then ops else stitch (x + w1) (w - w1) row i ops[39m
     [38;5;2m 478[39m: [38;5;2m        in stitch x w row i2 @@ scan x w row i1 @@ k[39m
     [38;5;2m 479[39m: [38;5;2m[39m
     [38;5;2m 480[39m: [38;5;2m    | Hcrop ((i, left, _), (w1, _)) ->[39m
     [38;5;2m 481[39m: [38;5;2m        if x >= w1 then skip w k else[39m
     [38;5;2m 482[39m: [38;5;2m        if x + w <= w1 then scan (x + left) w row i k else[39m
     [38;5;2m 483[39m: [38;5;2m          scan (x + left) (w1 - x) row i @@ skip (w - w1 + x) k[39m
     [38;5;2m 484[39m: [38;5;2m[39m
     [38;5;2m 485[39m: [38;5;2m    | Vcrop ((i, top, _), (_, h1)) ->[39m
     [38;5;2m 486[39m: [38;5;2m        if row < h1 then scan x w (top + row) i k else skip w k[39m
     [38;5;2m 487[39m: [38;5;2m[39m
     [38;5;2m 488[39m: [38;5;2m  let of_image (x, y) (w, h) i =[39m
     [38;5;2m 489[39m: [38;5;2m    List.init h (fun off -> scan x (x + w) (y + off) i End)[39m
     [38;5;2m 490[39m: [38;5;2mend[39m
     [38;5;2m 491[39m: [38;5;2m[39m
     [38;5;2m 492[39m: [38;5;2mmodule Cap = struct[39m
     [38;5;2m 493[39m: [38;5;2m[39m
     [38;5;2m 494[39m: [38;5;2m  type op = Buffer.t -> unit[39m
     [38;5;2m 495[39m: [38;5;2m[39m
     [38;5;2m 496[39m: [38;5;2m  let (&) op1 op2 buf = op1 buf; op2 buf[39m
     [38;5;2m 497[39m: [38;5;2m[39m
     [38;5;2m 498[39m: [38;5;2m  type t = {[39m
     [38;5;2m 499[39m: [38;5;2m    skip    : int -> op[39m
     [38;5;2m 500[39m: [38;5;2m  ; sgr     : A.t -> op[39m
     [38;5;2m 501[39m: [38;5;2m  ; newline : op[39m
     [38;5;2m 502[39m: [38;5;2m  ; clreol  : op[39m
     [38;5;2m 503[39m: [38;5;2m  ; cursvis : bool -> op[39m
     [38;5;2m 504[39m: [38;5;2m  ; cursat  : int -> int -> op[39m
     [38;5;2m 505[39m: [38;5;2m  ; cubcuf  : int -> op[39m
     [38;5;2m 506[39m: [38;5;2m  ; cuucud  : int -> op[39m
     [38;5;2m 507[39m: [38;5;2m  ; cr      : op[39m
     [38;5;2m 508[39m: [38;5;2m  ; altscr  : bool -> op[39m
     [38;5;2m 509[39m: [38;5;2m  ; mouse   : bool -> op[39m
     [38;5;2m 510[39m: [38;5;2m  ; bpaste  : bool -> op[39m
     [38;5;2m 511[39m: [38;5;2m  }[39m
     [38;5;2m 512[39m: [38;5;2m[39m
     [38;5;2m 513[39m: [38;5;2m  let ((<|), (<.), (<!)) = Buffer.(add_string, add_char, add_decimal)[39m
     [38;5;2m 514[39m: [38;5;2m[39m
     [38;5;2m 515[39m: [38;5;2m  let sts = [ ";1"; ";3"; ";4"; ";5"; ";7" ][39m
     [38;5;2m 516[39m: [38;5;2m[39m
     [38;5;2m 517[39m: [38;5;2m  let sgr { A.fg; bg; st } buf =[39m
     [38;5;2m 518[39m: [38;5;2m    buf <| "\x1b[0";[39m
     [38;5;2m 519[39m: [38;5;2m    let rgb888 buf x =[39m
     [38;5;2m 520[39m: [38;5;2m      buf <! A.r x; buf <. ';'; buf <! A.g x; buf <. ';'; buf <! A.b x in[39m
     [38;5;2m 521[39m: [38;5;2m    ( match A.tag fg with[39m
     [38;5;2m 522[39m: [38;5;2m        0 -> ()[39m
     [38;5;2m 523[39m: [38;5;2m      | 1 -> let c = A.i fg in[39m
     [38;5;2m 524[39m: [38;5;2m             if c < 8  then ( buf <. ';'; buf <! (c + 30) )[39m
     [38;5;2m 525[39m: [38;5;2m             else if c < 16 then ( buf <. ';'; buf <! (c + 82) )[39m
     [38;5;2m 526[39m: [38;5;2m             else ( buf <| ";38;5;"; buf <! c )[39m
     [38;5;2m 527[39m: [38;5;2m      | _ -> buf <| ";38;2;"; rgb888 buf fg );[39m
     [38;5;2m 528[39m: [38;5;2m    ( match A.tag bg with[39m
     [38;5;2m 529[39m: [38;5;2m        0 -> ()[39m
     [38;5;2m 530[39m: [38;5;2m      | 1 -> let c = A.i bg in[39m
     [38;5;2m 531[39m: [38;5;2m             if c < 8  then ( buf <. ';'; buf <! (c + 40) )[39m
     [38;5;2m 532[39m: [38;5;2m             else if c < 16 then ( buf <. ';'; buf <! (c + 92) )[39m
     [38;5;2m 533[39m: [38;5;2m             else ( buf <| ";48;5;"; buf <! c )[39m
     [38;5;2m 534[39m: [38;5;2m      | _ -> buf <| ";48;2;"; rgb888 buf bg );[39m
     [38;5;2m 535[39m: [38;5;2m    if st <> 0 then[39m
     [38;5;2m 536[39m: [38;5;2m      ( let rec go f xs = match (f, xs) with[39m
     [38;5;2m 537[39m: [38;5;2m          | (0, _) | (_, []) -> ()[39m
     [38;5;2m 538[39m: [38;5;2m          | (_, x::xs) -> if f land 1 > 0 then buf <| x; go (f lsr 1) xs in[39m
     [38;5;2m 539[39m: [38;5;2m        go st sts );[39m
     [38;5;2m 540[39m: [38;5;2m    buf <. 'm'[39m
     [38;5;2m 541[39m: [38;5;2m[39m
     [38;5;2m 542[39m: [38;5;2m  let ansi = {[39m
     [38;5;2m 543[39m: [38;5;2m      skip    = (fun n b -> b <| "\x1b[0m"; Buffer.add_chars b ' ' n)[39m
     [38;5;2m 544[39m: [38;5;2m    ; newline = (fun b -> b <| "\x1bE")[39m
     [38;5;2m 545[39m: [38;5;2m    ; altscr  = (fun x b -> b <| if x then "\x1b[?1049h" else "\x1b[?1049l")[39m
     [38;5;2m 546[39m: [38;5;2m    ; cursat  = (fun w h b -> b <| "\x1b["; b <! h; b <. ';'; b <! w; b <. 'H')[39m
     [38;5;2m 547[39m: [38;5;2m    ; cubcuf  = (fun x b -> b <| "\x1b["; b <! abs x; b <. if x < 0 then 'D' else 'C')[39m
     [38;5;2m 548[39m: [38;5;2m    ; cuucud  = (fun y b -> b <| "\x1b["; b <! abs y; b <. if y < 0 then 'A' else 'B')[39m
     [38;5;2m 549[39m: [38;5;2m    ; cr      = (fun b -> b <| "\x1b[1G")[39m
     [38;5;2m 550[39m: [38;5;2m    ; clreol  = (fun b -> b <| "\x1b[K")[39m
     [38;5;2m 551[39m: [38;5;2m    ; cursvis = (fun x b -> b <| if x then "\x1b[34h\x1b[?25h" else "\x1b[?25l")[39m
     [38;5;2m 552[39m: [38;5;2m    ; mouse   = (fun x b -> b <| if x then "\x1b[?1000;1002;1005;1015;1006h"[39m
     [38;5;2m 553[39m: [38;5;2m                                      else "\x1b[?1000;1002;1005;1015;1006l")[39m
     [38;5;2m 554[39m: [38;5;2m    ; bpaste  = (fun x b -> b <| if x then "\x1b[?2004h" else "\x1b[?2004l")[39m
     [38;5;2m 555[39m: [38;5;2m    ; sgr }[39m
     [38;5;2m 556[39m: [38;5;2m[39m
     [38;5;2m 557[39m: [38;5;2m  let no0 _     = ()[39m
     [38;5;2m 558[39m: [38;5;2m  and no1 _ _   = ()[39m
     [38;5;2m 559[39m: [38;5;2m  and no2 _ _ _ = ()[39m
     [38;5;2m 560[39m: [38;5;2m[39m
     [38;5;2m 561[39m: [38;5;2m  let dumb = {[39m
     [38;5;2m 562[39m: [38;5;2m      skip    = (fun n b -> Buffer.add_chars b ' ' n)[39m
     [38;5;2m 563[39m: [38;5;2m    ; newline = (fun b -> b <| "\n")[39m
     [38;5;2m 564[39m: [38;5;2m    ; altscr  = no1[39m
     [38;5;2m 565[39m: [38;5;2m    ; cursat  = no2[39m
     [38;5;2m 566[39m: [38;5;2m    ; cubcuf  = no1[39m
     [38;5;2m 567[39m: [38;5;2m    ; cuucud  = no1[39m
     [38;5;2m 568[39m: [38;5;2m    ; cr      = no0[39m
     [38;5;2m 569[39m: [38;5;2m    ; clreol  = no0[39m
     [38;5;2m 570[39m: [38;5;2m    ; cursvis = no1[39m
     [38;5;2m 571[39m: [38;5;2m    ; sgr     = no1[39m
     [38;5;2m 572[39m: [38;5;2m    ; mouse   = no1[39m
     [38;5;2m 573[39m: [38;5;2m    ; bpaste  = no1[39m
     [38;5;2m 574[39m: [38;5;2m    }[39m
     [38;5;2m 575[39m: [38;5;2m[39m
     [38;5;2m 576[39m: [38;5;2m  let erase cap buf = cap.sgr A.empty buf; cap.clreol buf (* KEEP ETA-LONG. *)[39m
     [38;5;2m 577[39m: [38;5;2m  let cursat0 cap w h = cap.cursat (max w 0 + 1) (max h 0 + 1)[39m
     [38;5;2m 578[39m: [38;5;2mend[39m
     [38;5;2m 579[39m: [38;5;2m[39m
     [38;5;2m 580[39m: [38;5;2mmodule Render = struct[39m
     [38;5;2m 581[39m: [38;5;2m[39m
     [38;5;2m 582[39m: [38;5;2m  open Cap[39m
     [38;5;2m 583[39m: [38;5;2m  open Operation[39m
     [38;5;2m 584[39m: [38;5;2m[39m
     [38;5;2m 585[39m: [38;5;2m  let skip_op cap buf n = cap.skip n buf[39m
     [38;5;2m 586[39m: [38;5;2m  let text_op cap buf a x = cap.sgr a buf; Text.to_buffer buf x[39m
     [38;5;2m 587[39m: [38;5;2m[39m
     [38;5;2m 588[39m: [38;5;2m  let rec line cap buf = function[39m
     [38;5;2m 589[39m: [38;5;2m    End              -> erase cap buf[39m
     [38;5;2m 590[39m: [38;5;2m  | Skip (n,    End) -> erase cap buf; skip_op cap buf n[39m
     [38;5;2m 591[39m: [38;5;2m  | Text (a, x, End) -> erase cap buf; text_op cap buf a x[39m
     [38;5;2m 592[39m: [38;5;2m  | Skip (n,    ops) -> skip_op cap buf n; line cap buf ops[39m
     [38;5;2m 593[39m: [38;5;2m  | Text (a, x, ops) -> text_op cap buf a x; line cap buf ops[39m
     [38;5;2m 594[39m: [38;5;2m[39m
     [38;5;2m 595[39m: [38;5;2m  let rec lines cap buf = function[39m
     [38;5;2m 596[39m: [38;5;2m    []      -> ()[39m
     [38;5;2m 597[39m: [38;5;2m  | [ln]    -> line cap buf ln; cap.sgr A.empty buf[39m
     [38;5;2m 598[39m: [38;5;2m  | ln::lns -> line cap buf ln; cap.newline buf; lines cap buf lns[39m
     [38;5;2m 599[39m: [38;5;2m[39m
     [38;5;2m 600[39m: [38;5;2m  let to_buffer buf cap off dim img =[39m
     [38;5;2m 601[39m: [38;5;2m    Operation.of_image off dim img |> lines cap buf[39m
     [38;5;2m 602[39m: [38;5;2m[39m
     [38;5;2m 603[39m: [38;5;2m  let pp cap ppf img =[39m
     [38;5;2m 604[39m: [38;5;2m    let open Format in[39m
     [38;5;2m 605[39m: [38;5;2m    let buf = Buffer.create (I.width img * 2) in[39m
     [38;5;2m 606[39m: [38;5;2m    let h, w = I.(height img, width img |> min (pp_get_margin ppf ())) in[39m
     [38;5;2m 607[39m: [38;5;2m    let img = I.(img </> vpad (h - 1) 0 (char A.empty ' ' w 1)) in[39m
     [38;5;2m 608[39m: [38;5;2m    pp_open_vbox ppf 0;[39m
     [38;5;2m 609[39m: [38;5;2m    for y = 0 to h - 1 do[39m
     [38;5;2m 610[39m: [38;5;2m      Buffer.clear buf; to_buffer buf cap (0, y) (w, 1) img;[39m
     [38;5;2m 611[39m: [38;5;2m      pp_print_as ppf w (Buffer.contents buf);[39m
     [38;5;2m 612[39m: [38;5;2m      if y < h - 1 then pp_print_cut ppf ()[39m
     [38;5;2m 613[39m: [38;5;2m    done;[39m
     [38;5;2m 614[39m: [38;5;2m    pp_close_box ppf ()[39m
     [38;5;2m 615[39m: [38;5;2m[39m
     [38;5;2m 616[39m: [38;5;2m  let pp_image = pp Cap.ansi[39m
     [38;5;2m 617[39m: [38;5;2m  let pp_attr ppf a =[39m
     [38;5;2m 618[39m: [38;5;2m    let string_ = I.string A.empty in[39m
     [38;5;2m 619[39m: [38;5;2m    pp_image ppf I.(string_ "<" <|> string a "ATTR" <|> string_ ">")[39m
     [38;5;2m 620[39m: [38;5;2mend[39m
     [38;5;2m 621[39m: [38;5;2m[39m
     [38;5;2m 622[39m: [38;5;2mmodule Unescape = struct[39m
     [38;5;2m 623[39m: [38;5;2m[39m
     [38;5;2m 624[39m: [38;5;2m  type special = [[39m
     [38;5;2m 625[39m: [38;5;2m    `Escape[39m
     [38;5;2m 626[39m: [38;5;2m  | `Enter[39m
     [38;5;2m 627[39m: [38;5;2m  | `Tab[39m
     [38;5;2m 628[39m: [38;5;2m  | `Backspace[39m
     [38;5;2m 629[39m: [38;5;2m  | `Insert[39m
     [38;5;2m 630[39m: [38;5;2m  | `Delete[39m
     [38;5;2m 631[39m: [38;5;2m  | `Home | `End[39m
     [38;5;2m 632[39m: [38;5;2m  | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m 633[39m: [38;5;2m  | `Page of [ `Up | `Down ][39m
     [38;5;2m 634[39m: [38;5;2m  | `Function of int[39m
     [38;5;2m 635[39m: [38;5;2m  ][39m
     [38;5;2m 636[39m: [38;5;2m[39m
     [38;5;2m 637[39m: [38;5;2m  type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m 638[39m: [38;5;2m[39m
     [38;5;2m 639[39m: [38;5;2m  type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m 640[39m: [38;5;2m[39m
     [38;5;2m 641[39m: [38;5;2m  type key = [ special | `Uchar of Uchar.t  | `ASCII of char ] * mods[39m
     [38;5;2m 642[39m: [38;5;2m[39m
     [38;5;2m 643[39m: [38;5;2m  type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m 644[39m: [38;5;2m[39m
     [38;5;2m 645[39m: [38;5;2m  type paste = [ `Start | `End ][39m
     [38;5;2m 646[39m: [38;5;2m[39m
     [38;5;2m 647[39m: [38;5;2m  type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m 648[39m: [38;5;2m[39m
     [38;5;2m 649[39m: [38;5;2m  type esc =[39m
     [38;5;2m 650[39m: [38;5;2m    C0    of char[39m
     [38;5;2m 651[39m: [38;5;2m  | C1    of char[39m
     [38;5;2m 652[39m: [38;5;2m  | SS2   of char[39m
     [38;5;2m 653[39m: [38;5;2m  | CSI   of string * int list * char[39m
     [38;5;2m 654[39m: [38;5;2m  | Esc_M of int * int * int[39m
     [38;5;2m 655[39m: [38;5;2m  | Uchar of Uchar.t[39m
     [38;5;2m 656[39m: [38;5;2m[39m
     [38;5;2m 657[39m: [38;5;2m  let uchar = function `Uchar u -> u | `ASCII c -> Uchar.of_char c[39m
     [38;5;2m 658[39m: [38;5;2m[39m
     [38;5;2m 659[39m: [38;5;2m  let csi =[39m
     [38;5;2m 660[39m: [38;5;2m    let open Option in[39m
     [38;5;2m 661[39m: [38;5;2m    let rec priv acc = function[39m
     [38;5;2m 662[39m: [38;5;2m      | x::xs when btw x 0x3c 0x3f -> priv (Char.unsafe_chr x::acc) xs[39m
     [38;5;2m 663[39m: [38;5;2m      | xs                         -> param (String.of_chars_rev acc) None [] xs[39m
     [38;5;2m 664[39m: [38;5;2m    and param prv p ps = function[39m
     [38;5;2m 665[39m: [38;5;2m      | x::xs when btw x 0x30 0x39 -> param prv (Some (get 0 p * 10 + x - 0x30)) ps xs[39m
     [38;5;2m 666[39m: [38;5;2m      | 0x3b::xs                   -> param prv None (get 0 p :: ps) xs[39m
     [38;5;2m 667[39m: [38;5;2m      | xs                         -> code prv (List.rev (to_list p @ ps)) xs[39m
     [38;5;2m 668[39m: [38;5;2m    and code prv ps = function (* Conflate two classes because urxvt... *)[39m
     [38;5;2m 669[39m: [38;5;2m      | x::xs when btw x 0x20 0x2f || btw x 0x40 0x7e ->[39m
     [38;5;2m 670[39m: [38;5;2m          Some (CSI (prv, ps, (Char.chr x)), xs)[39m
     [38;5;2m 671[39m: [38;5;2m      | _ -> None in[39m
     [38;5;2m 672[39m: [38;5;2m    priv [][39m
     [38;5;2m 673[39m: [38;5;2m[39m
     [38;5;2m 674[39m: [38;5;2m  let rec demux =[39m
     [38;5;2m 675[39m: [38;5;2m    let chr = Char.chr in function[39m
     [38;5;2m 676[39m: [38;5;2m    | 0x1b::0x5b::0x4d::a::b::c::xs -> Esc_M (a, b, c) :: demux xs[39m
     [38;5;2m 677[39m: [38;5;2m    | 0x1b::0x5b::xs | 0x9b::xs ->[39m
     [38;5;2m 678[39m: [38;5;2m        let (r, xs) = csi xs |> Option.get (C1 '\x5b', xs) in r :: demux xs[39m
     [38;5;2m 679[39m: [38;5;2m    | 0x1b::0x4f::x::xs | 0x8f::x::xs[39m
     [38;5;2m 680[39m: [38;5;2m        when is_ascii x                 -> SS2 (chr x) :: demux xs[39m
     [38;5;2m 681[39m: [38;5;2m    | 0x1b::x::xs when is_C1 (x + 0x40) -> C1 (chr x) :: demux xs[39m
     [38;5;2m 682[39m: [38;5;2m    | x::xs when is_C1 x                -> C1 (chr (x - 0x40)) :: demux xs[39m
     [38;5;2m 683[39m: [38;5;2m    | x::xs when is_C0 x                -> C0 (chr x) :: demux xs[39m
     [38;5;2m 684[39m: [38;5;2m    | x::xs -> Uchar (Uchar.unsafe_of_int x) :: demux xs[39m
     [38;5;2m 685[39m: [38;5;2m    | [] -> [][39m
     [38;5;2m 686[39m: [38;5;2m[39m
     [38;5;2m 687[39m: [38;5;2m  let xtrm_mod_flags = function[39m
     [38;5;2m 688[39m: [38;5;2m    | 2 -> Some [`Shift][39m
     [38;5;2m 689[39m: [38;5;2m    | 3 -> Some [`Meta][39m
     [38;5;2m 690[39m: [38;5;2m    | 4 -> Some [`Shift; `Meta][39m
     [38;5;2m 691[39m: [38;5;2m    | 5 -> Some [`Ctrl][39m
     [38;5;2m 692[39m: [38;5;2m    | 6 -> Some [`Shift; `Ctrl][39m
     [38;5;2m 693[39m: [38;5;2m    | 7 -> Some [`Meta; `Ctrl][39m
     [38;5;2m 694[39m: [38;5;2m    | 8 -> Some [`Shift; `Meta; `Ctrl][39m
     [38;5;2m 695[39m: [38;5;2m    | _ -> None[39m
     [38;5;2m 696[39m: [38;5;2m[39m
     [38;5;2m 697[39m: [38;5;2m  let mods_xtrm = function[39m
     [38;5;2m 698[39m: [38;5;2m    | [1;p] -> xtrm_mod_flags p[39m
     [38;5;2m 699[39m: [38;5;2m    | []    -> Some [][39m
     [38;5;2m 700[39m: [38;5;2m    | _     -> None[39m
     [38;5;2m 701[39m: [38;5;2m[39m
     [38;5;2m 702[39m: [38;5;2m  let mods_rxvt = function[39m
     [38;5;2m 703[39m: [38;5;2m    | '~' -> Some [][39m
     [38;5;2m 704[39m: [38;5;2m    | '$' -> Some [`Shift][39m
     [38;5;2m 705[39m: [38;5;2m    | '^' -> Some [`Ctrl][39m
     [38;5;2m 706[39m: [38;5;2m    | '@' -> Some [`Ctrl; `Shift][39m
     [38;5;2m 707[39m: [38;5;2m    | _ -> None[39m
     [38;5;2m 708[39m: [38;5;2m[39m
     [38;5;2m 709[39m: [38;5;2m  let mods_common ps code = match (ps, code) with[39m
     [38;5;2m 710[39m: [38;5;2m    | ([], '~')  -> Some [][39m
     [38;5;2m 711[39m: [38;5;2m    | ([], c)    -> mods_rxvt c[39m
     [38;5;2m 712[39m: [38;5;2m    | ([p], '~') -> xtrm_mod_flags p[39m
     [38;5;2m 713[39m: [38;5;2m    | _          -> None[39m
     [38;5;2m 714[39m: [38;5;2m[39m
     [38;5;2m 715[39m: [38;5;2m  let mouse_p p =[39m
     [38;5;2m 716[39m: [38;5;2m    let btn = match p land 3 with[39m
     [38;5;2m 717[39m: [38;5;2m      | 0 when bit 6 p -> `Scroll `Up[39m
     [38;5;2m 718[39m: [38;5;2m      | 0              -> `Left[39m
     [38;5;2m 719[39m: [38;5;2m      | 1 when bit 6 p -> `Scroll `Down[39m
     [38;5;2m 720[39m: [38;5;2m      | 1              -> `Middle[39m
     [38;5;2m 721[39m: [38;5;2m      | 2 when bit 6 p -> `ALL (* `Scroll `Left *)[39m
     [38;5;2m 722[39m: [38;5;2m      | 2              -> `Right[39m
     [38;5;2m 723[39m: [38;5;2m      | 3 when bit 6 p -> `ALL (* `Scroll `Right *)[39m
     [38;5;2m 724[39m: [38;5;2m      | _              -> `ALL[39m
     [38;5;2m 725[39m: [38;5;2m    and drag = bit 5 p[39m
     [38;5;2m 726[39m: [38;5;2m    and mods =[39m
     [38;5;2m 727[39m: [38;5;2m      (if bit 3 p then [`Meta] else []) @[39m
     [38;5;2m 728[39m: [38;5;2m      (if bit 4 p then [`Ctrl] else [])[39m
     [38;5;2m 729[39m: [38;5;2m    in (btn, drag, mods)[39m
     [38;5;2m 730[39m: [38;5;2m[39m
     [38;5;2m 731[39m: [38;5;2m  let key k mods = Some (`Key (k, mods))[39m
     [38;5;2m 732[39m: [38;5;2m[39m
     [38;5;2m 733[39m: [38;5;2m  let event_of_control_code =[39m
     [38;5;2m 734[39m: [38;5;2m    let open Option in function[39m
     [38;5;2m 735[39m: [38;5;2m    | Uchar u when Uchar.to_int u |> is_ascii ->[39m
     [38;5;2m 736[39m: [38;5;2m        Some (`Key (`ASCII (Uchar.unsafe_to_char u), []))[39m
     [38;5;2m 737[39m: [38;5;2m    | Uchar u -> Some (`Key (`Uchar u, []))[39m
     [38;5;2m 738[39m: [38;5;2m[39m
     [38;5;2m 739[39m: [38;5;2m    | C0 '\x1b'        -> key `Escape [][39m
     [38;5;2m 740[39m: [38;5;2m    | C0 ('\b'|'\x7f') -> key `Backspace [][39m
     [38;5;2m 741[39m: [38;5;2m    | C0 '\n'          -> key `Enter [][39m
     [38;5;2m 742[39m: [38;5;2m    | C0 '\t'          -> key `Tab [][39m
     [38;5;2m 743[39m: [38;5;2m[39m
     [38;5;2m 744[39m: [38;5;2m    | C0 x -> key (`ASCII Char.(code x + 0x40 |> unsafe_chr)) [`Ctrl][39m
     [38;5;2m 745[39m: [38;5;2m    | C1 x -> key (`ASCII x) [`Meta][39m
     [38;5;2m 746[39m: [38;5;2m[39m
     [38;5;2m 747[39m: [38;5;2m    | CSI ("",[],'Z') -> key `Tab [`Shift][39m
     [38;5;2m 748[39m: [38;5;2m[39m
     [38;5;2m 749[39m: [38;5;2m    | CSI ("",p,'A') -> mods_xtrm p >>= key (`Arrow `Up)[39m
     [38;5;2m 750[39m: [38;5;2m    | CSI ("",p,'B') -> mods_xtrm p >>= key (`Arrow `Down)[39m
     [38;5;2m 751[39m: [38;5;2m    | CSI ("",p,'C') -> mods_xtrm p >>= key (`Arrow `Right)[39m
     [38;5;2m 752[39m: [38;5;2m    | CSI ("",p,'D') -> mods_xtrm p >>= key (`Arrow `Left)[39m
     [38;5;2m 753[39m: [38;5;2m[39m
     [38;5;2m 754[39m: [38;5;2m    | CSI ("",[],'a') -> key (`Arrow `Up) [`Shift][39m
     [38;5;2m 755[39m: [38;5;2m    | CSI ("",[],'b') -> key (`Arrow `Down) [`Shift][39m
     [38;5;2m 756[39m: [38;5;2m    | CSI ("",[],'c') -> key (`Arrow `Right) [`Shift][39m
     [38;5;2m 757[39m: [38;5;2m    | CSI ("",[],'d') -> key (`Arrow `Left) [`Shift][39m
     [38;5;2m 758[39m: [38;5;2m    | SS2 ('A'|'a') -> key (`Arrow `Up) [`Ctrl][39m
     [38;5;2m 759[39m: [38;5;2m    | SS2 ('B'|'b') -> key (`Arrow `Down) [`Ctrl][39m
     [38;5;2m 760[39m: [38;5;2m    | SS2 ('C'|'c') -> key (`Arrow `Right) [`Ctrl][39m
     [38;5;2m 761[39m: [38;5;2m    | SS2 ('D'|'d') -> key (`Arrow `Left) [`Ctrl][39m
     [38;5;2m 762[39m: [38;5;2m[39m
     [38;5;2m 763[39m: [38;5;2m    | CSI ("",5::p,c) -> mods_common p c >>= key (`Page `Up)[39m
     [38;5;2m 764[39m: [38;5;2m    | CSI ("",6::p,c) -> mods_common p c >>= key (`Page `Down)[39m
     [38;5;2m 765[39m: [38;5;2m[39m
     [38;5;2m 766[39m: [38;5;2m    | CSI ("",2::p,c) -> mods_common p c >>= key `Insert[39m
     [38;5;2m 767[39m: [38;5;2m    | CSI ("",3::p,c) -> mods_common p c >>= key `Delete[39m
     [38;5;2m 768[39m: [38;5;2m[39m
     [38;5;2m 769[39m: [38;5;2m    | CSI ("",[4],'h') -> key `Insert [][39m
     [38;5;2m 770[39m: [38;5;2m    | CSI ("",[],'L')  -> key `Insert [`Ctrl][39m
     [38;5;2m 771[39m: [38;5;2m    | CSI ("",[],'P')  -> key `Delete [][39m
     [38;5;2m 772[39m: [38;5;2m    | CSI ("",[],'M')  -> key `Delete [`Ctrl][39m
     [38;5;2m 773[39m: [38;5;2m[39m
     [38;5;2m 774[39m: [38;5;2m    | CSI ("",p,'H')   -> mods_xtrm p >>= key `Home[39m
     [38;5;2m 775[39m: [38;5;2m    | CSI ("",[7|1],c) -> mods_rxvt c >>= key `Home[39m
     [38;5;2m 776[39m: [38;5;2m[39m
     [38;5;2m 777[39m: [38;5;2m    | CSI ("",p,'F')   -> mods_xtrm p >>= key `End[39m
     [38;5;2m 778[39m: [38;5;2m    | CSI ("",[8|4],c) -> mods_rxvt c >>= key `End[39m
     [38;5;2m 779[39m: [38;5;2m    | CSI ("",[],'J')  -> key `End [`Ctrl][39m
     [38;5;2m 780[39m: [38;5;2m[39m
     [38;5;2m 781[39m: [38;5;2m    | SS2 ('P'..'S' as c) -> key (`Function (Char.code c - 0x4f)) [][39m
     [38;5;2m 782[39m: [38;5;2m[39m
     [38;5;2m 783[39m: [38;5;2m    | CSI ("",p,('P'..'S' as c)) ->[39m
     [38;5;2m 784[39m: [38;5;2m        mods_xtrm p >>= key (`Function (Char.code c - 0x4f))[39m
     [38;5;2m 785[39m: [38;5;2m[39m
     [38;5;2m 786[39m: [38;5;2m    | CSI ("",k::p,c) when btw k 11 15 || btw k 17 21 || btw k 23 26 ->[39m
     [38;5;2m 787[39m: [38;5;2m        mods_common p c >>= key (`Function ((k - 10) - (k - 10) / 6))[39m
     [38;5;2m 788[39m: [38;5;2m[39m
     [38;5;2m 789[39m: [38;5;2m    | CSI ("<",[p;x;y],('M'|'m' as c)) ->[39m
     [38;5;2m 790[39m: [38;5;2m        let (btn, drag, mods) = mouse_p p in[39m
     [38;5;2m 791[39m: [38;5;2m        ( match (c, btn, drag) with[39m
     [38;5;2m 792[39m: [38;5;2m          | ('M', (#button as b), false) -> Some (`Press b)[39m
     [38;5;2m 793[39m: [38;5;2m          | ('M', #button, true)         -> Some `Drag[39m
     [38;5;2m 794[39m: [38;5;2m          | ('m', #button, false)        -> Some `Release[39m
     [38;5;2m 795[39m: [38;5;2m          (* | ('M', `ALL   , true)         -> Some `Move *)[39m
     [38;5;2m 796[39m: [38;5;2m          | _                            -> None[39m
     [38;5;2m 797[39m: [38;5;2m        ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m 798[39m: [38;5;2m[39m
     [38;5;2m 799[39m: [38;5;2m    | CSI ("",[p;x;y],'M') | Esc_M (p,x,y) as evt ->[39m
     [38;5;2m 800[39m: [38;5;2m        let (x, y) = match evt with Esc_M _ -> x - 32, y - 32 | _ -> x, y[39m
     [38;5;2m 801[39m: [38;5;2m        and (btn, drag, mods) = mouse_p (p - 32) in[39m
     [38;5;2m 802[39m: [38;5;2m        ( match (btn, drag) with[39m
     [38;5;2m 803[39m: [38;5;2m          | (#button as b, false) -> Some (`Press b)[39m
     [38;5;2m 804[39m: [38;5;2m          | (#button     , true ) -> Some `Drag[39m
     [38;5;2m 805[39m: [38;5;2m          | (`ALL        , false) -> Some `Release[39m
     [38;5;2m 806[39m: [38;5;2m          (* | (`ALL        , true)  -> Some `Move *)[39m
     [38;5;2m 807[39m: [38;5;2m          | _                     -> None[39m
     [38;5;2m 808[39m: [38;5;2m        ) >>| fun e -> `Mouse (e, (x - 1, y - 1), mods)[39m
     [38;5;2m 809[39m: [38;5;2m[39m
     [38;5;2m 810[39m: [38;5;2m    | CSI ("",[200],'~') -> Some (`Paste `Start)[39m
     [38;5;2m 811[39m: [38;5;2m    | CSI ("",[201],'~') -> Some (`Paste `End)[39m
     [38;5;2m 812[39m: [38;5;2m[39m
     [38;5;2m 813[39m: [38;5;2m    | CSI _ | SS2 _ -> None[39m
     [38;5;2m 814[39m: [38;5;2m[39m
     [38;5;2m 815[39m: [38;5;2m  let rec events = function[39m
     [38;5;2m 816[39m: [38;5;2m    | C0 '\x1b' :: cc :: ccs ->[39m
     [38;5;2m 817[39m: [38;5;2m      ( match event_of_control_code cc with[39m
     [38;5;2m 818[39m: [38;5;2m        | Some (`Key (k, mods)) -> `Key (k, `Meta :: mods) :: events ccs[39m
     [38;5;2m 819[39m: [38;5;2m        | Some _                -> `Key (`Escape, []) :: events (cc::ccs)[39m
     [38;5;2m 820[39m: [38;5;2m        | None                  -> events ccs )[39m
     [38;5;2m 821[39m: [38;5;2m    | cc::ccs -> (event_of_control_code cc |> Option.to_list) @ events ccs[39m
     [38;5;2m 822[39m: [38;5;2m    | [] -> [][39m
     [38;5;2m 823[39m: [38;5;2m[39m
     [38;5;2m 824[39m: [38;5;2m  let decode = events &. demux &. List.map Uchar.to_int[39m
     [38;5;2m 825[39m: [38;5;2m[39m
     [38;5;2m 826[39m: [38;5;2m  type t = (event list * bool) ref[39m
     [38;5;2m 827[39m: [38;5;2m[39m
     [38;5;2m 828[39m: [38;5;2m  let create () = ref ([], false)[39m
     [38;5;2m 829[39m: [38;5;2m[39m
     [38;5;2m 830[39m: [38;5;2m  let next t = match !t with[39m
     [38;5;2m 831[39m: [38;5;2m    | (#event as e::es, eof) -> t := (es, eof) ; e[39m
     [38;5;2m 832[39m: [38;5;2m    | ([], false) -> `Await[39m
     [38;5;2m 833[39m: [38;5;2m    | _           -> `End[39m
     [38;5;2m 834[39m: [38;5;2m[39m
     [38;5;2m 835[39m: [38;5;2m  let list_of_utf8 buf i l =[39m
     [38;5;2m 836[39m: [38;5;2m    let f cs _ = function `Uchar c -> c::cs | _ -> cs in[39m
     [38;5;2m 837[39m: [38;5;2m    String.sub0cp (Bytes.unsafe_to_string buf) i l[39m
     [38;5;2m 838[39m: [38;5;2m    |> Uutf.String.fold_utf_8 f [] |> List.rev[39m
     [38;5;2m 839[39m: [38;5;2m[39m
     [38;5;2m 840[39m: [38;5;2m  let input t buf i l = t := match !t with[39m
     [38;5;2m 841[39m: [38;5;2m    | (es, false) when l > 0 -> (es @ (list_of_utf8 buf i l |> decode), false)[39m
     [38;5;2m 842[39m: [38;5;2m    | (es, _)                -> (es, true)[39m
     [38;5;2m 843[39m: [38;5;2m[39m
     [38;5;2m 844[39m: [38;5;2m  let pending t = match !t with ([], false) -> false | _ -> true[39m
     [38;5;2m 845[39m: [38;5;2mend[39m
     [38;5;2m 846[39m: [38;5;2m[39m
     [38;5;2m 847[39m: [38;5;2mmodule Tmachine = struct[39m
     [38;5;2m 848[39m: [38;5;2m[39m
     [38;5;2m 849[39m: [38;5;2m  open Cap[39m
     [38;5;2m 850[39m: [38;5;2m  (* XXX This is sad. This should be a composable, stateless transducer. *)[39m
     [38;5;2m 851[39m: [38;5;2m[39m
     [38;5;2m 852[39m: [38;5;2m  type t = {[39m
     [38;5;2m 853[39m: [38;5;2m    cap           : Cap.t[39m
     [38;5;2m 854[39m: [38;5;2m  ; mutable write : Buffer.t -> unit[39m
     [38;5;2m 855[39m: [38;5;2m  ; mutable curs  : (int * int) option[39m
     [38;5;2m 856[39m: [38;5;2m  ; mutable dim   : (int * int)[39m
     [38;5;2m 857[39m: [38;5;2m  ; mutable image : I.t[39m
     [38;5;2m 858[39m: [38;5;2m  ; mutable dead  : bool[39m
     [38;5;2m 859[39m: [38;5;2m  }[39m
     [38;5;2m 860[39m: [38;5;2m[39m
     [38;5;2m 861[39m: [38;5;2m  let emit t op =[39m
     [38;5;2m 862[39m: [38;5;2m    if t.dead then[39m
     [38;5;2m 863[39m: [38;5;2m      invalid_arg "Notty: use of released terminal"[39m
     [38;5;2m 864[39m: [38;5;2m    else t.write <- t.write & op[39m
     [38;5;2m 865[39m: [38;5;2m[39m
     [38;5;2m 866[39m: [38;5;2m  let cursor cap = function[39m
     [38;5;2m 867[39m: [38;5;2m    | None        -> cap.cursvis false[39m
     [38;5;2m 868[39m: [38;5;2m    | Some (w, h) -> cap.cursvis true & cursat0 cap w h[39m
     [38;5;2m 869[39m: [38;5;2m[39m
     [38;5;2m 870[39m: [38;5;2m  let create ~mouse ~bpaste cap = {[39m
     [38;5;2m 871[39m: [38;5;2m      cap[39m
     [38;5;2m 872[39m: [38;5;2m    ; curs  = None[39m
     [38;5;2m 873[39m: [38;5;2m    ; dim   = (0, 0)[39m
     [38;5;2m 874[39m: [38;5;2m    ; image = I.empty[39m
     [38;5;2m 875[39m: [38;5;2m    ; dead  = false[39m
     [38;5;2m 876[39m: [38;5;2m    ; write =[39m
     [38;5;2m 877[39m: [38;5;2m        cap.altscr true & cursor cap None & cap.mouse mouse & cap.bpaste bpaste[39m
     [38;5;2m 878[39m: [38;5;2m    }[39m
     [38;5;2m 879[39m: [38;5;2m[39m
     [38;5;2m 880[39m: [38;5;2m  let release t =[39m
     [38;5;2m 881[39m: [38;5;2m    if t.dead then false else[39m
     [38;5;2m 882[39m: [38;5;2m      ( emit t ( t.cap.altscr false & t.cap.cursvis true &[39m
     [38;5;2m 883[39m: [38;5;2m                 t.cap.mouse false & t.cap.bpaste false );[39m
     [38;5;2m 884[39m: [38;5;2m        t.dead <- true; true )[39m
     [38;5;2m 885[39m: [38;5;2m[39m
     [38;5;2m 886[39m: [38;5;2m  let output t buf = t.write buf; t.write <- ignore[39m
     [38;5;2m 887[39m: [38;5;2m[39m
     [38;5;2m 888[39m: [38;5;2m  let refresh ({ dim; image; _ } as t) =[39m
     [38;5;2m 889[39m: [38;5;2m    emit t ( cursor t.cap None & cursat0 t.cap 0 0 &[39m
     [38;5;2m 890[39m: [38;5;2m             (fun buf -> Render.to_buffer buf t.cap (0, 0) dim image) &[39m
     [38;5;2m 891[39m: [38;5;2m             cursor t.cap t.curs )[39m
     [38;5;2m 892[39m: [38;5;2m[39m
     [38;5;2m 893[39m: [38;5;2m  let set_size t dim = t.dim <- dim[39m
     [38;5;2m 894[39m: [38;5;2m  let image t image = t.image <- image; refresh t[39m
     [38;5;2m 895[39m: [38;5;2m  let cursor t curs = t.curs <- curs; emit t (cursor t.cap curs)[39m
     [38;5;2m 896[39m: [38;5;2m[39m
     [38;5;2m 897[39m: [38;5;2m  let size t = t.dim[39m
     [38;5;2m 898[39m: [38;5;2m  let dead t = t.dead[39m
     [38;5;2m 899[39m: [38;5;2mend[39m
     [38;5;2m 900[39m: [38;5;2m[39m
     [38;5;2m 901[39m: [38;5;2mmodule Direct = struct[39m
     [38;5;2m 902[39m: [38;5;2m  let show_cursor buf cap x = cap.Cap.cursvis x buf[39m
     [38;5;2m 903[39m: [38;5;2m  and move_cursor buf cap cmd = match cmd with[39m
     [38;5;2m 904[39m: [38;5;2m    | `To (w, h) -> Cap.cursat0 cap w h buf[39m
     [38;5;2m 905[39m: [38;5;2m    | `Home      -> cap.Cap.cr buf[39m
     [38;5;2m 906[39m: [38;5;2m    | `By (x, y) ->[39m
     [38;5;2m 907[39m: [38;5;2m        Cap.(if x <> 0 then cap.cubcuf x buf; if y <> 0 then cap.cuucud y buf)[39m
     [38;5;2m 908[39m: [38;5;2mend[39m
     [38;5;2m 909[39m: [38;5;2m[39m
     [38;5;2m 910[39m: [38;5;2mtype attr  = A.t[39m
     [38;5;2m 911[39m: [38;5;2mtype image = I.t[39m
     [38;5;2m 912[39m: [38;5;2m[39m
     [38;5;2m 913[39m: [38;5;2mmodule Infix = struct[39m
     [38;5;2m 914[39m: [38;5;2m  let ((<->), (<|>), (</>)) = I.((<->), (<|>), (</>))[39m
     [38;5;2m 915[39m: [38;5;2m  let (++) = A.(++)[39m
     [38;5;2m 916[39m: [38;5;2mend[39m
[38;5;3mAdded regular file ../notty/src/notty.mli:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(** Declaring terminals.[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2m    Notty is a terminal library that revolves around construction and[39m
     [38;5;2m   7[39m: [38;5;2m    composition of displayable images.[39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2m    This module provides the core {{!I}[image]} abstraction, standalone[39m
     [38;5;2m  10[39m: [38;5;2m    {{!Render}rendering}, and escape sequence {{!Unescape}parsing}. It does not[39m
     [38;5;2m  11[39m: [38;5;2m    depend on any platform code, and does not interact with the environment.[39m
     [38;5;2m  12[39m: [38;5;2m    Input and output are provided by {!Notty_unix} and {!Notty_lwt}.[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2m    Consult the {{!basics}basics}, {{!examples}examples} and[39m
     [38;5;2m  15[39m: [38;5;2m    {{!limitations}limitations}.[39m
     [38;5;2m  16[39m: [38;5;2m[39m
     [38;5;2m  17[39m: [38;5;2m    {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m  18[39m: [38;5;2m[39m
     [38;5;2m  19[39m: [38;5;2m(** {1 Interface} *)[39m
     [38;5;2m  20[39m: [38;5;2m[39m
     [38;5;2m  21[39m: [38;5;2mtype attr[39m
     [38;5;2m  22[39m: [38;5;2m(** Visual characteristics of displayed text. *)[39m
     [38;5;2m  23[39m: [38;5;2m[39m
     [38;5;2m  24[39m: [38;5;2mtype image[39m
     [38;5;2m  25[39m: [38;5;2m(** Rectangles of styled characters. *)[39m
     [38;5;2m  26[39m: [38;5;2m[39m
     [38;5;2m  27[39m: [38;5;2m(** [A] is for attribute.[39m
     [38;5;2m  28[39m: [38;5;2m[39m
     [38;5;2m  29[39m: [38;5;2m    Construction and composition of styling characteristics of text.[39m
     [38;5;2m  30[39m: [38;5;2m[39m
     [38;5;2m  31[39m: [38;5;2m    Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m  32[39m: [38;5;2mmodule A : sig[39m
     [38;5;2m  33[39m: [38;5;2m[39m
     [38;5;2m  34[39m: [38;5;2m  (** {1 Colors} *)[39m
     [38;5;2m  35[39m: [38;5;2m[39m
     [38;5;2m  36[39m: [38;5;2m  type color[39m
     [38;5;2m  37[39m: [38;5;2m  (** An ineffable quality of light.[39m
     [38;5;2m  38[39m: [38;5;2m[39m
     [38;5;2m  39[39m: [38;5;2m      There are three kinds of colors:[39m
     [38;5;2m  40[39m: [38;5;2m      {ul[39m
     [38;5;2m  41[39m: [38;5;2m      {- {e Core 16 colors.}[39m
     [38;5;2m  42[39m: [38;5;2m[39m
     [38;5;2m  43[39m: [38;5;2m         ANSI defines 8 color {e names}, with the actual display colors[39m
     [38;5;2m  44[39m: [38;5;2m         considered an implementation detail. Historically, this palette was[39m
     [38;5;2m  45[39m: [38;5;2m         extended with their light (sometimes {e bright} or {e high-intensity})[39m
     [38;5;2m  46[39m: [38;5;2m         counterparts. Their presentation is undefined too, but typically[39m
     [38;5;2m  47[39m: [38;5;2m         produces a brighter shade. These colors - often called the {e ANSI[39m
     [38;5;2m  48[39m: [38;5;2m         colors} - tend to be unpredictable, but ubiquitously supported.[39m
     [38;5;2m  49[39m: [38;5;2m[39m
     [38;5;2m  50[39m: [38;5;2m         }[39m
     [38;5;2m  51[39m: [38;5;2m      {- {e Extended 256-color palette.}[39m
     [38;5;2m  52[39m: [38;5;2m[39m
     [38;5;2m  53[39m: [38;5;2m         This common feature extends the palette by further 240 colors. They[39m
     [38;5;2m  54[39m: [38;5;2m         come in two groups:[39m
     [38;5;2m  55[39m: [38;5;2m[39m
     [38;5;2m  56[39m: [38;5;2m         {ul[39m
     [38;5;2m  57[39m: [38;5;2m         {- The {e color cube}, a 6*6*6 approximation to the usual 24-bit RGB[39m
     [38;5;2m  58[39m: [38;5;2m            color cube; and}[39m
     [38;5;2m  59[39m: [38;5;2m         {- the {e grayscale ramp}, containing (merely) 24 shades of gray.}}[39m
     [38;5;2m  60[39m: [38;5;2m[39m
     [38;5;2m  61[39m: [38;5;2m         XTerm was the first to support this extension. Many terminals have[39m
     [38;5;2m  62[39m: [38;5;2m         since cloned it, so the support is wide, but not universal.[39m
     [38;5;2m  63[39m: [38;5;2m[39m
     [38;5;2m  64[39m: [38;5;2m         As the extended colors are still palette-driven they do not have a[39m
     [38;5;2m  65[39m: [38;5;2m         fixed presentation, and the presentation can be changed in some[39m
     [38;5;2m  66[39m: [38;5;2m         terminals. Default palette tends to match {{:[39m
     [38;5;2m  67[39m: [38;5;2m         https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg}[39m
     [38;5;2m  68[39m: [38;5;2m         XTerm's}.[39m
     [38;5;2m  69[39m: [38;5;2m[39m
     [38;5;2m  70[39m: [38;5;2m         }[39m
     [38;5;2m  71[39m: [38;5;2m      {- {e True color}[39m
     [38;5;2m  72[39m: [38;5;2m[39m
     [38;5;2m  73[39m: [38;5;2m         A recently established convention allows directly sending 24-bit colors[39m
     [38;5;2m  74[39m: [38;5;2m         to the terminal. This has been adopted by a growing minority of[39m
     [38;5;2m  75[39m: [38;5;2m         terminals. A reasonably up-to-date status document maintained by the[39m
     [38;5;2m  76[39m: [38;5;2m         community can be found {{:https://gist.github.com/XVilka/8346728}here}.}}[39m
     [38;5;2m  77[39m: [38;5;2m[39m
     [38;5;2m  78[39m: [38;5;2m      Some of the technical and historical background can be found in {{:[39m
     [38;5;2m  79[39m: [38;5;2m      http://invisible-island.net/xterm/xterm.faq.html#problems_colors}[39m
     [38;5;2m  80[39m: [38;5;2m      XTerm's FAQ}.[39m
     [38;5;2m  81[39m: [38;5;2m[39m
     [38;5;2m  82[39m: [38;5;2m      {b Note} No attempt is made to remap colors depending on the terminal.[39m
     [38;5;2m  83[39m: [38;5;2m      Terminals might ignore, remap, or completely misinterpret unsupported[39m
     [38;5;2m  84[39m: [38;5;2m      colors. *)[39m
     [38;5;2m  85[39m: [38;5;2m[39m
     [38;5;2m  86[39m: [38;5;2m  (** {2:corecolors Core 16 colors}[39m
     [38;5;2m  87[39m: [38;5;2m[39m
     [38;5;2m  88[39m: [38;5;2m      The first 8 have their standard ANSI names. *)[39m
     [38;5;2m  89[39m: [38;5;2m    val unsafe_color_of_int:int->color[39m
     [38;5;2m  90[39m: [38;5;2m[39m
     [38;5;2m  91[39m: [38;5;2m  val black        : color[39m
     [38;5;2m  92[39m: [38;5;2m  val red          : color[39m
     [38;5;2m  93[39m: [38;5;2m  val green        : color[39m
     [38;5;2m  94[39m: [38;5;2m  val yellow       : color[39m
     [38;5;2m  95[39m: [38;5;2m  val blue         : color[39m
     [38;5;2m  96[39m: [38;5;2m  val magenta      : color[39m
     [38;5;2m  97[39m: [38;5;2m  val cyan         : color[39m
     [38;5;2m  98[39m: [38;5;2m  val white        : color[39m
     [38;5;2m  99[39m: [38;5;2m  val lightblack   : color[39m
     [38;5;2m 100[39m: [38;5;2m  val lightred     : color[39m
     [38;5;2m 101[39m: [38;5;2m  val lightgreen   : color[39m
     [38;5;2m 102[39m: [38;5;2m  val lightyellow  : color[39m
     [38;5;2m 103[39m: [38;5;2m  val lightblue    : color[39m
     [38;5;2m 104[39m: [38;5;2m  val lightmagenta : color[39m
     [38;5;2m 105[39m: [38;5;2m  val lightcyan    : color[39m
     [38;5;2m 106[39m: [38;5;2m  val lightwhite   : color[39m
     [38;5;2m 107[39m: [38;5;2m[39m
     [38;5;2m 108[39m: [38;5;2m  (** {2 Extended 256-color palette} *)[39m
     [38;5;2m 109[39m: [38;5;2m[39m
     [38;5;2m 110[39m: [38;5;2m  val rgb : r:int -> g:int -> b:int -> color[39m
     [38;5;2m 111[39m: [38;5;2m  (** [rgb ~r:red ~g:green ~b:blue] is an extended-palette color from the color cube.[39m
     [38;5;2m 112[39m: [38;5;2m[39m
     [38;5;2m 113[39m: [38;5;2m      All three channels must be in the range [0 - 5]. XTerm default palette maps[39m
     [38;5;2m 114[39m: [38;5;2m      this to [0x00], [0x5f], [0x87], [0xaf], [0xd7], and [0xff] independently[39m
     [38;5;2m 115[39m: [38;5;2m      per channel.[39m
     [38;5;2m 116[39m: [38;5;2m[39m
     [38;5;2m 117[39m: [38;5;2m      @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m 118[39m: [38;5;2m[39m
     [38;5;2m 119[39m: [38;5;2m  val gray : int -> color[39m
     [38;5;2m 120[39m: [38;5;2m  (** [gray level] is an extended-palette color from the grayscale ramp.[39m
     [38;5;2m 121[39m: [38;5;2m[39m
     [38;5;2m 122[39m: [38;5;2m      [level] must be in the range [0 - 23]. XTerm default palette maps this to[39m
     [38;5;2m 123[39m: [38;5;2m      [8 + level * 10] on all three channels.[39m
     [38;5;2m 124[39m: [38;5;2m[39m
     [38;5;2m 125[39m: [38;5;2m      @raise Invalid_argument if the [level] is outside the range. *)[39m
     [38;5;2m 126[39m: [38;5;2m[39m
     [38;5;2m 127[39m: [38;5;2m  (** {2 True Color} *)[39m
     [38;5;2m 128[39m: [38;5;2m[39m
     [38;5;2m 129[39m: [38;5;2m  val rgb_888 : r:int -> g:int -> b:int -> color[39m
     [38;5;2m 130[39m: [38;5;2m  (** [rgb_888 ~r:red ~g:green ~b:blue] is a 24-bit color.[39m
     [38;5;2m 131[39m: [38;5;2m[39m
     [38;5;2m 132[39m: [38;5;2m      All three channels must be in the range [0 - 255].[39m
     [38;5;2m 133[39m: [38;5;2m[39m
     [38;5;2m 134[39m: [38;5;2m      @raise Invalid_argument if a channel is outside the range. *)[39m
     [38;5;2m 135[39m: [38;5;2m[39m
     [38;5;2m 136[39m: [38;5;2m  (** {1 Text styles} *)[39m
     [38;5;2m 137[39m: [38;5;2m[39m
     [38;5;2m 138[39m: [38;5;2m  type style[39m
     [38;5;2m 139[39m: [38;5;2m  (** Additional text properties. *)[39m
     [38;5;2m 140[39m: [38;5;2m[39m
     [38;5;2m 141[39m: [38;5;2m  val unsafe_style_of_int: int-> style[39m
     [38;5;2m 142[39m: [38;5;2m[39m
     [38;5;2m 143[39m: [38;5;2m  val bold      : style[39m
     [38;5;2m 144[39m: [38;5;2m  val italic    : style[39m
     [38;5;2m 145[39m: [38;5;2m  val underline : style[39m
     [38;5;2m 146[39m: [38;5;2m  val blink     : style[39m
     [38;5;2m 147[39m: [38;5;2m  val reverse   : style[39m
     [38;5;2m 148[39m: [38;5;2m[39m
     [38;5;2m 149[39m: [38;5;2m  (** {1 Attribute construction and composition} *)[39m
     [38;5;2m 150[39m: [38;5;2m[39m
     [38;5;2m 151[39m: [38;5;2m  type t = attr[39m
     [38;5;2m 152[39m: [38;5;2m[39m
     [38;5;2m 153[39m: [38;5;2m  val equal : t -> t -> bool[39m
     [38;5;2m 154[39m: [38;5;2m[39m
     [38;5;2m 155[39m: [38;5;2m  val empty : attr[39m
     [38;5;2m 156[39m: [38;5;2m  (** [empty] is the attribute with the default foreground and background color[39m
     [38;5;2m 157[39m: [38;5;2m      and empty style set. *)[39m
     [38;5;2m 158[39m: [38;5;2m[39m
     [38;5;2m 159[39m: [38;5;2m  val (++) : attr -> attr -> attr[39m
     [38;5;2m 160[39m: [38;5;2m  (** [a1 ++ a2] is the concatenation of [a1] and [a2], the attribute that has[39m
     [38;5;2m 161[39m: [38;5;2m      [a2]'s foreground (resp. background), unless {e unset}, in which case it[39m
     [38;5;2m 162[39m: [38;5;2m      is [a1]'s, and the union of both style sets.[39m
     [38;5;2m 163[39m: [38;5;2m[39m
     [38;5;2m 164[39m: [38;5;2m      [++] is left-associative, and forms a monoid with [empty]. *)[39m
     [38;5;2m 165[39m: [38;5;2m[39m
     [38;5;2m 166[39m: [38;5;2m  val fg : color -> attr[39m
     [38;5;2m 167[39m: [38;5;2m  (** [fg c] is [empty] with foreground [c]. *)[39m
     [38;5;2m 168[39m: [38;5;2m[39m
     [38;5;2m 169[39m: [38;5;2m  val bg : color -> attr[39m
     [38;5;2m 170[39m: [38;5;2m  (** [bg c] is [empty] with background [c]. *)[39m
     [38;5;2m 171[39m: [38;5;2m[39m
     [38;5;2m 172[39m: [38;5;2m  val st : style -> attr[39m
     [38;5;2m 173[39m: [38;5;2m  (** [st s] is [empty] with style [s]. *)[39m
     [38;5;2m 174[39m: [38;5;2mend[39m
     [38;5;2m 175[39m: [38;5;2m[39m
     [38;5;2m 176[39m: [38;5;2m(** [I] is for image.[39m
     [38;5;2m 177[39m: [38;5;2m[39m
     [38;5;2m 178[39m: [38;5;2m    Construction and composition of images.[39m
     [38;5;2m 179[39m: [38;5;2m[39m
     [38;5;2m 180[39m: [38;5;2m    Consult the {{!basics}basics} for an overview. *)[39m
     [38;5;2m 181[39m: [38;5;2mmodule I : sig[39m
     [38;5;2m 182[39m: [38;5;2m[39m
     [38;5;2m 183[39m: [38;5;2m  type t = image[39m
     [38;5;2m 184[39m: [38;5;2m[39m
     [38;5;2m 185[39m: [38;5;2m  val height : image -> int[39m
     [38;5;2m 186[39m: [38;5;2m  val width  : image -> int[39m
     [38;5;2m 187[39m: [38;5;2m[39m
     [38;5;2m 188[39m: [38;5;2m  val equal : t -> t -> bool[39m
     [38;5;2m 189[39m: [38;5;2m  (** [equal t1 t2] is [true] iff [t1] and [t2] are constructed by the same term.[39m
     [38;5;2m 190[39m: [38;5;2m[39m
     [38;5;2m 191[39m: [38;5;2m      {b Note} This is a weak form of equality. Images that are not [equal][39m
     [38;5;2m 192[39m: [38;5;2m      could still render the same. *)[39m
     [38;5;2m 193[39m: [38;5;2m[39m
     [38;5;2m 194[39m: [38;5;2m  (** {1:imgprims Primitives} *)[39m
     [38;5;2m 195[39m: [38;5;2m[39m
     [38;5;2m 196[39m: [38;5;2m  val empty : image[39m
     [38;5;2m 197[39m: [38;5;2m  (** [empty] is a zero-sized image. *)[39m
     [38;5;2m 198[39m: [38;5;2m[39m
     [38;5;2m 199[39m: [38;5;2m  val string : attr -> string -> image[39m
     [38;5;2m 200[39m: [38;5;2m  (** [string attr s] is an image containing text [s], styled with [attr].[39m
     [38;5;2m 201[39m: [38;5;2m[39m
     [38;5;2m 202[39m: [38;5;2m      @raise Invalid_argument if [string] is not a valid UTF-8 sequence, or[39m
     [38;5;2m 203[39m: [38;5;2m      contains {{!ctrls}control characters}. *)[39m
     [38;5;2m 204[39m: [38;5;2m[39m
     [38;5;2m 205[39m: [38;5;2m  val uchars : attr -> Uchar.t array -> image[39m
     [38;5;2m 206[39m: [38;5;2m  (** [uchars attr us] is an image containing text [us], styled with [attr].[39m
     [38;5;2m 207[39m: [38;5;2m[39m
     [38;5;2m 208[39m: [38;5;2m      @raise Invalid_argument if [us] contains {{!ctrls}control characters}. *)[39m
     [38;5;2m 209[39m: [38;5;2m[39m
     [38;5;2m 210[39m: [38;5;2m  val char : attr -> char -> int -> int -> image[39m
     [38;5;2m 211[39m: [38;5;2m  (** [char attr c w h] is a [w * h] grid of [c].[39m
     [38;5;2m 212[39m: [38;5;2m[39m
     [38;5;2m 213[39m: [38;5;2m      @raise Invalid_argument if [c] is a {{!ctrls}control character}. *)[39m
     [38;5;2m 214[39m: [38;5;2m[39m
     [38;5;2m 215[39m: [38;5;2m  val uchar : attr -> Uchar.t -> int -> int -> image[39m
     [38;5;2m 216[39m: [38;5;2m  (** [uchar attr u w h] is a [w * h] grid of [u].[39m
     [38;5;2m 217[39m: [38;5;2m[39m
     [38;5;2m 218[39m: [38;5;2m      @raise Invalid_argument if [u] is a {{!ctrls}control character}. *)[39m
     [38;5;2m 219[39m: [38;5;2m[39m
     [38;5;2m 220[39m: [38;5;2m  val void  : int -> int -> image[39m
     [38;5;2m 221[39m: [38;5;2m  (** [void w h] is a [w * h] rectangle of transparent cells.[39m
     [38;5;2m 222[39m: [38;5;2m[39m
     [38;5;2m 223[39m: [38;5;2m      [void] is magical: it has geometry, but no displayable content. This is[39m
     [38;5;2m 224[39m: [38;5;2m      different, for example, from the space character [U+0020], which renders[39m
     [38;5;2m 225[39m: [38;5;2m      as a cell filled with the background color. This means that [void][39m
     [38;5;2m 226[39m: [38;5;2m      interacts specially with {{!(</>)}overlays}.[39m
     [38;5;2m 227[39m: [38;5;2m[39m
     [38;5;2m 228[39m: [38;5;2m      [void 0 0 = empty].[39m
     [38;5;2m 229[39m: [38;5;2m      [void] with only one dimension [0] acts as a spacing element in the other[39m
     [38;5;2m 230[39m: [38;5;2m      dimension. Negative size is treated as [0]. *)[39m
     [38;5;2m 231[39m: [38;5;2m[39m
     [38;5;2m 232[39m: [38;5;2m  (** {1:imgcomp Image composition}[39m
     [38;5;2m 233[39m: [38;5;2m[39m
     [38;5;2m 234[39m: [38;5;2m      Three basic composition modes allow construction of more complex images[39m
     [38;5;2m 235[39m: [38;5;2m      from simpler ones.[39m
     [38;5;2m 236[39m: [38;5;2m[39m
     [38;5;2m 237[39m: [38;5;2m      Composition operators are left-associative and form a monoid with [void].[39m
     [38;5;2m 238[39m: [38;5;2m      *)[39m
     [38;5;2m 239[39m: [38;5;2m[39m
     [38;5;2m 240[39m: [38;5;2m  val (<|>) : image -> image -> image[39m
     [38;5;2m 241[39m: [38;5;2m  (**  [i1 <|> i2] is the horizontal combination of [i1] and [i2].[39m
     [38;5;2m 242[39m: [38;5;2m[39m
     [38;5;2m 243[39m: [38;5;2m      [width (i1 <|> i2) = width i1 + width i2][39m
     [38;5;2m 244[39m: [38;5;2m      [height (i1 <|> i2) = max (height i1) (height i2)][39m
     [38;5;2m 245[39m: [38;5;2m[39m
     [38;5;2m 246[39m: [38;5;2m      Images are top-aligned. The missing region is implicitly filled with[39m
     [38;5;2m 247[39m: [38;5;2m      {{!void}[void]}.[39m
     [38;5;2m 248[39m: [38;5;2m[39m
     [38;5;2m 249[39m: [38;5;2m{v[39m
     [38;5;2m 250[39m: [38;5;2m[x] <|> [y] = [xy][39m
     [38;5;2m 251[39m: [38;5;2m        [y]   [.y][39m
     [38;5;2m 252[39m: [38;5;2mv}[39m
     [38;5;2m 253[39m: [38;5;2m[39m
     [38;5;2m 254[39m: [38;5;2m      where [.] denotes {{!void}[void]}. *)[39m
     [38;5;2m 255[39m: [38;5;2m[39m
     [38;5;2m 256[39m: [38;5;2m  val (<->) : image -> image -> image[39m
     [38;5;2m 257[39m: [38;5;2m  (** [i1 <-> i2] is the vertical combination of [i1] and [i2].[39m
     [38;5;2m 258[39m: [38;5;2m[39m
     [38;5;2m 259[39m: [38;5;2m      [width (i1 <-> i2) = max (width i1) (width i2)][39m
     [38;5;2m 260[39m: [38;5;2m      [height (i1 <-> i2) = height i1 + height i2][39m
     [38;5;2m 261[39m: [38;5;2m[39m
     [38;5;2m 262[39m: [38;5;2m      Images are left-aligned. The missing region is implicitly filled with[39m
     [38;5;2m 263[39m: [38;5;2m      {{!void}[void]}.[39m
     [38;5;2m 264[39m: [38;5;2m[39m
     [38;5;2m 265[39m: [38;5;2m{v[39m
     [38;5;2m 266[39m: [38;5;2m[xx] <-> [y] = [xx][39m
     [38;5;2m 267[39m: [38;5;2m               [y.][39m
     [38;5;2m 268[39m: [38;5;2mv}[39m
     [38;5;2m 269[39m: [38;5;2m      *)[39m
     [38;5;2m 270[39m: [38;5;2m[39m
     [38;5;2m 271[39m: [38;5;2m  val (</>) : image -> image -> image[39m
     [38;5;2m 272[39m: [38;5;2m  (** [i1 </> i2] is [i1] overlaid over [i2].[39m
     [38;5;2m 273[39m: [38;5;2m[39m
     [38;5;2m 274[39m: [38;5;2m      [width (i1 </> i2) = max (width i1) (width i2)][39m
     [38;5;2m 275[39m: [38;5;2m      [height (i1 </> i2) = max (height i1) (height i2)][39m
     [38;5;2m 276[39m: [38;5;2m[39m
     [38;5;2m 277[39m: [38;5;2m      Images are top-left-aligned. In the region of their overlap, only the[39m
     [38;5;2m 278[39m: [38;5;2m      {{!void}[void]} cells of [i1] show fragments of [i2].[39m
     [38;5;2m 279[39m: [38;5;2m[39m
     [38;5;2m 280[39m: [38;5;2m{v[39m
     [38;5;2m 281[39m: [38;5;2m[x.x] </> [yyyy] = [xyxy][39m
     [38;5;2m 282[39m: [38;5;2mv}[39m
     [38;5;2m 283[39m: [38;5;2m      *)[39m
     [38;5;2m 284[39m: [38;5;2m[39m
     [38;5;2m 285[39m: [38;5;2m  (** {1:imgcrop Cropping and padding} *)[39m
     [38;5;2m 286[39m: [38;5;2m[39m
     [38;5;2m 287[39m: [38;5;2m  val hcrop : int -> int -> image -> image[39m
     [38;5;2m 288[39m: [38;5;2m  (** [hcrop left right i] is [i] with [left] leftmost, and [right][39m
     [38;5;2m 289[39m: [38;5;2m      rightmost columns missing. If [left + right >= width i] the result is[39m
     [38;5;2m 290[39m: [38;5;2m      [empty].[39m
     [38;5;2m 291[39m: [38;5;2m[39m
     [38;5;2m 292[39m: [38;5;2m      If either [left] or [right] is negative, instead of being cropped, the[39m
     [38;5;2m 293[39m: [38;5;2m      image is padded on that side.[39m
     [38;5;2m 294[39m: [38;5;2m[39m
     [38;5;2m 295[39m: [38;5;2m      For example:[39m
     [38;5;2m 296[39m: [38;5;2m      {ul[39m
     [38;5;2m 297[39m: [38;5;2m      {- [hcrop 0 1 [abc]] = [[ab]]}[39m
     [38;5;2m 298[39m: [38;5;2m      {- [hcrop 1 1 [abc]] = [[b]]}[39m
     [38;5;2m 299[39m: [38;5;2m      {- [hcrop (-1) 1 [abc]] = [void 1 1 <|> hcrop 0 1 [abc]] = [[.ab]]}[39m
     [38;5;2m 300[39m: [38;5;2m      {- [hcrop 2 2 [abc]] = [empty]}} *)[39m
     [38;5;2m 301[39m: [38;5;2m[39m
     [38;5;2m 302[39m: [38;5;2m  val vcrop : int -> int -> image -> image[39m
     [38;5;2m 303[39m: [38;5;2m  (** [vcrop top bottom i] is the vertical analogue to {{!hcrop}[hcrop]}. *)[39m
     [38;5;2m 304[39m: [38;5;2m[39m
     [38;5;2m 305[39m: [38;5;2m  val crop : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m 306[39m: [38;5;2m  (** [crop ~l:left ~r:right ~t:top ~b:bottom i] is[39m
     [38;5;2m 307[39m: [38;5;2m      [vcrop left right (hcrop top bottom) i].[39m
     [38;5;2m 308[39m: [38;5;2m[39m
     [38;5;2m 309[39m: [38;5;2m      Missing arguments default to [0]. *)[39m
     [38;5;2m 310[39m: [38;5;2m[39m
     [38;5;2m 311[39m: [38;5;2m  val hpad : int -> int -> image -> image[39m
     [38;5;2m 312[39m: [38;5;2m  (** {{!hcrop}[hcrop]} with margins negated. *)[39m
     [38;5;2m 313[39m: [38;5;2m[39m
     [38;5;2m 314[39m: [38;5;2m  val vpad : int -> int -> image -> image[39m
     [38;5;2m 315[39m: [38;5;2m  (** {{!vcrop}[vcrop]} with margins negated. *)[39m
     [38;5;2m 316[39m: [38;5;2m[39m
     [38;5;2m 317[39m: [38;5;2m  val pad : ?l:int -> ?r:int -> ?t:int -> ?b:int -> image -> image[39m
     [38;5;2m 318[39m: [38;5;2m  (** {{!crop}[crop]} with margins negated. *)[39m
     [38;5;2m 319[39m: [38;5;2m[39m
     [38;5;2m 320[39m: [38;5;2m[39m
     [38;5;2m 321[39m: [38;5;2m  (** {1 Additional combinators} *)[39m
     [38;5;2m 322[39m: [38;5;2m[39m
     [38;5;2m 323[39m: [38;5;2m  val hcat : image list -> image[39m
     [38;5;2m 324[39m: [38;5;2m  (** [hcat xs] horizontally concatenates [xs]. See {{!(<|>)}beside}. *)[39m
     [38;5;2m 325[39m: [38;5;2m[39m
     [38;5;2m 326[39m: [38;5;2m  val vcat : image list -> image[39m
     [38;5;2m 327[39m: [38;5;2m  (** [vcat xs] vertically concatenates [xs]. See {{!(<->)}above}. *)[39m
     [38;5;2m 328[39m: [38;5;2m[39m
     [38;5;2m 329[39m: [38;5;2m  val zcat : image list -> image[39m
     [38;5;2m 330[39m: [38;5;2m  (** [zcat xs] overlays [xs]. See {{!(</>)}over}. *)[39m
     [38;5;2m 331[39m: [38;5;2m[39m
     [38;5;2m 332[39m: [38;5;2m  val tabulate : int -> int -> (int -> int -> image) -> image[39m
     [38;5;2m 333[39m: [38;5;2m  (** [tabulate m n f] is the grid of values [f x y] with [x = 0..m-1][39m
     [38;5;2m 334[39m: [38;5;2m      and [y = 0..n-1], where [x] grows to the right, and [y] growns down.[39m
     [38;5;2m 335[39m: [38;5;2m[39m
     [38;5;2m 336[39m: [38;5;2m      [f a y] is to the left of [f b y] if [a < b], and [f x a] is above [f x b][39m
     [38;5;2m 337[39m: [38;5;2m      if [a < b], but the exact alignment is unspecified if the various [f x y][39m
     [38;5;2m 338[39m: [38;5;2m      have different dimensions. *)[39m
     [38;5;2m 339[39m: [38;5;2m[39m
     [38;5;2m 340[39m: [38;5;2m  val hsnap : ?align:[ `Left | `Middle | `Right ] -> int -> image -> image[39m
     [38;5;2m 341[39m: [38;5;2m  (** [hsnap ~align w i] is an image of width strictly [w] obtained by either[39m
     [38;5;2m 342[39m: [38;5;2m      horizontally padding or cropping [i] and positioning it according to[39m
     [38;5;2m 343[39m: [38;5;2m      [~align].[39m
     [38;5;2m 344[39m: [38;5;2m[39m
     [38;5;2m 345[39m: [38;5;2m      [~align] defaults to [`Middle]. *)[39m
     [38;5;2m 346[39m: [38;5;2m[39m
     [38;5;2m 347[39m: [38;5;2m  val vsnap : ?align:[ `Top | `Middle | `Bottom ] -> int -> image -> image[39m
     [38;5;2m 348[39m: [38;5;2m  (** [vsnap ~align h i] is an image of height strictly [h] obtained by either[39m
     [38;5;2m 349[39m: [38;5;2m      vertically padding or cropping [i] and positioning it according to[39m
     [38;5;2m 350[39m: [38;5;2m      [~align].[39m
     [38;5;2m 351[39m: [38;5;2m[39m
     [38;5;2m 352[39m: [38;5;2m      [~align] defaults to [`Middle]. *)[39m
     [38;5;2m 353[39m: [38;5;2m[39m
     [38;5;2m 354[39m: [38;5;2m  (** {1 [Format] interoperability} *)[39m
     [38;5;2m 355[39m: [38;5;2m[39m
     [38;5;2m 356[39m: [38;5;2m  val strf : ?attr:attr -> ?w:int -> ('a, Format.formatter, unit, image) format4 -> 'a[39m
     [38;5;2m 357[39m: [38;5;2m  (** [strf ?attr ?w:width format ...] pretty-prints like[39m
     [38;5;2m 358[39m: [38;5;2m      [Format.asprintf format ...], but returns an [image].[39m
     [38;5;2m 359[39m: [38;5;2m[39m
     [38;5;2m 360[39m: [38;5;2m      [attr] is the (outermost) attribute. Defaults to {!A.empty}.[39m
     [38;5;2m 361[39m: [38;5;2m[39m
     [38;5;2m 362[39m: [38;5;2m      [width] is used to set the margin on the formatter. This is only a hint,[39m
     [38;5;2m 363[39m: [38;5;2m      and does not guarantee the width of the result. Consult[39m
     [38;5;2m 364[39m: [38;5;2m      {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#VALset_margin}[39m
     [38;5;2m 365[39m: [38;5;2m      [Format.set_margin]} for details. Defaults to an unspecified, large[39m
     [38;5;2m 366[39m: [38;5;2m      number.[39m
     [38;5;2m 367[39m: [38;5;2m[39m
     [38;5;2m 368[39m: [38;5;2m      @raise Invalid_argument if the printing process attempts to directly[39m
     [38;5;2m 369[39m: [38;5;2m      output {{!ctrls}control characters}, by embedding them in [format] or a[39m
     [38;5;2m 370[39m: [38;5;2m      string printed with the [%s] conversion, for example.[39m
     [38;5;2m 371[39m: [38;5;2m      {{: http://caml.inria.fr/pub/docs/manual-ocaml/libref/Format.html#fpp}[39m
     [38;5;2m 372[39m: [38;5;2m      Formatted printing} is allowed. *)[39m
     [38;5;2m 373[39m: [38;5;2m[39m
     [38;5;2m 374[39m: [38;5;2m  val kstrf : ?attr:attr -> ?w:int -> (image -> 'a) -> ('b, Format.formatter, unit, 'a) format4 -> 'b[39m
     [38;5;2m 375[39m: [38;5;2m  (** [kstrf ?attr ?w k format ...] is continuation-based [strf ?attr ?w format ...]. *)[39m
     [38;5;2m 376[39m: [38;5;2m[39m
     [38;5;2m 377[39m: [38;5;2m  val pp_attr : attr -> (Format.formatter -> 'a -> unit) -> Format.formatter -> 'a -> unit[39m
     [38;5;2m 378[39m: [38;5;2m  (** [pp_attr a f] is a pretty-printer like [f], except its output is styled[39m
     [38;5;2m 379[39m: [38;5;2m      with [a]. This applies only outside of any styling [f] itself might embed. *)[39m
     [38;5;2m 380[39m: [38;5;2mend[39m
     [38;5;2m 381[39m: [38;5;2m[39m
     [38;5;2m 382[39m: [38;5;2m(** Operators, repeated. *)[39m
     [38;5;2m 383[39m: [38;5;2mmodule Infix : sig[39m
     [38;5;2m 384[39m: [38;5;2m[39m
     [38;5;2m 385[39m: [38;5;2m  (** {2 [I]}[39m
     [38;5;2m 386[39m: [38;5;2m[39m
     [38;5;2m 387[39m: [38;5;2m      See {{!I}[I]}. *)[39m
     [38;5;2m 388[39m: [38;5;2m[39m
     [38;5;2m 389[39m: [38;5;2m  val (<->) : image -> image -> image[39m
     [38;5;2m 390[39m: [38;5;2m  val (<|>) : image -> image -> image[39m
     [38;5;2m 391[39m: [38;5;2m  val (</>) : image -> image -> image[39m
     [38;5;2m 392[39m: [38;5;2m[39m
     [38;5;2m 393[39m: [38;5;2m  (** {2 [A]}[39m
     [38;5;2m 394[39m: [38;5;2m[39m
     [38;5;2m 395[39m: [38;5;2m      See {{!A}[A]}. *)[39m
     [38;5;2m 396[39m: [38;5;2m[39m
     [38;5;2m 397[39m: [38;5;2m  val (++)  : attr -> attr -> attr[39m
     [38;5;2m 398[39m: [38;5;2mend[39m
     [38;5;2m 399[39m: [38;5;2m[39m
     [38;5;2m 400[39m: [38;5;2m(** {1 Low-level interface}[39m
     [38;5;2m 401[39m: [38;5;2m[39m
     [38;5;2m 402[39m: [38;5;2m    You can ignore it, unless you are porting [Notty] to a new platform not[39m
     [38;5;2m 403[39m: [38;5;2m    supported by the existing IO backends. *)[39m
     [38;5;2m 404[39m: [38;5;2m[39m
     [38;5;2m 405[39m: [38;5;2m(** Terminal capabilities.[39m
     [38;5;2m 406[39m: [38;5;2m[39m
     [38;5;2m 407[39m: [38;5;2m    This module describes how to output things so that a terminal understands[39m
     [38;5;2m 408[39m: [38;5;2m    them. *)[39m
     [38;5;2m 409[39m: [38;5;2mmodule Cap : sig[39m
     [38;5;2m 410[39m: [38;5;2m[39m
     [38;5;2m 411[39m: [38;5;2m  type t[39m
     [38;5;2m 412[39m: [38;5;2m  (** A set of capabilities that distinguish terminals from one another.[39m
     [38;5;2m 413[39m: [38;5;2m[39m
     [38;5;2m 414[39m: [38;5;2m      A bundle of magic strings, really. *)[39m
     [38;5;2m 415[39m: [38;5;2m[39m
     [38;5;2m 416[39m: [38;5;2m  val ansi : t[39m
     [38;5;2m 417[39m: [38;5;2m  (** The usual ANSI terminal, with colors, text styles and cursor[39m
     [38;5;2m 418[39m: [38;5;2m      positioning. *)[39m
     [38;5;2m 419[39m: [38;5;2m[39m
     [38;5;2m 420[39m: [38;5;2m  val dumb : t[39m
     [38;5;2m 421[39m: [38;5;2m  (** Pure text output. Text attributes are stripped and positioning is done[39m
     [38;5;2m 422[39m: [38;5;2m      with the character [U+0020], SPACE. *)[39m
     [38;5;2m 423[39m: [38;5;2mend[39m
     [38;5;2m 424[39m: [38;5;2m[39m
     [38;5;2m 425[39m: [38;5;2m(** Dump images to string buffers. *)[39m
     [38;5;2m 426[39m: [38;5;2mmodule Render : sig[39m
     [38;5;2m 427[39m: [38;5;2m[39m
     [38;5;2m 428[39m: [38;5;2m  val to_buffer : Buffer.t -> Cap.t -> int * int -> int * int -> image -> unit[39m
     [38;5;2m 429[39m: [38;5;2m  (** [to_buffer buf cap (x, y) (w, h) i] writes the string representation of[39m
     [38;5;2m 430[39m: [38;5;2m      [i] to [buf], as interpreted by [cap].[39m
     [38;5;2m 431[39m: [38;5;2m[39m
     [38;5;2m 432[39m: [38;5;2m      It renders the [w * h] rectangle of [i], offset by [(x, y)] from the top[39m
     [38;5;2m 433[39m: [38;5;2m      left. *)[39m
     [38;5;2m 434[39m: [38;5;2m[39m
     [38;5;2m 435[39m: [38;5;2m  val pp : Cap.t -> Format.formatter -> image -> unit[39m
     [38;5;2m 436[39m: [38;5;2m  (** [pp cap ppf i] renders [i] to the pretty-printer [ppf].[39m
     [38;5;2m 437[39m: [38;5;2m[39m
     [38;5;2m 438[39m: [38;5;2m      {b Note} [pp] is generally meant for development and debugging. It tries[39m
     [38;5;2m 439[39m: [38;5;2m      to be reasonable, but dedicated IO modules handle the actual output[39m
     [38;5;2m 440[39m: [38;5;2m      better. *)[39m
     [38;5;2m 441[39m: [38;5;2m[39m
     [38;5;2m 442[39m: [38;5;2m  (**/**)[39m
     [38;5;2m 443[39m: [38;5;2m  (* Toplevel. *)[39m
     [38;5;2m 444[39m: [38;5;2m  val pp_image : Format.formatter -> image -> unit[39m
     [38;5;2m 445[39m: [38;5;2m  val pp_attr : Format.formatter -> attr -> unit[39m
     [38;5;2m 446[39m: [38;5;2m  (**/**)[39m
     [38;5;2m 447[39m: [38;5;2mend[39m
     [38;5;2m 448[39m: [38;5;2m[39m
     [38;5;2m 449[39m: [38;5;2m(** Parse and decode escape sequences in character streams. *)[39m
     [38;5;2m 450[39m: [38;5;2mmodule Unescape : sig[39m
     [38;5;2m 451[39m: [38;5;2m[39m
     [38;5;2m 452[39m: [38;5;2m  (** {1 Input events} *)[39m
     [38;5;2m 453[39m: [38;5;2m[39m
     [38;5;2m 454[39m: [38;5;2m  type special = [[39m
     [38;5;2m 455[39m: [38;5;2m    `Escape[39m
     [38;5;2m 456[39m: [38;5;2m  | `Enter[39m
     [38;5;2m 457[39m: [38;5;2m  | `Tab[39m
     [38;5;2m 458[39m: [38;5;2m  | `Backspace[39m
     [38;5;2m 459[39m: [38;5;2m  | `Insert[39m
     [38;5;2m 460[39m: [38;5;2m  | `Delete[39m
     [38;5;2m 461[39m: [38;5;2m  | `Home | `End[39m
     [38;5;2m 462[39m: [38;5;2m  | `Arrow of [ `Up | `Down | `Left | `Right ][39m
     [38;5;2m 463[39m: [38;5;2m  | `Page of [ `Up | `Down ][39m
     [38;5;2m 464[39m: [38;5;2m  | `Function of int[39m
     [38;5;2m 465[39m: [38;5;2m  ][39m
     [38;5;2m 466[39m: [38;5;2m  (** A selection of extra keys on the keyboard. *)[39m
     [38;5;2m 467[39m: [38;5;2m[39m
     [38;5;2m 468[39m: [38;5;2m  type button = [ `Left | `Middle | `Right | `Scroll of [ `Up | `Down ] ][39m
     [38;5;2m 469[39m: [38;5;2m  (** Mouse buttons. *)[39m
     [38;5;2m 470[39m: [38;5;2m[39m
     [38;5;2m 471[39m: [38;5;2m  type mods = [ `Meta | `Ctrl | `Shift ] list[39m
     [38;5;2m 472[39m: [38;5;2m  (** Modifier state. *)[39m
     [38;5;2m 473[39m: [38;5;2m[39m
     [38;5;2m 474[39m: [38;5;2m  type key = [ special | `Uchar of Uchar.t | `ASCII of char ] * mods[39m
     [38;5;2m 475[39m: [38;5;2m  (** Keypress event. *)[39m
     [38;5;2m 476[39m: [38;5;2m[39m
     [38;5;2m 477[39m: [38;5;2m  type mouse = [ `Press of button | `Drag | `Release ] * (int * int) * mods[39m
     [38;5;2m 478[39m: [38;5;2m  (** Mouse event. *)[39m
     [38;5;2m 479[39m: [38;5;2m[39m
     [38;5;2m 480[39m: [38;5;2m  type paste = [ `Start | `End ][39m
     [38;5;2m 481[39m: [38;5;2m  (** Paste event. *)[39m
     [38;5;2m 482[39m: [38;5;2m[39m
     [38;5;2m 483[39m: [38;5;2m  type event = [ `Key of key | `Mouse of mouse | `Paste of paste ][39m
     [38;5;2m 484[39m: [38;5;2m  (** Things that terminals say to applications.[39m
     [38;5;2m 485[39m: [38;5;2m[39m
     [38;5;2m 486[39m: [38;5;2m      {ul[39m
     [38;5;2m 487[39m: [38;5;2m      {- [`Key (k, mods)] is keyboard input.[39m
     [38;5;2m 488[39m: [38;5;2m[39m
     [38;5;2m 489[39m: [38;5;2m         [k] is a {{!key}key}, one of:[39m
     [38;5;2m 490[39m: [38;5;2m         {ul[39m
     [38;5;2m 491[39m: [38;5;2m         {- [`ASCII c] where [c] is a [char] in the[39m
     [38;5;2m 492[39m: [38;5;2m            {{: https://tools.ietf.org/html/rfc20}ASCII} range;}[39m
     [38;5;2m 493[39m: [38;5;2m         {- [`Uchar u] where [u] is any other {{!Uchar.t}unicode character}; or}[39m
     [38;5;2m 494[39m: [38;5;2m         {- a {{!special}special key}.}}[39m
     [38;5;2m 495[39m: [38;5;2m[39m
     [38;5;2m 496[39m: [38;5;2m         [`ASCII] and [`Uchar] together represent the textual part of the input.[39m
     [38;5;2m 497[39m: [38;5;2m         These characters are guaranteed not to be {{!ctrls}control[39m
     [38;5;2m 498[39m: [38;5;2m         characters}, and are safe to use when constructing images. ASCII is[39m
     [38;5;2m 499[39m: [38;5;2m         separated from the rest of Unicode for convenient pattern-matching.[39m
     [38;5;2m 500[39m: [38;5;2m[39m
     [38;5;2m 501[39m: [38;5;2m         [mods] are the extra {{!mods}modifier keys}.[39m
     [38;5;2m 502[39m: [38;5;2m[39m
     [38;5;2m 503[39m: [38;5;2m         }[39m
     [38;5;2m 504[39m: [38;5;2m      {- [`Mouse (event, (x, y), mods)] is mouse input.[39m
     [38;5;2m 505[39m: [38;5;2m[39m
     [38;5;2m 506[39m: [38;5;2m         [event] is the actual mouse event: {{!button}[button]} press, release,[39m
     [38;5;2m 507[39m: [38;5;2m         or motion of the mouse with buttons depressed.[39m
     [38;5;2m 508[39m: [38;5;2m[39m
     [38;5;2m 509[39m: [38;5;2m         [(x, y)] are column and row position of the mouse. The origin is[39m
     [38;5;2m 510[39m: [38;5;2m         [(0,0)], the upper-left corner.[39m
     [38;5;2m 511[39m: [38;5;2m[39m
     [38;5;2m 512[39m: [38;5;2m         {b Note} Every [`Press (`Left|`Middle|`Right)] generates a corresponding[39m
     [38;5;2m 513[39m: [38;5;2m         [`Release], but there is no portable way to detect which button was[39m
     [38;5;2m 514[39m: [38;5;2m         released. [`Scroll (`Up|`Down)] presses are not followed by releases.[39m
     [38;5;2m 515[39m: [38;5;2m[39m
     [38;5;2m 516[39m: [38;5;2m         }[39m
     [38;5;2m 517[39m: [38;5;2m      {- [`Paste (`Start|`End)] are {e bracketed paste} events, signalling the[39m
     [38;5;2m 518[39m: [38;5;2m         beginning and end of a sequence of events pasted into the terminal.[39m
     [38;5;2m 519[39m: [38;5;2m[39m
     [38;5;2m 520[39m: [38;5;2m         {b Note} This mechanism is useful, but not reliable. The pasted text[39m
     [38;5;2m 521[39m: [38;5;2m         could contain spurious start-of-paste or end-of-paste markers, or they[39m
     [38;5;2m 522[39m: [38;5;2m         could be entered by hand. }}[39m
     [38;5;2m 523[39m: [38;5;2m[39m
     [38;5;2m 524[39m: [38;5;2m      Terminal input protocols are historical cruft, and heavily overload the[39m
     [38;5;2m 525[39m: [38;5;2m      ASCII range. For instance:[39m
     [38;5;2m 526[39m: [38;5;2m      {ul[39m
     [38;5;2m 527[39m: [38;5;2m      {- It is impossible to distinguish lower- and upper-case ASCII characters[39m
     [38;5;2m 528[39m: [38;5;2m         if {b Ctrl} is pressed;}[39m
     [38;5;2m 529[39m: [38;5;2m      {- several combinations of key-presses are aliased as special keys; and}[39m
     [38;5;2m 530[39m: [38;5;2m      {- in a UTF-8 encoded stream, there is no representation for non-ASCII[39m
     [38;5;2m 531[39m: [38;5;2m         characters with modifier keys.}}[39m
     [38;5;2m 532[39m: [38;5;2m[39m
     [38;5;2m 533[39m: [38;5;2m      This means that many values that inhabit the [event] type are impossible,[39m
     [38;5;2m 534[39m: [38;5;2m      while some reflect multiple different user actions. Limitations include:[39m
     [38;5;2m 535[39m: [38;5;2m[39m
     [38;5;2m 536[39m: [38;5;2m      {ul[39m
     [38;5;2m 537[39m: [38;5;2m      {- [`Shift] is reported only with special keys, and not all of them.}[39m
     [38;5;2m 538[39m: [38;5;2m      {- [`Meta] and [`Control] are reported with mouse events, key events with[39m
     [38;5;2m 539[39m: [38;5;2m         special keys, and key events with values in the ranges [0x40-0x5f][39m
     [38;5;2m 540[39m: [38;5;2m         ([@] to [_]) and [0x60-0x7e] ([`] to [~]). If {b Ctrl} is pressed, the higher[39m
     [38;5;2m 541[39m: [38;5;2m         range is mapped into the lower range.}[39m
     [38;5;2m 542[39m: [38;5;2m      {- Terminals will variously under-report modifier key state.}}[39m
     [38;5;2m 543[39m: [38;5;2m[39m
     [38;5;2m 544[39m: [38;5;2m      Perform own experiments before relying on elaborate key combinations. *)[39m
     [38;5;2m 545[39m: [38;5;2m[39m
     [38;5;2m 546[39m: [38;5;2m  val uchar : [< `Uchar of Uchar.t | `ASCII of char ] -> Uchar.t[39m
     [38;5;2m 547[39m: [38;5;2m  (** [uchar x] is the {!Uchar.t} corresponding to [x]. This operations merges[39m
     [38;5;2m 548[39m: [38;5;2m      the ASCII and Unicode variants of {{!key}key}. *)[39m
     [38;5;2m 549[39m: [38;5;2m[39m
     [38;5;2m 550[39m: [38;5;2m  (** {1 Decoding filter}[39m
     [38;5;2m 551[39m: [38;5;2m[39m
     [38;5;2m 552[39m: [38;5;2m      Simple IO-less terminal input processor. It can be used for building[39m
     [38;5;2m 553[39m: [38;5;2m      custom terminal input abstractions. *)[39m
     [38;5;2m 554[39m: [38;5;2m[39m
     [38;5;2m 555[39m: [38;5;2m  type t[39m
     [38;5;2m 556[39m: [38;5;2m  (** Input decoding filter.[39m
     [38;5;2m 557[39m: [38;5;2m[39m
     [38;5;2m 558[39m: [38;5;2m      The filter should be {{!input}fed} strings, which it first decodes from[39m
     [38;5;2m 559[39m: [38;5;2m      UTF-8, and then extracts the input events.[39m
     [38;5;2m 560[39m: [38;5;2m[39m
     [38;5;2m 561[39m: [38;5;2m      Malformed UTF-8 input bytes and unrecognized escape sequences are silently[39m
     [38;5;2m 562[39m: [38;5;2m      discarded. *)[39m
     [38;5;2m 563[39m: [38;5;2m[39m
     [38;5;2m 564[39m: [38;5;2m  val create : unit -> t[39m
     [38;5;2m 565[39m: [38;5;2m  (** [create ()] is a new, empty filter. *)[39m
     [38;5;2m 566[39m: [38;5;2m[39m
     [38;5;2m 567[39m: [38;5;2m  val input : t -> bytes -> int -> int -> unit[39m
     [38;5;2m 568[39m: [38;5;2m  (** [input t buffer i len] feeds [len] bytes of [string] into [t], starting[39m
     [38;5;2m 569[39m: [38;5;2m      from position [len].[39m
     [38;5;2m 570[39m: [38;5;2m[39m
     [38;5;2m 571[39m: [38;5;2m      [len = 0] signals the end of input.[39m
     [38;5;2m 572[39m: [38;5;2m[39m
     [38;5;2m 573[39m: [38;5;2m      [buffer] is immediately processed and can be reused after the call[39m
     [38;5;2m 574[39m: [38;5;2m      returns. *)[39m
     [38;5;2m 575[39m: [38;5;2m[39m
     [38;5;2m 576[39m: [38;5;2m  val next : t -> [ event | `Await | `End ][39m
     [38;5;2m 577[39m: [38;5;2m  (** [next t] is the next event in the filter's input stream:[39m
     [38;5;2m 578[39m: [38;5;2m[39m
     [38;5;2m 579[39m: [38;5;2m      {ul[39m
     [38;5;2m 580[39m: [38;5;2m      {- [#event], an input {{!event}[event]}.}[39m
     [38;5;2m 581[39m: [38;5;2m      {- [`Await] if the filter needs more {{!input}input}.}[39m
     [38;5;2m 582[39m: [38;5;2m      {- [`End] if the input had ended.}} *)[39m
     [38;5;2m 583[39m: [38;5;2m[39m
     [38;5;2m 584[39m: [38;5;2m  val pending : t -> bool[39m
     [38;5;2m 585[39m: [38;5;2m  (** [pending t] is [true] if a call to [next], without any intervening input,[39m
     [38;5;2m 586[39m: [38;5;2m      would {e not} return [`Await]. *)[39m
     [38;5;2m 587[39m: [38;5;2m[39m
     [38;5;2m 588[39m: [38;5;2m  (** {1 Low-level parsing}[39m
     [38;5;2m 589[39m: [38;5;2m[39m
     [38;5;2m 590[39m: [38;5;2m      {b Warning} The parsing interface is subject to change.[39m
     [38;5;2m 591[39m: [38;5;2m[39m
     [38;5;2m 592[39m: [38;5;2m      Implementation of small parts of[39m
     [38;5;2m 593[39m: [38;5;2m      {{: http://www.ecma-international.org/publications/standards/Ecma-035.htm}ECMA-35}[39m
     [38;5;2m 594[39m: [38;5;2m      and[39m
     [38;5;2m 595[39m: [38;5;2m      {{: http://www.ecma-international.org/publications/standards/Ecma-048.htm}ECMA-48},[39m
     [38;5;2m 596[39m: [38;5;2m      as needed by terminal emulators in common use. *)[39m
     [38;5;2m 597[39m: [38;5;2m[39m
     [38;5;2m 598[39m: [38;5;2m  val decode : Uchar.t list -> event list[39m
     [38;5;2m 599[39m: [38;5;2m  (** [decode us] are the events encoded by [us].[39m
     [38;5;2m 600[39m: [38;5;2m[39m
     [38;5;2m 601[39m: [38;5;2m      [us] are assumed to have been generated in a burst, and the end of the[39m
     [38;5;2m 602[39m: [38;5;2m      list is taken to mean a pause.[39m
     [38;5;2m 603[39m: [38;5;2m      Therefore, [decode us1 @ decode us2 <> decode (us1 @ us2)] if [us1] ends[39m
     [38;5;2m 604[39m: [38;5;2m      with a partial escape sequence, including a lone [\x1b].[39m
     [38;5;2m 605[39m: [38;5;2m[39m
     [38;5;2m 606[39m: [38;5;2m      Unsupported escape sequences are silently discarded. *)[39m
     [38;5;2m 607[39m: [38;5;2mend[39m
     [38;5;2m 608[39m: [38;5;2m[39m
     [38;5;2m 609[39m: [38;5;2m(**/**)[39m
     [38;5;2m 610[39m: [38;5;2m(** {1 Private}[39m
     [38;5;2m 611[39m: [38;5;2m[39m
     [38;5;2m 612[39m: [38;5;2m    These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m 613[39m: [38;5;2m[39m
     [38;5;2m 614[39m: [38;5;2mmodule Operation : sig[39m
     [38;5;2m 615[39m: [38;5;2m  type t[39m
     [38;5;2m 616[39m: [38;5;2m  val of_image : (int * int) -> int * int -> image -> t list[39m
     [38;5;2m 617[39m: [38;5;2mend[39m
     [38;5;2m 618[39m: [38;5;2m[39m
     [38;5;2m 619[39m: [38;5;2mmodule Tmachine : sig[39m
     [38;5;2m 620[39m: [38;5;2m[39m
     [38;5;2m 621[39m: [38;5;2m  type t[39m
     [38;5;2m 622[39m: [38;5;2m[39m
     [38;5;2m 623[39m: [38;5;2m  val create  : mouse:bool -> bpaste:bool -> Cap.t -> t[39m
     [38;5;2m 624[39m: [38;5;2m  val release : t -> bool[39m
     [38;5;2m 625[39m: [38;5;2m  val output  : t -> Buffer.t -> unit[39m
     [38;5;2m 626[39m: [38;5;2m[39m
     [38;5;2m 627[39m: [38;5;2m  val refresh  : t -> unit[39m
     [38;5;2m 628[39m: [38;5;2m  val cursor   : t -> (int * int) option -> unit[39m
     [38;5;2m 629[39m: [38;5;2m  val image    : t -> image -> unit[39m
     [38;5;2m 630[39m: [38;5;2m[39m
     [38;5;2m 631[39m: [38;5;2m  val set_size : t -> int * int -> unit[39m
     [38;5;2m 632[39m: [38;5;2m[39m
     [38;5;2m 633[39m: [38;5;2m  val size : t -> int * int[39m
     [38;5;2m 634[39m: [38;5;2m  val dead : t -> bool[39m
     [38;5;2m 635[39m: [38;5;2mend[39m
     [38;5;2m 636[39m: [38;5;2m[39m
     [38;5;2m 637[39m: [38;5;2mmodule Direct : sig[39m
     [38;5;2m 638[39m: [38;5;2m  val move_cursor : Buffer.t -> Cap.t -> [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m 639[39m: [38;5;2m  val show_cursor : Buffer.t -> Cap.t -> bool -> unit[39m
     [38;5;2m 640[39m: [38;5;2mend[39m
     [38;5;2m 641[39m: [38;5;2m(**/**)[39m
     [38;5;2m 642[39m: [38;5;2m[39m
     [38;5;2m 643[39m: [38;5;2m(** {1:basics Basics}[39m
     [38;5;2m 644[39m: [38;5;2m[39m
     [38;5;2m 645[39m: [38;5;2m    Print a red-on-black ["Wow!"] above its right-shifted copy:[39m
     [38;5;2m 646[39m: [38;5;2m{[[39m
     [38;5;2m 647[39m: [38;5;2mlet wow = I.string A.(fg red ++ bg black) "Wow!" in[39m
     [38;5;2m 648[39m: [38;5;2mI.(wow <-> (void 2 0 <|> wow)) |> Notty_unix.output_image[39m
     [38;5;2m 649[39m: [38;5;2m]}[39m
     [38;5;2m 650[39m: [38;5;2m[39m
     [38;5;2m 651[39m: [38;5;2m    {2:meaning The meaning of images}[39m
     [38;5;2m 652[39m: [38;5;2m[39m
     [38;5;2m 653[39m: [38;5;2m    An {{!image}[image]} value is a rectangle of styled character cells. It has a[39m
     [38;5;2m 654[39m: [38;5;2m    width and height, but is not anchored to an origin. A single character with[39m
     [38;5;2m 655[39m: [38;5;2m    associated display attributes, or a short fragment of text, are simple[39m
     [38;5;2m 656[39m: [38;5;2m    examples of images.[39m
     [38;5;2m 657[39m: [38;5;2m[39m
     [38;5;2m 658[39m: [38;5;2m    Images are created by combining text fragments with {{!attributes}display[39m
     [38;5;2m 659[39m: [38;5;2m    attributes}, and composed by placing them {{!I.(<|>)}beside} each other,[39m
     [38;5;2m 660[39m: [38;5;2m    {{!I.(<->)}above} each other, and {{!I.(</>)}over} each other.[39m
     [38;5;2m 661[39m: [38;5;2m[39m
     [38;5;2m 662[39m: [38;5;2m    Once constructed, an image can be rendered, and only at that point it obtains[39m
     [38;5;2m 663[39m: [38;5;2m    absolute placement.[39m
     [38;5;2m 664[39m: [38;5;2m[39m
     [38;5;2m 665[39m: [38;5;2m    Consult {{!I}[I]} for more details.[39m
     [38;5;2m 666[39m: [38;5;2m[39m
     [38;5;2m 667[39m: [38;5;2m    {2:attributes Display attributes}[39m
     [38;5;2m 668[39m: [38;5;2m[39m
     [38;5;2m 669[39m: [38;5;2m    {{!attr}[attr]} values describe the styling characteristics of fragments of[39m
     [38;5;2m 670[39m: [38;5;2m    text.[39m
     [38;5;2m 671[39m: [38;5;2m[39m
     [38;5;2m 672[39m: [38;5;2m    They combine a foreground and a background {{!A.color}[color]} with a[39m
     [38;5;2m 673[39m: [38;5;2m    set of {{!A.style}[styles]}. Either color can be {e unset}, which corresponds to[39m
     [38;5;2m 674[39m: [38;5;2m    the terminal's default foreground (resp. background) color.[39m
     [38;5;2m 675[39m: [38;5;2m[39m
     [38;5;2m 676[39m: [38;5;2m    Attributes are used to construct primitive images.[39m
     [38;5;2m 677[39m: [38;5;2m[39m
     [38;5;2m 678[39m: [38;5;2m    Consult {{!A}[A]} for more details.[39m
     [38;5;2m 679[39m: [38;5;2m[39m
     [38;5;2m 680[39m: [38;5;2m    {2:ctrls Control characters}[39m
     [38;5;2m 681[39m: [38;5;2m[39m
     [38;5;2m 682[39m: [38;5;2m    These are taken to be characters in the ranges [0x00-0x1f] ({b C0}), [0x7f][39m
     [38;5;2m 683[39m: [38;5;2m    (BACKSPACE), [0x80-0x9f] ({b C1}). This is the[39m
     [38;5;2m 684[39m: [38;5;2m    {{: http://unicode.org/reports/tr44/#General_Category_Values}Unicode[39m
     [38;5;2m 685[39m: [38;5;2m    general category} {b Cc}.[39m
     [38;5;2m 686[39m: [38;5;2m[39m
     [38;5;2m 687[39m: [38;5;2m    As control characters directly influence the cursor positioning, they[39m
     [38;5;2m 688[39m: [38;5;2m    cannot be used to create images.[39m
     [38;5;2m 689[39m: [38;5;2m[39m
     [38;5;2m 690[39m: [38;5;2m    This, in particular, means that images cannot contain [U+000a] (NEWLINE).[39m
     [38;5;2m 691[39m: [38;5;2m[39m
     [38;5;2m 692[39m: [38;5;2m    {1:limitations Limitations}[39m
     [38;5;2m 693[39m: [38;5;2m[39m
     [38;5;2m 694[39m: [38;5;2m    [Notty] does not use Terminfo. If your terminal is particularly[39m
     [38;5;2m 695[39m: [38;5;2m    idiosyncratic, things might fail to work. Get in touch with the author to[39m
     [38;5;2m 696[39m: [38;5;2m    expand support.[39m
     [38;5;2m 697[39m: [38;5;2m[39m
     [38;5;2m 698[39m: [38;5;2m    [Notty] assumes that the terminal is using UTF-8 for input and output.[39m
     [38;5;2m 699[39m: [38;5;2m    Things might break arbitrarily if this is not the case.[39m
     [38;5;2m 700[39m: [38;5;2m[39m
     [38;5;2m 701[39m: [38;5;2m    For performance considerations, consult the {{!perf}performance model}.[39m
     [38;5;2m 702[39m: [38;5;2m[39m
     [38;5;2m 703[39m: [38;5;2m    {2:cwidth Unicode vs. Text geometry}[39m
     [38;5;2m 704[39m: [38;5;2m[39m
     [38;5;2m 705[39m: [38;5;2m    [Notty] uses [Uucp.Break.tty_width_hint] to guess the width of text[39m
     [38;5;2m 706[39m: [38;5;2m    fragments when computing geometry, and it suffers from the same[39m
     [38;5;2m 707[39m: [38;5;2m    shortcomings:[39m
     [38;5;2m 708[39m: [38;5;2m[39m
     [38;5;2m 709[39m: [38;5;2m    {ul[39m
     [38;5;2m 710[39m: [38;5;2m    {- Geometry in general works for alphabets and east Asian scripts, mostly[39m
     [38;5;2m 711[39m: [38;5;2m        works for abjad scripts, and is a matter of luck for abugidas.}[39m
     [38;5;2m 712[39m: [38;5;2m    {- East Asian scripts work better when in[39m
     [38;5;2m 713[39m: [38;5;2m        {{:http://unicode.org/glossary/#normalization_form_c}NFC}.}[39m
     [38;5;2m 714[39m: [38;5;2m    {- For proper emoji display, [Uucp] and the terminal have to agree on the[39m
     [38;5;2m 715[39m: [38;5;2m       Unicode version.}}[39m
     [38;5;2m 716[39m: [38;5;2m[39m
     [38;5;2m 717[39m: [38;5;2m    When in doubt, see[39m
     [38;5;2m 718[39m: [38;5;2m    {{: http://erratique.ch/software/uucp/doc/Uucp.Break.html#VALtty_width_hint}[39m
     [38;5;2m 719[39m: [38;5;2m    [Uucp.Break.tty_width_hint]}.[39m
     [38;5;2m 720[39m: [38;5;2m[39m
     [38;5;2m 721[39m: [38;5;2m    Unicode has special interaction with {{!I.hcrop}horizontal cropping}:[39m
     [38;5;2m 722[39m: [38;5;2m    {ul[39m
     [38;5;2m 723[39m: [38;5;2m    {- Strings within images are cropped at {{:[39m
     [38;5;2m 724[39m: [38;5;2m        http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries}grapheme[39m
     [38;5;2m 725[39m: [38;5;2m        cluster} boundaries. This means that scalar value sequences that are[39m
     [38;5;2m 726[39m: [38;5;2m        rendered combined, or overlaid, stay unbroken.}[39m
     [38;5;2m 727[39m: [38;5;2m    {- When a crop splits a wide character in two, the remaining half is[39m
     [38;5;2m 728[39m: [38;5;2m        replaced by [U+0020] (SPACE). Hence, character-cell-accurate cropping is[39m
     [38;5;2m 729[39m: [38;5;2m        possible even in the presence of characters that horizontally occupy[39m
     [38;5;2m 730[39m: [38;5;2m        more than one cell.}}[39m
     [38;5;2m 731[39m: [38;5;2m[39m
     [38;5;2m 732[39m: [38;5;2m    {1:examples Examples}[39m
     [38;5;2m 733[39m: [38;5;2m[39m
     [38;5;2m 734[39m: [38;5;2m    We assume a toplevel with [Notty] support ([#require "notty.top"]).[39m
     [38;5;2m 735[39m: [38;5;2m[39m
     [38;5;2m 736[39m: [38;5;2m    {2 Hello}[39m
     [38;5;2m 737[39m: [38;5;2m[39m
     [38;5;2m 738[39m: [38;5;2m    ["Rad!"] with default foreground and background:[39m
     [38;5;2m 739[39m: [38;5;2m[39m
     [38;5;2m 740[39m: [38;5;2m    {[I.string A.empty "Rad!"]}[39m
     [38;5;2m 741[39m: [38;5;2m[39m
     [38;5;2m 742[39m: [38;5;2m    Everything has to start somewhere.[39m
     [38;5;2m 743[39m: [38;5;2m[39m
     [38;5;2m 744[39m: [38;5;2m    {2 Colors}[39m
     [38;5;2m 745[39m: [38;5;2m[39m
     [38;5;2m 746[39m: [38;5;2m    ["Rad!"] in rad letters:[39m
     [38;5;2m 747[39m: [38;5;2m[39m
     [38;5;2m 748[39m: [38;5;2m    {[I.string A.(fg lightred) "Rad!"]}[39m
     [38;5;2m 749[39m: [38;5;2m[39m
     [38;5;2m 750[39m: [38;5;2m    {2 Padding and spacing}[39m
     [38;5;2m 751[39m: [38;5;2m[39m
     [38;5;2m 752[39m: [38;5;2m{[[39m
     [38;5;2m 753[39m: [38;5;2mlet a1 = A.(fg lightwhite ++ bg red)[39m
     [38;5;2m 754[39m: [38;5;2mand a2 = A.(fg red)[39m
     [38;5;2m 755[39m: [38;5;2m]}[39m
     [38;5;2m 756[39m: [38;5;2m[39m
     [38;5;2m 757[39m: [38;5;2m    ["Rad"] and [" stuff!"] in different colors:[39m
     [38;5;2m 758[39m: [38;5;2m[39m
     [38;5;2m 759[39m: [38;5;2m    {[I.(string a1 "Rad" <|> string a2 " stuff!")]}[39m
     [38;5;2m 760[39m: [38;5;2m[39m
     [38;5;2m 761[39m: [38;5;2m    The second word hanging on a line below:[39m
     [38;5;2m 762[39m: [38;5;2m[39m
     [38;5;2m 763[39m: [38;5;2m    {[I.(string a1 "Rad" <|> (string a2 "stuff!" |> vpad 1 0))]}[39m
     [38;5;2m 764[39m: [38;5;2m[39m
     [38;5;2m 765[39m: [38;5;2m    {2 More geometry}[39m
     [38;5;2m 766[39m: [38;5;2m[39m
     [38;5;2m 767[39m: [38;5;2m    Sierpinski triangle:[39m
     [38;5;2m 768[39m: [38;5;2m[39m
     [38;5;2m 769[39m: [38;5;2m{[[39m
     [38;5;2m 770[39m: [38;5;2mlet square = "\xe2\x96\xaa"[39m
     [38;5;2m 771[39m: [38;5;2m[39m
     [38;5;2m 772[39m: [38;5;2mlet rec sierp n =[39m
     [38;5;2m 773[39m: [38;5;2m  if n > 1 then[39m
     [38;5;2m 774[39m: [38;5;2m    let ss = sierp (pred n) in I.(ss <-> (ss <|> ss))[39m
     [38;5;2m 775[39m: [38;5;2m  else I.(string A.(fg magenta) square |> hpad 1 0)[39m
     [38;5;2m 776[39m: [38;5;2m]}[39m
     [38;5;2m 777[39m: [38;5;2m[39m
     [38;5;2m 778[39m: [38;5;2m    {[sierp 8]}[39m
     [38;5;2m 779[39m: [38;5;2m[39m
     [38;5;2m 780[39m: [38;5;2m    A triangle overlaid over its shifted copy:[39m
     [38;5;2m 781[39m: [38;5;2m[39m
     [38;5;2m 782[39m: [38;5;2m    {[let s = sierp 6 in I.(s </> vpad 1 0 s)]}[39m
     [38;5;2m 783[39m: [38;5;2m[39m
     [38;5;2m 784[39m: [38;5;2m    Blinkenlights:[39m
     [38;5;2m 785[39m: [38;5;2m[39m
     [38;5;2m 786[39m: [38;5;2m{[[39m
     [38;5;2m 787[39m: [38;5;2mlet rad n color =[39m
     [38;5;2m 788[39m: [38;5;2m  let a1 = A.fg color in[39m
     [38;5;2m 789[39m: [38;5;2m  let a2 = A.(st blink ++ a1) in[39m
     [38;5;2m 790[39m: [38;5;2m  I.((string a2 "Rad" |> hpad n 0) <->[39m
     [38;5;2m 791[39m: [38;5;2m     (string a1 "(⌐■_■)" |> hpad (n + 7) 0))[39m
     [38;5;2m 792[39m: [38;5;2m[39m
     [38;5;2m 793[39m: [38;5;2mlet colors = A.[red; green; yellow; blue; magenta; cyan][39m
     [38;5;2m 794[39m: [38;5;2m]}[39m
     [38;5;2m 795[39m: [38;5;2m[39m
     [38;5;2m 796[39m: [38;5;2m{[[39m
     [38;5;2m 797[39m: [38;5;2mcolors |> List.mapi I.(fun i c -> rad i c |> pad ~t:i ~l:(2 * i))[39m
     [38;5;2m 798[39m: [38;5;2m       |> I.zcat[39m
     [38;5;2m 799[39m: [38;5;2m]}[39m
     [38;5;2m 800[39m: [38;5;2m[39m
     [38;5;2m 801[39m: [38;5;2m    {b Note} Usage of {{!A.blink}[blink]} might be regulated by law in some[39m
     [38;5;2m 802[39m: [38;5;2m    jurisdictions.[39m
     [38;5;2m 803[39m: [38;5;2m[39m
     [38;5;2m 804[39m: [38;5;2m    {2 Pretty-printing}[39m
     [38;5;2m 805[39m: [38;5;2m[39m
     [38;5;2m 806[39m: [38;5;2m    Images can be pretty-printed into:[39m
     [38;5;2m 807[39m: [38;5;2m[39m
     [38;5;2m 808[39m: [38;5;2m    {[I.strf "(%d)" 42]}[39m
     [38;5;2m 809[39m: [38;5;2m[39m
     [38;5;2m 810[39m: [38;5;2m    Attributes can be applied to the entire format string, or by decorating[39m
     [38;5;2m 811[39m: [38;5;2m    {e user-defined printers} that are supplied with [%a] conversions:[39m
     [38;5;2m 812[39m: [38;5;2m[39m
     [38;5;2m 813[39m: [38;5;2m    {[let pp = Format.pp_print_int]}[39m
     [38;5;2m 814[39m: [38;5;2m[39m
     [38;5;2m 815[39m: [38;5;2m    {[I.strf ~attr:A.(fg lightwhite) "(%a)" (I.pp_attr A.(fg green) pp) 42]}[39m
     [38;5;2m 816[39m: [38;5;2m[39m
     [38;5;2m 817[39m: [38;5;2m    {2 Now with output}[39m
     [38;5;2m 818[39m: [38;5;2m[39m
     [38;5;2m 819[39m: [38;5;2m    The core module has no real IO. Examples above are simple [image]-valued[39m
     [38;5;2m 820[39m: [38;5;2m    expressions, displayed by the pretty-printer that is installed by the[39m
     [38;5;2m 821[39m: [38;5;2m    toplevel support. Self-contained programs need a separate IO module:[39m
     [38;5;2m 822[39m: [38;5;2m[39m
     [38;5;2m 823[39m: [38;5;2m    {[#require "notty.unix"]}[39m
     [38;5;2m 824[39m: [38;5;2m[39m
     [38;5;2m 825[39m: [38;5;2m    {[sierp 8 |> Notty_unix.output_image]}[39m
     [38;5;2m 826[39m: [38;5;2m[39m
     [38;5;2m 827[39m: [38;5;2m    (Note the difference in cropping behavior.)[39m
     [38;5;2m 828[39m: [38;5;2m[39m
     [38;5;2m 829[39m: [38;5;2m    Computations can be adapted to the current terminal size. A line can stretch[39m
     [38;5;2m 830[39m: [38;5;2m    end-to-end:[39m
     [38;5;2m 831[39m: [38;5;2m[39m
     [38;5;2m 832[39m: [38;5;2m{[[39m
     [38;5;2m 833[39m: [38;5;2mNotty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m 834[39m: [38;5;2m  let i1 = I.string A.(fg green) "very"[39m
     [38;5;2m 835[39m: [38;5;2m  and i2 = I.string A.(fg yellow) "melon" in[39m
     [38;5;2m 836[39m: [38;5;2m  I.(i1 <|> void (w - width i1 - width i2) 1 <|> i2)[39m
     [38;5;2m 837[39m: [38;5;2m]}[39m
     [38;5;2m 838[39m: [38;5;2m[39m
     [38;5;2m 839[39m: [38;5;2m    The largest triangle that horizontally fits into the terminal:[39m
     [38;5;2m 840[39m: [38;5;2m[39m
     [38;5;2m 841[39m: [38;5;2m{[[39m
     [38;5;2m 842[39m: [38;5;2mNotty_unix.output_image_size @@ fun (w, _) ->[39m
     [38;5;2m 843[39m: [38;5;2m  let steps = int_of_float ((log (float w)) /. log 2.) in[39m
     [38;5;2m 844[39m: [38;5;2m  sierp steps |> I.vpad 0 1[39m
     [38;5;2m 845[39m: [38;5;2m]}[39m
     [38;5;2m 846[39m: [38;5;2m[39m
     [38;5;2m 847[39m: [38;5;2m    {2 Simple interaction}[39m
     [38;5;2m 848[39m: [38;5;2m[39m
     [38;5;2m 849[39m: [38;5;2m    Interactive Sierpinski:[39m
     [38;5;2m 850[39m: [38;5;2m[39m
     [38;5;2m 851[39m: [38;5;2m    {[open Notty_unix]}[39m
     [38;5;2m 852[39m: [38;5;2m[39m
     [38;5;2m 853[39m: [38;5;2m{[[39m
     [38;5;2m 854[39m: [38;5;2mlet img (double, n) =[39m
     [38;5;2m 855[39m: [38;5;2m  let s = sierp n in[39m
     [38;5;2m 856[39m: [38;5;2m  if double then I.(s </> vpad 1 0 s) else s[39m
     [38;5;2m 857[39m: [38;5;2min[39m
     [38;5;2m 858[39m: [38;5;2mlet rec update t state = Term.image t (img state); loop t state[39m
     [38;5;2m 859[39m: [38;5;2mand loop t (double, n as state) =[39m
     [38;5;2m 860[39m: [38;5;2m  match Term.event t with[39m
     [38;5;2m 861[39m: [38;5;2m  | `Key (`Enter,_)        -> ()[39m
     [38;5;2m 862[39m: [38;5;2m  | `Key (`Arrow `Left,_)  -> update t (double, max 1 (n - 1))[39m
     [38;5;2m 863[39m: [38;5;2m  | `Key (`Arrow `Right,_) -> update t (double, min 8 (n + 1))[39m
     [38;5;2m 864[39m: [38;5;2m  | `Key (`ASCII ' ', _)   -> update t (not double, n)[39m
     [38;5;2m 865[39m: [38;5;2m  | `Resize _              -> update t state[39m
     [38;5;2m 866[39m: [38;5;2m  | _                      -> loop t state[39m
     [38;5;2m 867[39m: [38;5;2min[39m
     [38;5;2m 868[39m: [38;5;2mlet t = Term.create ()[39m
     [38;5;2m 869[39m: [38;5;2min[39m
     [38;5;2m 870[39m: [38;5;2mupdate t (false, 1); Term.release t[39m
     [38;5;2m 871[39m: [38;5;2m]}[39m
     [38;5;2m 872[39m: [38;5;2m[39m
     [38;5;2m 873[39m: [38;5;2m    The program uses a fullscreen {{!Notty_unix.Term}terminal} and loops reading[39m
     [38;5;2m 874[39m: [38;5;2m    the {{!Notty_unix.Term.event}input}. LEFT and RIGHT control the iteration[39m
     [38;5;2m 875[39m: [38;5;2m    count, and SPACE toggles double-drawing. Resizing the window causes a[39m
     [38;5;2m 876[39m: [38;5;2m    redraw. When the loop exits on ENTER, the terminal is[39m
     [38;5;2m 877[39m: [38;5;2m    {{!Notty_unix.Term.release}cleaned up}.[39m
     [38;5;2m 878[39m: [38;5;2m[39m
     [38;5;2m 879[39m: [38;5;2m    {1:perf Performance model}[39m
     [38;5;2m 880[39m: [38;5;2m[39m
     [38;5;2m 881[39m: [38;5;2m    This section is only relevant if using [Notty] becomes your bottleneck.[39m
     [38;5;2m 882[39m: [38;5;2m[39m
     [38;5;2m 883[39m: [38;5;2m    {b TL;DR} Shared sub-expressions do not share work, so operators stick with[39m
     [38;5;2m 884[39m: [38;5;2m    you.[39m
     [38;5;2m 885[39m: [38;5;2m[39m
     [38;5;2m 886[39m: [38;5;2m    The main performance parameter is {e image complexity}. This roughly[39m
     [38;5;2m 887[39m: [38;5;2m    corresponds to the number of image {{!I.imgcomp}composition} and[39m
     [38;5;2m 888[39m: [38;5;2m    {{!I.imgcrop}cropping} operators in the fully expanded [image] term,[39m
     [38;5;2m 889[39m: [38;5;2m    {b ignoring all sharing}.[39m
     [38;5;2m 890[39m: [38;5;2m[39m
     [38;5;2m 891[39m: [38;5;2m    Outline numbers:[39m
     [38;5;2m 892[39m: [38;5;2m[39m
     [38;5;2m 893[39m: [38;5;2m    {ul[39m
     [38;5;2m 894[39m: [38;5;2m    {- Highly complex images can be rendered and pushed out to a full-screen[39m
     [38;5;2m 895[39m: [38;5;2m       terminal more than 1000 times per second.}[39m
     [38;5;2m 896[39m: [38;5;2m    {- With more realistic images, this number is closer to 30,000.}[39m
     [38;5;2m 897[39m: [38;5;2m    {- Input processing is somewhere around 50MB/s.}}[39m
     [38;5;2m 898[39m: [38;5;2m[39m
     [38;5;2m 899[39m: [38;5;2m[39m
     [38;5;2m 900[39m: [38;5;2m    Image complexity [cplx] of an image [i] is:[39m
     [38;5;2m 901[39m: [38;5;2m    {ul[39m
     [38;5;2m 902[39m: [38;5;2m    {- For a {{!I.imgprims}primitive} [i], [cplx i = 1].}[39m
     [38;5;2m 903[39m: [38;5;2m    {- For a {{!I.imgcomp}composition} operator [op],[39m
     [38;5;2m 904[39m: [38;5;2m       [cplx (op i1 i2) = 1 + cplx i1 + cplx i2].}[39m
     [38;5;2m 905[39m: [38;5;2m    {- For a {{!I.imgcomp}crop} [cr],[39m
     [38;5;2m 906[39m: [38;5;2m       [cplx (cr i1) = 1 + cplx i1 - k], where [k] is the combined complexity of[39m
     [38;5;2m 907[39m: [38;5;2m       all the {e maximal} sub-terms that do not contribute to the output.}}[39m
     [38;5;2m 908[39m: [38;5;2m[39m
     [38;5;2m 909[39m: [38;5;2m    For example (assuming an image [i]):[39m
     [38;5;2m 910[39m: [38;5;2m[39m
     [38;5;2m 911[39m: [38;5;2m{[[39m
     [38;5;2m 912[39m: [38;5;2m  let img1 = I.((i <|> i) <-> (i <|> i))[39m
     [38;5;2m 913[39m: [38;5;2m  let img2 = I.(let x = i <|> i in x <-> x)[39m
     [38;5;2m 914[39m: [38;5;2m  let img3 = I.(((i <|> i) <|> i) <|> i)[39m
     [38;5;2m 915[39m: [38;5;2m]}[39m
     [38;5;2m 916[39m: [38;5;2m[39m
     [38;5;2m 917[39m: [38;5;2m    Complexity of each of these is [4 * cplx i + 3]. This might be surprising[39m
     [38;5;2m 918[39m: [38;5;2m    for [img2].[39m
     [38;5;2m 919[39m: [38;5;2m[39m
     [38;5;2m 920[39m: [38;5;2m    If [width i = 1], [cplx (hcrop 1 0 img1) = 3 + 2 * cplx i], and[39m
     [38;5;2m 921[39m: [38;5;2m    [cplx (hcrop 2 0 img3) = 2 + 2 * cplx i].[39m
     [38;5;2m 922[39m: [38;5;2m[39m
     [38;5;2m 923[39m: [38;5;2m    While [Notty] strives to be accommodating to all usage scenarios, these are[39m
     [38;5;2m 924[39m: [38;5;2m    the things to keep in mind if the rendering becomes slow:[39m
     [38;5;2m 925[39m: [38;5;2m[39m
     [38;5;2m 926[39m: [38;5;2m    {ol[39m
     [38;5;2m 927[39m: [38;5;2m    {- Image composition is cheap.[39m
     [38;5;2m 928[39m: [38;5;2m[39m
     [38;5;2m 929[39m: [38;5;2m       Combining images performs a negligible amount of computation.[39m
     [38;5;2m 930[39m: [38;5;2m[39m
     [38;5;2m 931[39m: [38;5;2m       Constructing primitive images that contain scalar values outside of the[39m
     [38;5;2m 932[39m: [38;5;2m       ASCII range does a little more work upfront and is worth holding onto.[39m
     [38;5;2m 933[39m: [38;5;2m[39m
     [38;5;2m 934[39m: [38;5;2m       }[39m
     [38;5;2m 935[39m: [38;5;2m    {- {{!Render}Rendering} depends on image complexity.[39m
     [38;5;2m 936[39m: [38;5;2m[39m
     [38;5;2m 937[39m: [38;5;2m       As a consequence, this real-world example of wrapping renders in time[39m
     [38;5;2m 938[39m: [38;5;2m       O(n{^ 2}) in the number of lines:[39m
     [38;5;2m 939[39m: [38;5;2m[39m
     [38;5;2m 940[39m: [38;5;2m{[[39m
     [38;5;2m 941[39m: [38;5;2mlet wrap1 width img =[39m
     [38;5;2m 942[39m: [38;5;2m  let rec go img = img ::[39m
     [38;5;2m 943[39m: [38;5;2m    if I.width img > width then go (I.hcrop width 0 img) else [][39m
     [38;5;2m 944[39m: [38;5;2m  in go img |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m 945[39m: [38;5;2m]}[39m
     [38;5;2m 946[39m: [38;5;2m[39m
     [38;5;2m 947[39m: [38;5;2m       Although [crop] is applied only [lines] times, the image complexity of[39m
     [38;5;2m 948[39m: [38;5;2m       each line depends on the number of preceding lines.[39m
     [38;5;2m 949[39m: [38;5;2m[39m
     [38;5;2m 950[39m: [38;5;2m       An O(n) version does not iterate [crop]:[39m
     [38;5;2m 951[39m: [38;5;2m[39m
     [38;5;2m 952[39m: [38;5;2m{[[39m
     [38;5;2m 953[39m: [38;5;2mlet wrap2 width img =[39m
     [38;5;2m 954[39m: [38;5;2m  let rec go off = I.hcrop off 0 img ::[39m
     [38;5;2m 955[39m: [38;5;2m    if I.width img - off > width then go (off + width) else [][39m
     [38;5;2m 956[39m: [38;5;2m  in go 0 |> I.vcat |> I.hsnap ~align:`Left width[39m
     [38;5;2m 957[39m: [38;5;2m]}[39m
     [38;5;2m 958[39m: [38;5;2m       }[39m
     [38;5;2m 959[39m: [38;5;2m    {- Rendering depends on the {e output} dimensions, but not on the {e image}[39m
     [38;5;2m 960[39m: [38;5;2m       dimensions.[39m
     [38;5;2m 961[39m: [38;5;2m[39m
     [38;5;2m 962[39m: [38;5;2m       Rendering an image to [w * h] implicitly crops it to its leftmost [w][39m
     [38;5;2m 963[39m: [38;5;2m       columns and topmost [h] rows. While [w] and [h] will have an impact on[39m
     [38;5;2m 964[39m: [38;5;2m       the rendering performance, the complexity of the (cropped) image tends to[39m
     [38;5;2m 965[39m: [38;5;2m       be more important.}}[39m
     [38;5;2m 966[39m: [38;5;2m[39m
     [38;5;2m 967[39m: [38;5;2m*)[39m
[38;5;3mAdded regular file ../notty/src/notty_top.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(* Force linking with Notty for e.g. Omod. *)[39m
     [38;5;2m   5[39m: [38;5;2mlet _ = Sys.opaque_identity Notty.I.empty[39m
     [38;5;2m   6[39m: [38;5;2m[39m
     [38;5;2m   7[39m: [38;5;2m#if OCAML_VERSION >= (4,14,0)[39m
     [38;5;2m   8[39m: [38;5;2mlet _ = Toploop.use_silently Format.err_formatter (Toploop.File "notty_top_init.ml")[39m
     [38;5;2m   9[39m: [38;5;2m#else[39m
     [38;5;2m  10[39m: [38;5;2mlet _ = Toploop.use_silently Format.err_formatter "notty_top_init.ml"[39m
     [38;5;2m  11[39m: [38;5;2m#endif[39m
[38;5;3mAdded regular file ../notty/src/notty_top_init.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty;;[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2m#install_printer Notty.Render.pp_image;;[39m
     [38;5;2m   7[39m: [38;5;2m#install_printer Notty.Render.pp_attr;;[39m
[38;5;3mAdded regular file ../notty/src-lwt/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(library[39m
     [38;5;2m   2[39m: [38;5;2m  (public_name notty.lwt)[39m
     [38;5;2m   3[39m: [38;5;2m  (synopsis "Notty Lwt+Unix IO")[39m
     [38;5;2m   4[39m: [38;5;2m  (name notty_lwt)[39m
     [38;5;2m   5[39m: [38;5;2m  (wrapped false)[39m
     [38;5;2m   6[39m: [38;5;2m  (optional)[39m
     [38;5;2m   7[39m: [38;5;2m  (libraries notty notty.unix lwt lwt.unix))[39m
[38;5;3mAdded regular file ../notty/src-lwt/notty_lwt.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Lwt.Infix[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mopen Notty[39m
     [38;5;2m   7[39m: [38;5;2mopen Notty_unix[39m
     [38;5;2m   8[39m: [38;5;2mopen Private[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2mtype ('a, 'b) either = Left of 'a | Right of 'b[39m
     [38;5;2m  12[39m: [38;5;2mlet left  x = Left x[39m
     [38;5;2m  13[39m: [38;5;2mlet right y = Right y[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2mlet (</>) a b = Lwt.pick [(a >|= left); (b >|= right)][39m
     [38;5;2m  16[39m: [38;5;2mlet (<??>) a b = (a >|= left) <?> (b >|= right)[39m
     [38;5;2m  17[39m: [38;5;2m[39m
     [38;5;2m  18[39m: [38;5;2mlet whenopt f = function Some x -> f x | None -> ()[39m
     [38;5;2m  19[39m: [38;5;2m[39m
     [38;5;2m  20[39m: [38;5;2mlet rec write fd buf off = function[39m
     [38;5;2m  21[39m: [38;5;2m  | 0 -> Lwt.return_unit[39m
     [38;5;2m  22[39m: [38;5;2m  | n -> Lwt_unix.write fd buf off n >>= fun w -> write fd buf (off + w) (n - w)[39m
     [38;5;2m  23[39m: [38;5;2m[39m
     [38;5;2m  24[39m: [38;5;2mmodule Lwt_condition = struct[39m
     [38;5;2m  25[39m: [38;5;2m[39m
     [38;5;2m  26[39m: [38;5;2m  include Lwt_condition[39m
     [38;5;2m  27[39m: [38;5;2m[39m
     [38;5;2m  28[39m: [38;5;2m  let map f c =[39m
     [38;5;2m  29[39m: [38;5;2m    let d = create () in[39m
     [38;5;2m  30[39m: [38;5;2m    let rec go () = wait c >>= fun x -> broadcast d (f x); go ()[39m
     [38;5;2m  31[39m: [38;5;2m    in (Lwt.async go; d)[39m
     [38;5;2m  32[39m: [38;5;2m[39m
     [38;5;2m  33[39m: [38;5;2m  let unburst ~t c =[39m
     [38;5;2m  34[39m: [38;5;2m    let d = create () in[39m
     [38;5;2m  35[39m: [38;5;2m    let rec delay x = Lwt_unix.sleep t </> wait c >>= function[39m
     [38;5;2m  36[39m: [38;5;2m      | Left () -> broadcast d x; start ()[39m
     [38;5;2m  37[39m: [38;5;2m      | Right x -> delay x[39m
     [38;5;2m  38[39m: [38;5;2m    and start () = wait c >>= delay in[39m
     [38;5;2m  39[39m: [38;5;2m    Lwt.async start; d[39m
     [38;5;2m  40[39m: [38;5;2mend[39m
     [38;5;2m  41[39m: [38;5;2m[39m
     [38;5;2m  42[39m: [38;5;2mmodule Term = struct[39m
     [38;5;2m  43[39m: [38;5;2m[39m
     [38;5;2m  44[39m: [38;5;2m  let winches = lazy ([39m
     [38;5;2m  45[39m: [38;5;2m    let c = Lwt_condition.create () in[39m
     [38;5;2m  46[39m: [38;5;2m    let `Revert _ = set_winch_handler (Lwt_condition.broadcast c) in[39m
     [38;5;2m  47[39m: [38;5;2m    c[39m
     [38;5;2m  48[39m: [38;5;2m  )[39m
     [38;5;2m  49[39m: [38;5;2m[39m
     [38;5;2m  50[39m: [38;5;2m  let winch () = Lazy.force winches |> Lwt_condition.wait[39m
     [38;5;2m  51[39m: [38;5;2m[39m
     [38;5;2m  52[39m: [38;5;2m  let bsize = 1024[39m
     [38;5;2m  53[39m: [38;5;2m[39m
     [38;5;2m  54[39m: [38;5;2m  let input_stream ~nosig fd stop =[39m
     [38;5;2m  55[39m: [38;5;2m    let `Revert f = setup_tcattr ~nosig (Lwt_unix.unix_file_descr fd) in[39m
     [38;5;2m  56[39m: [38;5;2m    let stream =[39m
     [38;5;2m  57[39m: [38;5;2m      let flt  = Unescape.create ()[39m
     [38;5;2m  58[39m: [38;5;2m      and ibuf = Bytes.create bsize in[39m
     [38;5;2m  59[39m: [38;5;2m      let rec next () =[39m
     [38;5;2m  60[39m: [38;5;2m        match Unescape.next flt with[39m
     [38;5;2m  61[39m: [38;5;2m        | #Unescape.event as r -> Lwt.return_some r[39m
     [38;5;2m  62[39m: [38;5;2m        | `End   -> Lwt.return_none[39m
     [38;5;2m  63[39m: [38;5;2m        | `Await ->[39m
     [38;5;2m  64[39m: [38;5;2m            (Lwt_unix.read fd ibuf 0 bsize <??> stop) >>= function[39m
     [38;5;2m  65[39m: [38;5;2m              | Left n  -> Unescape.input flt ibuf 0 n; next ()[39m
     [38;5;2m  66[39m: [38;5;2m              | Right _ -> Lwt.return_none[39m
     [38;5;2m  67[39m: [38;5;2m      in Lwt_stream.from next in[39m
     [38;5;2m  68[39m: [38;5;2m    Lwt.async (fun () -> Lwt_stream.closed stream >|= f);[39m
     [38;5;2m  69[39m: [38;5;2m    stream[39m
     [38;5;2m  70[39m: [38;5;2m[39m
     [38;5;2m  71[39m: [38;5;2m  type t = {[39m
     [38;5;2m  72[39m: [38;5;2m    ochan  : Lwt_io.output_channel[39m
     [38;5;2m  73[39m: [38;5;2m  ; trm    : Tmachine.t[39m
     [38;5;2m  74[39m: [38;5;2m  ; buf    : Buffer.t[39m
     [38;5;2m  75[39m: [38;5;2m  ; fds    : Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m  76[39m: [38;5;2m  ; events : [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m  77[39m: [38;5;2m  ; stop   : (unit -> unit)[39m
     [38;5;2m  78[39m: [38;5;2m  }[39m
     [38;5;2m  79[39m: [38;5;2m[39m
     [38;5;2m  80[39m: [38;5;2m  let write t =[39m
     [38;5;2m  81[39m: [38;5;2m    Tmachine.output t.trm t.buf;[39m
     [38;5;2m  82[39m: [38;5;2m    let out = Buffer.contents t.buf in (* XXX There goes 0copy. :/ *)[39m
     [38;5;2m  83[39m: [38;5;2m    Buffer.clear t.buf; Lwt_io.write t.ochan out[39m
     [38;5;2m  84[39m: [38;5;2m[39m
     [38;5;2m  85[39m: [38;5;2m  let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m  86[39m: [38;5;2m  let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m  87[39m: [38;5;2m  let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m  88[39m: [38;5;2m  let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m  89[39m: [38;5;2m  let size t         = Tmachine.size t.trm[39m
     [38;5;2m  90[39m: [38;5;2m[39m
     [38;5;2m  91[39m: [38;5;2m  let release t =[39m
     [38;5;2m  92[39m: [38;5;2m    if Tmachine.release t.trm then[39m
     [38;5;2m  93[39m: [38;5;2m      ( t.stop (); write t >>= fun () -> Lwt_io.flush t.ochan )[39m
     [38;5;2m  94[39m: [38;5;2m    else Lwt.return_unit[39m
     [38;5;2m  95[39m: [38;5;2m[39m
     [38;5;2m  96[39m: [38;5;2m  let resizef fd stop on_resize =[39m
     [38;5;2m  97[39m: [38;5;2m    if Unix.isatty fd then[39m
     [38;5;2m  98[39m: [38;5;2m      let rcond = Lwt_condition.([39m
     [38;5;2m  99[39m: [38;5;2m        Lazy.force winches |> unburst ~t:0.1 |> map (fun () -> winsize fd)) in[39m
     [38;5;2m 100[39m: [38;5;2m      let rec monitor () =[39m
     [38;5;2m 101[39m: [38;5;2m        (Lwt_condition.wait rcond <?> stop) >>= function[39m
     [38;5;2m 102[39m: [38;5;2m          | Some dim -> on_resize dim; monitor ()[39m
     [38;5;2m 103[39m: [38;5;2m          | None     -> Lwt.return_unit in[39m
     [38;5;2m 104[39m: [38;5;2m      Lwt.async monitor;[39m
     [38;5;2m 105[39m: [38;5;2m      Lwt_stream.from (fun () -> Lwt_condition.wait rcond <?> stop)[39m
     [38;5;2m 106[39m: [38;5;2m        |> Lwt_stream.map (fun dim -> `Resize dim)[39m
     [38;5;2m 107[39m: [38;5;2m    else Lwt_stream.of_list [][39m
     [38;5;2m 108[39m: [38;5;2m[39m
     [38;5;2m 109[39m: [38;5;2m  let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m 110[39m: [38;5;2m             ?(input=Lwt_unix.stdin) ?(output=Lwt_unix.stdout) () =[39m
     [38;5;2m 111[39m: [38;5;2m    let fd = Lwt_unix.unix_file_descr output in[39m
     [38;5;2m 112[39m: [38;5;2m    let (stop, stopw) = Lwt.wait () in[39m
     [38;5;2m 113[39m: [38;5;2m    let rec t = lazy {[39m
     [38;5;2m 114[39m: [38;5;2m        trm    = Tmachine.create ~mouse ~bpaste (cap_for_fd fd)[39m
     [38;5;2m 115[39m: [38;5;2m      ; ochan  = Lwt_io.(of_fd ~mode:output) output[39m
     [38;5;2m 116[39m: [38;5;2m      ; buf    = Buffer.create 4096[39m
     [38;5;2m 117[39m: [38;5;2m      ; fds    = (input, output)[39m
     [38;5;2m 118[39m: [38;5;2m      ; stop   = (fun () -> Lwt.wakeup stopw None)[39m
     [38;5;2m 119[39m: [38;5;2m      ; events = Lwt_stream.choose[39m
     [38;5;2m 120[39m: [38;5;2m          [ input_stream ~nosig input stop[39m
     [38;5;2m 121[39m: [38;5;2m          ; resizef fd stop @@ fun dim ->[39m
     [38;5;2m 122[39m: [38;5;2m              let t = Lazy.force t in Buffer.reset t.buf; set_size t dim ][39m
     [38;5;2m 123[39m: [38;5;2m      } in[39m
     [38;5;2m 124[39m: [38;5;2m    let t = Lazy.force t in[39m
     [38;5;2m 125[39m: [38;5;2m    winsize fd |> whenopt (set_size t);[39m
     [38;5;2m 126[39m: [38;5;2m    Lwt.async (fun () -> write t); (* XXX async? *)[39m
     [38;5;2m 127[39m: [38;5;2m    if dispose then Lwt_main.at_exit (fun () -> release t);[39m
     [38;5;2m 128[39m: [38;5;2m    t[39m
     [38;5;2m 129[39m: [38;5;2m[39m
     [38;5;2m 130[39m: [38;5;2m  let events t = t.events[39m
     [38;5;2m 131[39m: [38;5;2m  let fds    t = t.fds[39m
     [38;5;2m 132[39m: [38;5;2mend[39m
     [38;5;2m 133[39m: [38;5;2m[39m
     [38;5;2m 134[39m: [38;5;2mlet winsize fd = winsize (Lwt_unix.unix_file_descr fd)[39m
     [38;5;2m 135[39m: [38;5;2m[39m
     [38;5;2m 136[39m: [38;5;2minclude Gen_output (struct[39m
     [38;5;2m 137[39m: [38;5;2m  type fd = Lwt_unix.file_descr and k = unit Lwt.t[39m
     [38;5;2m 138[39m: [38;5;2m  let (def, to_fd) = Lwt_unix.(stdout, unix_file_descr)[39m
     [38;5;2m 139[39m: [38;5;2m  and write fd buf = Buffer.(write fd (to_bytes buf) 0 (length buf))[39m
     [38;5;2m 140[39m: [38;5;2mend)[39m
[38;5;3mAdded regular file ../notty/src-lwt/notty_lwt.mli:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(** [Notty] IO [Lwt] on [Unix].[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2m    This is an IO module for {!Notty}.[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2m    It mirrors {!Notty_unix} and the corresponding operations behave[39m
     [38;5;2m   9[39m: [38;5;2m    analogously. Consult its documentation for more info.[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2m    {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2mopen Notty[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2m(** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m  16[39m: [38;5;2m[39m
     [38;5;2m  17[39m: [38;5;2m(** Terminal IO with concurrency.[39m
     [38;5;2m  18[39m: [38;5;2m[39m
     [38;5;2m  19[39m: [38;5;2m    For more info, see {!Notty_unix.Term}. *)[39m
     [38;5;2m  20[39m: [38;5;2mmodule Term : sig[39m
     [38;5;2m  21[39m: [38;5;2m[39m
     [38;5;2m  22[39m: [38;5;2m  type t[39m
     [38;5;2m  23[39m: [38;5;2m[39m
     [38;5;2m  24[39m: [38;5;2m  (** {1 Construction and destruction} *)[39m
     [38;5;2m  25[39m: [38;5;2m[39m
     [38;5;2m  26[39m: [38;5;2m  val create : ?dispose:bool ->[39m
     [38;5;2m  27[39m: [38;5;2m               ?nosig:bool ->[39m
     [38;5;2m  28[39m: [38;5;2m               ?mouse:bool ->[39m
     [38;5;2m  29[39m: [38;5;2m               ?bpaste:bool ->[39m
     [38;5;2m  30[39m: [38;5;2m               ?input:Lwt_unix.file_descr ->[39m
     [38;5;2m  31[39m: [38;5;2m               ?output:Lwt_unix.file_descr ->[39m
     [38;5;2m  32[39m: [38;5;2m               unit -> t[39m
     [38;5;2m  33[39m: [38;5;2m  (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a new[39m
     [38;5;2m  34[39m: [38;5;2m      {{!t}terminal}.[39m
     [38;5;2m  35[39m: [38;5;2m[39m
     [38;5;2m  36[39m: [38;5;2m      {b Note} [~dispose] arranges for the terminal to be disposed of at the end[39m
     [38;5;2m  37[39m: [38;5;2m      of the [Lwt] main loop, and not at process exit.[39m
     [38;5;2m  38[39m: [38;5;2m[39m
     [38;5;2m  39[39m: [38;5;2m      See {!Notty_unix.Term.create}. *)[39m
     [38;5;2m  40[39m: [38;5;2m[39m
     [38;5;2m  41[39m: [38;5;2m  val release : t -> unit Lwt.t[39m
     [38;5;2m  42[39m: [38;5;2m[39m
     [38;5;2m  43[39m: [38;5;2m  (** {1 Commands} *)[39m
     [38;5;2m  44[39m: [38;5;2m[39m
     [38;5;2m  45[39m: [38;5;2m  val image   : t -> image -> unit Lwt.t[39m
     [38;5;2m  46[39m: [38;5;2m  val refresh : t -> unit Lwt.t[39m
     [38;5;2m  47[39m: [38;5;2m  val cursor  : t -> (int * int) option -> unit Lwt.t[39m
     [38;5;2m  48[39m: [38;5;2m[39m
     [38;5;2m  49[39m: [38;5;2m  (** {1 Events} *)[39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2m  val events : t -> [ Unescape.event | `Resize of (int * int) ] Lwt_stream.t[39m
     [38;5;2m  52[39m: [38;5;2m  (** [events t] is the stream of incoming events.[39m
     [38;5;2m  53[39m: [38;5;2m[39m
     [38;5;2m  54[39m: [38;5;2m      Invoking {{!release}release} will terminate this stream.[39m
     [38;5;2m  55[39m: [38;5;2m[39m
     [38;5;2m  56[39m: [38;5;2m      Events are:[39m
     [38;5;2m  57[39m: [38;5;2m      {ul[39m
     [38;5;2m  58[39m: [38;5;2m      {- [#Unescape.event], an {{!Notty.Unescape.event}event} from the input[39m
     [38;5;2m  59[39m: [38;5;2m         fd; or}[39m
     [38;5;2m  60[39m: [38;5;2m      {- [`Resize (cols, rows)] whenever the terminal size changes.}}[39m
     [38;5;2m  61[39m: [38;5;2m[39m
     [38;5;2m  62[39m: [38;5;2m      {b Note} This stream is unique; for the same [t], [events t] always[39m
     [38;5;2m  63[39m: [38;5;2m      returns the same stream. *)[39m
     [38;5;2m  64[39m: [38;5;2m[39m
     [38;5;2m  65[39m: [38;5;2m  (** {1 Properties} *)[39m
     [38;5;2m  66[39m: [38;5;2m[39m
     [38;5;2m  67[39m: [38;5;2m  val size : t -> int * int[39m
     [38;5;2m  68[39m: [38;5;2m[39m
     [38;5;2m  69[39m: [38;5;2m  val fds : t -> Lwt_unix.file_descr * Lwt_unix.file_descr[39m
     [38;5;2m  70[39m: [38;5;2m[39m
     [38;5;2m  71[39m: [38;5;2m  (** {1 Window size change notifications}[39m
     [38;5;2m  72[39m: [38;5;2m[39m
     [38;5;2m  73[39m: [38;5;2m      {{!create}Creating} a terminal will install a [SIGWINCH] handler.[39m
     [38;5;2m  74[39m: [38;5;2m      The handler should not be replaced directly. This API allows the user to[39m
     [38;5;2m  75[39m: [38;5;2m      monitor deliveries of the signal.[39m
     [38;5;2m  76[39m: [38;5;2m[39m
     [38;5;2m  77[39m: [38;5;2m      See {!Notty_unix.Term.Winch}. *)[39m
     [38;5;2m  78[39m: [38;5;2m[39m
     [38;5;2m  79[39m: [38;5;2m  val winch : unit -> unit Lwt.t[39m
     [38;5;2m  80[39m: [38;5;2m  (** [winch ()] is a thread completing after the next [SIGWINCH]. A single[39m
     [38;5;2m  81[39m: [38;5;2m      signal delivery will cause the completion of all waiting [winch] threads. *)[39m
     [38;5;2m  82[39m: [38;5;2mend[39m
     [38;5;2m  83[39m: [38;5;2m[39m
     [38;5;2m  84[39m: [38;5;2m(** {1:inline Inline output} *)[39m
     [38;5;2m  85[39m: [38;5;2m[39m
     [38;5;2m  86[39m: [38;5;2mval winsize : Lwt_unix.file_descr -> (int * int) option[39m
     [38;5;2m  87[39m: [38;5;2m[39m
     [38;5;2m  88[39m: [38;5;2mval eol : image -> image[39m
     [38;5;2m  89[39m: [38;5;2m[39m
     [38;5;2m  90[39m: [38;5;2mval output_image :[39m
     [38;5;2m  91[39m: [38;5;2m  ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> image -> unit Lwt.t[39m
     [38;5;2m  92[39m: [38;5;2m[39m
     [38;5;2m  93[39m: [38;5;2mval output_image_size :[39m
     [38;5;2m  94[39m: [38;5;2m  ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> (int * int -> image) -> unit Lwt.t[39m
     [38;5;2m  95[39m: [38;5;2m[39m
     [38;5;2m  96[39m: [38;5;2mval show_cursor : ?cap:Cap.t -> ?fd:Lwt_unix.file_descr -> bool -> unit Lwt.t[39m
     [38;5;2m  97[39m: [38;5;2m[39m
     [38;5;2m  98[39m: [38;5;2mval move_cursor :[39m
     [38;5;2m  99[39m: [38;5;2m  ?cap:Cap.t -> ?fd:Lwt_unix.file_descr ->[39m
     [38;5;2m 100[39m: [38;5;2m    [ `Home | `By of int * int | `To of int * int ] -> unit Lwt.t[39m
[38;5;3mAdded regular file ../notty/src-unix/dune:[39m
     [38;5;2m   1[39m: [38;5;2m(library[39m
     [38;5;2m   2[39m: [38;5;2m  (public_name notty.unix)[39m
     [38;5;2m   3[39m: [38;5;2m  (synopsis "Notty Unix IO")[39m
     [38;5;2m   4[39m: [38;5;2m  (name notty_unix)[39m
     [38;5;2m   5[39m: [38;5;2m  (wrapped false)[39m
     [38;5;2m   6[39m: [38;5;2m  (c_names winsize)[39m
     [38;5;2m   7[39m: [38;5;2m  (c_flags (-Wall -Wextra -O3))[39m
     [38;5;2m   8[39m: [38;5;2m  (optional)[39m
     [38;5;2m   9[39m: [38;5;2m  (libraries notty unix))[39m
     [38;5;2m  10[39m: [38;5;2m[39m
     [38;5;2m  11[39m: [38;5;2m(include_subdirs unqualified)[39m
[38;5;3mAdded regular file ../notty/src-unix/native/winsize.c:[39m
     [38;5;2m   1[39m: [38;5;2m#include <sys/ioctl.h>[39m
     [38;5;2m   2[39m: [38;5;2m#include <signal.h>[39m
     [38;5;2m   3[39m: [38;5;2m#include <caml/mlvalues.h>[39m
     [38;5;2m   4[39m: [38;5;2m[39m
     [38;5;2m   5[39m: [38;5;2mCAMLprim value caml_notty_winsize (value vfd) {[39m
     [38;5;2m   6[39m: [38;5;2m  int fd = Int_val (vfd);[39m
     [38;5;2m   7[39m: [38;5;2m  struct winsize w;[39m
     [38;5;2m   8[39m: [38;5;2m  if (ioctl (fd, TIOCGWINSZ, &w) >= 0)[39m
     [38;5;2m   9[39m: [38;5;2m    return Val_int ((w.ws_col << 16) + ((w.ws_row & 0x7fff) << 1));[39m
     [38;5;2m  10[39m: [38;5;2m  return Val_int (0);[39m
     [38;5;2m  11[39m: [38;5;2m}[39m
     [38;5;2m  12[39m: [38;5;2m[39m
     [38;5;2m  13[39m: [38;5;2m#define __unit() value unit __attribute__((unused))[39m
     [38;5;2m  14[39m: [38;5;2m[39m
     [38;5;2m  15[39m: [38;5;2mCAMLprim value caml_notty_winch_number (__unit()) {[39m
     [38;5;2m  16[39m: [38;5;2m  return Val_int (SIGWINCH);[39m
     [38;5;2m  17[39m: [38;5;2m}[39m
[38;5;3mAdded regular file ../notty/src-unix/notty_unix.ml:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2mopen Notty[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2mexternal c_winsize : Unix.file_descr -> int = "caml_notty_winsize" [@@noalloc][39m
     [38;5;2m   7[39m: [38;5;2mexternal winch_number : unit -> int = "caml_notty_winch_number" [@@noalloc][39m
     [38;5;2m   8[39m: [38;5;2m[39m
     [38;5;2m   9[39m: [38;5;2mlet iter f = function Some x -> f x | _ -> ()[39m
     [38;5;2m  10[39m: [38;5;2mlet value x = function Some a -> a | _ -> x[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2mlet winsize fd = match c_winsize fd with[39m
     [38;5;2m  13[39m: [38;5;2m  | 0  -> None[39m
     [38;5;2m  14[39m: [38;5;2m  | wh -> Some (wh lsr 16, wh lsr 1 land 0x7fff)[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2mmodule Private = struct[39m
     [38;5;2m  17[39m: [38;5;2m[39m
     [38;5;2m  18[39m: [38;5;2m  let once f = let v = lazy (f ()) in fun () -> Lazy.force v[39m
     [38;5;2m  19[39m: [38;5;2m[39m
     [38;5;2m  20[39m: [38;5;2m  let cap_for_fd =[39m
     [38;5;2m  21[39m: [38;5;2m    let open Cap in[39m
     [38;5;2m  22[39m: [38;5;2m    match Sys.getenv "TERM" with[39m
     [38;5;2m  23[39m: [38;5;2m    | exception Not_found -> fun _ -> dumb[39m
     [38;5;2m  24[39m: [38;5;2m    | (""|"dumb")         -> fun _ -> dumb[39m
     [38;5;2m  25[39m: [38;5;2m    | _                   -> fun fd -> if Unix.isatty fd then ansi else dumb[39m
     [38;5;2m  26[39m: [38;5;2m[39m
     [38;5;2m  27[39m: [38;5;2m  let setup_tcattr ~nosig fd =[39m
     [38;5;2m  28[39m: [38;5;2m    let open Unix in try[39m
     [38;5;2m  29[39m: [38;5;2m      let tc = tcgetattr fd in[39m
     [38;5;2m  30[39m: [38;5;2m      let tc1 = { tc with c_icanon = false; c_echo = false } in[39m
     [38;5;2m  31[39m: [38;5;2m      tcsetattr fd TCSANOW[39m
     [38;5;2m  32[39m: [38;5;2m        ( if nosig then { tc1 with c_isig = false; c_ixon = false } else tc1 );[39m
     [38;5;2m  33[39m: [38;5;2m      `Revert (once @@ fun _ -> tcsetattr fd TCSANOW tc)[39m
     [38;5;2m  34[39m: [38;5;2m    with Unix_error (ENOTTY, _, _) -> `Revert ignore[39m
     [38;5;2m  35[39m: [38;5;2m[39m
     [38;5;2m  36[39m: [38;5;2m  let set_winch_handler f =[39m
     [38;5;2m  37[39m: [38;5;2m    let signum = winch_number () in[39m
     [38;5;2m  38[39m: [38;5;2m    let old_hdl = Sys.(signal signum (Signal_handle (fun _ -> f ()))) in[39m
     [38;5;2m  39[39m: [38;5;2m    `Revert (once @@ fun () -> Sys.set_signal signum old_hdl)[39m
     [38;5;2m  40[39m: [38;5;2m[39m
     [38;5;2m  41[39m: [38;5;2m  module Gen_output (O : sig[39m
     [38;5;2m  42[39m: [38;5;2m    type fd[39m
     [38;5;2m  43[39m: [38;5;2m    type k[39m
     [38;5;2m  44[39m: [38;5;2m    val def   : fd[39m
     [38;5;2m  45[39m: [38;5;2m    val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m  46[39m: [38;5;2m    val write : fd -> Buffer.t -> k[39m
     [38;5;2m  47[39m: [38;5;2m  end) = struct[39m
     [38;5;2m  48[39m: [38;5;2m[39m
     [38;5;2m  49[39m: [38;5;2m    let scratch = lazy (Buffer.create 4096)[39m
     [38;5;2m  50[39m: [38;5;2m[39m
     [38;5;2m  51[39m: [38;5;2m    let output ?cap ?(fd = O.def) f =[39m
     [38;5;2m  52[39m: [38;5;2m      let cap = cap |> value (cap_for_fd (O.to_fd fd)) in[39m
     [38;5;2m  53[39m: [38;5;2m      let buf = Lazy.force scratch in[39m
     [38;5;2m  54[39m: [38;5;2m      Buffer.reset buf; f buf cap fd; O.write fd buf[39m
     [38;5;2m  55[39m: [38;5;2m[39m
     [38;5;2m  56[39m: [38;5;2m    let output_image_size ?cap ?fd f =[39m
     [38;5;2m  57[39m: [38;5;2m      output ?cap ?fd @@ fun buf cap fd ->[39m
     [38;5;2m  58[39m: [38;5;2m        let size = winsize (O.to_fd fd) in[39m
     [38;5;2m  59[39m: [38;5;2m        let i = f (value (80, 24) size) in[39m
     [38;5;2m  60[39m: [38;5;2m        let dim = match size with[39m
     [38;5;2m  61[39m: [38;5;2m          | Some (w, _) -> I.(w, height i)[39m
     [38;5;2m  62[39m: [38;5;2m          | None        -> I.(width i, height i) in[39m
     [38;5;2m  63[39m: [38;5;2m        Render.to_buffer buf cap (0, 0) dim i[39m
     [38;5;2m  64[39m: [38;5;2m[39m
     [38;5;2m  65[39m: [38;5;2m    let show_cursor ?cap ?fd x =[39m
     [38;5;2m  66[39m: [38;5;2m      output ?cap ?fd @@ fun buf cap _ -> Direct.show_cursor buf cap x[39m
     [38;5;2m  67[39m: [38;5;2m[39m
     [38;5;2m  68[39m: [38;5;2m    let move_cursor ?cap ?fd x =[39m
     [38;5;2m  69[39m: [38;5;2m      output ?cap ?fd @@ fun buf cap _ -> Direct.move_cursor buf cap x[39m
     [38;5;2m  70[39m: [38;5;2m[39m
     [38;5;2m  71[39m: [38;5;2m    let output_image ?cap ?fd i = output_image_size ?cap ?fd (fun _ -> i)[39m
     [38;5;2m  72[39m: [38;5;2m[39m
     [38;5;2m  73[39m: [38;5;2m    let eol i = I.(i <-> void 0 1)[39m
     [38;5;2m  74[39m: [38;5;2m  end[39m
     [38;5;2m  75[39m: [38;5;2mend[39m
     [38;5;2m  76[39m: [38;5;2m[39m
     [38;5;2m  77[39m: [38;5;2mopen Private[39m
     [38;5;2m  78[39m: [38;5;2m[39m
     [38;5;2m  79[39m: [38;5;2mmodule Term = struct[39m
     [38;5;2m  80[39m: [38;5;2m[39m
     [38;5;2m  81[39m: [38;5;2m  module Winch = struct[39m
     [38;5;2m  82[39m: [38;5;2m[39m
     [38;5;2m  83[39m: [38;5;2m    let h  = Hashtbl.create 3[39m
     [38;5;2m  84[39m: [38;5;2m    and id = ref 0[39m
     [38;5;2m  85[39m: [38;5;2m[39m
     [38;5;2m  86[39m: [38;5;2m    let add fd f =[39m
     [38;5;2m  87[39m: [38;5;2m      let n = !id in[39m
     [38;5;2m  88[39m: [38;5;2m      set_winch_handler (fun () -> Hashtbl.iter (fun _ f -> f ()) h) |> ignore;[39m
     [38;5;2m  89[39m: [38;5;2m      Hashtbl.add h n (fun () -> winsize fd |> iter f); incr id;[39m
     [38;5;2m  90[39m: [38;5;2m      `Revert (fun () -> Hashtbl.remove h n)[39m
     [38;5;2m  91[39m: [38;5;2m  end[39m
     [38;5;2m  92[39m: [38;5;2m[39m
     [38;5;2m  93[39m: [38;5;2m  module Input = struct[39m
     [38;5;2m  94[39m: [38;5;2m[39m
     [38;5;2m  95[39m: [38;5;2m    type t = {[39m
     [38;5;2m  96[39m: [38;5;2m      fd      : Unix.file_descr[39m
     [38;5;2m  97[39m: [38;5;2m    ; flt     : Unescape.t[39m
     [38;5;2m  98[39m: [38;5;2m    ; ibuf    : bytes[39m
     [38;5;2m  99[39m: [38;5;2m    ; cleanup : unit -> unit[39m
     [38;5;2m 100[39m: [38;5;2m    }[39m
     [38;5;2m 101[39m: [38;5;2m[39m
     [38;5;2m 102[39m: [38;5;2m    let bsize = 1024[39m
     [38;5;2m 103[39m: [38;5;2m[39m
     [38;5;2m 104[39m: [38;5;2m    let create ~nosig fd =[39m
     [38;5;2m 105[39m: [38;5;2m      let flt  = Unescape.create ()[39m
     [38;5;2m 106[39m: [38;5;2m      and ibuf = Bytes.create bsize[39m
     [38;5;2m 107[39m: [38;5;2m      and `Revert cleanup = setup_tcattr ~nosig fd in[39m
     [38;5;2m 108[39m: [38;5;2m      { fd; flt; ibuf; cleanup }[39m
     [38;5;2m 109[39m: [38;5;2m[39m
     [38;5;2m 110[39m: [38;5;2m    let rec event t =[39m
     [38;5;2m 111[39m: [38;5;2m      match Unescape.next t.flt with[39m
     [38;5;2m 112[39m: [38;5;2m      | #Unescape.event | `End as r -> r[39m
     [38;5;2m 113[39m: [38;5;2m      | `Await ->[39m
     [38;5;2m 114[39m: [38;5;2m          let n = Unix.read t.fd t.ibuf 0 bsize in[39m
     [38;5;2m 115[39m: [38;5;2m          Unescape.input t.flt t.ibuf 0 n; event t[39m
     [38;5;2m 116[39m: [38;5;2m  end[39m
     [38;5;2m 117[39m: [38;5;2m[39m
     [38;5;2m 118[39m: [38;5;2m  type t = {[39m
     [38;5;2m 119[39m: [38;5;2m    output   : out_channel[39m
     [38;5;2m 120[39m: [38;5;2m  ; trm      : Tmachine.t[39m
     [38;5;2m 121[39m: [38;5;2m  ; buf      : Buffer.t[39m
     [38;5;2m 122[39m: [38;5;2m  ; input    : Input.t[39m
     [38;5;2m 123[39m: [38;5;2m  ; fds      : Unix.file_descr * Unix.file_descr[39m
     [38;5;2m 124[39m: [38;5;2m  ; unwinch  : (unit -> unit) Lazy.t[39m
     [38;5;2m 125[39m: [38;5;2m  ; mutable winched : bool[39m
     [38;5;2m 126[39m: [38;5;2m  }[39m
     [38;5;2m 127[39m: [38;5;2m[39m
     [38;5;2m 128[39m: [38;5;2m  let write t =[39m
     [38;5;2m 129[39m: [38;5;2m    Buffer.clear t.buf;[39m
     [38;5;2m 130[39m: [38;5;2m    Tmachine.output t.trm t.buf;[39m
     [38;5;2m 131[39m: [38;5;2m    Buffer.output_buffer t.output t.buf; flush t.output[39m
     [38;5;2m 132[39m: [38;5;2m[39m
     [38;5;2m 133[39m: [38;5;2m  let set_size t dim = Tmachine.set_size t.trm dim[39m
     [38;5;2m 134[39m: [38;5;2m  let refresh t      = Tmachine.refresh t.trm; write t[39m
     [38;5;2m 135[39m: [38;5;2m  let image t image  = Tmachine.image t.trm image; write t[39m
     [38;5;2m 136[39m: [38;5;2m  let cursor t curs  = Tmachine.cursor t.trm curs; write t[39m
     [38;5;2m 137[39m: [38;5;2m  let size t         = Tmachine.size t.trm[39m
     [38;5;2m 138[39m: [38;5;2m[39m
     [38;5;2m 139[39m: [38;5;2m  let release t =[39m
     [38;5;2m 140[39m: [38;5;2m    if Tmachine.release t.trm then[39m
     [38;5;2m 141[39m: [38;5;2m      ( Lazy.force t.unwinch ();[39m
     [38;5;2m 142[39m: [38;5;2m        t.input.Input.cleanup ();[39m
     [38;5;2m 143[39m: [38;5;2m        write t )[39m
     [38;5;2m 144[39m: [38;5;2m[39m
     [38;5;2m 145[39m: [38;5;2m  let create ?(dispose=true) ?(nosig=true) ?(mouse=true) ?(bpaste=true)[39m
     [38;5;2m 146[39m: [38;5;2m             ?(input=Unix.stdin) ?(output=Unix.stdout) () =[39m
     [38;5;2m 147[39m: [38;5;2m    let rec t = {[39m
     [38;5;2m 148[39m: [38;5;2m        output  = Unix.out_channel_of_descr output[39m
     [38;5;2m 149[39m: [38;5;2m      ; trm     = Tmachine.create ~mouse ~bpaste (cap_for_fd input)[39m
     [38;5;2m 150[39m: [38;5;2m      ; buf     = Buffer.create 4096[39m
     [38;5;2m 151[39m: [38;5;2m      ; input   = Input.create ~nosig input[39m
     [38;5;2m 152[39m: [38;5;2m      ; fds     = (input, output)[39m
     [38;5;2m 153[39m: [38;5;2m      ; winched = false[39m
     [38;5;2m 154[39m: [38;5;2m      ; unwinch = lazy ([39m
     [38;5;2m 155[39m: [38;5;2m          let `Revert f = Winch.add output @@ fun dim ->[39m
     [38;5;2m 156[39m: [38;5;2m            Buffer.reset t.buf; t.winched <- true; set_size t dim in f)[39m
     [38;5;2m 157[39m: [38;5;2m    } in[39m
     [38;5;2m 158[39m: [38;5;2m    winsize output |> iter (set_size t);[39m
     [38;5;2m 159[39m: [38;5;2m    (Lazy.force t.unwinch |> ignore) [@ocaml.warning "-5"];[39m
     [38;5;2m 160[39m: [38;5;2m    if dispose then at_exit (fun () -> release t);[39m
     [38;5;2m 161[39m: [38;5;2m    write t;[39m
     [38;5;2m 162[39m: [38;5;2m    t[39m
     [38;5;2m 163[39m: [38;5;2m[39m
     [38;5;2m 164[39m: [38;5;2m  let rec event = function[39m
     [38;5;2m 165[39m: [38;5;2m    | t when Tmachine.dead t.trm -> `End[39m
     [38;5;2m 166[39m: [38;5;2m    | t when t.winched -> t.winched <- false; `Resize (size t)[39m
     [38;5;2m 167[39m: [38;5;2m    | t -> Unix.(try Input.event t.input with Unix_error (EINTR, _, _) -> event t)[39m
     [38;5;2m 168[39m: [38;5;2m[39m
     [38;5;2m 169[39m: [38;5;2m  let pending t =[39m
     [38;5;2m 170[39m: [38;5;2m    not (Tmachine.dead t.trm) &&[39m
     [38;5;2m 171[39m: [38;5;2m    (t.winched || Unescape.pending t.input.Input.flt)[39m
     [38;5;2m 172[39m: [38;5;2m[39m
     [38;5;2m 173[39m: [38;5;2m  let fds t = t.fds[39m
     [38;5;2m 174[39m: [38;5;2mend[39m
     [38;5;2m 175[39m: [38;5;2m[39m
     [38;5;2m 176[39m: [38;5;2minclude Gen_output (struct[39m
     [38;5;2m 177[39m: [38;5;2m  type fd = out_channel and k = unit[39m
     [38;5;2m 178[39m: [38;5;2m  let def   = stdout[39m
     [38;5;2m 179[39m: [38;5;2m  and to_fd = Unix.descr_of_out_channel[39m
     [38;5;2m 180[39m: [38;5;2m  and write = Buffer.output_buffer[39m
     [38;5;2m 181[39m: [38;5;2mend)[39m
[38;5;3mAdded regular file ../notty/src-unix/notty_unix.mli:[39m
     [38;5;2m   1[39m: [38;5;2m(* Copyright (c) 2016-2017 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   2[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   3[39m: [38;5;2m[39m
     [38;5;2m   4[39m: [38;5;2m(** [Notty] IO for pure [Unix].[39m
     [38;5;2m   5[39m: [38;5;2m[39m
     [38;5;2m   6[39m: [38;5;2m    This is an IO module for {!Notty}.[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2m    {e %%VERSION%% — {{:%%PKG_HOMEPAGE%% }homepage}} *)[39m
     [38;5;2m   9[39m: [38;5;2m[39m
     [38;5;2m  10[39m: [38;5;2mopen Notty[39m
     [38;5;2m  11[39m: [38;5;2m[39m
     [38;5;2m  12[39m: [38;5;2m(** {1:fullscreen Fullscreen input and output}. *)[39m
     [38;5;2m  13[39m: [38;5;2m[39m
     [38;5;2m  14[39m: [38;5;2m(** Terminal IO abstraction for fullscreen, interactive applications.[39m
     [38;5;2m  15[39m: [38;5;2m[39m
     [38;5;2m  16[39m: [38;5;2m    This module provides both input and output. It assumes exclusive ownership of[39m
     [38;5;2m  17[39m: [38;5;2m    the IO streams between {{!create}initialization} and {{!release}shutdown}. *)[39m
     [38;5;2m  18[39m: [38;5;2mmodule Term : sig[39m
     [38;5;2m  19[39m: [38;5;2m[39m
     [38;5;2m  20[39m: [38;5;2m  type t[39m
     [38;5;2m  21[39m: [38;5;2m  (** Representation of the terminal, giving structured access to IO. *)[39m
     [38;5;2m  22[39m: [38;5;2m[39m
     [38;5;2m  23[39m: [38;5;2m  (** {1 Construction and destruction} *)[39m
     [38;5;2m  24[39m: [38;5;2m[39m
     [38;5;2m  25[39m: [38;5;2m  val create : ?dispose:bool ->[39m
     [38;5;2m  26[39m: [38;5;2m               ?nosig:bool ->[39m
     [38;5;2m  27[39m: [38;5;2m               ?mouse:bool ->[39m
     [38;5;2m  28[39m: [38;5;2m               ?bpaste:bool ->[39m
     [38;5;2m  29[39m: [38;5;2m               ?input:Unix.file_descr ->[39m
     [38;5;2m  30[39m: [38;5;2m               ?output:Unix.file_descr ->[39m
     [38;5;2m  31[39m: [38;5;2m               unit -> t[39m
     [38;5;2m  32[39m: [38;5;2m  (** [create ~dispose ~nosig ~mouse ~input ~output ()] creates a fresh[39m
     [38;5;2m  33[39m: [38;5;2m      {{!t}terminal}. It has the following side effects:[39m
     [38;5;2m  34[39m: [38;5;2m      {ul[39m
     [38;5;2m  35[39m: [38;5;2m      {- [Unix.tcsetattr] is applied to [input] to disable {e echo} and[39m
     [38;5;2m  36[39m: [38;5;2m         {e canonical mode}.}[39m
     [38;5;2m  37[39m: [38;5;2m      {- [output] is set to {e alternate screen mode}, and the cursor is[39m
     [38;5;2m  38[39m: [38;5;2m         hidden. Mouse and {e bracketed paste} reporting are (optionally)[39m
     [38;5;2m  39[39m: [38;5;2m         enabled.}[39m
     [38;5;2m  40[39m: [38;5;2m      {- [SIGWINCH] signal, normally ignored, is handled.}}[39m
     [38;5;2m  41[39m: [38;5;2m[39m
     [38;5;2m  42[39m: [38;5;2m      [~dispose] arranges for automatic {{!release}cleanup} of the terminal[39m
     [38;5;2m  43[39m: [38;5;2m      before the process terminates. The downside is that a reference to this[39m
     [38;5;2m  44[39m: [38;5;2m      terminal is retained until the program exits. Defaults to [true].[39m
     [38;5;2m  45[39m: [38;5;2m[39m
     [38;5;2m  46[39m: [38;5;2m      [~nosig] additionally turns off signal delivery and flow control[39m
     [38;5;2m  47[39m: [38;5;2m      ({e isig} and {e ixon}) on input. Inhibits automatic handling of[39m
     [38;5;2m  48[39m: [38;5;2m      {e CTRL-\{C,Z,\,S,Q\}}. Defaults to [true].[39m
     [38;5;2m  49[39m: [38;5;2m[39m
     [38;5;2m  50[39m: [38;5;2m      [~mouse] activates mouse reporting. Defaults to [true].[39m
     [38;5;2m  51[39m: [38;5;2m[39m
     [38;5;2m  52[39m: [38;5;2m      [~bpaste] activates bracketed paste reporting. Defaults to [true].[39m
     [38;5;2m  53[39m: [38;5;2m[39m
     [38;5;2m  54[39m: [38;5;2m      [~input] is the input file descriptor. Defaults to [stdin].[39m
     [38;5;2m  55[39m: [38;5;2m[39m
     [38;5;2m  56[39m: [38;5;2m      [~output] is the output file descriptor. Defaults to [stdout]. *)[39m
     [38;5;2m  57[39m: [38;5;2m[39m
     [38;5;2m  58[39m: [38;5;2m  val release : t -> unit[39m
     [38;5;2m  59[39m: [38;5;2m  (** Dispose of this terminal. Original behavior of input fd is reinstated,[39m
     [38;5;2m  60[39m: [38;5;2m      cursor is restored, mouse reporting disabled, and alternate mode is[39m
     [38;5;2m  61[39m: [38;5;2m      terminated.[39m
     [38;5;2m  62[39m: [38;5;2m[39m
     [38;5;2m  63[39m: [38;5;2m      It is an error to use the {{!cmds}commands} on a released terminal, and[39m
     [38;5;2m  64[39m: [38;5;2m      will raise [Invalid_argument], while [release] itself is idempotent. *)[39m
     [38;5;2m  65[39m: [38;5;2m[39m
     [38;5;2m  66[39m: [38;5;2m  (** {1:cmds Commands} *)[39m
     [38;5;2m  67[39m: [38;5;2m[39m
     [38;5;2m  68[39m: [38;5;2m  val image : t -> image -> unit[39m
     [38;5;2m  69[39m: [38;5;2m  (** [image t i] sets [i] as [t]'s current image and redraws the terminal. *)[39m
     [38;5;2m  70[39m: [38;5;2m[39m
     [38;5;2m  71[39m: [38;5;2m  val refresh : t -> unit[39m
     [38;5;2m  72[39m: [38;5;2m  (** [refresh t] redraws the terminal using the current image.[39m
     [38;5;2m  73[39m: [38;5;2m[39m
     [38;5;2m  74[39m: [38;5;2m      Useful if the output might have become garbled. *)[39m
     [38;5;2m  75[39m: [38;5;2m[39m
     [38;5;2m  76[39m: [38;5;2m  val cursor : t -> (int * int) option -> unit[39m
     [38;5;2m  77[39m: [38;5;2m  (** [cursor t pos] sets and redraws the cursor.[39m
     [38;5;2m  78[39m: [38;5;2m[39m
     [38;5;2m  79[39m: [38;5;2m      [None] hides it. [Some (x, y)] places it at column [x] and row [y], with[39m
     [38;5;2m  80[39m: [38;5;2m      the origin at [(0, 0)], mapping to the upper-left corner. *)[39m
     [38;5;2m  81[39m: [38;5;2m[39m
     [38;5;2m  82[39m: [38;5;2m  (** {1 Events} *)[39m
     [38;5;2m  83[39m: [38;5;2m[39m
     [38;5;2m  84[39m: [38;5;2m  val event : t -> [ Unescape.event | `Resize of (int * int) | `End ][39m
     [38;5;2m  85[39m: [38;5;2m  (** Wait for a new event. [event t] can be:[39m
     [38;5;2m  86[39m: [38;5;2m      {ul[39m
     [38;5;2m  87[39m: [38;5;2m      {- [#Unescape.event], an {{!Notty.Unescape.event}[event]} from the input fd;}[39m
     [38;5;2m  88[39m: [38;5;2m      {- [`End] if the input fd is closed, or the terminal was released; or}[39m
     [38;5;2m  89[39m: [38;5;2m      {- [`Resize (cols, rows)] giving the current size of the output tty, if a[39m
     [38;5;2m  90[39m: [38;5;2m         [SIGWINCH] was delivered before or during this call to [event].}}[39m
     [38;5;2m  91[39m: [38;5;2m[39m
     [38;5;2m  92[39m: [38;5;2m      {b Note} [event] is buffered. Calls can either block or immediately[39m
     [38;5;2m  93[39m: [38;5;2m      return. Use {{!pending}[pending]} to detect when the next call would not[39m
     [38;5;2m  94[39m: [38;5;2m      block. *)[39m
     [38;5;2m  95[39m: [38;5;2m[39m
     [38;5;2m  96[39m: [38;5;2m  val pending : t -> bool[39m
     [38;5;2m  97[39m: [38;5;2m  (** [pending t] is [true] if the next call to {{!event}[event]} would not[39m
     [38;5;2m  98[39m: [38;5;2m      block and the terminal has not yet been released. *)[39m
     [38;5;2m  99[39m: [38;5;2m[39m
     [38;5;2m 100[39m: [38;5;2m  (** {1 Properties} *)[39m
     [38;5;2m 101[39m: [38;5;2m[39m
     [38;5;2m 102[39m: [38;5;2m  val size : t -> int * int[39m
     [38;5;2m 103[39m: [38;5;2m  (** [size t] is the current size of the terminal's output tty. *)[39m
     [38;5;2m 104[39m: [38;5;2m[39m
     [38;5;2m 105[39m: [38;5;2m  val fds : t -> Unix.file_descr * Unix.file_descr[39m
     [38;5;2m 106[39m: [38;5;2m  (** [fds t] are [t]'s input and output file descriptors. *)[39m
     [38;5;2m 107[39m: [38;5;2m[39m
     [38;5;2m 108[39m: [38;5;2m  (** {1 Window size change notifications} *)[39m
     [38;5;2m 109[39m: [38;5;2m[39m
     [38;5;2m 110[39m: [38;5;2m  (** Manual [SIGWINCH] handling.[39m
     [38;5;2m 111[39m: [38;5;2m[39m
     [38;5;2m 112[39m: [38;5;2m      Unix delivers notifications about tty size changes through the [SIGWINCH][39m
     [38;5;2m 113[39m: [38;5;2m      signal. A handler for this signal is installed as soon as a new terminal[39m
     [38;5;2m 114[39m: [38;5;2m      is {{!create}created}. Replacing the global [SIGWINCH] handler using[39m
     [38;5;2m 115[39m: [38;5;2m      the [Sys] module will cause this module to malfunction, as the size change[39m
     [38;5;2m 116[39m: [38;5;2m      notifications will no longer be delivered.[39m
     [38;5;2m 117[39m: [38;5;2m[39m
     [38;5;2m 118[39m: [38;5;2m      You might still want to ignore resizes reported by {{!event}[event]} and[39m
     [38;5;2m 119[39m: [38;5;2m      directly listen to [SIGWINCH]. This module allows installing such[39m
     [38;5;2m 120[39m: [38;5;2m      listeners without conflicting with the rest of the machinery. *)[39m
     [38;5;2m 121[39m: [38;5;2m  module Winch : sig[39m
     [38;5;2m 122[39m: [38;5;2m[39m
     [38;5;2m 123[39m: [38;5;2m    val add : Unix.file_descr -> ((int * int) -> unit) -> [`Revert of unit -> unit][39m
     [38;5;2m 124[39m: [38;5;2m    (** [add fd f] registers a [SIGWINCH] handler. Every time the signal is[39m
     [38;5;2m 125[39m: [38;5;2m        delivered, [f] is called with the current size of the tty backing [fd].[39m
     [38;5;2m 126[39m: [38;5;2m        If [fd] is not a tty, [f] is never called.[39m
     [38;5;2m 127[39m: [38;5;2m[39m
     [38;5;2m 128[39m: [38;5;2m        Return value is a function that removes the handler [f].[39m
     [38;5;2m 129[39m: [38;5;2m[39m
     [38;5;2m 130[39m: [38;5;2m        Handlers are called in an unspecified order. *)[39m
     [38;5;2m 131[39m: [38;5;2m[39m
     [38;5;2m 132[39m: [38;5;2m  end[39m
     [38;5;2m 133[39m: [38;5;2mend[39m
     [38;5;2m 134[39m: [38;5;2m[39m
     [38;5;2m 135[39m: [38;5;2m(** {1:inline Inline output}[39m
     [38;5;2m 136[39m: [38;5;2m[39m
     [38;5;2m 137[39m: [38;5;2m    These operations do not assume exclusive access to the output. This means[39m
     [38;5;2m 138[39m: [38;5;2m    that they can be combined with other means of producing output. At the same[39m
     [38;5;2m 139[39m: [38;5;2m    time, it means that they are affected by the current terminal state, and[39m
     [38;5;2m 140[39m: [38;5;2m    that this state is not tracked. *)[39m
     [38;5;2m 141[39m: [38;5;2m[39m
     [38;5;2m 142[39m: [38;5;2mval winsize : Unix.file_descr -> (int * int) option[39m
     [38;5;2m 143[39m: [38;5;2m(** [winsize fd] is [Some (columns, rows)], the current dimensions of [fd]'s[39m
     [38;5;2m 144[39m: [38;5;2m    backing tty, or [None], when [fd] is not backed by a tty. *)[39m
     [38;5;2m 145[39m: [38;5;2m[39m
     [38;5;2m 146[39m: [38;5;2mval eol : image -> image[39m
     [38;5;2m 147[39m: [38;5;2m(** [eol image] is [image], producing an extra newline when printed. *)[39m
     [38;5;2m 148[39m: [38;5;2m[39m
     [38;5;2m 149[39m: [38;5;2mval output_image :[39m
     [38;5;2m 150[39m: [38;5;2m  ?cap:Cap.t -> ?fd:out_channel -> image -> unit[39m
     [38;5;2m 151[39m: [38;5;2m(** [output_image ?cap ?fd image] writes [image] to [fd].[39m
     [38;5;2m 152[39m: [38;5;2m[39m
     [38;5;2m 153[39m: [38;5;2m    The image is displayed in its full height. If the output is a tty, image[39m
     [38;5;2m 154[39m: [38;5;2m    width is clipped to the output width. Otherwise, full width is used.[39m
     [38;5;2m 155[39m: [38;5;2m[39m
     [38;5;2m 156[39m: [38;5;2m    [~cap] is the {{!caps}optional} terminal capability set.[39m
     [38;5;2m 157[39m: [38;5;2m[39m
     [38;5;2m 158[39m: [38;5;2m    [~fd] defaults to [stdout]. *)[39m
     [38;5;2m 159[39m: [38;5;2m[39m
     [38;5;2m 160[39m: [38;5;2mval output_image_size : ?cap:Cap.t -> ?fd:out_channel -> (int * int -> image) -> unit[39m
     [38;5;2m 161[39m: [38;5;2m(** [output_image_size ?cap ?fd f] is[39m
     [38;5;2m 162[39m: [38;5;2m    [output_image ?cap ?fd (f size)] where [size] are [fd]'s current[39m
     [38;5;2m 163[39m: [38;5;2m    {{!winsize}output dimensions}.[39m
     [38;5;2m 164[39m: [38;5;2m[39m
     [38;5;2m 165[39m: [38;5;2m    If [fd] is not backed by a tty, as a matter of convenience, [f] is applied[39m
     [38;5;2m 166[39m: [38;5;2m    to [(80, 24)]. Use {!Unix.isatty} or {{!winsize}[winsize]} to detect whether[39m
     [38;5;2m 167[39m: [38;5;2m    the output has a well-defined size. *)[39m
     [38;5;2m 168[39m: [38;5;2m[39m
     [38;5;2m 169[39m: [38;5;2mval show_cursor : ?cap:Cap.t -> ?fd:out_channel -> bool -> unit[39m
     [38;5;2m 170[39m: [38;5;2m(** [show_cursor ?cap ?fd visible] toggles the cursor visibility on [fd]. *)[39m
     [38;5;2m 171[39m: [38;5;2m[39m
     [38;5;2m 172[39m: [38;5;2mval move_cursor :[39m
     [38;5;2m 173[39m: [38;5;2m  ?cap:Cap.t -> ?fd:out_channel ->[39m
     [38;5;2m 174[39m: [38;5;2m    [ `Home | `By of int * int | `To of int * int ] -> unit[39m
     [38;5;2m 175[39m: [38;5;2m(** [move_cursor ?cap ?fd motion] moves the cursor on [fd].[39m
     [38;5;2m 176[39m: [38;5;2m[39m
     [38;5;2m 177[39m: [38;5;2m    [motion] is one of:[39m
     [38;5;2m 178[39m: [38;5;2m    {ul[39m
     [38;5;2m 179[39m: [38;5;2m    {- [`To (column, line)], positioning the cursor to [(column, line)]. Origin[39m
     [38;5;2m 180[39m: [38;5;2m       is [(0, 0)], the upper-left corner of the screen.}[39m
     [38;5;2m 181[39m: [38;5;2m    {- [`Home], moving the cursor the beginning of line.}[39m
     [38;5;2m 182[39m: [38;5;2m    {- [`By (columns, lines)], moving the cursor [columns] to the right (left if[39m
     [38;5;2m 183[39m: [38;5;2m       negative) and [lines] down (up if negative).[39m
     [38;5;2m 184[39m: [38;5;2m[39m
     [38;5;2m 185[39m: [38;5;2m       {b Note} Behavior is terminal dependent if the movement overshoots the[39m
     [38;5;2m 186[39m: [38;5;2m       output size.}} *)[39m
     [38;5;2m 187[39m: [38;5;2m[39m
     [38;5;2m 188[39m: [38;5;2m(** {1:caps Capability detection}[39m
     [38;5;2m 189[39m: [38;5;2m[39m
     [38;5;2m 190[39m: [38;5;2m    All [image] output requires {{!Notty.Cap.t}terminal capabilities}.[39m
     [38;5;2m 191[39m: [38;5;2m[39m
     [38;5;2m 192[39m: [38;5;2m    When not provided, capabilities are auto-detected, by checking that the[39m
     [38;5;2m 193[39m: [38;5;2m    output is a tty, that the environment variable [$TERM] is set, and that it[39m
     [38;5;2m 194[39m: [38;5;2m    is not set to either [""] or ["dumb"]. If these conditions hold,[39m
     [38;5;2m 195[39m: [38;5;2m    {{!Notty.Cap.ansi}ANSI} escapes are used. Otherwise, {{!Notty.Cap.dumb}no}[39m
     [38;5;2m 196[39m: [38;5;2m    escapes are used. *)[39m
     [38;5;2m 197[39m: [38;5;2m[39m
     [38;5;2m 198[39m: [38;5;2m(**/**)[39m
     [38;5;2m 199[39m: [38;5;2m(** {1 Private}[39m
     [38;5;2m 200[39m: [38;5;2m[39m
     [38;5;2m 201[39m: [38;5;2m    These are private interfaces, prone to breakage. Don't use them. *)[39m
     [38;5;2m 202[39m: [38;5;2mmodule Private : sig[39m
     [38;5;2m 203[39m: [38;5;2m[39m
     [38;5;2m 204[39m: [38;5;2m  val cap_for_fd        : Unix.file_descr -> Cap.t[39m
     [38;5;2m 205[39m: [38;5;2m  val setup_tcattr      : nosig:bool -> Unix.file_descr -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m 206[39m: [38;5;2m  val set_winch_handler : (unit -> unit) -> [ `Revert of (unit -> unit) ][39m
     [38;5;2m 207[39m: [38;5;2m[39m
     [38;5;2m 208[39m: [38;5;2m  module Gen_output (O : sig[39m
     [38;5;2m 209[39m: [38;5;2m    type fd[39m
     [38;5;2m 210[39m: [38;5;2m    type k[39m
     [38;5;2m 211[39m: [38;5;2m    val def   : fd[39m
     [38;5;2m 212[39m: [38;5;2m    val to_fd : fd -> Unix.file_descr[39m
     [38;5;2m 213[39m: [38;5;2m    val write : fd -> Buffer.t -> k[39m
     [38;5;2m 214[39m: [38;5;2m  end ) : sig[39m
     [38;5;2m 215[39m: [38;5;2m    val output_image : ?cap:Cap.t -> ?fd:O.fd -> image -> O.k[39m
     [38;5;2m 216[39m: [38;5;2m    val output_image_size : ?cap:Cap.t -> ?fd:O.fd -> (int * int -> image) -> O.k[39m
     [38;5;2m 217[39m: [38;5;2m    val show_cursor : ?cap:Cap.t -> ?fd:O.fd -> bool -> O.k[39m
     [38;5;2m 218[39m: [38;5;2m    val move_cursor : ?cap:Cap.t -> ?fd:O.fd -> [ `Home | `By of int * int | `To of int * int ] -> O.k[39m
     [38;5;2m 219[39m: [38;5;2m    val eol : image -> image[39m
     [38;5;2m 220[39m: [38;5;2m  end[39m
     [38;5;2m 221[39m: [38;5;2mend[39m
     [38;5;2m 222[39m: [38;5;2m(**/**)[39m
[38;5;3mAdded executable file ../notty/support/gen_unicode_props.ml:[39m
     [38;5;2m   1[39m: [38;5;2m#!/usr/bin/env ocaml[39m
     [38;5;2m   2[39m: [38;5;2m(* Copyright (c) 2020 David Kaloper Meršinjak. All rights reserved.[39m
     [38;5;2m   3[39m: [38;5;2m   See LICENSE.md. *)[39m
     [38;5;2m   4[39m: [38;5;2m[39m
     [38;5;2m   5[39m: [38;5;2m#use "topfind"[39m
     [38;5;2m   6[39m: [38;5;2m#require "uucp"[39m
     [38;5;2m   7[39m: [38;5;2m[39m
     [38;5;2m   8[39m: [38;5;2mlet filter p seq i = seq (fun x -> if p x then i x)[39m
     [38;5;2m   9[39m: [38;5;2mlet map f seq i = seq (fun x -> i (f x))[39m
     [38;5;2m  10[39m: [38;5;2mlet uchars it =[39m
     [38;5;2m  11[39m: [38;5;2m  let rec go it u = it u; go it (Uchar.succ u) in[39m
     [38;5;2m  12[39m: [38;5;2m  try go it Uchar.min with Invalid_argument _ -> ()[39m
     [38;5;2m  13[39m: [38;5;2mlet to_list seq =[39m
     [38;5;2m  14[39m: [38;5;2m  let xs = ref [] in[39m
     [38;5;2m  15[39m: [38;5;2m  seq (fun x -> xs := x :: !xs);[39m
     [38;5;2m  16[39m: [38;5;2m  List.rev !xs[39m
     [38;5;2m  17[39m: [38;5;2m[39m
     [38;5;2m  18[39m: [38;5;2mlet intervals_kv seq i =[39m
     [38;5;2m  19[39m: [38;5;2m  let s = ref None in[39m
     [38;5;2m  20[39m: [38;5;2m  let f (x, v) = match !s with[39m
     [38;5;2m  21[39m: [38;5;2m  | None -> s := Some (x, x, v)[39m
     [38;5;2m  22[39m: [38;5;2m  | Some (a, b, v0) when v = v0 && x = Uchar.succ b -> s := Some (a, x, v0)[39m
     [38;5;2m  23[39m: [38;5;2m  | Some e -> i e; s := Some (x, x, v) in[39m
     [38;5;2m  24[39m: [38;5;2m  seq f;[39m
     [38;5;2m  25[39m: [38;5;2m  match !s with Some e -> i e | _ -> ()[39m
     [38;5;2m  26[39m: [38;5;2m[39m
     [38;5;2m  27[39m: [38;5;2mlet intervals_p seq =[39m
     [38;5;2m  28[39m: [38;5;2m  map (fun x -> x, ()) seq |> intervals_kv |> map (fun (a, b, _) -> a, b)[39m
     [38;5;2m  29[39m: [38;5;2m[39m
     [38;5;2m  30[39m: [38;5;2m(* Condenses code points into continuous range. *)[39m
     [38;5;2m  31[39m: [38;5;2mlet pack_u u = let i = Uchar.to_int u in if i > 0xd7ff then i - 0x800 else i[39m
     [38;5;2m  32[39m: [38;5;2mlet unpack_u i = Uchar.of_int (if i < 0xd800 then i else i + 0x800)[39m
     [38;5;2m  33[39m: [38;5;2m[39m
     [38;5;2m  34[39m: [38;5;2m(* 12-6-6-bit (0xfff-0x3f-0x3f) trie, 3 levels, array-array-string.[39m
     [38;5;2m  35[39m: [38;5;2m   Root is variable; lower levels are either empty or complete.[39m
     [38;5;2m  36[39m: [38;5;2m[39m
     [38;5;2m  37[39m: [38;5;2m   At the moment, packed Uchar.max is 0x10f7ff; this can map up to 0xffffff[39m
     [38;5;2m  38[39m: [38;5;2m   distinct code points.  *)[39m
     [38;5;2m  39[39m: [38;5;2mlet trie ~default f =[39m
     [38;5;2m  40[39m: [38;5;2m  let xs = List.init ((pack_u Uchar.max lsr 12) + 1) @@ fun b0 ->[39m
     [38;5;2m  41[39m: [38;5;2m    let mask = b0 lsl 12 in[39m
     [38;5;2m  42[39m: [38;5;2m    let arr = Array.init 0x40 @@ fun b1 ->[39m
     [38;5;2m  43[39m: [38;5;2m      let mask = mask lor (b1 lsl 6) in[39m
     [38;5;2m  44[39m: [38;5;2m      let v b2 = match unpack_u (mask lor b2) with[39m
     [38;5;2m  45[39m: [38;5;2m      | x -> f x[39m
     [38;5;2m  46[39m: [38;5;2m      | exception Invalid_argument _ -> default in[39m
     [38;5;2m  47[39m: [38;5;2m      match (for b2 = 0 to 0x3f do if v b2 <> default then raise Exit done) with[39m
     [38;5;2m  48[39m: [38;5;2m      | exception Exit -> String.init 0x40 (fun b2 -> Char.chr (v b2))[39m
     [38;5;2m  49[39m: [38;5;2m      | () -> ""[39m
     [38;5;2m  50[39m: [38;5;2m    in[39m
     [38;5;2m  51[39m: [38;5;2m    if Array.for_all ((=) "") arr then [||] else arr[39m
     [38;5;2m  52[39m: [38;5;2m  in[39m
     [38;5;2m  53[39m: [38;5;2m  let rec trim = function [||]::xs -> trim xs | xs -> xs in[39m
     [38;5;2m  54[39m: [38;5;2m  List.rev (trim (List.rev xs)) |> Array.of_list[39m
     [38;5;2m  55[39m: [38;5;2m[39m
     [38;5;2m  56[39m: [38;5;2mlet pf = Format.fprintf[39m
     [38;5;2m  57[39m: [38;5;2mlet strf = Format.sprintf[39m
     [38;5;2m  58[39m: [38;5;2mlet pp_iter ?(sep = fun _ _ -> ()) iter pp ppf x =[39m
     [38;5;2m  59[39m: [38;5;2m  let fst = ref true in[39m
     [38;5;2m  60[39m: [38;5;2m  let f x = (if !fst then fst := false else sep ppf ()); pp ppf x in[39m
     [38;5;2m  61[39m: [38;5;2m  iter f x[39m
     [38;5;2m  62[39m: [38;5;2mlet pp_u ppf u = pf ppf "0x%04x" (Uchar.to_int u)[39m
     [38;5;2m  63[39m: [38;5;2mlet pp_as_array iter pp ppf x =[39m
     [38;5;2m  64[39m: [38;5;2m  let sep ppf () = pf ppf ";@ " in[39m
     [38;5;2m  65[39m: [38;5;2m  pf ppf "@[<2>[|%a|]@]" (pp_iter ~sep iter pp) x[39m
     [38;5;2m  66[39m: [38;5;2m[39m
     [38;5;2m  67[39m: [38;5;2mlet intern ppf_ml iter =[39m
     [38;5;2m  68[39m: [38;5;2m  let t = Hashtbl.create 16 in[39m
     [38;5;2m  69[39m: [38;5;2m  let n = ref 0 in[39m
     [38;5;2m  70[39m: [38;5;2m  iter (fun s -> if not (Hashtbl.mem t s) then begin[39m
     [38;5;2m  71[39m: [38;5;2m    let name = strf "s%03d" !n in[39m
     [38;5;2m  72[39m: [38;5;2m    Hashtbl.add t s name; incr n;[39m
     [38;5;2m  73[39m: [38;5;2m    pf ppf_ml "let %s = %S@." name s[39m
     [38;5;2m  74[39m: [38;5;2m  end);[39m
     [38;5;2m  75[39m: [38;5;2m  pf ppf_ml "@.";[39m
     [38;5;2m  76[39m: [38;5;2m  (fun ppf s -> match Hashtbl.find_opt t s with[39m
     [38;5;2m  77[39m: [38;5;2m   | Some name -> pf ppf "%s" name[39m
     [38;5;2m  78[39m: [38;5;2m   | None -> pf ppf "%S" s)[39m
     [38;5;2m  79[39m: [38;5;2m[39m
     [38;5;2m  80[39m: [38;5;2mlet dump_interval_map (ppf_mli, ppf_ml) ~name ~desc seq =[39m
     [38;5;2m  81[39m: [38;5;2m  pf ppf_mli "(* %s *)@.val %s: int array * int array * int array@.@." desc name;[39m
     [38;5;2m  82[39m: [38;5;2m  let xs = to_list (intervals_kv seq) in[39m
     [38;5;2m  83[39m: [38;5;2m  let aa = List.map (fun (a, _, _) -> a) xs[39m
     [38;5;2m  84[39m: [38;5;2m  and bb = List.map (fun (_, b, _) -> b) xs[39m
     [38;5;2m  85[39m: [38;5;2m  and cc = List.map (fun (_, _, c) -> c) xs in[39m
     [38;5;2m  86[39m: [38;5;2m  let pp_arr pp = pp_as_array List.iter pp in[39m
     [38;5;2m  87[39m: [38;5;2m  let pp_arr_u = pp_arr pp_u and pp_arr_i = pp_arr Format.pp_print_int in[39m
     [38;5;2m  88[39m: [38;5;2m  pf ppf_ml "@[<2>let %s =@ @[<1>(%a,@ %a,@ %a)@]@]@.@."[39m
     [38;5;2m  89[39m: [38;5;2m     name pp_arr_u aa pp_arr_u bb pp_arr_i cc[39m
     [38;5;2m  90[39m: [38;5;2m[39m
     [38;5;2m  91[39m: [38;5;2mlet dump_trie_map (ppf_mli, ppf_ml) ~name ~desc ~default f =[39m
     [38;5;2m  92[39m: [38;5;2m  pf ppf_mli "(* %s *)@.val %s: string array array@.@." desc name;[39m
     [38;5;2m  93[39m: [38;5;2m  let xs = trie ~default f in[39m
     [38;5;2m  94[39m: [38;5;2m  let pp_s = intern ppf_ml Array.(fun i -> i ""; iter (iter i) xs) in[39m
     [38;5;2m  95[39m: [38;5;2m  pf ppf_ml "@[<2>let %s =@ %a@]" name[39m
     [38;5;2m  96[39m: [38;5;2m    Array.(pp_as_array iter (pp_as_array iter pp_s)) xs[39m
     [38;5;2m  97[39m: [38;5;2m[39m
     [38;5;2m  98[39m: [38;5;2mlet pp_header ppf = Format.fprintf ppf[39m
     [38;5;2m  99[39m: [38;5;2m"(* Do not edit.[39m
     [38;5;2m 100[39m: [38;5;2m *[39m
     [38;5;2m 101[39m: [38;5;2m * This module contains select unicode properties extracted from Uucp,[39m
     [38;5;2m 102[39m: [38;5;2m * using `%s`.[39m
     [38;5;2m 103[39m: [38;5;2m *[39m
     [38;5;2m 104[39m: [38;5;2m * Unicode version %s.[39m
     [38;5;2m 105[39m: [38;5;2m *)[39m
     [38;5;2m 106[39m: [38;5;2m[39m
     [38;5;2m 107[39m: [38;5;2m" Sys.argv.(0) Uucp.unicode_version[39m
     [38;5;2m 108[39m: [38;5;2m[39m
     [38;5;2m 109[39m: [38;5;2mlet extract (ppmli, ppml as ppfs) =[39m
     [38;5;2m 110[39m: [38;5;2m[39m
     [38;5;2m 111[39m: [38;5;2m  pp_header ppmli; pp_header ppml;[39m
     [38;5;2m 112[39m: [38;5;2m[39m
     [38;5;2m 113[39m: [38;5;2m  dump_interval_map ppfs[39m
     [38;5;2m 114[39m: [38;5;2m    ~name:"tty_width_hint"[39m
     [38;5;2m 115[39m: [38;5;2m    ~desc:"Uucp.Break.tty_width_hint"[39m
     [38;5;2m 116[39m: [38;5;2m    (* w = -1 is easy to detect.[39m
     [38;5;2m 117[39m: [38;5;2m       w = 1 covers the most intervals, so we default it. *)[39m
     [38;5;2m 118[39m: [38;5;2m    (uchars |> map (fun u -> u, Uucp.Break.tty_width_hint u)[39m
     [38;5;2m 119[39m: [38;5;2m            |> filter (fun (_, w) -> w <> -1 && w <> 1));[39m
     [38;5;2m 120[39m: [38;5;2m[39m
     [38;5;2m 121[39m: [38;5;2m  (* dump_interval_map ppfs *)[39m
     [38;5;2m 122[39m: [38;5;2m  (*   ~name:"grapheme_cluster_boundary" *)[39m
     [38;5;2m 123[39m: [38;5;2m  (*   ~desc:"Uucp.Break.Low.grapheme_cluster." *)[39m
     [38;5;2m 124[39m: [38;5;2m  (*   (1* No single value dominates the histogram. *1) *)[39m
     [38;5;2m 125[39m: [38;5;2m  (*   (uchars |> map (fun u -> u, Uucp.Break.Low.grapheme_cluster u)); *)[39m
     [38;5;2m 126[39m: [38;5;2m[39m
     [38;5;2m 127[39m: [38;5;2m  dump_trie_map ppfs[39m
     [38;5;2m 128[39m: [38;5;2m    ~name:"grapheme_cluster_boundary"[39m
     [38;5;2m 129[39m: [38;5;2m    ~desc:"Uucp.Break.Low.grapheme_cluster."[39m
     [38;5;2m 130[39m: [38;5;2m    ~default:16 (* 16 - `XX - is by far the most prevalent value *)[39m
     [38;5;2m 131[39m: [38;5;2m    Uucp.Break.Low.grapheme_cluster;[39m
     [38;5;2m 132[39m: [38;5;2m[39m
     [38;5;2m 133[39m: [38;5;2m  ()[39m
     [38;5;2m 134[39m: [38;5;2m[39m
     [38;5;2m 135[39m: [38;5;2mlet file = "src/no-uucp/notty_uucp_data"[39m
     [38;5;2m 136[39m: [38;5;2m[39m
     [38;5;2m 137[39m: [38;5;2mlet with_new name f =[39m
     [38;5;2m 138[39m: [38;5;2m  let o = open_out_gen [Open_trunc; Open_creat; Open_wronly] 0o664 name in[39m
     [38;5;2m 139[39m: [38;5;2m  let ppf = Format.formatter_of_out_channel o in[39m
     [38;5;2m 140[39m: [38;5;2m  f ppf; Format.pp_print_flush ppf (); close_out o[39m
     [38;5;2m 141[39m: [38;5;2m[39m
     [38;5;2m 142[39m: [38;5;2mlet () =[39m
     [38;5;2m 143[39m: [38;5;2m  Format.printf "Dumping Unicode v%s data to %s.@." Uucp.unicode_version file;[39m
     [38;5;2m 144[39m: [38;5;2m  with_new (file ^ ".mli") @@ fun ppmli ->[39m
     [38;5;2m 145[39m: [38;5;2m    with_new (file ^ ".ml") @@ fun ppml ->[39m
     [38;5;2m 146[39m: [38;5;2m      extract (ppmli, ppml)[39m
[38;5;3mRemoved regular file ../test/dune:[39m
[38;5;1m   1[39m     : [38;5;1m(test[39m
[38;5;1m   2[39m     : [38;5;1m (name jj_tui))[39m
[38;5;3mRemoved regular file ../test/jj_tui.ml:[39m
[38;5;6m    (empty)[39m
